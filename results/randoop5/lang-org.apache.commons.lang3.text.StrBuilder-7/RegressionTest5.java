import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest5 {

    public static boolean debug = false;

    @Test
    public void test2501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2501");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln("");
        java.lang.String str8 = strBuilder7.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((long) (byte) 10);
        java.lang.String str18 = strBuilder14.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendNewLine();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln("");
        java.lang.String str35 = strBuilder31.rightString((int) '4');
        java.lang.Object[] objArray36 = new java.lang.Object[] { strBuilder23, wildcardClass28, 10.0d, (-1.0d), str35 };
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder14.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder7.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder0.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.append((java.lang.CharSequence) strBuilder41);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.appendln(true);
        int int47 = strBuilder40.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder40.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder0.appendFixedWidthPadRight((java.lang.Object) strBuilder40, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder40.deleteFirst("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder40.deleteFirst('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = null;
        int int58 = strBuilder40.indexOf(strMatcher57);
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = null;
        boolean boolean60 = strBuilder40.contains(strMatcher59);
        int int62 = strBuilder40.indexOf("\n1097########");
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder40.replaceAll(strMatcher63, "ng.Object10.0-1.0\ntrue\n10\n ");
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "true\n10" + "'", str18, "true\n10");
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\n" + "'", str35, "\n");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(strBuilder65);
    }

    @Test
    public void test2502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2502");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.replaceFirst(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader33 = strBuilder32.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.appendNewLine();
        boolean boolean40 = strBuilder26.equalsIgnoreCase(strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder21.append((java.lang.Object) strBuilder26);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder21.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strBuilder43.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder17.appendAll((java.util.Iterator<java.lang.String>) strTokenizer44);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder9.appendln(strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.appendln((float) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader51 = strBuilder50.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.append((java.lang.CharSequence) strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder49.appendln(true);
        int int56 = strBuilder49.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder49.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder58.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader62 = strBuilder61.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder61.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder65.replaceFirst(strMatcher68, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader72 = strBuilder71.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder71.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder75.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder75.appendNewLine();
        boolean boolean79 = strBuilder65.equalsIgnoreCase(strBuilder75);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder60.append((java.lang.Object) strBuilder65);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder60.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = strBuilder82.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder59.appendAll((java.util.Iterator<java.lang.String>) strTokenizer83);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder46.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer83, "true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder46.appendSeparator("35\n");
        char[] charArray89 = strBuilder46.toCharArray();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(reader33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(reader51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 4 + "'", int56 == 4);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(reader62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(reader72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strTokenizer83);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(charArray89);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray89), "truetrue\n104\n100.0\n35\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray89), "truetrue\n104\n100.0\n35\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray89), "[t, r, u, e, t, r, u, e, \n, 1, 0, 4, \n, 1, 0, 0, ., 0, \n, 3, 5, \n]");
    }

    @Test
    public void test2503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2503");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.io.Writer writer2 = strBuilder1.asWriter();
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        int int4 = strBuilder1.lastIndexOf(strMatcher3);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.append((float) 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.appendln((int) '4');
        char[] charArray9 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.appendln(charArray9);
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.deleteAll(strMatcher11);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.append((java.lang.CharSequence) strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.appendln(true);
        java.util.stream.IntStream intStream19 = strBuilder13.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder13.appendFixedWidthPadRight((int) '4', (int) (short) 100, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader26 = strBuilder25.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.append((java.lang.CharSequence) strBuilder25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.appendln(true);
        int int31 = strBuilder24.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder24.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader36 = strBuilder35.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.append((java.lang.CharSequence) strBuilder35);
        java.lang.String str38 = strBuilder37.getNewLineText();
        boolean boolean39 = strBuilder24.equals(strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder23.append(strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder23.appendln(false);
        int int43 = strBuilder42.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.append((long) 36);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder12.append(strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder45.replaceAll('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.appendNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strBuilder45.asTokenizer();
        org.junit.Assert.assertNotNull(writer2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(intStream19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(reader26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 4 + "'", int31 == 4);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(reader36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 210 + "'", int43 == 210);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strTokenizer51);
    }

    @Test
    public void test2504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2504");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        char[] charArray6 = strBuilder5.toCharArray();
        boolean boolean8 = strBuilder5.startsWith("ass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.append(false);
        int int15 = strBuilder14.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader18 = strBuilder17.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.append((java.lang.CharSequence) strBuilder17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.append(false);
        char[] charArray22 = strBuilder21.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder14.appendln(charArray22);
        java.lang.Class<?> wildcardClass24 = strBuilder23.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder5.appendFixedWidthPadLeft((java.lang.Object) wildcardClass24, (int) (short) 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst(" \n\nrue\n", "true\n10\n.0-1.0\nclass java.lang.Object.0-1.0\n10.0.0-1.0\n-1.0.0-1.0\n\n");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[f, a, l, s, e]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertNotNull(reader18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[f, a, l, s, e]");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
    }

    @Test
    public void test2505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2505");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.setNullText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.append((long) (byte) 10);
        java.lang.String str19 = strBuilder15.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder15.deleteAll("");
        java.lang.String str22 = strBuilder15.getNewLineText();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strBuilder15.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder9.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer23, "\n1.0\ntrue\n10############################### true\n\n");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "true\n10" + "'", str19, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strBuilder25);
    }

    @Test
    public void test2506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2506");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        int int9 = strBuilder7.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.append((long) 50);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.appendln('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder7.insert((int) (short) 1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator("\n10", "\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.append((long) 13);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.setNewLineText("\ntrue\n\n");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
    }

    @Test
    public void test2507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2507");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendln(0.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.append((long) 39);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append((java.lang.CharSequence) strBuilder12);
        java.lang.StringBuffer stringBuffer15 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.appendln(stringBuffer15, (int) (byte) -1, 10);
        int int21 = strBuilder18.indexOf("\n", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.replaceAll(' ', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strBuilder24.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder10.appendAll((java.util.Iterator<java.lang.String>) strTokenizer25);
        boolean boolean28 = strBuilder10.startsWith("\ntrue\n10\n     ");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test2508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2508");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.appendSeparator("");
        char[] charArray17 = new char[] { '\n', '\000', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder9.appendln(charArray17);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder18.deleteFirst("\ntrue\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceAll('a', 'a');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "\n\000 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "\n\000 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[\n, \000,  ]");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
    }

    @Test
    public void test2509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2509");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.appendNull();
        int int6 = strBuilder3.lastIndexOf(' ', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.replaceAll(strMatcher7, "true\n10\nclass java.lang.Object10.0-1.0true\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendln(true);
        java.util.stream.IntStream intStream16 = strBuilder15.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.deleteAll("\n");
        java.lang.StringBuffer stringBuffer19 = strBuilder15.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder3.append(stringBuffer19);
        int int21 = strBuilder3.capacity();
        java.lang.String str22 = strBuilder3.getNewLineText();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(intStream16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(stringBuffer19);
        org.junit.Assert.assertEquals(stringBuffer19.toString(), "true");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 32 + "'", int21 == 32);
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test2510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2510");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader9 = strBuilder8.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.append((java.lang.CharSequence) strBuilder8);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder0.appendFixedWidthPadLeft((java.lang.Object) strBuilder13, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.append((double) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader21 = strBuilder20.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append((java.lang.CharSequence) strBuilder20);
        java.io.Writer writer23 = strBuilder20.asWriter();
        boolean boolean24 = strBuilder13.equals((java.lang.Object) writer23);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder13.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder13.appendln((long) 7);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(writer23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
    }

    @Test
    public void test2511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2511");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.appendln(true);
        java.lang.String str32 = strBuilder31.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.appendSeparator('4', 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder31.replaceAll(strMatcher36, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.setNewLineText("true\n100.0\n");
        java.lang.String str42 = strBuilder38.substring(19);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "true\n10\nclass java.lang.Object10.0-1.0true\n" + "'", str32, "true\n10\nclass java.lang.Object10.0-1.0true\n");
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "lang.Object10.0-1.0true\n" + "'", str42, "lang.Object10.0-1.0true\n");
    }

    @Test
    public void test2512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2512");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((long) (byte) 10);
        java.lang.String str13 = strBuilder9.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendNewLine();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln("");
        java.lang.String str30 = strBuilder26.rightString((int) '4');
        java.lang.Object[] objArray31 = new java.lang.Object[] { strBuilder18, wildcardClass23, 10.0d, (-1.0d), str30 };
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder9.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder2.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.appendln("");
        java.lang.String str37 = strBuilder36.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader40 = strBuilder39.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.append((java.lang.CharSequence) strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.appendln(true);
        java.util.stream.IntStream intStream44 = strBuilder43.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.appendln("");
        java.lang.String str48 = strBuilder47.getNewLineText();
        java.lang.Object[] objArray53 = new java.lang.Object[] { strBuilder43, strBuilder47, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder36.appendAll(objArray53);
        java.lang.StringBuffer stringBuffer55 = strBuilder36.toStringBuffer();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder33.appendln(stringBuffer55, 19, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "true\n10" + "'", str13, "true\n10");
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\n" + "'", str30, "\n");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(reader40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(intStream44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(stringBuffer55);
        org.junit.Assert.assertEquals(stringBuffer55.toString(), "\ntrue\n\n100.04-1.0 ");
    }

    @Test
    public void test2513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2513");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendNewLine();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.insert((int) 't', (float) 32);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 116");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
    }

    @Test
    public void test2514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2514");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        boolean boolean4 = strBuilder2.startsWith("\n");
        int int6 = strBuilder2.indexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendln(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader10 = strBuilder9.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.append((java.lang.Object) strBuilder9);
        java.lang.String str12 = strBuilder9.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.append("e\n10");
        java.lang.String str15 = strBuilder9.getNullText();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test2515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2515");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendNewLine();
        boolean boolean19 = strBuilder5.equalsIgnoreCase(strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder0.append((java.lang.Object) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.appendln((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst('#', 'a');
        java.util.stream.IntStream intStream28 = strBuilder27.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.append(0.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder27.appendFixedWidthPadRight(52, 78, '\n');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(intStream28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder34);
    }

    @Test
    public void test2516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2516");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.append('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.deleteFirst("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader10 = strBuilder9.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.append((java.lang.CharSequence) strBuilder9);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder8.appendln(true);
        int int15 = strBuilder8.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder8.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder17.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder3.appendln((java.lang.Object) strBuilder17);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(reader10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 4 + "'", int15 == 4);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
    }

    @Test
    public void test2517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2517");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((java.lang.Object) 1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder13.append(strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader21 = strBuilder20.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.ensureCapacity(100);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.io.Writer writer31 = strBuilder30.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder26.append(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.appendln((double) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder13.append((java.lang.Object) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder13.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.appendln("");
        java.lang.String str40 = strBuilder39.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader43 = strBuilder42.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append((java.lang.CharSequence) strBuilder42);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.appendln(true);
        java.util.stream.IntStream intStream47 = strBuilder46.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.appendln("");
        java.lang.String str51 = strBuilder50.getNewLineText();
        java.lang.Object[] objArray56 = new java.lang.Object[] { strBuilder46, strBuilder50, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder39.appendAll(objArray56);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader62 = strBuilder61.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.append((java.lang.CharSequence) strBuilder61);
        java.lang.StringBuffer stringBuffer64 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder60.appendln(stringBuffer64, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder60.deleteFirst(strMatcher68);
        boolean boolean71 = strBuilder69.startsWith("\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strBuilder69.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder57.appendAll((java.util.Iterator<java.lang.String>) strTokenizer72);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder36.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer72, "ue");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder0.appendAll((java.util.Iterator<java.lang.String>) strTokenizer72);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(writer31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(reader43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(intStream47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(reader62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder76);
    }

    @Test
    public void test2518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2518");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.io.Writer writer4 = strBuilder1.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.appendSeparator("hi!", "\n1.0\n");
        java.lang.String str8 = strBuilder1.getNewLineText();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder1.deleteFirst(strMatcher9);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder1.appendSeparator(".0-1.0\n", "ava.lang.Object.0-1.0\n10.0.0-1.0\n-1.0.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder1.append((double) ' ');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(writer4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
    }

    @Test
    public void test2519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2519");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        boolean boolean11 = strBuilder5.contains('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append((java.lang.CharSequence) strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader21 = strBuilder20.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append((java.lang.CharSequence) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder12.appendFixedWidthPadLeft((java.lang.Object) strBuilder25, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder5.appendFixedWidthPadLeft((java.lang.Object) strBuilder12, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader34 = strBuilder33.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append((java.lang.CharSequence) strBuilder33);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.appendln(true);
        java.lang.StringBuffer stringBuffer38 = strBuilder32.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder5.appendln(stringBuffer38);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.append("\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder41.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader45 = strBuilder44.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.append((java.lang.CharSequence) strBuilder44);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder43.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.append((long) (byte) 10);
        java.lang.String str52 = strBuilder48.rightString(10);
        boolean boolean54 = strBuilder48.contains('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader57 = strBuilder56.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.append((java.lang.CharSequence) strBuilder56);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder55.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader64 = strBuilder63.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.append((java.lang.CharSequence) strBuilder63);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder62.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder55.appendFixedWidthPadLeft((java.lang.Object) strBuilder68, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder48.appendFixedWidthPadLeft((java.lang.Object) strBuilder55, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader77 = strBuilder76.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder75.append((java.lang.CharSequence) strBuilder76);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder75.appendln(true);
        java.lang.StringBuffer stringBuffer81 = strBuilder75.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder48.appendln(stringBuffer81);
        java.lang.String str84 = strBuilder82.leftString((int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder85.appendln("");
        java.lang.String str89 = strBuilder85.rightString((int) '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = strBuilder85.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder82.appendAll((java.util.Iterator<java.lang.String>) strTokenizer90);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder41.appendAll((java.util.Iterator<java.lang.String>) strTokenizer90);
        org.apache.commons.lang3.text.StrMatcher strMatcher93 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder98 = strBuilder92.replace(strMatcher93, "trueahi!-1\n22.03\n", 17, 0, 12);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(reader34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(stringBuffer38);
        org.junit.Assert.assertEquals(stringBuffer38.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(reader45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "true\n10" + "'", str52, "true\n10");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(reader57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(reader64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(reader77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(stringBuffer81);
        org.junit.Assert.assertEquals(stringBuffer81.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "true\n10############################### true\n\n" + "'", str84, "true\n10############################### true\n\n");
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "\n" + "'", str89, "\n");
        org.junit.Assert.assertNotNull(strTokenizer90);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder92);
    }

    @Test
    public void test2520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2520");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.setLength((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.insert(0, "ass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader16 = strBuilder15.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append((java.lang.CharSequence) strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.appendln(true);
        java.util.stream.IntStream intStream20 = strBuilder19.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendSeparator('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder13.append((java.lang.Object) strBuilder27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteFirst("#########");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(intStream20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
    }

    @Test
    public void test2521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2521");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.setNullText("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.append("ass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.insert(10, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        java.lang.StringBuffer stringBuffer25 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.appendln(stringBuffer25, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer29 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder24.appendln(stringBuffer29);
        boolean boolean31 = strBuilder20.equals((java.lang.Object) strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder9.append((java.lang.CharSequence) strBuilder24);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
    }

    @Test
    public void test2522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2522");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((long) (byte) 10);
        java.lang.String str13 = strBuilder9.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendNewLine();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln("");
        java.lang.String str30 = strBuilder26.rightString((int) '4');
        java.lang.Object[] objArray31 = new java.lang.Object[] { strBuilder18, wildcardClass23, 10.0d, (-1.0d), str30 };
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder9.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder2.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln("true\n10");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder33.replace(strMatcher36, "", (int) (byte) 1, (int) ' ', 1);
        java.lang.String str42 = strBuilder33.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder33.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder33.appendFixedWidthPadRight(36, 13, '\n');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "true\n10" + "'", str13, "true\n10");
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\n" + "'", str30, "\n");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder48);
    }

    @Test
    public void test2523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2523");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        int int9 = strBuilder7.lastIndexOf('#');
        int int12 = strBuilder7.lastIndexOf('a', (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder7.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader16 = strBuilder15.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.minimizeCapacity();
        char[] charArray20 = strBuilder15.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.appendln(charArray20);
        java.lang.String str23 = strBuilder14.rightString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder14.insert((int) (short) 0, (float) 13);
        int int28 = strBuilder14.indexOf('\n');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "true\n10100.0 \n" + "'", str23, "true\n10100.0 \n");
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 8 + "'", int28 == 8);
    }

    @Test
    public void test2524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2524");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        boolean boolean4 = strBuilder2.startsWith("\n");
        int int6 = strBuilder2.indexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendln(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader10 = strBuilder9.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.append((java.lang.Object) strBuilder9);
        java.lang.String str12 = strBuilder9.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader16 = strBuilder15.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append((java.lang.CharSequence) strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.appendln(true);
        java.util.stream.IntStream intStream20 = strBuilder19.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader26 = strBuilder25.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.append((java.lang.CharSequence) strBuilder25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader37 = strBuilder36.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.replaceFirst(strMatcher43, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader47 = strBuilder46.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.appendNewLine();
        boolean boolean54 = strBuilder40.equalsIgnoreCase(strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder35.append((java.lang.Object) strBuilder40);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder35.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strBuilder57.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder31.appendAll((java.util.Iterator<java.lang.String>) strTokenizer58);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder23.appendln(strBuilder59);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader63 = strBuilder62.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.append((java.lang.CharSequence) strBuilder62);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder61.appendln(true);
        int int68 = strBuilder61.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder61.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader73 = strBuilder72.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.append((java.lang.CharSequence) strBuilder72);
        java.lang.String str75 = strBuilder74.getNewLineText();
        boolean boolean76 = strBuilder61.equals(strBuilder74);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder61.appendFixedWidthPadRight((int) (byte) 1, (int) '#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder23.append((java.lang.CharSequence) strBuilder80);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder9.append((java.lang.CharSequence) strBuilder81, (int) (short) 1, 14);
        boolean boolean86 = strBuilder81.contains('r');
        java.lang.String str87 = strBuilder81.getNewLineText();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(intStream20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(reader26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(reader37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(reader47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(reader63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 4 + "'", int68 == 4);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(reader73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNull(str87);
    }

    @Test
    public void test2525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2525");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.io.Writer writer10 = strBuilder9.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.append((java.lang.Object) writer10);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln((double) 22);
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(writer10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
    }

    @Test
    public void test2526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2526");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        int int6 = strBuilder5.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.insert((int) (short) 0, "\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        boolean boolean11 = strBuilder9.contains(strMatcher10);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.append(false);
        int int14 = strBuilder9.size();
        int int16 = strBuilder9.indexOf("ass j");
        java.lang.StringBuffer stringBuffer17 = strBuilder9.toStringBuffer();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 5 + "'", int6 == 5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 11 + "'", int14 == 11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(stringBuffer17);
        org.junit.Assert.assertEquals(stringBuffer17.toString(), "\nfalsefalse");
    }

    @Test
    public void test2527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2527");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendNewLine();
        boolean boolean19 = strBuilder5.equalsIgnoreCase(strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder0.append((java.lang.Object) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder0.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strBuilder22.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder22.appendFixedWidthPadRight(100, (int) '#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteCharAt(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.appendln("");
        java.lang.String str35 = strBuilder34.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader38 = strBuilder37.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.append((java.lang.CharSequence) strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendln(true);
        java.util.stream.IntStream intStream42 = strBuilder41.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.appendln("");
        java.lang.String str46 = strBuilder45.getNewLineText();
        java.lang.Object[] objArray51 = new java.lang.Object[] { strBuilder41, strBuilder45, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder34.appendAll(objArray51);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.appendln("");
        java.lang.String str57 = strBuilder53.rightString((int) '4');
        boolean boolean58 = strBuilder52.equals((java.lang.Object) str57);
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder52.deleteAll(strMatcher59);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder31.append((java.lang.CharSequence) strBuilder62);
        java.lang.StringBuffer stringBuffer64 = strBuilder31.toStringBuffer();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(reader38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(intStream42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "\n" + "'", str57, "\n");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(stringBuffer64);
        org.junit.Assert.assertEquals(stringBuffer64.toString(), "4true\n1004444444444444444444444444444444\ntrue\n\n100.04-1.0 false\n");
    }

    @Test
    public void test2528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2528");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.appendSeparator("true\n10############################### true\n\n", "true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.insert(14, "\ntrue\n\n100.04-1.0 true");
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteFirst(strMatcher51);
        java.lang.String str54 = strBuilder52.substring(3);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "e\n10\nclass \ntrue\n\n100.04-1.0 truejava.lang.Object10.0-1.0\ntrue\n1010\ntrue\n10############################### true\n\n" + "'", str54, "e\n10\nclass \ntrue\n\n100.04-1.0 truejava.lang.Object10.0-1.0\ntrue\n1010\ntrue\n10############################### true\n\n");
    }

    @Test
    public void test2529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2529");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((long) (byte) 10);
        java.lang.String str13 = strBuilder9.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendNewLine();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln("");
        java.lang.String str30 = strBuilder26.rightString((int) '4');
        java.lang.Object[] objArray31 = new java.lang.Object[] { strBuilder18, wildcardClass23, 10.0d, (-1.0d), str30 };
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder9.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder2.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceAll(' ', 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        int int40 = strBuilder35.lastIndexOf(strMatcher39);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.appendPadding(10, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder35.appendln(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "true\n10" + "'", str13, "true\n10");
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\n" + "'", str30, "\n");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
    }

    @Test
    public void test2530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2530");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendFixedWidthPadRight(1, (int) '4', '4');
        int int10 = strBuilder3.indexOf("\n1.0\n", 1);
        java.lang.String str13 = strBuilder3.substring(3, 12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder3.setNewLineText("\n\n100 04-1.0 truea");
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "444444444" + "'", str13, "444444444");
        org.junit.Assert.assertNotNull(strBuilder15);
    }

    @Test
    public void test2531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2531");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("false");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.append((int) (byte) 10);
        int int5 = strBuilder1.indexOf('\n');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
    }

    @Test
    public void test2532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2532");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.ensureCapacity(100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.io.Writer writer11 = strBuilder10.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.append(strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.append(100.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((-1.0d));
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
    }

    @Test
    public void test2533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2533");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.io.Writer writer2 = strBuilder1.asWriter();
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        int int4 = strBuilder1.lastIndexOf(strMatcher3);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.append((float) 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.appendln((int) '4');
        java.util.stream.IntStream intStream9 = strBuilder8.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.appendln("");
        java.lang.String str18 = strBuilder17.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader21 = strBuilder20.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append((java.lang.CharSequence) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.append((long) (byte) 10);
        java.lang.String str28 = strBuilder24.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader30 = strBuilder29.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.appendNewLine();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.appendln("");
        java.lang.String str45 = strBuilder41.rightString((int) '4');
        java.lang.Object[] objArray46 = new java.lang.Object[] { strBuilder33, wildcardClass38, 10.0d, (-1.0d), str45 };
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder24.appendAll(objArray46);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder17.appendAll(objArray46);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder10.appendAll(objArray46);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder8.appendWithSeparators(objArray46, "true\n10\nclass java.lang.Object10.0-1.0\ntrue\n10\n###############################\n");
        org.junit.Assert.assertNotNull(writer2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(intStream9);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "true\n10" + "'", str28, "true\n10");
        org.junit.Assert.assertNotNull(reader30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "\n" + "'", str45, "\n");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
    }

    @Test
    public void test2534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2534");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = strBuilder1.toStringBuffer();
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        boolean boolean6 = strBuilder1.contains(strMatcher5);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader9 = strBuilder8.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.append((java.lang.CharSequence) strBuilder8);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.appendln(true);
        java.util.stream.IntStream intStream13 = strBuilder12.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.setLength((int) (short) 100);
        int int19 = strBuilder15.lastIndexOf('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder15.append("\ntrue\n\n");
        java.lang.CharSequence charSequence22 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder15.append(charSequence22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strBuilder15.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer24);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(stringBuffer4);
        org.junit.Assert.assertEquals(stringBuffer4.toString(), "");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(intStream13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strBuilder25);
    }

    @Test
    public void test2535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2535");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        int int14 = strBuilder5.lastIndexOf(strMatcher13);
        java.lang.String str16 = strBuilder5.leftString(30);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "true\n10" + "'", str16, "true\n10");
    }

    @Test
    public void test2536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2536");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.appendNull();
        java.util.stream.IntStream intStream4 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.deleteAll('a');
        java.util.stream.IntStream intStream7 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.appendSeparator("false", 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.replaceFirst('a', '\n');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder0.append(0.0f);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(intStream4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(intStream7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
    }

    @Test
    public void test2537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2537");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln((double) 39);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.insert(19, ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 19");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
    }

    @Test
    public void test2538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2538");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendln(0.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((long) (byte) 10);
        java.lang.String str18 = strBuilder14.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendNewLine();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln("");
        java.lang.String str35 = strBuilder31.rightString((int) '4');
        java.lang.Object[] objArray36 = new java.lang.Object[] { strBuilder23, wildcardClass28, 10.0d, (-1.0d), str35 };
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder14.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader40 = strBuilder39.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.append((java.lang.CharSequence) strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.append((long) (byte) 10);
        int int47 = strBuilder45.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder37.append((java.lang.CharSequence) strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder45.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.appendln("ass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.appendln((double) (short) -1);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder8.append(strBuilder55, 56, 41);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "true\n10" + "'", str18, "true\n10");
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\n" + "'", str35, "\n");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(reader40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
    }

    @Test
    public void test2539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2539");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((long) (byte) 10);
        java.lang.String str13 = strBuilder9.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendNewLine();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln("");
        java.lang.String str30 = strBuilder26.rightString((int) '4');
        java.lang.Object[] objArray31 = new java.lang.Object[] { strBuilder18, wildcardClass23, 10.0d, (-1.0d), str30 };
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder9.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder2.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder33.append((float) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader40 = strBuilder39.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.append((java.lang.CharSequence) strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.append((long) (byte) 10);
        java.lang.String str47 = strBuilder43.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader49 = strBuilder48.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder48.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.appendNewLine();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.appendln("");
        java.lang.String str64 = strBuilder60.rightString((int) '4');
        java.lang.Object[] objArray65 = new java.lang.Object[] { strBuilder52, wildcardClass57, 10.0d, (-1.0d), str64 };
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder43.appendAll(objArray65);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder66.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.append((float) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader72 = strBuilder71.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.append((java.lang.CharSequence) strBuilder71);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder70.appendln(true);
        java.lang.StringBuffer stringBuffer76 = strBuilder70.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder69.append(stringBuffer76);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder33.appendln(stringBuffer76);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder33.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder79.replaceFirst(" \nclass java.lang.Object10.0-1.0\n97.0", "aaaaaaaaaaaaaaaaa");
        int int85 = strBuilder82.indexOf('\n', (int) (byte) 1);
        java.lang.Object obj86 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder82.appendFixedWidthPadRight(obj86, 66, '\000');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "true\n10" + "'", str13, "true\n10");
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\n" + "'", str30, "\n");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(reader40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "true\n10" + "'", str47, "true\n10");
        org.junit.Assert.assertNotNull(reader49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "\n" + "'", str64, "\n");
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(reader72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(stringBuffer76);
        org.junit.Assert.assertEquals(stringBuffer76.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 1 + "'", int85 == 1);
        org.junit.Assert.assertNotNull(strBuilder89);
    }

    @Test
    public void test2540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2540");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.io.Writer writer4 = strBuilder1.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.appendSeparator("hi!", "\n1.0\n");
        java.lang.String str9 = strBuilder7.rightString(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.ensureCapacity(4);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.appendSeparator('4');
        java.lang.StringBuffer stringBuffer14 = strBuilder7.toStringBuffer();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(writer4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(stringBuffer14);
        org.junit.Assert.assertEquals(stringBuffer14.toString(), "\n1.0\n4");
    }

    @Test
    public void test2541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2541");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.io.Writer writer2 = strBuilder1.asWriter();
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        int int4 = strBuilder1.lastIndexOf(strMatcher3);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.append((float) 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.appendln((int) '4');
        char[] charArray9 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.appendln(charArray9);
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.deleteAll(strMatcher11);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.append((java.lang.CharSequence) strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.appendln(true);
        java.util.stream.IntStream intStream19 = strBuilder13.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder13.appendFixedWidthPadRight((int) '4', (int) (short) 100, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader26 = strBuilder25.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.append((java.lang.CharSequence) strBuilder25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.appendln(true);
        int int31 = strBuilder24.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder24.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader36 = strBuilder35.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.append((java.lang.CharSequence) strBuilder35);
        java.lang.String str38 = strBuilder37.getNewLineText();
        boolean boolean39 = strBuilder24.equals(strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder23.append(strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder23.appendln(false);
        int int43 = strBuilder42.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.append((long) 36);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder12.append(strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder45.replaceAll('a', '4');
        boolean boolean51 = strBuilder49.startsWith("\n\nclass java.lang.Object10.0-1.0\n");
        org.junit.Assert.assertNotNull(writer2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(intStream19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(reader26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 4 + "'", int31 == 4);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(reader36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 210 + "'", int43 == 210);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test2542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2542");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln(stringBuffer4, (int) (short) -1, 5);
        java.util.stream.IntStream intStream8 = strBuilder3.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        java.lang.StringBuffer stringBuffer15 = strBuilder9.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendln(stringBuffer15);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder3.appendln(1.0f);
        int int21 = strBuilder3.lastIndexOf(' ', (int) 'e');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(intStream8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(stringBuffer15);
        org.junit.Assert.assertEquals(stringBuffer15.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
    }

    @Test
    public void test2543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2543");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendSeparator("ass j", "true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder6.trim();
        char[] charArray8 = strBuilder7.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        java.lang.StringBuffer stringBuffer13 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.appendln(stringBuffer13, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer17 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.appendln(stringBuffer17);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder12.append((float) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder7.append(strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder7.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader25 = strBuilder24.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.replaceFirst(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader35 = strBuilder34.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.appendNewLine();
        boolean boolean42 = strBuilder28.equalsIgnoreCase(strBuilder38);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder23.append((java.lang.Object) strBuilder28);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder23.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.appendSeparator("\n1.0\n", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader51 = strBuilder50.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.append((java.lang.CharSequence) strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder49.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.append((long) (byte) 10);
        java.lang.String str58 = strBuilder54.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder54.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader63 = strBuilder62.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.append((java.lang.CharSequence) strBuilder62);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder61.appendln(true);
        int int68 = strBuilder61.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder61.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader73 = strBuilder72.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.append((java.lang.CharSequence) strBuilder72);
        java.lang.String str75 = strBuilder74.getNewLineText();
        boolean boolean76 = strBuilder61.equals(strBuilder74);
        java.lang.String str77 = strBuilder74.toString();
        java.lang.StringBuffer stringBuffer78 = strBuilder74.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder54.appendln(stringBuffer78);
        boolean boolean80 = strBuilder45.equalsIgnoreCase(strBuilder79);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder22.appendFixedWidthPadLeft((java.lang.Object) strBuilder45, 3, 'g');
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder22.replaceFirst('\000', 'a');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "true\n10");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "true\n10");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[t, r, u, e, \n, 1, 0]");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(reader25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(reader35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(reader51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "true\n10" + "'", str58, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(reader63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 4 + "'", int68 == 4);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(reader73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertNotNull(stringBuffer78);
        org.junit.Assert.assertEquals(stringBuffer78.toString(), "");
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder86);
    }

    @Test
    public void test2544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2544");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(22);
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.appendln('a');
        int int4 = strBuilder1.length();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
    }

    @Test
    public void test2545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2545");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.appendln("", (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder20.replaceFirst("\n1.0\n", "false");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder20.insert(5, (float) 'r');
        java.lang.String str33 = strBuilder32.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.replaceAll("\n ", "4-1.0 true");
        int int37 = strBuilder36.length();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "\ntrue114.0\n\n100.04-1.0 true\n\n" + "'", str33, "\ntrue114.0\n\n100.04-1.0 true\n\n");
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 29 + "'", int37 == 29);
    }

    @Test
    public void test2546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2546");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.appendln(true);
        java.util.stream.IntStream intStream27 = strBuilder26.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder2.append(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder2.setCharAt((int) (short) 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder2.append(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder2.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.setNewLineText("e\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.insert((int) (short) 1, false);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(intStream27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
    }

    @Test
    public void test2547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2547");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        int int4 = strBuilder3.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader8 = strBuilder7.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.append((java.lang.CharSequence) strBuilder7);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder6.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append((long) (byte) 10);
        java.lang.String str15 = strBuilder11.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader17 = strBuilder16.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.appendNewLine();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.appendln("");
        java.lang.String str32 = strBuilder28.rightString((int) '4');
        java.lang.Object[] objArray33 = new java.lang.Object[] { strBuilder20, wildcardClass25, 10.0d, (-1.0d), str32 };
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder11.appendAll(objArray33);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader37 = strBuilder36.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.append((java.lang.CharSequence) strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder35.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.append((long) (byte) 10);
        int int44 = strBuilder42.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder34.append((java.lang.CharSequence) strBuilder42);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder42.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.appendln("ass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.replaceFirst("true\n10", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder3.insert((int) (byte) 1, (java.lang.Object) strBuilder55);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder1.appendln((java.lang.Object) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder1.append(38);
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder1.deleteFirst(strMatcher60);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.appendSeparator("");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 39 + "'", int4 == 39);
        org.junit.Assert.assertNotNull(reader8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "true\n10" + "'", str15, "true\n10");
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "\n" + "'", str32, "\n");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(reader37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
    }

    @Test
    public void test2548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2548");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.ensureCapacity(100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.io.Writer writer11 = strBuilder10.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.append(strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.append(100.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.append((float) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader19 = strBuilder18.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.append((java.lang.CharSequence) strBuilder18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.appendln(true);
        java.util.stream.IntStream intStream23 = strBuilder22.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.appendln((float) 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder22.appendln((-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.insert(13, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder16.append(strBuilder32);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader36 = strBuilder35.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.append((java.lang.CharSequence) strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder34.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.append((long) (byte) 10);
        java.lang.String str43 = strBuilder39.rightString(10);
        boolean boolean45 = strBuilder39.contains('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader48 = strBuilder47.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.append((java.lang.CharSequence) strBuilder47);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder46.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader55 = strBuilder54.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.append((java.lang.CharSequence) strBuilder54);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder53.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder46.appendFixedWidthPadLeft((java.lang.Object) strBuilder59, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder39.appendFixedWidthPadLeft((java.lang.Object) strBuilder46, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader68 = strBuilder67.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.append((java.lang.CharSequence) strBuilder67);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder66.appendln(true);
        java.lang.StringBuffer stringBuffer72 = strBuilder66.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder39.appendln(stringBuffer72);
        java.lang.String str75 = strBuilder73.leftString((int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.appendln("");
        java.lang.String str80 = strBuilder76.rightString((int) '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = strBuilder76.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder73.appendAll((java.util.Iterator<java.lang.String>) strTokenizer81);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder32.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer81, "\n10");
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = null;
        int int87 = strBuilder32.lastIndexOf(strMatcher85, 170);
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(reader19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(intStream23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(reader36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "true\n10" + "'", str43, "true\n10");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(reader48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(reader55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(reader68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(stringBuffer72);
        org.junit.Assert.assertEquals(stringBuffer72.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "true\n10############################### true\n\n" + "'", str75, "true\n10############################### true\n\n");
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "\n" + "'", str80, "\n");
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
    }

    @Test
    public void test2549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2549");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        int int9 = strBuilder7.lastIndexOf('#');
        int int11 = strBuilder7.indexOf('#');
        int int13 = strBuilder7.lastIndexOf("\n\nclass java.lang.Object10.0-1.0\n");
        int int16 = strBuilder7.indexOf("## true\n\n###\n", 26);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
    }

    @Test
    public void test2550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2550");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.io.Writer writer2 = strBuilder1.asWriter();
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        int int4 = strBuilder1.lastIndexOf(strMatcher3);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.append((float) 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.appendln((int) '4');
        char[] charArray9 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.appendln(charArray9);
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.deleteAll(strMatcher11);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.append((java.lang.CharSequence) strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.appendln(true);
        java.util.stream.IntStream intStream19 = strBuilder13.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder13.appendFixedWidthPadRight((int) '4', (int) (short) 100, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader26 = strBuilder25.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.append((java.lang.CharSequence) strBuilder25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.appendln(true);
        int int31 = strBuilder24.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder24.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader36 = strBuilder35.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.append((java.lang.CharSequence) strBuilder35);
        java.lang.String str38 = strBuilder37.getNewLineText();
        boolean boolean39 = strBuilder24.equals(strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder23.append(strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder23.appendln(false);
        int int43 = strBuilder42.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.append((long) 36);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder12.append(strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader49 = strBuilder48.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.append((java.lang.CharSequence) strBuilder48);
        java.lang.StringBuffer stringBuffer51 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder50.appendln(stringBuffer51, (int) (short) -1, 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.append((-1L));
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader60 = strBuilder59.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder59.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder63.replaceFirst(strMatcher66, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader70 = strBuilder69.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder69.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder73.appendNewLine();
        boolean boolean77 = strBuilder63.equalsIgnoreCase(strBuilder73);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder58.append((java.lang.Object) strBuilder63);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader80 = strBuilder79.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder79.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder79.minimizeCapacity();
        char[] charArray84 = strBuilder79.toCharArray();
        char[] charArray85 = strBuilder63.getChars(charArray84);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder54.insert((int) (short) 1, charArray85);
        char[] charArray87 = strBuilder45.getChars(charArray85);
        org.junit.Assert.assertNotNull(writer2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(intStream19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(reader26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 4 + "'", int31 == 4);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(reader36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 210 + "'", int43 == 210);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(reader49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(reader60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(reader70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(reader80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray84), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray84), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray84), "[ ]");
        org.junit.Assert.assertNotNull(charArray85);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray85), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray85), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray85), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(charArray87);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray87), "true\n52##################################################################################################false\n36");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray87), "true\n52##################################################################################################false\n36");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray87), "[t, r, u, e, \n, 5, 2, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, f, a, l, s, e, \n, 3, 6]");
    }

    @Test
    public void test2551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2551");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        int int8 = strBuilder0.lastIndexOf(strMatcher6, (int) 'a');
        java.util.stream.IntStream intStream9 = strBuilder0.codePoints();
        boolean boolean10 = strBuilder0.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.replaceFirst('a', 'r');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder0.appendPadding(40, '#');
        int int18 = strBuilder16.lastIndexOf("true\n10\n.0-1.0\nclass java.lang.Object.0-1.0\n10.0.0-1.0\n-1.0.0-1.0\n\n");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(intStream9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
    }

    @Test
    public void test2552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2552");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        java.lang.StringBuffer stringBuffer43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append(stringBuffer43, (int) (short) 10, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder46.appendFixedWidthPadRight((java.lang.Object) strBuilder47, 32, '#');
        int int56 = strBuilder46.indexOf(' ', 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder46.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.appendln((double) 7);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder57.appendln("e\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceFirst('r', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.append("true");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder64.append((float) 68);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.replaceFirst('\000', '\n');
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder71.appendln(true);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 13 + "'", int56 == 13);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
    }

    @Test
    public void test2553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2553");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        int int8 = strBuilder0.lastIndexOf(strMatcher6, (int) 'a');
        java.util.stream.IntStream intStream9 = strBuilder0.codePoints();
        boolean boolean10 = strBuilder0.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.replaceFirst('a', 'r');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder0.append('a');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(intStream9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
    }

    @Test
    public void test2554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2554");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        boolean boolean4 = strBuilder2.startsWith("\n");
        int int6 = strBuilder2.indexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendln(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader10 = strBuilder9.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.append((java.lang.Object) strBuilder9);
        java.lang.String str12 = strBuilder9.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader16 = strBuilder15.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append((java.lang.CharSequence) strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.appendln(true);
        java.util.stream.IntStream intStream20 = strBuilder19.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader26 = strBuilder25.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.append((java.lang.CharSequence) strBuilder25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader37 = strBuilder36.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.replaceFirst(strMatcher43, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader47 = strBuilder46.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.appendNewLine();
        boolean boolean54 = strBuilder40.equalsIgnoreCase(strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder35.append((java.lang.Object) strBuilder40);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder35.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strBuilder57.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder31.appendAll((java.util.Iterator<java.lang.String>) strTokenizer58);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder23.appendln(strBuilder59);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader63 = strBuilder62.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.append((java.lang.CharSequence) strBuilder62);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder61.appendln(true);
        int int68 = strBuilder61.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder61.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader73 = strBuilder72.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.append((java.lang.CharSequence) strBuilder72);
        java.lang.String str75 = strBuilder74.getNewLineText();
        boolean boolean76 = strBuilder61.equals(strBuilder74);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder61.appendFixedWidthPadRight((int) (byte) 1, (int) '#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder23.append((java.lang.CharSequence) strBuilder80);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder9.append((java.lang.CharSequence) strBuilder81, (int) (short) 1, 14);
        java.lang.String str87 = strBuilder84.midString(257, (int) '\000');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(intStream20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(reader26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(reader37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(reader47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(reader63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 4 + "'", int68 == 4);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(reader73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "" + "'", str87, "");
    }

    @Test
    public void test2555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2555");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        int int6 = strBuilder5.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader9 = strBuilder8.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.append((java.lang.CharSequence) strBuilder8);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.append(false);
        char[] charArray13 = strBuilder12.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder5.appendln(charArray13);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader17 = strBuilder16.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append((java.lang.CharSequence) strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.appendln(true);
        int int22 = strBuilder15.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder15.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder24.appendNull();
        boolean boolean27 = strBuilder24.contains(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.appendln("");
        java.lang.String str31 = strBuilder30.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader34 = strBuilder33.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append((java.lang.CharSequence) strBuilder33);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.appendln(true);
        java.util.stream.IntStream intStream38 = strBuilder37.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.appendln("");
        java.lang.String str42 = strBuilder41.getNewLineText();
        java.lang.Object[] objArray47 = new java.lang.Object[] { strBuilder37, strBuilder41, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder30.appendAll(objArray47);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.appendln(true);
        boolean boolean51 = strBuilder24.equals((java.lang.Object) true);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder24.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.appendln((int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader57 = strBuilder56.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.append((java.lang.CharSequence) strBuilder56);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder55.appendln(true);
        java.util.stream.IntStream intStream61 = strBuilder60.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder60.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.appendSeparator('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder67.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.appendSeparator("hi!", "\n\nclass java.lang.Object10.0-1.0\n");
        java.lang.StringBuffer stringBuffer72 = strBuilder68.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder54.append(stringBuffer72);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder5.appendln(stringBuffer72, (int) (byte) 1, 322);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 5 + "'", int6 == 5);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[f, a, l, s, e]");
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 4 + "'", int22 == 4);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(reader34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(intStream38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(reader57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(intStream61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(stringBuffer72);
        org.junit.Assert.assertEquals(stringBuffer72.toString(), "true4\nhi!");
        org.junit.Assert.assertNotNull(strBuilder73);
    }

    @Test
    public void test2556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2556");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendSeparator("ass j", "true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln("");
        java.lang.String str10 = strBuilder9.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append((java.lang.CharSequence) strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln(true);
        java.util.stream.IntStream intStream17 = strBuilder16.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln("");
        java.lang.String str21 = strBuilder20.getNewLineText();
        java.lang.Object[] objArray26 = new java.lang.Object[] { strBuilder16, strBuilder20, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder9.appendAll(objArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader32 = strBuilder31.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.append((java.lang.CharSequence) strBuilder31);
        java.lang.StringBuffer stringBuffer34 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder30.appendln(stringBuffer34, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder30.deleteFirst(strMatcher38);
        boolean boolean41 = strBuilder39.startsWith("\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strBuilder39.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder27.appendAll((java.util.Iterator<java.lang.String>) strTokenizer42);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder6.append((java.lang.Object) strBuilder43);
        int int46 = strBuilder43.lastIndexOf("97########");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder43.deleteAll(strMatcher47);
        java.io.Writer writer49 = strBuilder48.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder48.insert(0, (float) '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.appendln((long) 11);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(intStream17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(reader32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(writer49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
    }

    @Test
    public void test2557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2557");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder28.appendPadding((int) (byte) 1, '#');
        int int34 = strBuilder32.indexOf('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.appendln(strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader39 = strBuilder38.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.append((java.lang.CharSequence) strBuilder38);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder37.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.append((long) (byte) 10);
        java.lang.String str46 = strBuilder42.rightString(10);
        boolean boolean48 = strBuilder42.contains('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader51 = strBuilder50.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.append((java.lang.CharSequence) strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder49.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader58 = strBuilder57.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.append((java.lang.CharSequence) strBuilder57);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder56.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder49.appendFixedWidthPadLeft((java.lang.Object) strBuilder62, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder42.appendFixedWidthPadLeft((java.lang.Object) strBuilder49, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader71 = strBuilder70.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.append((java.lang.CharSequence) strBuilder70);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder69.appendln(true);
        java.lang.StringBuffer stringBuffer75 = strBuilder69.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder42.appendln(stringBuffer75);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.append("\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader80 = strBuilder79.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder76.appendln((java.lang.Object) strBuilder79);
        boolean boolean82 = strBuilder36.equals((java.lang.Object) strBuilder76);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder36.minimizeCapacity();
        int int85 = strBuilder83.indexOf("###3##########################t100.0");
        // The following exception was thrown during execution in test generation
        try {
            char char87 = strBuilder83.charAt(41);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 41");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(reader39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "true\n10" + "'", str46, "true\n10");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(reader51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(reader58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(reader71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(stringBuffer75);
        org.junit.Assert.assertEquals(stringBuffer75.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(reader80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
    }

    @Test
    public void test2558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2558");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder8.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.append((long) (byte) 10);
        int int19 = strBuilder17.lastIndexOf('#');
        int int22 = strBuilder17.lastIndexOf('a', (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder17.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln(1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.appendln("true\n10\nclass java.lang.Object10.0-1.0true\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder9.appendln(strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder24.appendPadding((int) '#', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.ensureCapacity(45);
        int int37 = strBuilder32.lastIndexOf("true\n10100.0 \n", (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader40 = strBuilder39.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.append((java.lang.CharSequence) strBuilder39);
        java.lang.StringBuffer stringBuffer42 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder38.appendln(stringBuffer42, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder45.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder46.reverse();
        int int48 = strBuilder47.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader51 = strBuilder50.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.append((java.lang.CharSequence) strBuilder50);
        java.io.Writer writer53 = strBuilder50.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder50.appendSeparator("hi!", "\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.appendSeparator("true\n10############################### true\n\n", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader67 = strBuilder66.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.append((java.lang.CharSequence) strBuilder66);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder65.append(false);
        char[] charArray71 = strBuilder70.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder63.insert(0, charArray71);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder59.insert((int) (short) 10, charArray71, 0, (int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder47.appendFixedWidthPadLeft((java.lang.Object) strBuilder59, 5, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder59.replaceAll("true\n10############################### true\n\n", "e\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder32.append((java.lang.Object) strBuilder81);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder81.append((long) 24);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(reader40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 32 + "'", int48 == 32);
        org.junit.Assert.assertNotNull(reader51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(writer53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(reader67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[f, a, l, s, e]");
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
    }

    @Test
    public void test2559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2559");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendln("");
        java.lang.String str12 = strBuilder11.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.append((java.lang.CharSequence) strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.append((long) (byte) 10);
        java.lang.String str22 = strBuilder18.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader24 = strBuilder23.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.appendNewLine();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.appendln("");
        java.lang.String str39 = strBuilder35.rightString((int) '4');
        java.lang.Object[] objArray40 = new java.lang.Object[] { strBuilder27, wildcardClass32, 10.0d, (-1.0d), str39 };
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder18.appendAll(objArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder11.appendAll(objArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder8.appendAll(objArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.append(1);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader48 = strBuilder47.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.append((java.lang.CharSequence) strBuilder47);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.append((long) (byte) 10);
        java.lang.String str55 = strBuilder51.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder51.deleteAll("");
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = null;
        int int59 = strBuilder51.lastIndexOf(strMatcher58);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder43.appendln(strBuilder51);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.append((double) 32);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "true\n10" + "'", str22, "true\n10");
        org.junit.Assert.assertNotNull(reader24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "\n" + "'", str39, "\n");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(reader48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "true\n10" + "'", str55, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
    }

    @Test
    public void test2560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2560");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.appendNull();
        java.util.stream.IntStream intStream4 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.deleteAll('a');
        java.util.stream.IntStream intStream7 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.append(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendln(true);
        java.util.stream.IntStream intStream16 = strBuilder15.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader22 = strBuilder21.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.append((java.lang.CharSequence) strBuilder21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder20.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader33 = strBuilder32.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.replaceFirst(strMatcher39, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader43 = strBuilder42.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.appendNewLine();
        boolean boolean50 = strBuilder36.equalsIgnoreCase(strBuilder46);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder31.append((java.lang.Object) strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder31.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strBuilder53.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder27.appendAll((java.util.Iterator<java.lang.String>) strTokenizer54);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder19.appendln(strBuilder55);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader59 = strBuilder58.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.append((java.lang.CharSequence) strBuilder58);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder57.appendln(true);
        int int64 = strBuilder57.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder57.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader69 = strBuilder68.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder67.append((java.lang.CharSequence) strBuilder68);
        java.lang.String str71 = strBuilder70.getNewLineText();
        boolean boolean72 = strBuilder57.equals(strBuilder70);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder57.appendFixedWidthPadRight((int) (byte) 1, (int) '#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder19.append((java.lang.CharSequence) strBuilder76);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader80 = strBuilder79.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder78.append((java.lang.CharSequence) strBuilder79);
        java.lang.StringBuffer stringBuffer82 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder78.appendln(stringBuffer82, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder85.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder86.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder86.insert((int) (short) 0, (double) 0);
        char[] charArray91 = strBuilder90.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder76.appendln(charArray91);
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder76.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder9.appendln((java.lang.Object) strBuilder76);
        org.apache.commons.lang3.text.StrBuilder strBuilder97 = strBuilder9.append((float) 257);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(intStream4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(intStream7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(intStream16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(reader22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(reader33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(reader43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(reader59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 4 + "'", int64 == 4);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(reader69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(reader80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(charArray91);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray91), "0.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray91), "0.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray91), "[0, ., 0, \n]");
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertNotNull(strBuilder97);
    }

    @Test
    public void test2561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2561");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendSeparator("ass j", "true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln("");
        java.lang.String str10 = strBuilder9.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append((java.lang.CharSequence) strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln(true);
        java.util.stream.IntStream intStream17 = strBuilder16.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln("");
        java.lang.String str21 = strBuilder20.getNewLineText();
        java.lang.Object[] objArray26 = new java.lang.Object[] { strBuilder16, strBuilder20, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder9.appendAll(objArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader32 = strBuilder31.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.append((java.lang.CharSequence) strBuilder31);
        java.lang.StringBuffer stringBuffer34 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder30.appendln(stringBuffer34, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder30.deleteFirst(strMatcher38);
        boolean boolean41 = strBuilder39.startsWith("\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strBuilder39.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder27.appendAll((java.util.Iterator<java.lang.String>) strTokenizer42);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder6.append((java.lang.Object) strBuilder43);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder6.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.append('\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder47.trim();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(intStream17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(reader32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
    }

    @Test
    public void test2562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2562");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((long) (byte) 10);
        java.lang.String str13 = strBuilder9.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendNewLine();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln("");
        java.lang.String str30 = strBuilder26.rightString((int) '4');
        java.lang.Object[] objArray31 = new java.lang.Object[] { strBuilder18, wildcardClass23, 10.0d, (-1.0d), str30 };
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder9.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder32.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.appendPadding((int) (byte) 1, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader39 = strBuilder38.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder38.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.replaceFirst(strMatcher45, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader49 = strBuilder48.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder48.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.appendNewLine();
        boolean boolean56 = strBuilder42.equalsIgnoreCase(strBuilder52);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder37.append((java.lang.Object) strBuilder42);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder37.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strBuilder59.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader65 = strBuilder64.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder64.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder68.replaceFirst(strMatcher71, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader75 = strBuilder74.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder74.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder78.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder78.appendNewLine();
        boolean boolean82 = strBuilder68.equalsIgnoreCase(strBuilder78);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder63.append((java.lang.Object) strBuilder68);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader85 = strBuilder84.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder84.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder84.minimizeCapacity();
        char[] charArray89 = strBuilder84.toCharArray();
        char[] charArray90 = strBuilder68.getChars(charArray89);
        char[] charArray91 = strBuilder59.getChars(charArray89);
        char[] charArray92 = strBuilder36.getChars(charArray89);
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder0.append(charArray92);
        org.apache.commons.lang3.text.StrMatcher strMatcher94 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder93.deleteAll(strMatcher94);
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder93.trim();
        java.io.Reader reader97 = strBuilder93.asReader();
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "true\n10" + "'", str13, "true\n10");
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\n" + "'", str30, "\n");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(reader39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(reader49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(reader65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(reader75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(reader85);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(charArray89);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray89), "#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray89), "#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray89), "[#]");
        org.junit.Assert.assertNotNull(charArray90);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray90), "#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray90), "#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray90), "[#]");
        org.junit.Assert.assertNotNull(charArray91);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray91), "4true\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray91), "4true\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray91), "[4, t, r, u, e, \n]");
        org.junit.Assert.assertNotNull(charArray92);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray92), "#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray92), "#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray92), "[#]");
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertNotNull(strBuilder96);
        org.junit.Assert.assertNotNull(reader97);
    }

    @Test
    public void test2563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2563");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        char[] charArray6 = strBuilder5.toCharArray();
        boolean boolean8 = strBuilder5.startsWith("ass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.append(false);
        int int15 = strBuilder14.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader18 = strBuilder17.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.append((java.lang.CharSequence) strBuilder17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.append(false);
        char[] charArray22 = strBuilder21.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder14.appendln(charArray22);
        java.lang.Class<?> wildcardClass24 = strBuilder23.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder5.appendFixedWidthPadLeft((java.lang.Object) wildcardClass24, (int) (short) 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder5.setLength((int) (short) 10);
        char[] charArray30 = strBuilder5.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strBuilder5.asTokenizer();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[f, a, l, s, e]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertNotNull(reader18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[f, a, l, s, e]");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "falser\000\000\000\000");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "falser\000\000\000\000");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[f, a, l, s, e, r, \000, \000, \000, \000]");
        org.junit.Assert.assertNotNull(strTokenizer31);
    }

    @Test
    public void test2564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2564");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.deleteFirst(strMatcher8);
        boolean boolean11 = strBuilder9.startsWith("\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strBuilder9.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.append((long) 50);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder9.appendSeparator('\n', '\n');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
    }

    @Test
    public void test2565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2565");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.minimizeCapacity();
        int int14 = strBuilder12.lastIndexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.appendFixedWidthPadLeft(13, (int) (short) 1, 'r');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.io.Writer writer29 = strBuilder28.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.append((java.lang.Object) writer29);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader33 = strBuilder32.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.replaceFirst(strMatcher39, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader43 = strBuilder42.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.appendNewLine();
        boolean boolean50 = strBuilder36.equalsIgnoreCase(strBuilder46);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder31.append((java.lang.Object) strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder31.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strBuilder53.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder26.append(strBuilder53);
        java.io.Reader reader58 = strBuilder57.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.append((double) 34);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder18.appendFixedWidthPadRight((java.lang.Object) strBuilder60, 0, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder("ng.Object10.0-1.0\ntrue\n10\n ");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder60.appendFixedWidthPadLeft((java.lang.Object) "ng.Object10.0-1.0\ntrue\n10\n ", 13, '\n');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(writer29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(reader33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(reader43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(reader58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder68);
    }

    @Test
    public void test2566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2566");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.appendSeparator("\n", 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.appendln("");
        java.lang.String str19 = strBuilder15.rightString((int) '4');
        java.lang.String str21 = strBuilder15.leftString((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder15.appendln("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.append(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder9.appendln(strBuilder27);
        java.lang.CharSequence charSequence31 = strBuilder28.subSequence(0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader34 = strBuilder33.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append((java.lang.CharSequence) strBuilder33);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.appendln(true);
        int int39 = strBuilder32.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder32.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder32.appendSeparator("hi!", 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder32.setCharAt(0, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder47.appendFixedWidthPadLeft((int) 'r', 32, '4');
        boolean boolean52 = strBuilder28.equalsIgnoreCase(strBuilder51);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.appendln("");
        java.lang.String str56 = strBuilder55.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader59 = strBuilder58.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.append((java.lang.CharSequence) strBuilder58);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder57.appendln(true);
        java.util.stream.IntStream intStream63 = strBuilder62.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.appendln("");
        java.lang.String str67 = strBuilder66.getNewLineText();
        java.lang.Object[] objArray72 = new java.lang.Object[] { strBuilder62, strBuilder66, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder55.appendAll(objArray72);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder73.appendln("", (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder73.replaceFirst("\n1.0\n", "false");
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder82.appendPadding((-1), 'a');
        int int86 = strBuilder82.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder82.clear();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder28.append((java.lang.CharSequence) strBuilder87, (int) '\n', 113);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\n" + "'", str19, "\n");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\n" + "'", str21, "\n");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertEquals("'" + charSequence31 + "' != '" + "" + "'", charSequence31, "");
        org.junit.Assert.assertNotNull(reader34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 4 + "'", int39 == 4);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(reader59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(intStream63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 24 + "'", int86 == 24);
        org.junit.Assert.assertNotNull(strBuilder87);
    }

    @Test
    public void test2567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2567");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.io.Writer writer4 = strBuilder1.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.appendSeparator("hi!", "\n1.0\n");
        java.lang.String str8 = strBuilder1.getNewLineText();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder1.deleteFirst(strMatcher9);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder1.appendSeparator(".0-1.0\n", "ava.lang.Object.0-1.0\n10.0.0-1.0\n-1.0.0");
        boolean boolean14 = strBuilder13.isEmpty();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(writer4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test2568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2568");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        char[] charArray6 = strBuilder5.toCharArray();
        java.lang.String str8 = strBuilder5.leftString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.appendNewLine();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[f, a, l, s, e]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "false" + "'", str8, "false");
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
    }

    @Test
    public void test2569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2569");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln((java.lang.Object) 1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder9.append(strBuilder12);
        int int17 = strBuilder12.indexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder12.deleteAll("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append(' ');
        java.io.Reader reader22 = strBuilder21.asReader();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(reader22);
    }

    @Test
    public void test2570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2570");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendNewLine();
        boolean boolean19 = strBuilder5.equalsIgnoreCase(strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder0.append((java.lang.Object) strBuilder5);
        int int21 = strBuilder0.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder0.replaceFirst('a', '4');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 32 + "'", int21 == 32);
        org.junit.Assert.assertNotNull(strBuilder24);
    }

    @Test
    public void test2571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2571");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        boolean boolean11 = strBuilder5.contains('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append((java.lang.CharSequence) strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader21 = strBuilder20.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append((java.lang.CharSequence) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder12.appendFixedWidthPadLeft((java.lang.Object) strBuilder25, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder5.appendFixedWidthPadLeft((java.lang.Object) strBuilder12, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader34 = strBuilder33.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append((java.lang.CharSequence) strBuilder33);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.appendln(true);
        java.lang.StringBuffer stringBuffer38 = strBuilder32.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder5.appendln(stringBuffer38);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.append("\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader43 = strBuilder42.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder39.appendln((java.lang.Object) strBuilder42);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder39.replaceFirst('a', '\n');
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder39.replaceAll(strMatcher48, "\n1.0 \n");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder39.deleteFirst('a');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(reader34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(stringBuffer38);
        org.junit.Assert.assertEquals(stringBuffer38.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(reader43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
    }

    @Test
    public void test2572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2572");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.ensureCapacity(100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.io.Writer writer11 = strBuilder10.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.append(strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.append(100.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.append((float) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator('r', '3');
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
    }

    @Test
    public void test2573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2573");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.appendFixedWidthPadRight((int) '4', (int) (short) 100, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append((java.lang.CharSequence) strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln(true);
        int int18 = strBuilder11.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder11.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        java.lang.String str25 = strBuilder24.getNewLineText();
        boolean boolean26 = strBuilder11.equals(strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder10.append(strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder10.appendln(false);
        int int30 = strBuilder29.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((long) 36);
        char char34 = strBuilder29.charAt(38);
        java.lang.StringBuffer stringBuffer35 = strBuilder29.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader38 = strBuilder37.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.append((java.lang.CharSequence) strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendln(true);
        java.util.stream.IntStream intStream42 = strBuilder36.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder36.appendFixedWidthPadRight((int) '4', (int) (short) 100, '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceAll(strMatcher47, "true\n100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.append((float) 16);
        boolean boolean52 = strBuilder29.equalsIgnoreCase(strBuilder49);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 4 + "'", int18 == 4);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 210 + "'", int30 == 210);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + char34 + "' != '" + '#' + "'", char34 == '#');
        org.junit.Assert.assertNotNull(stringBuffer35);
        org.junit.Assert.assertEquals(stringBuffer35.toString(), "true\n52##################################################################################################false\n36");
        org.junit.Assert.assertNotNull(reader38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(intStream42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test2574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2574");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.appendSeparator("\n", 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.setLength((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader19 = strBuilder18.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.append((java.lang.CharSequence) strBuilder18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.append((long) (byte) 10);
        java.lang.String str26 = strBuilder22.rightString(10);
        boolean boolean28 = strBuilder22.contains('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder29.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader38 = strBuilder37.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.append((java.lang.CharSequence) strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder29.appendFixedWidthPadLeft((java.lang.Object) strBuilder42, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder22.appendFixedWidthPadLeft((java.lang.Object) strBuilder29, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader51 = strBuilder50.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.append((java.lang.CharSequence) strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder49.appendln(true);
        java.lang.StringBuffer stringBuffer55 = strBuilder49.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder22.appendln(stringBuffer55);
        java.lang.String str58 = strBuilder56.leftString((int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.appendln("");
        java.lang.String str63 = strBuilder59.rightString((int) '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strBuilder59.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder56.appendAll((java.util.Iterator<java.lang.String>) strTokenizer64);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder56.insert(32, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.setLength((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder14.appendFixedWidthPadRight((java.lang.Object) (short) 10, 18, '\n');
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.append(true);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(reader19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "true\n10" + "'", str26, "true\n10");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(reader38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(reader51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(stringBuffer55);
        org.junit.Assert.assertEquals(stringBuffer55.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "true\n10############################### true\n\n" + "'", str58, "true\n10############################### true\n\n");
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "\n" + "'", str63, "\n");
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
    }

    @Test
    public void test2575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2575");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.appendNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        int int6 = strBuilder0.indexOf(strMatcher4, (int) '4');
        java.util.stream.IntStream intStream7 = strBuilder0.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.deleteAll("true\n10\nclass java.lang.Object10.0-1.0true\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.replace((int) '\000', (int) (byte) 10, "true\n0.0\ntrue\nra");
        java.io.Reader reader14 = strBuilder13.asReader();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(intStream7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(reader14);
    }

    @Test
    public void test2576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2576");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        java.lang.StringBuffer stringBuffer43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append(stringBuffer43, (int) (short) 10, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder46.appendFixedWidthPadRight((java.lang.Object) strBuilder47, 32, '#');
        int int54 = strBuilder47.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder47.appendSeparator('a', 22);
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = null;
        int int60 = strBuilder47.lastIndexOf(strMatcher58, 39);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder47.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder47.setNewLineText("97########");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
    }

    @Test
    public void test2577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2577");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder8.reverse();
        int int10 = strBuilder8.size();
        int int11 = strBuilder8.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append((java.lang.CharSequence) strBuilder13);
        java.lang.StringBuffer stringBuffer16 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder12.appendln(stringBuffer16, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.reverse();
        int int21 = strBuilder19.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder8.append(strBuilder19);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder8.delete((int) (byte) 100, 20);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 32 + "'", int21 == 32);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
    }

    @Test
    public void test2578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2578");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.appendln("", (int) (byte) 0, 0);
        java.lang.String str28 = strBuilder26.leftString((int) ' ');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "\ntrue\n\n100.04-1.0 true\n\n" + "'", str28, "\ntrue\n\n100.04-1.0 true\n\n");
    }

    @Test
    public void test2579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2579");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.replaceFirst(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        boolean boolean18 = strBuilder4.equalsIgnoreCase(strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader21 = strBuilder20.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append((java.lang.CharSequence) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader32 = strBuilder31.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder35.replaceFirst(strMatcher38, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder41.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.appendNewLine();
        boolean boolean49 = strBuilder35.equalsIgnoreCase(strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder30.append((java.lang.Object) strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder30.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strBuilder52.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder26.appendAll((java.util.Iterator<java.lang.String>) strTokenizer53);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder14.appendAll((java.util.Iterator<java.lang.String>) strTokenizer53);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader58 = strBuilder57.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.append((java.lang.CharSequence) strBuilder57);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder56.appendln(true);
        java.util.stream.IntStream intStream62 = strBuilder61.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder61.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.deleteFirst(' ');
        java.io.Reader reader68 = strBuilder65.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader71 = strBuilder70.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.append((java.lang.CharSequence) strBuilder70);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder69.appendln(true);
        java.util.stream.IntStream intStream75 = strBuilder74.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder74.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder65.append(strBuilder78);
        java.lang.StringBuffer stringBuffer80 = strBuilder78.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder55.appendln(stringBuffer80);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder55.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder83.appendln((double) 7);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder85.appendFixedWidthPadLeft(76, 20, 'a');
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(reader32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(reader58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(intStream62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(reader68);
        org.junit.Assert.assertNotNull(reader71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(intStream75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(stringBuffer80);
        org.junit.Assert.assertEquals(stringBuffer80.toString(), "true");
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder89);
    }

    @Test
    public void test2580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2580");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        int int9 = strBuilder7.lastIndexOf('#');
        int int12 = strBuilder7.lastIndexOf('a', (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder7.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.appendln(1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.appendln("true\n10\nclass java.lang.Object10.0-1.0true\n");
        int int21 = strBuilder18.indexOf("ueahi!-1\n#", 10);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
    }

    @Test
    public void test2581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2581");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) 'g');
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "aaaaaaaaaaaaaaaaa");
        org.junit.Assert.assertNotNull(strBuilder4);
    }

    @Test
    public void test2582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2582");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader25 = strBuilder24.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.append((java.lang.CharSequence) strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.appendln(true);
        java.util.stream.IntStream intStream29 = strBuilder28.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder28.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.appendSeparator('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder35.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.appendSeparator("hi!", "\n\nclass java.lang.Object10.0-1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.appendln(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader45 = strBuilder44.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder44.minimizeCapacity();
        char[] charArray49 = strBuilder44.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder41.appendln(charArray49);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder22.append(charArray49);
        int int53 = strBuilder22.lastIndexOf('3');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(reader25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(intStream29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(reader45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
    }

    @Test
    public void test2583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2583");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str4 = strBuilder0.rightString((int) '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strBuilder0.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendSeparator("false");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        java.lang.StringBuffer stringBuffer15 = strBuilder9.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder7.appendln(stringBuffer15);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\n" + "'", str4, "\n");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(stringBuffer15);
        org.junit.Assert.assertEquals(stringBuffer15.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder16);
    }

    @Test
    public void test2584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2584");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader5 = strBuilder4.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder4.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder8.replaceFirst(strMatcher11, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendNewLine();
        boolean boolean22 = strBuilder8.equalsIgnoreCase(strBuilder18);
        boolean boolean23 = strBuilder0.equals(strBuilder18);
        java.lang.String str24 = strBuilder18.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader27 = strBuilder26.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.append((java.lang.CharSequence) strBuilder26);
        java.lang.StringBuffer stringBuffer29 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder28.appendln(stringBuffer29, (int) (short) -1, 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.appendNull();
        java.lang.String str34 = strBuilder28.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder18.append((java.lang.Object) str34);
        int int38 = strBuilder18.lastIndexOf('#', 0);
        int int41 = strBuilder18.lastIndexOf('a', (int) (short) -1);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(reader5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\n" + "'", str24, "\n");
        org.junit.Assert.assertNotNull(reader27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "\n" + "'", str34, "\n");
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
    }

    @Test
    public void test2585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2585");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        java.lang.String str14 = strBuilder13.getNewLineText();
        boolean boolean15 = strBuilder0.equals(strBuilder13);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder13.deleteAll(strMatcher16);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceFirst('\n', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.appendSeparator("\n", "\n\ntrue\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader26 = strBuilder25.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.append((java.lang.CharSequence) strBuilder25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.appendln(true);
        java.util.stream.IntStream intStream30 = strBuilder29.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.appendln((java.lang.Object) 1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder33.append(strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder39.deleteCharAt(6);
        boolean boolean44 = strBuilder23.equalsIgnoreCase(strBuilder39);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(reader26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(intStream30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test2586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2586");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder36.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.insert(5, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder44.deleteFirst("4");
        java.lang.String str52 = strBuilder44.midString(7, 12);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder44.append(24);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertNotNull(strBuilder54);
    }

    @Test
    public void test2587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2587");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        int int9 = strBuilder7.lastIndexOf('#');
        int int12 = strBuilder7.lastIndexOf('a', (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder7.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader16 = strBuilder15.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.minimizeCapacity();
        char[] charArray20 = strBuilder15.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.appendln(charArray20);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder14.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendSeparator("false", "e\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader29 = strBuilder28.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.append((java.lang.CharSequence) strBuilder28);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder27.append(false);
        java.lang.Object obj33 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.appendln(obj33);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.append((java.lang.CharSequence) strBuilder32);
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder32.replaceFirst(strMatcher36, "");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder32.deleteCharAt(76);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 76");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(reader29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
    }

    @Test
    public void test2588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2588");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((long) (byte) 10);
        java.lang.String str13 = strBuilder9.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendNewLine();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln("");
        java.lang.String str30 = strBuilder26.rightString((int) '4');
        java.lang.Object[] objArray31 = new java.lang.Object[] { strBuilder18, wildcardClass23, 10.0d, (-1.0d), str30 };
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder9.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder2.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln("true\n10");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceAll(strMatcher36, "97########");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader43 = strBuilder42.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append((java.lang.CharSequence) strBuilder42);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.appendln(true);
        java.util.stream.IntStream intStream47 = strBuilder41.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder41.appendFixedWidthPadRight((int) '4', (int) (short) 100, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader54 = strBuilder53.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.append((java.lang.CharSequence) strBuilder53);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder52.appendln(true);
        int int59 = strBuilder52.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder52.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader64 = strBuilder63.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.append((java.lang.CharSequence) strBuilder63);
        java.lang.String str66 = strBuilder65.getNewLineText();
        boolean boolean67 = strBuilder52.equals(strBuilder65);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder51.append(strBuilder65);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader71 = strBuilder70.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.append((java.lang.CharSequence) strBuilder70);
        java.io.Writer writer73 = strBuilder70.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder70.appendSeparator("hi!", "\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder76.appendSeparator("true\n10############################### true\n\n", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder81.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader87 = strBuilder86.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder85.append((java.lang.CharSequence) strBuilder86);
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder85.append(false);
        char[] charArray91 = strBuilder90.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder83.insert(0, charArray91);
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder79.insert((int) (short) 10, charArray91, 0, (int) (short) 0);
        char[] charArray96 = strBuilder65.getChars(charArray91);
        // The following exception was thrown during execution in test generation
        try {
            strBuilder35.getChars(12, 0, charArray96, (int) '\n');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "true\n10" + "'", str13, "true\n10");
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\n" + "'", str30, "\n");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(reader43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(intStream47);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(reader54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 4 + "'", int59 == 4);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(reader64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(reader71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(writer73);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(reader87);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(charArray91);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray91), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray91), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray91), "[f, a, l, s, e]");
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertNotNull(charArray96);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray96), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray96), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray96), "[f, a, l, s, e]");
    }

    @Test
    public void test2589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2589");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln(stringBuffer4, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.appendln(stringBuffer8);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder3.appendSeparator("hi!", (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strBuilder12.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder12.append((java.lang.Object) strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder12.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader28 = strBuilder27.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.append((java.lang.CharSequence) strBuilder27);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.appendln(true);
        java.util.stream.IntStream intStream32 = strBuilder31.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteFirst(' ');
        java.io.Reader reader38 = strBuilder35.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader41 = strBuilder40.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.append((java.lang.CharSequence) strBuilder40);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder39.appendln(true);
        java.util.stream.IntStream intStream45 = strBuilder44.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder44.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder35.append(strBuilder48);
        java.lang.StringBuffer stringBuffer50 = strBuilder48.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder12.append(stringBuffer50);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader54 = strBuilder53.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.append((java.lang.CharSequence) strBuilder53);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder52.appendln(true);
        java.util.stream.IntStream intStream58 = strBuilder57.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder57.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.appendSeparator('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader67 = strBuilder66.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.append((java.lang.CharSequence) strBuilder66);
        java.lang.StringBuffer stringBuffer69 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder65.appendln(stringBuffer69, (int) (byte) -1, 10);
        int int75 = strBuilder72.indexOf("\n", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder72.replaceAll(' ', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = strBuilder78.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder61.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer79, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder81.deleteFirst("35\n");
        boolean boolean84 = strBuilder51.equals(strBuilder81);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder81.replaceAll(" ", "4true\n10044444444444444444444444444444444");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(reader28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(intStream32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(reader38);
        org.junit.Assert.assertNotNull(reader41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(intStream45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(stringBuffer50);
        org.junit.Assert.assertEquals(stringBuffer50.toString(), "true");
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(reader54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(intStream58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(reader67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(strBuilder87);
    }

    @Test
    public void test2590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2590");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendSeparator(' ', 10);
        int int13 = strBuilder7.lastIndexOf('4', 1);
        int int16 = strBuilder7.lastIndexOf(' ', 66);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder7.appendln(strBuilder17);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(strBuilder18);
    }

    @Test
    public void test2591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2591");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.appendln(true);
        java.lang.String str32 = strBuilder31.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.appendSeparator('4', 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder31.replaceAll(strMatcher36, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader41 = strBuilder40.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.append((java.lang.CharSequence) strBuilder40);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder39.appendln(true);
        java.util.stream.IntStream intStream45 = strBuilder39.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder39.appendFixedWidthPadRight((int) '4', (int) (short) 100, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader52 = strBuilder51.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.append((java.lang.CharSequence) strBuilder51);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder50.appendln(true);
        int int57 = strBuilder50.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder50.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader62 = strBuilder61.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.append((java.lang.CharSequence) strBuilder61);
        java.lang.String str64 = strBuilder63.getNewLineText();
        boolean boolean65 = strBuilder50.equals(strBuilder63);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder49.append(strBuilder63);
        java.lang.StringBuffer stringBuffer67 = strBuilder49.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder31.appendln(stringBuffer67, 55, 22);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "true\n10\nclass java.lang.Object10.0-1.0true\n" + "'", str32, "true\n10\nclass java.lang.Object10.0-1.0true\n");
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(reader41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(intStream45);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(reader52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 4 + "'", int57 == 4);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(reader62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(stringBuffer67);
        org.junit.Assert.assertEquals(stringBuffer67.toString(), "true\n52##################################################################################################");
        org.junit.Assert.assertNotNull(strBuilder70);
    }

    @Test
    public void test2592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2592");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("true\n100.0");
    }

    @Test
    public void test2593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2593");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.setLength((int) (short) 100);
        int int12 = strBuilder8.lastIndexOf('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.append((java.lang.CharSequence) strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.append((long) (byte) 10);
        java.lang.String str22 = strBuilder18.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.minimizeCapacity();
        int int27 = strBuilder25.indexOf("true\n10100.0 \n");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        java.lang.String str38 = strBuilder34.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader40 = strBuilder39.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder39.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.appendNewLine();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.appendln("");
        java.lang.String str55 = strBuilder51.rightString((int) '4');
        java.lang.Object[] objArray56 = new java.lang.Object[] { strBuilder43, wildcardClass48, 10.0d, (-1.0d), str55 };
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder34.appendAll(objArray56);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder28.appendAll(objArray56);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder8.appendAll(objArray56);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder8.reverse();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "true\n10" + "'", str22, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "true\n10" + "'", str38, "true\n10");
        org.junit.Assert.assertNotNull(reader40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "\n" + "'", str55, "\n");
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
    }

    @Test
    public void test2594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2594");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendNewLine();
        boolean boolean19 = strBuilder5.equalsIgnoreCase(strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder0.append((java.lang.Object) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder0.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendSeparator("\n1.0\n", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader28 = strBuilder27.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.append((java.lang.CharSequence) strBuilder27);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.append((long) (byte) 10);
        java.lang.String str35 = strBuilder31.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder31.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader40 = strBuilder39.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.append((java.lang.CharSequence) strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.appendln(true);
        int int45 = strBuilder38.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder38.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader50 = strBuilder49.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.append((java.lang.CharSequence) strBuilder49);
        java.lang.String str52 = strBuilder51.getNewLineText();
        boolean boolean53 = strBuilder38.equals(strBuilder51);
        java.lang.String str54 = strBuilder51.toString();
        java.lang.StringBuffer stringBuffer55 = strBuilder51.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder31.appendln(stringBuffer55);
        boolean boolean57 = strBuilder22.equalsIgnoreCase(strBuilder56);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.setLength((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder56.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader63 = strBuilder62.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.append((java.lang.CharSequence) strBuilder62);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder61.appendln(true);
        java.util.stream.IntStream intStream67 = strBuilder61.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder61.appendFixedWidthPadRight((int) '4', (int) (short) 100, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader74 = strBuilder73.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder72.append((java.lang.CharSequence) strBuilder73);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder72.appendln(true);
        int int79 = strBuilder72.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder72.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader84 = strBuilder83.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder82.append((java.lang.CharSequence) strBuilder83);
        java.lang.String str86 = strBuilder85.getNewLineText();
        boolean boolean87 = strBuilder72.equals(strBuilder85);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder71.append(strBuilder85);
        java.lang.Object obj89 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder88.append(obj89);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder60.append((java.lang.CharSequence) strBuilder88);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(reader28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "true\n10" + "'", str35, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(reader40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 4 + "'", int45 == 4);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(reader50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNotNull(stringBuffer55);
        org.junit.Assert.assertEquals(stringBuffer55.toString(), "");
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(reader63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(intStream67);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(reader74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 4 + "'", int79 == 4);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(reader84);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNull(str86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder91);
    }

    @Test
    public void test2595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2595");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.io.Writer writer2 = strBuilder1.asWriter();
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        int int4 = strBuilder1.lastIndexOf(strMatcher3);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.append((float) 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.appendln((int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.appendPadding(24, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder11.appendNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.deleteAll(strMatcher13);
        java.lang.Class<?> wildcardClass15 = strBuilder11.getClass();
        org.junit.Assert.assertNotNull(writer2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test2596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2596");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append((java.lang.CharSequence) strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.appendln(true);
        int int19 = strBuilder12.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder12.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader24 = strBuilder23.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.append((java.lang.CharSequence) strBuilder23);
        java.lang.String str26 = strBuilder25.getNewLineText();
        boolean boolean27 = strBuilder12.equals(strBuilder25);
        java.lang.String str28 = strBuilder25.toString();
        java.lang.StringBuffer stringBuffer29 = strBuilder25.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder5.appendln(stringBuffer29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strBuilder30.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader34 = strBuilder33.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append((java.lang.CharSequence) strBuilder33);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.appendln(true);
        java.util.stream.IntStream intStream38 = strBuilder37.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder37.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.appendln((java.lang.Object) 1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder41.append(strBuilder44);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader50 = strBuilder49.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.append((java.lang.CharSequence) strBuilder49);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder48.appendln(true);
        java.util.stream.IntStream intStream54 = strBuilder53.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.appendln("");
        java.lang.String str60 = strBuilder59.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader63 = strBuilder62.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.append((java.lang.CharSequence) strBuilder62);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder61.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.append((long) (byte) 10);
        java.lang.String str70 = strBuilder66.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader72 = strBuilder71.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder71.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder75.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder75.appendNewLine();
        java.lang.Object obj79 = new java.lang.Object();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder83.appendln("");
        java.lang.String str87 = strBuilder83.rightString((int) '4');
        java.lang.Object[] objArray88 = new java.lang.Object[] { strBuilder75, wildcardClass80, 10.0d, (-1.0d), str87 };
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder66.appendAll(objArray88);
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder59.appendAll(objArray88);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder56.appendAll(objArray88);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder47.appendAll(objArray88);
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder92.insert(3, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder98 = strBuilder30.appendln(strBuilder92, (int) (byte) 0, 6);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 4 + "'", int19 == 4);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(reader24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(stringBuffer29);
        org.junit.Assert.assertEquals(stringBuffer29.toString(), "");
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(reader34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(intStream38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(reader50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(intStream54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(reader63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "true\n10" + "'", str70, "true\n10");
        org.junit.Assert.assertNotNull(reader72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "\n" + "'", str87, "\n");
        org.junit.Assert.assertNotNull(objArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray88), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray88), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertNotNull(strBuilder98);
    }

    @Test
    public void test2597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2597");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendSeparator("ass j", "true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln("");
        java.lang.String str10 = strBuilder9.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append((java.lang.CharSequence) strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln(true);
        java.util.stream.IntStream intStream17 = strBuilder16.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln("");
        java.lang.String str21 = strBuilder20.getNewLineText();
        java.lang.Object[] objArray26 = new java.lang.Object[] { strBuilder16, strBuilder20, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder9.appendAll(objArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader32 = strBuilder31.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.append((java.lang.CharSequence) strBuilder31);
        java.lang.StringBuffer stringBuffer34 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder30.appendln(stringBuffer34, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder30.deleteFirst(strMatcher38);
        boolean boolean41 = strBuilder39.startsWith("\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strBuilder39.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder27.appendAll((java.util.Iterator<java.lang.String>) strTokenizer42);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder6.append((java.lang.Object) strBuilder43);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder6.replaceFirst("", "04-1.0 true\n0.0\ntrue\nra");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(intStream17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(reader32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
    }

    @Test
    public void test2598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2598");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.replaceFirst(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        boolean boolean18 = strBuilder4.equalsIgnoreCase(strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader21 = strBuilder20.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append((java.lang.CharSequence) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader32 = strBuilder31.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder35.replaceFirst(strMatcher38, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder41.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.appendNewLine();
        boolean boolean49 = strBuilder35.equalsIgnoreCase(strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder30.append((java.lang.Object) strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder30.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strBuilder52.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder26.appendAll((java.util.Iterator<java.lang.String>) strTokenizer53);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder14.appendAll((java.util.Iterator<java.lang.String>) strTokenizer53);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader58 = strBuilder57.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.append((java.lang.CharSequence) strBuilder57);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder56.appendln(true);
        java.util.stream.IntStream intStream62 = strBuilder61.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder61.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.deleteFirst(' ');
        java.io.Reader reader68 = strBuilder65.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader71 = strBuilder70.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.append((java.lang.CharSequence) strBuilder70);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder69.appendln(true);
        java.util.stream.IntStream intStream75 = strBuilder74.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder74.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder65.append(strBuilder78);
        java.lang.StringBuffer stringBuffer80 = strBuilder78.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder55.appendln(stringBuffer80);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader84 = strBuilder83.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder82.append((java.lang.CharSequence) strBuilder83);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder82.appendln(true);
        java.util.stream.IntStream intStream88 = strBuilder82.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder81.appendFixedWidthPadRight((java.lang.Object) strBuilder82, 39, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder82.appendln((float) 39);
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(reader32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(reader58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(intStream62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(reader68);
        org.junit.Assert.assertNotNull(reader71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(intStream75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(stringBuffer80);
        org.junit.Assert.assertEquals(stringBuffer80.toString(), "true");
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(reader84);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(intStream88);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder93);
    }

    @Test
    public void test2599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2599");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        java.lang.Object obj6 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(obj6);
        boolean boolean9 = strBuilder7.startsWith("ass j");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.replaceFirst(strMatcher10, "\n1097########");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.append((java.lang.CharSequence) strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.appendln(true);
        java.util.stream.IntStream intStream19 = strBuilder18.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.setLength((int) (short) 100);
        int int25 = strBuilder21.lastIndexOf('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader28 = strBuilder27.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.append((java.lang.CharSequence) strBuilder27);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.append((long) (byte) 10);
        java.lang.String str35 = strBuilder31.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder31.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder31.minimizeCapacity();
        int int40 = strBuilder38.indexOf("true\n10100.0 \n");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader44 = strBuilder43.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.append((java.lang.CharSequence) strBuilder43);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.append((long) (byte) 10);
        java.lang.String str51 = strBuilder47.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader53 = strBuilder52.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder52.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.appendNewLine();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.appendln("");
        java.lang.String str68 = strBuilder64.rightString((int) '4');
        java.lang.Object[] objArray69 = new java.lang.Object[] { strBuilder56, wildcardClass61, 10.0d, (-1.0d), str68 };
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder47.appendAll(objArray69);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder41.appendAll(objArray69);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder21.appendAll(objArray69);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder7.appendWithSeparators(objArray69, "\n-1");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder7.appendSeparator(" \nclass java.lang.Object10.0-1.0\n97.0", "");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(intStream19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(reader28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "true\n10" + "'", str35, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(reader44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "true\n10" + "'", str51, "true\n10");
        org.junit.Assert.assertNotNull(reader53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "\n" + "'", str68, "\n");
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder77);
    }

    @Test
    public void test2600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2600");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        int int9 = strBuilder7.lastIndexOf('#');
        int int12 = strBuilder7.lastIndexOf('a', (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder7.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader16 = strBuilder15.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.minimizeCapacity();
        char[] charArray20 = strBuilder15.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.appendln(charArray20);
        java.lang.String str23 = strBuilder14.rightString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder14.insert((int) (short) 0, (float) 13);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceAll("###### true\n\n###", "true\n10############################### true\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader32 = strBuilder31.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder35.replaceFirst(strMatcher38, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder41.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.appendNewLine();
        boolean boolean49 = strBuilder35.equalsIgnoreCase(strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder30.append((java.lang.Object) strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder50.appendln((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.replaceFirst('#', 'a');
        java.util.stream.IntStream intStream58 = strBuilder57.codePoints();
        boolean boolean59 = strBuilder29.equals(strBuilder57);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.appendln("");
        boolean boolean64 = strBuilder62.startsWith("\n");
        int int66 = strBuilder62.indexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder62.appendln(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder62.insert(0, (float) (short) 0);
        boolean boolean72 = strBuilder57.equals(strBuilder71);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder71.insert(40, "97########");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 40");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "true\n10100.0 \n" + "'", str23, "true\n10100.0 \n");
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(reader32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(intStream58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test2601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2601");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln(stringBuffer4, (int) (short) -1, 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.append((-1L));
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.deleteFirst(strMatcher10);
        java.lang.StringBuffer stringBuffer12 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder7.append(stringBuffer12, 10, (int) (short) 10);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.replace(56, 40, "0.0\n");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder15);
    }

    @Test
    public void test2602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2602");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln(stringBuffer4, (int) (short) -1, 5);
        java.util.stream.IntStream intStream8 = strBuilder3.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        java.lang.StringBuffer stringBuffer15 = strBuilder9.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendln(stringBuffer15);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder3.appendln(1.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder3.appendln((double) 4);
        java.lang.String str21 = strBuilder20.toString();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(intStream8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(stringBuffer15);
        org.junit.Assert.assertEquals(stringBuffer15.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\ntrue\n\n1.0\n4.0\n" + "'", str21, "\ntrue\n\n1.0\n4.0\n");
    }

    @Test
    public void test2603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2603");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder8.reverse();
        int int10 = strBuilder8.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        int int12 = strBuilder8.indexOf(strMatcher11);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder8.appendNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteFirst(strMatcher14);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.insert((int) (byte) 100, '3');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 100");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
    }

    @Test
    public void test2604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2604");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((long) (byte) 10);
        java.lang.String str13 = strBuilder9.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendNewLine();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln("");
        java.lang.String str30 = strBuilder26.rightString((int) '4');
        java.lang.Object[] objArray31 = new java.lang.Object[] { strBuilder18, wildcardClass23, 10.0d, (-1.0d), str30 };
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder9.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder2.appendAll(objArray31);
        java.lang.String str35 = strBuilder2.substring((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder2.setCharAt(0, '4');
        int int41 = strBuilder38.indexOf("\n1.0\n", 38);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "true\n10" + "'", str13, "true\n10");
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\n" + "'", str30, "\n");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\n\nclass java.lang.Object10.0-1.0\n" + "'", str35, "\n\nclass java.lang.Object10.0-1.0\n");
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
    }

    @Test
    public void test2605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2605");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        int int9 = strBuilder7.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteAll("true\n10############################### true\n\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        int int16 = strBuilder14.lastIndexOf(strMatcher15);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.trim();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
    }

    @Test
    public void test2606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2606");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.append((float) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.insert(3, (java.lang.Object) 45);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader36 = strBuilder35.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.append((java.lang.CharSequence) strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder34.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader47 = strBuilder46.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder50.replaceFirst(strMatcher53, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader57 = strBuilder56.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder56.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.appendNewLine();
        boolean boolean64 = strBuilder50.equalsIgnoreCase(strBuilder60);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder45.append((java.lang.Object) strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader67 = strBuilder66.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder66.minimizeCapacity();
        char[] charArray71 = strBuilder66.toCharArray();
        char[] charArray72 = strBuilder50.getChars(charArray71);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder44.appendln(charArray71);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder44.replaceFirst("hi!", "hi!");
        boolean boolean77 = strBuilder30.equals((java.lang.Object) "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder30.append((long) 78);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(reader36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(reader47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(reader57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(reader67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[ ]");
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(strBuilder79);
    }

    @Test
    public void test2607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2607");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln(true);
        java.util.Iterator<java.lang.String> strItor23 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendWithSeparators(strItor23, "ass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendNull();
        int int32 = strBuilder29.lastIndexOf(' ', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder29.replaceAll(strMatcher33, "true\n10\nclass java.lang.Object10.0-1.0true\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader38 = strBuilder37.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.append((java.lang.CharSequence) strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendln(true);
        java.util.stream.IntStream intStream42 = strBuilder41.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.deleteAll("\n");
        java.lang.StringBuffer stringBuffer45 = strBuilder41.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder29.append(stringBuffer45);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder22.append(stringBuffer45);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder22.replaceAll("e\n10", "true\n100.0");
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder22.deleteAll(strMatcher51);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder22.deleteAll('t');
        java.lang.String str57 = strBuilder22.midString((int) '4', 55);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(reader38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(intStream42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(stringBuffer45);
        org.junit.Assert.assertEquals(stringBuffer45.toString(), "true");
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
    }

    @Test
    public void test2608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2608");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteCharAt(7);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
    }

    @Test
    public void test2609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2609");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder8.reverse();
        int int10 = strBuilder8.size();
        int int11 = strBuilder8.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder8.appendSeparator('\000');
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        int int16 = strBuilder8.indexOf(strMatcher14, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder8.appendln(' ');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
    }

    @Test
    public void test2610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2610");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendln("");
        java.lang.String str12 = strBuilder11.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.append((java.lang.CharSequence) strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.append((long) (byte) 10);
        java.lang.String str22 = strBuilder18.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader24 = strBuilder23.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.appendNewLine();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.appendln("");
        java.lang.String str39 = strBuilder35.rightString((int) '4');
        java.lang.Object[] objArray40 = new java.lang.Object[] { strBuilder27, wildcardClass32, 10.0d, (-1.0d), str39 };
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder18.appendAll(objArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder11.appendAll(objArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder8.appendAll(objArray40);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder8.deleteAll(strMatcher44);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "true\n10" + "'", str22, "true\n10");
        org.junit.Assert.assertNotNull(reader24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "\n" + "'", str39, "\n");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
    }

    @Test
    public void test2611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2611");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str4 = strBuilder0.rightString((int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.append((double) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.setNewLineText("\nfalse\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.insert((int) (byte) 1, (long) (short) 0);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\n" + "'", str4, "\n");
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
    }

    @Test
    public void test2612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2612");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str4 = strBuilder0.rightString((int) '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strBuilder0.asTokenizer();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        int int7 = strBuilder0.lastIndexOf(strMatcher6);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader10 = strBuilder9.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.append((java.lang.CharSequence) strBuilder9);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder8.appendln(true);
        java.util.stream.IntStream intStream14 = strBuilder13.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder13.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.append((java.lang.CharSequence) strBuilder19);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder34.replaceFirst(strMatcher37, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader41 = strBuilder40.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder40.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.appendNewLine();
        boolean boolean48 = strBuilder34.equalsIgnoreCase(strBuilder44);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder29.append((java.lang.Object) strBuilder34);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder29.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strBuilder51.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder25.appendAll((java.util.Iterator<java.lang.String>) strTokenizer52);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder17.appendln(strBuilder53);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader57 = strBuilder56.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.append((java.lang.CharSequence) strBuilder56);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder55.appendln(true);
        int int62 = strBuilder55.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder55.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader67 = strBuilder66.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.append((java.lang.CharSequence) strBuilder66);
        java.lang.String str69 = strBuilder68.getNewLineText();
        boolean boolean70 = strBuilder55.equals(strBuilder68);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder55.appendFixedWidthPadRight((int) (byte) 1, (int) '#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder17.append((java.lang.CharSequence) strBuilder74);
        char[] charArray76 = strBuilder17.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder0.append(charArray76, 4, 14);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder79.appendln(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder79.appendNull();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\n" + "'", str4, "\n");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(reader10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(intStream14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(reader41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(reader57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 4 + "'", int62 == 4);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(reader67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "truetrue\n104\ntrue\n0.0\n14444444444444444444444444444444444");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "truetrue\n104\ntrue\n0.0\n14444444444444444444444444444444444");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[t, r, u, e, t, r, u, e, \n, 1, 0, 4, \n, t, r, u, e, \n, 0, ., 0, \n, 1, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]");
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder82);
    }

    @Test
    public void test2613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2613");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.appendln("", (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendSeparator("true\n10100.01\ntrue\n10\nclass java.lang.Object10.0-1.0true\n\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.append(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.appendNull();
        java.util.stream.IntStream intStream35 = strBuilder31.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder31.deleteAll('a');
        java.util.stream.IntStream intStream38 = strBuilder31.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder31.append(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder31.appendln('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader45 = strBuilder44.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.append((java.lang.CharSequence) strBuilder44);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder43.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.append((long) (byte) 10);
        java.lang.String str52 = strBuilder48.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader54 = strBuilder53.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder53.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.appendNewLine();
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.appendln("");
        java.lang.String str69 = strBuilder65.rightString((int) '4');
        java.lang.Object[] objArray70 = new java.lang.Object[] { strBuilder57, wildcardClass62, 10.0d, (-1.0d), str69 };
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder48.appendAll(objArray70);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader74 = strBuilder73.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder72.append((java.lang.CharSequence) strBuilder73);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder72.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.append((long) (byte) 10);
        int int81 = strBuilder79.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder79.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder71.append((java.lang.CharSequence) strBuilder79);
        java.lang.StringBuffer stringBuffer86 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder85.append(stringBuffer86, (int) (short) 10, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader91 = strBuilder90.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder90.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder85.append(strBuilder93);
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder85.clear();
        char[] charArray96 = strBuilder95.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder97 = strBuilder42.append(charArray96);
        org.apache.commons.lang3.text.StrBuilder strBuilder98 = strBuilder26.append(charArray96);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(intStream35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(intStream38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(reader45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "true\n10" + "'", str52, "true\n10");
        org.junit.Assert.assertNotNull(reader54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "\n" + "'", str69, "\n");
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(reader74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(reader91);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertNotNull(charArray96);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray96), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray96), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray96), "[]");
        org.junit.Assert.assertNotNull(strBuilder97);
        org.junit.Assert.assertNotNull(strBuilder98);
    }

    @Test
    public void test2614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2614");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        int int9 = strBuilder7.lastIndexOf('#');
        int int12 = strBuilder7.lastIndexOf('a', (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder7.appendFixedWidthPadRight((int) '#', 45, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.reverse();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
    }

    @Test
    public void test2615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2615");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln("");
        java.lang.String str8 = strBuilder7.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((long) (byte) 10);
        java.lang.String str18 = strBuilder14.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendNewLine();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln("");
        java.lang.String str35 = strBuilder31.rightString((int) '4');
        java.lang.Object[] objArray36 = new java.lang.Object[] { strBuilder23, wildcardClass28, 10.0d, (-1.0d), str35 };
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder14.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder7.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder0.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.append((java.lang.CharSequence) strBuilder41);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.appendln(true);
        int int47 = strBuilder40.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder40.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder0.appendFixedWidthPadRight((java.lang.Object) strBuilder40, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader59 = strBuilder58.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.append((java.lang.CharSequence) strBuilder58);
        java.lang.StringBuffer stringBuffer61 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder60.appendln(stringBuffer61, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer65 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder60.appendln(stringBuffer65);
        boolean boolean67 = strBuilder56.equals((java.lang.Object) strBuilder60);
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder56.replaceAll(strMatcher68, "\n1097########");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder0.appendln((java.lang.Object) "\n1097########");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder0.append((float) 7);
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "true\n10" + "'", str18, "true\n10");
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\n" + "'", str35, "\n");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(reader59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
    }

    @Test
    public void test2616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2616");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(10);
        boolean boolean3 = strBuilder1.endsWith("true\n100.0");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test2617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2617");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln("");
        java.lang.String str25 = strBuilder21.rightString((int) '4');
        boolean boolean26 = strBuilder20.equals((java.lang.Object) str25);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder20.append((double) 210);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder20.replaceAll("falsefalse\n", "lang.Object10.0-1.0true\n");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\n" + "'", str25, "\n");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
    }

    @Test
    public void test2618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2618");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendNewLine();
        boolean boolean19 = strBuilder5.equalsIgnoreCase(strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder0.append((java.lang.Object) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder0.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strBuilder22.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendln(true);
        java.util.stream.IntStream intStream26 = strBuilder22.chars();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder22.replaceFirst(strMatcher27, "");
        int int31 = strBuilder22.lastIndexOf("e\n0.0\nass j");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(intStream26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
    }

    @Test
    public void test2619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2619");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder36.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.appendln("ass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder44.appendPadding(4, 'r');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.appendln(10.0d);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
    }

    @Test
    public void test2620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2620");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        java.lang.StringBuffer stringBuffer8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendln(stringBuffer8, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer12 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.appendln(stringBuffer12);
        boolean boolean14 = strBuilder3.equals((java.lang.Object) strBuilder7);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder3.replaceAll(' ', '3');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.append((java.lang.CharSequence) strBuilder19);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.appendln(true);
        java.util.stream.IntStream intStream24 = strBuilder23.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.appendln("");
        java.lang.String str30 = strBuilder29.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader33 = strBuilder32.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.append((java.lang.CharSequence) strBuilder32);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.append((long) (byte) 10);
        java.lang.String str40 = strBuilder36.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder41.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.appendNewLine();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.appendln("");
        java.lang.String str57 = strBuilder53.rightString((int) '4');
        java.lang.Object[] objArray58 = new java.lang.Object[] { strBuilder45, wildcardClass50, 10.0d, (-1.0d), str57 };
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder36.appendAll(objArray58);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder29.appendAll(objArray58);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder26.appendAll(objArray58);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.append(1);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader66 = strBuilder65.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.append((java.lang.CharSequence) strBuilder65);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder64.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.append((long) (byte) 10);
        java.lang.String str73 = strBuilder69.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder69.deleteAll("");
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = null;
        int int77 = strBuilder69.lastIndexOf(strMatcher76);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder61.appendln(strBuilder69);
        boolean boolean79 = strBuilder17.equals(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(intStream24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(reader33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "true\n10" + "'", str40, "true\n10");
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "\n" + "'", str57, "\n");
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(reader66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "true\n10" + "'", str73, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test2621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2621");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendSeparator("e\n0.0\nass j", 66);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder5);
    }

    @Test
    public void test2622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2622");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        char[] charArray6 = strBuilder5.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader8 = strBuilder7.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder5.append((java.lang.CharSequence) strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder5.deleteFirst('3');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.ensureCapacity(23);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[f, a, l, s, e]");
        org.junit.Assert.assertNotNull(reader8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
    }

    @Test
    public void test2623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2623");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendNewLine();
        boolean boolean19 = strBuilder5.equalsIgnoreCase(strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder0.append((java.lang.Object) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder0.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strBuilder22.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.appendln(14);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader30 = strBuilder29.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.append((java.lang.CharSequence) strBuilder29);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.append(false);
        java.lang.Object obj34 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln(obj34);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder35.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader39 = strBuilder38.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.append((java.lang.CharSequence) strBuilder38);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder37.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.append((long) (byte) 10);
        java.lang.String str46 = strBuilder42.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader48 = strBuilder47.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder47.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.appendNewLine();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.appendln("");
        java.lang.String str63 = strBuilder59.rightString((int) '4');
        java.lang.Object[] objArray64 = new java.lang.Object[] { strBuilder51, wildcardClass56, 10.0d, (-1.0d), str63 };
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder42.appendAll(objArray64);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader68 = strBuilder67.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.append((java.lang.CharSequence) strBuilder67);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder66.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder71.append((long) (byte) 10);
        int int75 = strBuilder73.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder73.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder65.append((java.lang.CharSequence) strBuilder73);
        java.lang.StringBuffer stringBuffer80 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder79.append(stringBuffer80, (int) (short) 10, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder84.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder84.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder83.appendFixedWidthPadRight((java.lang.Object) strBuilder84, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder35.append(strBuilder84);
        boolean boolean93 = strBuilder91.contains("e\n10");
        org.apache.commons.lang3.text.StrMatcher strMatcher94 = null;
        int int95 = strBuilder91.indexOf(strMatcher94);
        boolean boolean96 = strBuilder27.equalsIgnoreCase(strBuilder91);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(reader30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(reader39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "true\n10" + "'", str46, "true\n10");
        org.junit.Assert.assertNotNull(reader48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "\n" + "'", str63, "\n");
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(reader68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + (-1) + "'", int95 == (-1));
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test2624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2624");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strBuilder0.asTokenizer();
        int int8 = strBuilder0.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.append(false);
        char[] charArray15 = strBuilder14.toCharArray();
        char[] charArray16 = strBuilder0.getChars(charArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder0.appendPadding(17, '3');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 32 + "'", int8 == 32);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[f, a, l, s, e]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[f, a, l, s, e]");
        org.junit.Assert.assertNotNull(strBuilder19);
    }

    @Test
    public void test2625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2625");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.deleteFirst("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln("\ntrue\n10\n     ");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
    }

    @Test
    public void test2626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2626");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader9 = strBuilder8.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.append((java.lang.CharSequence) strBuilder8);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.append((long) (byte) 10);
        java.lang.String str16 = strBuilder12.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.deleteAll("");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        int int20 = strBuilder12.lastIndexOf(strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder4.appendln(strBuilder12);
        int int23 = strBuilder4.lastIndexOf("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder4.append((long) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.appendSeparator('4', 6);
        java.lang.StringBuffer stringBuffer29 = strBuilder25.toStringBuffer();
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "true\n10" + "'", str16, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(stringBuffer29);
        org.junit.Assert.assertEquals(stringBuffer29.toString(), "true\n10\n14");
    }

    @Test
    public void test2627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2627");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.deleteFirst(' ');
        int int14 = strBuilder11.indexOf("\n\nclass java.lang.Object10.0-1.0\n", (int) (short) -1);
        java.lang.String str16 = strBuilder11.rightString(24);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "true\n10" + "'", str16, "true\n10");
    }

    @Test
    public void test2628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2628");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        int int9 = strBuilder7.lastIndexOf('#');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.replace(40, 13, "ng.Object10.0-1.0\ntrue\n10\n ");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
    }

    @Test
    public void test2629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2629");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        java.lang.String str14 = strBuilder13.getNewLineText();
        boolean boolean15 = strBuilder0.equals(strBuilder13);
        java.lang.String str16 = strBuilder13.toString();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        int int19 = strBuilder13.indexOf(strMatcher17, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader22 = strBuilder21.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.append((java.lang.CharSequence) strBuilder21);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader29 = strBuilder28.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.append((java.lang.CharSequence) strBuilder28);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder27.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder20.appendFixedWidthPadLeft((java.lang.Object) strBuilder33, (int) (short) 1, ' ');
        boolean boolean37 = strBuilder13.equals((java.lang.Object) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder13.replaceAll('a', 'a');
        java.io.Reader reader41 = strBuilder13.asReader();
        java.lang.String str42 = strBuilder13.getNullText();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(reader22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(reader29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(reader41);
        org.junit.Assert.assertNull(str42);
    }

    @Test
    public void test2630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2630");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        java.lang.StringBuffer stringBuffer8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendln(stringBuffer8, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer12 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.appendln(stringBuffer12);
        boolean boolean14 = strBuilder3.equals((java.lang.Object) strBuilder7);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder3.replaceAll(strMatcher15, "\n1097########");
        java.util.stream.IntStream intStream18 = strBuilder3.codePoints();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strBuilder3.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder3.setNewLineText("true\n10\nclass java.lang.Object10.0-1.0true\n");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(intStream18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder21);
    }

    @Test
    public void test2631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2631");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.ensureCapacity(100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.io.Writer writer11 = strBuilder10.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.append(strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.append(100.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.append((float) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader19 = strBuilder18.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.append((java.lang.CharSequence) strBuilder18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.appendln(true);
        java.util.stream.IntStream intStream23 = strBuilder22.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.appendln((float) 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder22.appendln((-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.insert(13, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder16.append(strBuilder32);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder16.append(12);
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceAll(strMatcher36, "\n1.0\ntrue\n10############################### true\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder35.deleteAll('e');
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(reader19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(intStream23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
    }

    @Test
    public void test2632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2632");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.appendln(true);
        java.util.stream.IntStream intStream27 = strBuilder26.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder2.append(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder2.setCharAt((int) (short) 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst("false", "e\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.insert(0, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.append('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.appendln("");
        boolean boolean47 = strBuilder45.startsWith("\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.replaceAll(strMatcher48, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.setNewLineText("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader55 = strBuilder54.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.append((java.lang.CharSequence) strBuilder54);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder53.appendln(true);
        java.util.stream.IntStream intStream59 = strBuilder53.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder53.appendFixedWidthPadRight((int) '4', (int) (short) 100, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader66 = strBuilder65.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.append((java.lang.CharSequence) strBuilder65);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder64.appendln(true);
        int int71 = strBuilder64.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder64.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader76 = strBuilder75.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.append((java.lang.CharSequence) strBuilder75);
        java.lang.String str78 = strBuilder77.getNewLineText();
        boolean boolean79 = strBuilder64.equals(strBuilder77);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder63.append(strBuilder77);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder77.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder82.appendln("");
        boolean boolean86 = strBuilder84.startsWith("\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder84.replaceAll(strMatcher87, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder89.setNewLineText("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder77.appendln(strBuilder89);
        boolean boolean93 = strBuilder52.equals((java.lang.Object) strBuilder77);
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder52.append((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder40.appendln(strBuilder52);
        int int99 = strBuilder96.indexOf('t', (int) (short) -1);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(intStream27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(reader55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(intStream59);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(reader66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 4 + "'", int71 == 4);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(reader76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertNotNull(strBuilder96);
        org.junit.Assert.assertTrue("'" + int99 + "' != '" + 2 + "'", int99 == 2);
    }

    @Test
    public void test2633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2633");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append((java.lang.CharSequence) strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.append((long) (byte) 10);
        int int21 = strBuilder19.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.append((long) 50);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.appendln('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder19.insert((int) (short) 1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder11.append((java.lang.CharSequence) strBuilder19);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.appendNull();
        int int36 = strBuilder33.lastIndexOf(' ', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder33.replaceAll(strMatcher37, "true\n10\nclass java.lang.Object10.0-1.0true\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.append((java.lang.CharSequence) strBuilder41);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.appendln(true);
        java.util.stream.IntStream intStream46 = strBuilder45.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.deleteAll("\n");
        java.lang.StringBuffer stringBuffer49 = strBuilder45.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder33.append(stringBuffer49);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder29.append((java.lang.CharSequence) strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.appendSeparator("true\n10100.0 \n");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.replaceAll("true\n0.0\n\n", "4true\n10############################### true\n\n");
        boolean boolean58 = strBuilder56.startsWith("rue\n");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(intStream46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(stringBuffer49);
        org.junit.Assert.assertEquals(stringBuffer49.toString(), "true");
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test2634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2634");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append((java.lang.CharSequence) strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.append((long) (byte) 10);
        int int21 = strBuilder19.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.append((long) 50);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.appendln('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder19.insert((int) (short) 1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder11.append((java.lang.CharSequence) strBuilder19);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.appendln((java.lang.Object) 1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader37 = strBuilder36.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.append((java.lang.CharSequence) strBuilder36);
        java.io.Writer writer39 = strBuilder36.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.appendSeparator("hi!", "\n1.0\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder36.replaceAll(strMatcher43, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader48 = strBuilder47.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.append((java.lang.CharSequence) strBuilder47);
        java.lang.StringBuffer stringBuffer50 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder46.appendln(stringBuffer50, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader56 = strBuilder55.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder55.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder59.replaceFirst(strMatcher62, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader66 = strBuilder65.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder65.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.appendNewLine();
        boolean boolean73 = strBuilder59.equalsIgnoreCase(strBuilder69);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder54.append((java.lang.Object) strBuilder59);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader76 = strBuilder75.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder75.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder75.minimizeCapacity();
        char[] charArray80 = strBuilder75.toCharArray();
        char[] charArray81 = strBuilder59.getChars(charArray80);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder46.append(charArray81);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder45.appendln(charArray81);
        char[] charArray84 = strBuilder34.getChars(charArray81);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder11.append(charArray81);
        java.lang.String str88 = strBuilder11.substring(0, 39);
        int int89 = strBuilder11.capacity();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(reader37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(writer39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(reader48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(reader56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(reader66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(reader76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[ ]");
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray84), "\n1.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray84), "\n1.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray84), "[\n, 1, ., 0, \n]");
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "true\n10tfalserue\n1050a\n " + "'", str88, "true\n10tfalserue\n1050a\n ");
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 32 + "'", int89 == 32);
    }

    @Test
    public void test2635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2635");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendSeparator("true\n10", (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader9 = strBuilder8.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.append((java.lang.CharSequence) strBuilder8);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.appendln(true);
        java.lang.StringBuffer stringBuffer13 = strBuilder7.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder7.setNullText("ass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder0.appendln(strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendPadding(32, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.insert((int) '\000', false);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.appendln("");
        java.lang.String str27 = strBuilder23.rightString((int) '4');
        java.util.stream.IntStream intStream28 = strBuilder23.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.deleteAll("\n\nclass java.lang.Object10.0-1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader33 = strBuilder32.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.append((java.lang.CharSequence) strBuilder32);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.appendln(true);
        java.util.stream.IntStream intStream37 = strBuilder36.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.appendln("");
        java.lang.String str43 = strBuilder42.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader46 = strBuilder45.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.append((java.lang.CharSequence) strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder44.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.append((long) (byte) 10);
        java.lang.String str53 = strBuilder49.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader55 = strBuilder54.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder54.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.appendNewLine();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.appendln("");
        java.lang.String str70 = strBuilder66.rightString((int) '4');
        java.lang.Object[] objArray71 = new java.lang.Object[] { strBuilder58, wildcardClass63, 10.0d, (-1.0d), str70 };
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder49.appendAll(objArray71);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder42.appendAll(objArray71);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder39.appendAll(objArray71);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder30.appendAll(objArray71);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder16.appendWithSeparators(objArray71, "\ntrue\n10\n     ");
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(stringBuffer13);
        org.junit.Assert.assertEquals(stringBuffer13.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "\n" + "'", str27, "\n");
        org.junit.Assert.assertNotNull(intStream28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(reader33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(intStream37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(reader46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "true\n10" + "'", str53, "true\n10");
        org.junit.Assert.assertNotNull(reader55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "\n" + "'", str70, "\n");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
    }

    @Test
    public void test2636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2636");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str4 = strBuilder0.rightString((int) '4');
        java.lang.String str6 = strBuilder0.leftString((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.appendln("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder0.appendPadding(7, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteAll('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.appendSeparator("###3##########################t100.0");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\n" + "'", str4, "\n");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n" + "'", str6, "\n");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
    }

    @Test
    public void test2637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2637");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.appendSeparator("true\n10100.0 \n");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
    }

    @Test
    public void test2638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2638");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.deleteFirst("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.appendln("");
        java.lang.String str9 = strBuilder8.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.append((long) (byte) 10);
        java.lang.String str19 = strBuilder15.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader21 = strBuilder20.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.appendNewLine();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.appendln("");
        java.lang.String str36 = strBuilder32.rightString((int) '4');
        java.lang.Object[] objArray37 = new java.lang.Object[] { strBuilder24, wildcardClass29, 10.0d, (-1.0d), str36 };
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder15.appendAll(objArray37);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder8.appendAll(objArray37);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.appendln("true\n10");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder39.replace(strMatcher42, "", (int) (byte) 1, (int) ' ', 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader50 = strBuilder49.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.append((java.lang.CharSequence) strBuilder49);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder48.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.append((long) (byte) 10);
        java.lang.String str57 = strBuilder53.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder53.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader62 = strBuilder61.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.append((java.lang.CharSequence) strBuilder61);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder60.appendln(true);
        int int67 = strBuilder60.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder60.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader72 = strBuilder71.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.append((java.lang.CharSequence) strBuilder71);
        java.lang.String str74 = strBuilder73.getNewLineText();
        boolean boolean75 = strBuilder60.equals(strBuilder73);
        java.lang.String str76 = strBuilder73.toString();
        java.lang.StringBuffer stringBuffer77 = strBuilder73.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder53.appendln(stringBuffer77);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder39.append(stringBuffer77);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder5.appendln(stringBuffer77);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder80.appendln((long) 36);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "true\n10" + "'", str19, "true\n10");
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "\n" + "'", str36, "\n");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(reader50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "true\n10" + "'", str57, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(reader62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 4 + "'", int67 == 4);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(reader72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
        org.junit.Assert.assertNotNull(stringBuffer77);
        org.junit.Assert.assertEquals(stringBuffer77.toString(), "");
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
    }

    @Test
    public void test2639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2639");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder5.replace(0, 10, "true\n10############################### true\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendPadding(3, '#');
        java.lang.String str20 = strBuilder18.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder18.append((long) 200);
        char[] charArray25 = strBuilder18.toCharArray(8, 53);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "t" + "'", str20, "t");
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "############################## true\n\n###200");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "############################## true\n\n###200");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[#, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #,  , t, r, u, e, \n, \n, #, #, #, 2, 0, 0]");
    }

    @Test
    public void test2640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2640");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        java.lang.Object obj6 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(obj6);
        boolean boolean9 = strBuilder7.startsWith("ass j");
        boolean boolean11 = strBuilder7.endsWith("###### true\n\n###");
        int int13 = strBuilder7.indexOf("rue\n10############################### true\n\n\n1.0\n\n");
        boolean boolean15 = strBuilder7.contains("rue\n10############################### true\n\n\n1.0\n\n");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test2641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2641");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln("");
        java.lang.String str8 = strBuilder7.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((long) (byte) 10);
        java.lang.String str18 = strBuilder14.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendNewLine();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln("");
        java.lang.String str35 = strBuilder31.rightString((int) '4');
        java.lang.Object[] objArray36 = new java.lang.Object[] { strBuilder23, wildcardClass28, 10.0d, (-1.0d), str35 };
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder14.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder7.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder0.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.append((java.lang.CharSequence) strBuilder41);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.appendln(true);
        int int47 = strBuilder40.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder40.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder0.appendFixedWidthPadRight((java.lang.Object) strBuilder40, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder40.deleteFirst("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder40.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder40.setLength(24);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.ensureCapacity((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder58.setNullText("true\n10ass j\nrrrr");
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "true\n10" + "'", str18, "true\n10");
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\n" + "'", str35, "\n");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
    }

    @Test
    public void test2642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2642");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        int int6 = strBuilder5.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendln("\n\nclass java.lang.Object10.0-1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.append(10);
        int int12 = strBuilder8.lastIndexOf('\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder8.deleteFirst("\n ");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteAll("\n1.0 \n");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 5 + "'", int6 == 5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
    }

    @Test
    public void test2643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2643");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendSeparator(' ', 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder7.replace(strMatcher11, "e\n10", (int) (byte) 0, 100, 210);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((long) (short) 1);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
    }

    @Test
    public void test2644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2644");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        boolean boolean11 = strBuilder5.contains('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append((java.lang.CharSequence) strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader21 = strBuilder20.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append((java.lang.CharSequence) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder12.appendFixedWidthPadLeft((java.lang.Object) strBuilder25, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder5.appendFixedWidthPadLeft((java.lang.Object) strBuilder12, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader34 = strBuilder33.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append((java.lang.CharSequence) strBuilder33);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.appendln(true);
        java.lang.StringBuffer stringBuffer38 = strBuilder32.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder5.appendln(stringBuffer38);
        java.lang.String str41 = strBuilder39.leftString((int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln("");
        java.lang.String str46 = strBuilder42.rightString((int) '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strBuilder42.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder39.appendAll((java.util.Iterator<java.lang.String>) strTokenizer47);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder39.insert(32, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.append((long) 56);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(reader34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(stringBuffer38);
        org.junit.Assert.assertEquals(stringBuffer38.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "true\n10############################### true\n\n" + "'", str41, "true\n10############################### true\n\n");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "\n" + "'", str46, "\n");
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
    }

    @Test
    public void test2645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2645");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder5.append((long) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.appendln((long) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader19 = strBuilder18.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.append((java.lang.CharSequence) strBuilder18);
        java.lang.StringBuffer stringBuffer21 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.appendln(stringBuffer21, (int) (short) -1, 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder20.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder16.appendln((java.lang.Object) strBuilder20);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteFirst(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        java.lang.StringBuffer stringBuffer33 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder29.appendln(stringBuffer33, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder36.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder37.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder37.insert((int) (short) 0, (double) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.appendSeparator("ass j", (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader47 = strBuilder46.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.append((java.lang.CharSequence) strBuilder46);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.append((long) (byte) 10);
        java.lang.String str54 = strBuilder50.rightString(10);
        boolean boolean56 = strBuilder50.contains('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader59 = strBuilder58.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.append((java.lang.CharSequence) strBuilder58);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder57.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader66 = strBuilder65.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.append((java.lang.CharSequence) strBuilder65);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder64.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder57.appendFixedWidthPadLeft((java.lang.Object) strBuilder70, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder50.appendFixedWidthPadLeft((java.lang.Object) strBuilder57, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader79 = strBuilder78.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder77.append((java.lang.CharSequence) strBuilder78);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder77.appendln(true);
        java.lang.StringBuffer stringBuffer83 = strBuilder77.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder50.appendln(stringBuffer83);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder41.appendln(stringBuffer83);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder28.append(stringBuffer83);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder86.appendln((double) (-1L));
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(reader19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(reader47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "true\n10" + "'", str54, "true\n10");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(reader59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(reader66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(reader79);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(stringBuffer83);
        org.junit.Assert.assertEquals(stringBuffer83.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder88);
    }

    @Test
    public void test2646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2646");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((long) (byte) 10);
        java.lang.String str13 = strBuilder9.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendNewLine();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln("");
        java.lang.String str30 = strBuilder26.rightString((int) '4');
        java.lang.Object[] objArray31 = new java.lang.Object[] { strBuilder18, wildcardClass23, 10.0d, (-1.0d), str30 };
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder9.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder32.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.appendPadding((int) (byte) 1, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader39 = strBuilder38.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder38.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.replaceFirst(strMatcher45, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader49 = strBuilder48.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder48.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.appendNewLine();
        boolean boolean56 = strBuilder42.equalsIgnoreCase(strBuilder52);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder37.append((java.lang.Object) strBuilder42);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder37.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strBuilder59.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader65 = strBuilder64.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder64.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder68.replaceFirst(strMatcher71, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader75 = strBuilder74.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder74.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder78.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder78.appendNewLine();
        boolean boolean82 = strBuilder68.equalsIgnoreCase(strBuilder78);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder63.append((java.lang.Object) strBuilder68);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader85 = strBuilder84.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder84.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder84.minimizeCapacity();
        char[] charArray89 = strBuilder84.toCharArray();
        char[] charArray90 = strBuilder68.getChars(charArray89);
        char[] charArray91 = strBuilder59.getChars(charArray89);
        char[] charArray92 = strBuilder36.getChars(charArray89);
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder0.append(charArray92);
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder0.appendSeparator("4-1.0 true", (int) (byte) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher97 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder99 = strBuilder96.replaceFirst(strMatcher97, "true\n10100.01\ntrue\n10\nclass java.lang.Object10.0-1.0true\n\n\n");
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "true\n10" + "'", str13, "true\n10");
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\n" + "'", str30, "\n");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(reader39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(reader49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(reader65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(reader75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(reader85);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(charArray89);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray89), "#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray89), "#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray89), "[#]");
        org.junit.Assert.assertNotNull(charArray90);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray90), "#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray90), "#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray90), "[#]");
        org.junit.Assert.assertNotNull(charArray91);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray91), "4true\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray91), "4true\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray91), "[4, t, r, u, e, \n]");
        org.junit.Assert.assertNotNull(charArray92);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray92), "#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray92), "#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray92), "[#]");
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strBuilder96);
        org.junit.Assert.assertNotNull(strBuilder99);
    }

    @Test
    public void test2647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2647");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder7.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.replaceAll("35\n", ".0-1.0\n");
        int int13 = strBuilder7.capacity();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 32 + "'", int13 == 32);
    }

    @Test
    public void test2648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2648");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        java.lang.String str14 = strBuilder13.getNewLineText();
        boolean boolean15 = strBuilder0.equals(strBuilder13);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder13.deleteAll(strMatcher16);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteAll(strMatcher18);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
    }

    @Test
    public void test2649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2649");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader5 = strBuilder4.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder4.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder8.replaceFirst(strMatcher11, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendNewLine();
        boolean boolean22 = strBuilder8.equalsIgnoreCase(strBuilder18);
        boolean boolean23 = strBuilder0.equals(strBuilder18);
        java.lang.String str24 = strBuilder18.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader27 = strBuilder26.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.append((java.lang.CharSequence) strBuilder26);
        java.lang.StringBuffer stringBuffer29 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder28.appendln(stringBuffer29, (int) (short) -1, 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.appendNull();
        java.lang.String str34 = strBuilder28.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder18.append((java.lang.Object) str34);
        int int38 = strBuilder35.lastIndexOf('r', 100);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(reader5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\n" + "'", str24, "\n");
        org.junit.Assert.assertNotNull(reader27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "\n" + "'", str34, "\n");
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
    }

    @Test
    public void test2650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2650");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        int int9 = strBuilder7.lastIndexOf('#');
        int int12 = strBuilder7.lastIndexOf('a', (int) ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        int int14 = strBuilder7.lastIndexOf(strMatcher13);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader16 = strBuilder15.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln("");
        java.lang.String str23 = strBuilder22.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader26 = strBuilder25.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.append((java.lang.CharSequence) strBuilder25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.append((long) (byte) 10);
        java.lang.String str33 = strBuilder29.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader35 = strBuilder34.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.appendNewLine();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.appendln("");
        java.lang.String str50 = strBuilder46.rightString((int) '4');
        java.lang.Object[] objArray51 = new java.lang.Object[] { strBuilder38, wildcardClass43, 10.0d, (-1.0d), str50 };
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder29.appendAll(objArray51);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder22.appendAll(objArray51);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder15.appendAll(objArray51);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder7.appendWithSeparators(objArray51, ".0-1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.setLength((int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader61 = strBuilder60.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.append((java.lang.CharSequence) strBuilder60);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder59.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.append((long) (byte) 10);
        int int68 = strBuilder66.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder66.appendSeparator("", 5);
        int int73 = strBuilder71.lastIndexOf("ass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder71.appendSeparator('\000', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder71.append(0.0f);
        boolean boolean80 = strBuilder78.endsWith("tr");
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder58.append(strBuilder78, 0, (int) (short) 1);
        int int84 = strBuilder78.length();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(reader26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "true\n10" + "'", str33, "true\n10");
        org.junit.Assert.assertNotNull(reader35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "\n" + "'", str50, "\n");
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(reader61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 11 + "'", int84 == 11);
    }

    @Test
    public void test2651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2651");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.append((float) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        int int33 = strBuilder28.indexOf(strMatcher31, 52);
        java.lang.String str34 = strBuilder28.getNewLineText();
        char[] charArray35 = strBuilder28.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder28.replaceAll('g', '\n');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.insert(39, 1L);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "true\n10\nclass java.lang.Object10.0-1.0\n0.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "true\n10\nclass java.lang.Object10.0-1.0\n0.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[t, r, u, e, \n, 1, 0, \n, c, l, a, s, s,  , j, a, v, a, ., l, a, n, g, ., O, b, j, e, c, t, 1, 0, ., 0, -, 1, ., 0, \n, 0, ., 0]");
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
    }

    @Test
    public void test2652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2652");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder36.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.insert(5, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.appendSeparator("true\n10", (int) (byte) 100);
        int int52 = strBuilder50.lastIndexOf("true\n10tfalserue\n1050a\n ");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
    }

    @Test
    public void test2653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2653");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst(' ');
        java.io.Reader reader12 = strBuilder9.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.append((java.lang.CharSequence) strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.appendln(true);
        java.util.stream.IntStream intStream19 = strBuilder18.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder9.append(strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder9.appendNull();
        int int27 = strBuilder9.lastIndexOf("true\n0.0\ntrue\nra", 40);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(intStream19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
    }

    @Test
    public void test2654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2654");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        boolean boolean11 = strBuilder5.contains('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append((java.lang.CharSequence) strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader21 = strBuilder20.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append((java.lang.CharSequence) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder12.appendFixedWidthPadLeft((java.lang.Object) strBuilder25, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder5.appendFixedWidthPadLeft((java.lang.Object) strBuilder12, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader34 = strBuilder33.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append((java.lang.CharSequence) strBuilder33);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.appendln(true);
        java.lang.StringBuffer stringBuffer38 = strBuilder32.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder5.appendln(stringBuffer38);
        java.lang.String str41 = strBuilder39.leftString((int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder39.insert(0, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder39.append("ass j");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(reader34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(stringBuffer38);
        org.junit.Assert.assertEquals(stringBuffer38.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "true\n10############################### true\n\n" + "'", str41, "true\n10############################### true\n\n");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
    }

    @Test
    public void test2655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2655");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.appendFixedWidthPadRight((int) '4', (int) (short) 100, '#');
        java.lang.StringBuffer stringBuffer11 = strBuilder0.toStringBuffer();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(stringBuffer11);
        org.junit.Assert.assertEquals(stringBuffer11.toString(), "true\n52##################################################################################################");
    }

    @Test
    public void test2656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2656");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        char[] charArray6 = strBuilder5.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader8 = strBuilder7.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder5.append((java.lang.CharSequence) strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendSeparator(' ', '\n');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader21 = strBuilder20.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.appendPadding(32, 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.deleteAll(strMatcher28);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader32 = strBuilder31.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.append((java.lang.CharSequence) strBuilder31);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder30.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.append((long) (byte) 10);
        java.lang.String str39 = strBuilder35.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader41 = strBuilder40.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder40.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.appendNewLine();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.appendln("");
        java.lang.String str56 = strBuilder52.rightString((int) '4');
        java.lang.Object[] objArray57 = new java.lang.Object[] { strBuilder44, wildcardClass49, 10.0d, (-1.0d), str56 };
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder35.appendAll(objArray57);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader61 = strBuilder60.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.append((java.lang.CharSequence) strBuilder60);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder59.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.append((long) (byte) 10);
        int int68 = strBuilder66.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder66.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder58.append((java.lang.CharSequence) strBuilder66);
        java.lang.StringBuffer stringBuffer73 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder72.append(stringBuffer73, (int) (short) 10, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader78 = strBuilder77.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder77.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder72.append(strBuilder80);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder72.clear();
        char[] charArray83 = strBuilder82.toCharArray();
        char[] charArray84 = strBuilder29.getChars(charArray83);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder15.insert(13, charArray83);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 13");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[f, a, l, s, e]");
        org.junit.Assert.assertNotNull(reader8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(reader32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "true\n10" + "'", str39, "true\n10");
        org.junit.Assert.assertNotNull(reader41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "\n" + "'", str56, "\n");
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(reader61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(reader78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[]");
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray84), " aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray84), " aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray84), "[ , a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a]");
    }

    @Test
    public void test2657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2657");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((long) (byte) 10);
        java.lang.String str13 = strBuilder9.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendNewLine();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln("");
        java.lang.String str30 = strBuilder26.rightString((int) '4');
        java.lang.Object[] objArray31 = new java.lang.Object[] { strBuilder18, wildcardClass23, 10.0d, (-1.0d), str30 };
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder9.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder2.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder33.append((float) (short) 10);
        char[] charArray40 = strBuilder37.toCharArray(0, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder37.deleteAll('a');
        boolean boolean44 = strBuilder42.endsWith("4true\n1004");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.replaceFirst('3', 'a');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder47.append("true\n", 26, 9);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "true\n10" + "'", str13, "true\n10");
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\n" + "'", str30, "\n");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[\n]");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strBuilder47);
    }

    @Test
    public void test2658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2658");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        boolean boolean11 = strBuilder5.contains('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append((java.lang.CharSequence) strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader21 = strBuilder20.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append((java.lang.CharSequence) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder12.appendFixedWidthPadLeft((java.lang.Object) strBuilder25, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder5.appendFixedWidthPadLeft((java.lang.Object) strBuilder12, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader34 = strBuilder33.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append((java.lang.CharSequence) strBuilder33);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.appendln(true);
        java.lang.StringBuffer stringBuffer38 = strBuilder32.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder5.appendln(stringBuffer38);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.append("\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader43 = strBuilder42.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder39.appendln((java.lang.Object) strBuilder42);
        boolean boolean46 = strBuilder39.startsWith("\ntrue\n\n100.04-1.0 true");
        int int49 = strBuilder39.indexOf('a', (int) 'e');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(reader34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(stringBuffer38);
        org.junit.Assert.assertEquals(stringBuffer38.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(reader43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
    }

    @Test
    public void test2659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2659");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((long) (byte) 10);
        int int13 = strBuilder11.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.appendFixedWidthPadLeft((int) ' ', (int) (short) 100, 'a');
        boolean boolean18 = strBuilder3.equals(strBuilder17);
        boolean boolean20 = strBuilder17.startsWith("\n\n100 04-1.0 truea");
        boolean boolean22 = strBuilder17.startsWith("444444444");
        java.lang.String str24 = strBuilder17.rightString((int) (short) 0);
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
    }

    @Test
    public void test2660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2660");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendSeparator(' ', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.appendPadding(34, '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder10.appendln("true\n10\nclass java.lang.Object10.0-1.0\ntrue\n10", 0, 1);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder17);
    }

    @Test
    public void test2661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2661");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.appendln(true);
        java.util.stream.IntStream intStream27 = strBuilder26.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder2.append(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder2.setCharAt((int) (short) 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder2.append(0);
        int int38 = strBuilder36.lastIndexOf('r');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.append((long) 22);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader43 = strBuilder42.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append((java.lang.CharSequence) strBuilder42);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.append((long) (byte) 10);
        java.lang.String str50 = strBuilder46.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader52 = strBuilder51.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder51.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.appendNewLine();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.appendln("");
        java.lang.String str67 = strBuilder63.rightString((int) '4');
        java.lang.Object[] objArray68 = new java.lang.Object[] { strBuilder55, wildcardClass60, 10.0d, (-1.0d), str67 };
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder46.appendAll(objArray68);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader72 = strBuilder71.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.append((java.lang.CharSequence) strBuilder71);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder70.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder75.append((long) (byte) 10);
        int int79 = strBuilder77.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder77.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder69.append((java.lang.CharSequence) strBuilder77);
        java.lang.StringBuffer stringBuffer84 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder83.append(stringBuffer84, (int) (short) 10, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder87.appendFixedWidthPadRight((int) (short) 1, (int) (byte) -1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder91.appendln((double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder40.appendFixedWidthPadRight((java.lang.Object) strBuilder91, 7, 'a');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(intStream27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 19 + "'", int38 == 19);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(reader43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "true\n10" + "'", str50, "true\n10");
        org.junit.Assert.assertNotNull(reader52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "\n" + "'", str67, "\n");
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(reader72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strBuilder96);
    }

    @Test
    public void test2662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2662");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln("");
        java.lang.String str8 = strBuilder7.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((long) (byte) 10);
        java.lang.String str18 = strBuilder14.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendNewLine();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln("");
        java.lang.String str35 = strBuilder31.rightString((int) '4');
        java.lang.Object[] objArray36 = new java.lang.Object[] { strBuilder23, wildcardClass28, 10.0d, (-1.0d), str35 };
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder14.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder7.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder0.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.append((java.lang.CharSequence) strBuilder41);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.appendln(true);
        int int47 = strBuilder40.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder40.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder0.appendFixedWidthPadRight((java.lang.Object) strBuilder40, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder40.deleteFirst("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder40.append((double) 100.0f);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder40.deleteAll(strMatcher57);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder40.replaceFirst("4-1.0 true", "v.lang.Object10.0-1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder40.appendSeparator('r');
        java.util.stream.IntStream intStream64 = strBuilder63.chars();
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "true\n10" + "'", str18, "true\n10");
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\n" + "'", str35, "\n");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(intStream64);
    }

    @Test
    public void test2663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2663");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.appendNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        int int6 = strBuilder0.indexOf(strMatcher4, (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.append((long) '\n');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        int int16 = strBuilder9.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder9.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader24 = strBuilder23.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.append((java.lang.CharSequence) strBuilder23);
        java.lang.StringBuffer stringBuffer26 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder22.appendln(stringBuffer26, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder22.deleteFirst(strMatcher30);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder22.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader36 = strBuilder35.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.append((java.lang.CharSequence) strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder34.appendln(true);
        java.util.stream.IntStream intStream40 = strBuilder39.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder39.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.appendln((java.lang.Object) 1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder43.append(strBuilder46);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader52 = strBuilder51.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.append((java.lang.CharSequence) strBuilder51);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder50.appendln(true);
        java.util.stream.IntStream intStream56 = strBuilder55.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.appendln("");
        java.lang.String str62 = strBuilder61.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader65 = strBuilder64.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.append((java.lang.CharSequence) strBuilder64);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder63.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.append((long) (byte) 10);
        java.lang.String str72 = strBuilder68.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader74 = strBuilder73.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder73.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder73.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder77.appendNewLine();
        java.lang.Object obj81 = new java.lang.Object();
        java.lang.Class<?> wildcardClass82 = obj81.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder85.appendln("");
        java.lang.String str89 = strBuilder85.rightString((int) '4');
        java.lang.Object[] objArray90 = new java.lang.Object[] { strBuilder77, wildcardClass82, 10.0d, (-1.0d), str89 };
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder68.appendAll(objArray90);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder61.appendAll(objArray90);
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder58.appendAll(objArray90);
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder49.appendAll(objArray90);
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder33.appendWithSeparators(objArray90, "\n\nclass java.lang.Object10.0-1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder97 = strBuilder18.appendAll(objArray90);
        org.apache.commons.lang3.text.StrBuilder strBuilder98 = strBuilder0.appendAll(objArray90);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 4 + "'", int16 == 4);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(reader24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(reader36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(intStream40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(reader52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(intStream56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(reader65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "true\n10" + "'", str72, "true\n10");
        org.junit.Assert.assertNotNull(reader74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "\n" + "'", str89, "\n");
        org.junit.Assert.assertNotNull(objArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray90), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray90), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(strBuilder96);
        org.junit.Assert.assertNotNull(strBuilder97);
        org.junit.Assert.assertNotNull(strBuilder98);
    }

    @Test
    public void test2664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2664");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        int int4 = strBuilder1.indexOf(strMatcher2, 1);
        java.io.Reader reader5 = strBuilder1.asReader();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(reader5);
    }

    @Test
    public void test2665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2665");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        boolean boolean11 = strBuilder5.contains('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append((java.lang.CharSequence) strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader21 = strBuilder20.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append((java.lang.CharSequence) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder12.appendFixedWidthPadLeft((java.lang.Object) strBuilder25, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder5.appendFixedWidthPadLeft((java.lang.Object) strBuilder12, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader34 = strBuilder33.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append((java.lang.CharSequence) strBuilder33);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.appendln(true);
        java.lang.StringBuffer stringBuffer38 = strBuilder32.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder5.appendln(stringBuffer38);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.replaceFirst("true\n10############################### true\n\n", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder42.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.deleteFirst('\n');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(reader34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(stringBuffer38);
        org.junit.Assert.assertEquals(stringBuffer38.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
    }

    @Test
    public void test2666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2666");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append((java.lang.CharSequence) strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.append((long) (byte) 10);
        int int21 = strBuilder19.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.append((long) 50);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.appendln('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder19.insert((int) (short) 1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder11.append((java.lang.CharSequence) strBuilder19);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.appendln(strBuilder30, (int) (byte) -1, 39);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader40 = strBuilder39.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.append((java.lang.CharSequence) strBuilder39);
        java.lang.StringBuffer stringBuffer42 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder41.appendln(stringBuffer42, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer46 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder41.appendln(stringBuffer46);
        boolean boolean48 = strBuilder37.equals((java.lang.Object) strBuilder41);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader51 = strBuilder50.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.append((java.lang.CharSequence) strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder49.appendln(true);
        java.util.stream.IntStream intStream55 = strBuilder49.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder49.appendFixedWidthPadRight((int) '4', (int) (short) 100, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader62 = strBuilder61.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.append((java.lang.CharSequence) strBuilder61);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder60.appendln(true);
        int int67 = strBuilder60.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder60.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader72 = strBuilder71.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.append((java.lang.CharSequence) strBuilder71);
        java.lang.String str74 = strBuilder73.getNewLineText();
        boolean boolean75 = strBuilder60.equals(strBuilder73);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder59.append(strBuilder73);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder73.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder78.appendln("");
        boolean boolean82 = strBuilder80.startsWith("\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder80.replaceAll(strMatcher83, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder85.setNewLineText("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder73.appendln(strBuilder85);
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder88.deleteFirst(strMatcher89);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder41.appendln(strBuilder88);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder33.appendln((java.lang.Object) strBuilder91);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder33.insert(100, (double) '\n');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 100");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(reader40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(reader51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(intStream55);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(reader62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 4 + "'", int67 == 4);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(reader72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder92);
    }

    @Test
    public void test2667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2667");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendNewLine();
        boolean boolean19 = strBuilder5.equalsIgnoreCase(strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder0.append((java.lang.Object) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder0.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strBuilder22.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendln(true);
        java.util.stream.IntStream intStream26 = strBuilder22.chars();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder22.replaceFirst(strMatcher27, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader32 = strBuilder31.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder35.replaceFirst(strMatcher38, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder41.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.appendNewLine();
        boolean boolean49 = strBuilder35.equalsIgnoreCase(strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder30.append((java.lang.Object) strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder30.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strBuilder52.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader58 = strBuilder57.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder57.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder61.replaceFirst(strMatcher64, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader68 = strBuilder67.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder67.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder67.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder71.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.appendNewLine();
        boolean boolean75 = strBuilder61.equalsIgnoreCase(strBuilder71);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder56.append((java.lang.Object) strBuilder61);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader78 = strBuilder77.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder77.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder77.minimizeCapacity();
        char[] charArray82 = strBuilder77.toCharArray();
        char[] charArray83 = strBuilder61.getChars(charArray82);
        char[] charArray84 = strBuilder52.getChars(charArray82);
        char[] charArray85 = strBuilder29.getChars(charArray82);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(intStream26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(reader32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(reader58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(reader68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(reader78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(charArray82);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray82), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray82), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray82), "[ ]");
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[ ]");
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray84), "4true\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray84), "4true\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray84), "[4, t, r, u, e, \n]");
        org.junit.Assert.assertNotNull(charArray85);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray85), "4true\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray85), "4true\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray85), "[4, t, r, u, e, \n]");
    }

    @Test
    public void test2668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2668");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.appendSeparator("hi!", 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.appendSeparator('a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        int int18 = strBuilder12.lastIndexOf(strMatcher16, (int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder12.replaceFirst('\n', '3');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strBuilder21);
    }

    @Test
    public void test2669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2669");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln(stringBuffer4, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.appendln(stringBuffer8);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder3.appendSeparator("hi!", (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strBuilder12.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader16 = strBuilder15.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append((java.lang.CharSequence) strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((long) (byte) 10);
        java.lang.String str23 = strBuilder19.rightString(10);
        boolean boolean25 = strBuilder19.contains('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader28 = strBuilder27.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.append((java.lang.CharSequence) strBuilder27);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder26.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader35 = strBuilder34.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.append((java.lang.CharSequence) strBuilder34);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder33.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder26.appendFixedWidthPadLeft((java.lang.Object) strBuilder39, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder19.appendFixedWidthPadLeft((java.lang.Object) strBuilder26, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader48 = strBuilder47.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.append((java.lang.CharSequence) strBuilder47);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.appendln(true);
        java.lang.StringBuffer stringBuffer52 = strBuilder46.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder19.appendln(stringBuffer52);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.replaceFirst("true\n10############################### true\n\n", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.append(45);
        java.lang.String str59 = strBuilder56.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader62 = strBuilder61.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.append((java.lang.CharSequence) strBuilder61);
        java.lang.StringBuffer stringBuffer64 = strBuilder61.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder56.appendln(stringBuffer64);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder12.appendln(stringBuffer64);
        java.lang.String str67 = strBuilder66.toString();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "true\n10" + "'", str23, "true\n10");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(reader28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(reader35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(reader48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(stringBuffer52);
        org.junit.Assert.assertEquals(stringBuffer52.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(reader62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(stringBuffer64);
        org.junit.Assert.assertEquals(stringBuffer64.toString(), "");
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "\n\n\n" + "'", str67, "\n\n\n");
    }

    @Test
    public void test2670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2670");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        char[] charArray6 = strBuilder5.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader8 = strBuilder7.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder5.append((java.lang.CharSequence) strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader17 = strBuilder16.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append((java.lang.CharSequence) strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.append((long) (byte) 10);
        java.lang.String str24 = strBuilder20.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader26 = strBuilder25.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.appendNewLine();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.appendln("");
        java.lang.String str41 = strBuilder37.rightString((int) '4');
        java.lang.Object[] objArray42 = new java.lang.Object[] { strBuilder29, wildcardClass34, 10.0d, (-1.0d), str41 };
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder20.appendAll(objArray42);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder43.trim();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.deleteFirst(strMatcher45);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder5.append(strBuilder46);
        boolean boolean49 = strBuilder47.contains("0.0");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[f, a, l, s, e]");
        org.junit.Assert.assertNotNull(reader8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "true\n10" + "'", str24, "true\n10");
        org.junit.Assert.assertNotNull(reader26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "\n" + "'", str41, "\n");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test2671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2671");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln(stringBuffer4, (int) (short) -1, 5);
        java.util.stream.IntStream intStream8 = strBuilder3.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((long) (byte) 10);
        int int18 = strBuilder16.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.append((long) 50);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.appendln('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder3.append(strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst("\n1097########", "tr");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strBuilder23.asTokenizer();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(intStream8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strTokenizer27);
    }

    @Test
    public void test2672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2672");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        int int6 = strBuilder5.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.insert((int) (short) 0, "\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.deleteAll("\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln(true);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 5 + "'", int6 == 5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
    }

    @Test
    public void test2673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2673");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder36.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.appendln("ass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder44.appendPadding(4, 'r');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strBuilder44.asTokenizer();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strTokenizer50);
    }

    @Test
    public void test2674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2674");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.appendln("");
        java.lang.String str13 = strBuilder12.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader16 = strBuilder15.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append((java.lang.CharSequence) strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((long) (byte) 10);
        java.lang.String str23 = strBuilder19.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader25 = strBuilder24.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.appendNewLine();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.appendln("");
        java.lang.String str40 = strBuilder36.rightString((int) '4');
        java.lang.Object[] objArray41 = new java.lang.Object[] { strBuilder28, wildcardClass33, 10.0d, (-1.0d), str40 };
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder19.appendAll(objArray41);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder12.appendAll(objArray41);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.appendln("true\n10");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder43.replace(strMatcher46, "", (int) (byte) 1, (int) ' ', 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader54 = strBuilder53.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.append((java.lang.CharSequence) strBuilder53);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder52.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.append((long) (byte) 10);
        java.lang.String str61 = strBuilder57.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder57.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader66 = strBuilder65.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.append((java.lang.CharSequence) strBuilder65);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder64.appendln(true);
        int int71 = strBuilder64.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder64.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader76 = strBuilder75.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.append((java.lang.CharSequence) strBuilder75);
        java.lang.String str78 = strBuilder77.getNewLineText();
        boolean boolean79 = strBuilder64.equals(strBuilder77);
        java.lang.String str80 = strBuilder77.toString();
        java.lang.StringBuffer stringBuffer81 = strBuilder77.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder57.appendln(stringBuffer81);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder43.append(stringBuffer81);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder9.appendln(stringBuffer81);
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray87 = strBuilder84.toCharArray(22, 66);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "true\n10" + "'", str23, "true\n10");
        org.junit.Assert.assertNotNull(reader25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "\n" + "'", str40, "\n");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(reader54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "true\n10" + "'", str61, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(reader66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 4 + "'", int71 == 4);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(reader76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
        org.junit.Assert.assertNotNull(stringBuffer81);
        org.junit.Assert.assertEquals(stringBuffer81.toString(), "");
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder84);
    }

    @Test
    public void test2675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2675");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        int int9 = strBuilder7.lastIndexOf('#');
        int int12 = strBuilder7.lastIndexOf('a', (int) ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        int int14 = strBuilder7.lastIndexOf(strMatcher13);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader16 = strBuilder15.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln("");
        java.lang.String str23 = strBuilder22.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader26 = strBuilder25.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.append((java.lang.CharSequence) strBuilder25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.append((long) (byte) 10);
        java.lang.String str33 = strBuilder29.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader35 = strBuilder34.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.appendNewLine();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.appendln("");
        java.lang.String str50 = strBuilder46.rightString((int) '4');
        java.lang.Object[] objArray51 = new java.lang.Object[] { strBuilder38, wildcardClass43, 10.0d, (-1.0d), str50 };
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder29.appendAll(objArray51);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder22.appendAll(objArray51);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder15.appendAll(objArray51);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder7.appendWithSeparators(objArray51, ".0-1.0\n");
        char[] charArray57 = strBuilder7.toCharArray();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder7.insert(322, false);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 322");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(reader26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "true\n10" + "'", str33, "true\n10");
        org.junit.Assert.assertNotNull(reader35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "\n" + "'", str50, "\n");
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "true\n10\n.0-1.0\nclass java.lang.Object.0-1.0\n10.0.0-1.0\n-1.0.0-1.0\n\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "true\n10\n.0-1.0\nclass java.lang.Object.0-1.0\n10.0.0-1.0\n-1.0.0-1.0\n\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[t, r, u, e, \n, 1, 0, \n, ., 0, -, 1, ., 0, \n, c, l, a, s, s,  , j, a, v, a, ., l, a, n, g, ., O, b, j, e, c, t, ., 0, -, 1, ., 0, \n, 1, 0, ., 0, ., 0, -, 1, ., 0, \n, -, 1, ., 0, ., 0, -, 1, ., 0, \n, \n]");
    }

    @Test
    public void test2676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2676");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.ensureCapacity(100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.io.Writer writer11 = strBuilder10.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.append(strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.append(100.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.append((float) 32);
        int int18 = strBuilder12.indexOf("");
        java.util.stream.IntStream intStream19 = strBuilder12.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.append((long) (byte) 10);
        java.lang.String str30 = strBuilder26.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder26.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder26.minimizeCapacity();
        int int35 = strBuilder33.lastIndexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder33.appendFixedWidthPadLeft(13, (int) (short) 1, 'r');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.append((java.lang.CharSequence) strBuilder41);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.append((long) (byte) 10);
        java.lang.String str49 = strBuilder45.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder45.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder45.replace(0, 10, "true\n10############################### true\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.appendPadding(3, '#');
        java.lang.String str61 = strBuilder58.substring((int) ' ', 50);
        char[] charArray62 = strBuilder58.toCharArray();
        char[] charArray63 = strBuilder39.getChars(charArray62);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder12.insert((int) (short) 1, charArray62, 210, 45);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid offset: 210");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(intStream19);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "true\n10" + "'", str30, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "true\n10" + "'", str49, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "###### true\n\n###" + "'", str61, "###### true\n\n###");
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "true\n103############################## true\n\n###");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "true\n103############################## true\n\n###");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[t, r, u, e, \n, 1, 0, 3, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #,  , t, r, u, e, \n, \n, #, #, #]");
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "true\n103############################## true\n\n###");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "true\n103############################## true\n\n###");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[t, r, u, e, \n, 1, 0, 3, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #,  , t, r, u, e, \n, \n, #, #, #]");
    }

    @Test
    public void test2677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2677");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder5.append((long) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.appendln((long) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.minimizeCapacity();
        boolean boolean19 = strBuilder17.endsWith("true\n10\nclass java.lang.Object10.0-1.0\ntrue\n10");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test2678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2678");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        java.lang.StringBuffer stringBuffer43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append(stringBuffer43, (int) (short) 10, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder46.appendFixedWidthPadRight((java.lang.Object) strBuilder47, 32, '#');
        java.io.Writer writer54 = strBuilder46.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder46.insert(52, 3);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder46.appendln("\ntrue114.0\n\n100.04-1.0 true\n\n", 32, 66);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(writer54);
        org.junit.Assert.assertNotNull(strBuilder57);
    }

    @Test
    public void test2679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2679");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.appendln(true);
        java.util.stream.IntStream intStream27 = strBuilder26.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder2.append(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendSeparator('a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.appendSeparator("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.appendln((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder34.append((long) 14);
        boolean boolean42 = strBuilder40.startsWith("4true\n1004");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        int int44 = strBuilder40.lastIndexOf(strMatcher43);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(intStream27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
    }

    @Test
    public void test2680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2680");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.setLength((int) (short) 100);
        char char12 = strBuilder8.charAt(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder8.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader17 = strBuilder16.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append((java.lang.CharSequence) strBuilder16);
        java.lang.StringBuffer stringBuffer19 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder15.appendln(stringBuffer19, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder15.deleteFirst(strMatcher23);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder15.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder8.appendln((java.lang.Object) strBuilder26);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.setLength(1);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader33 = strBuilder32.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.append((java.lang.CharSequence) strBuilder32);
        java.lang.StringBuffer stringBuffer35 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder31.appendln(stringBuffer35, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder38.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder39.reverse();
        int int41 = strBuilder40.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader44 = strBuilder43.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.append((java.lang.CharSequence) strBuilder43);
        java.io.Writer writer46 = strBuilder43.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder43.appendSeparator("hi!", "\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.appendSeparator("true\n10############################### true\n\n", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader60 = strBuilder59.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.append((java.lang.CharSequence) strBuilder59);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder58.append(false);
        char[] charArray64 = strBuilder63.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder56.insert(0, charArray64);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder52.insert((int) (short) 10, charArray64, 0, (int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder40.appendFixedWidthPadLeft((java.lang.Object) strBuilder52, 5, 'a');
        char[] charArray72 = strBuilder52.toCharArray();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder29.insert(210, charArray72);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 210");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + char12 + "' != '" + '\000' + "'", char12 == '\000');
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(reader33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 32 + "'", int41 == 32);
        org.junit.Assert.assertNotNull(reader44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(writer46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(reader60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[f, a, l, s, e]");
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "\n1.0\ntrue\n10############################### true\n\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "\n1.0\ntrue\n10############################### true\n\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[\n, 1, ., 0, \n, t, r, u, e, \n, 1, 0, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #,  , t, r, u, e, \n, \n]");
    }

    @Test
    public void test2681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2681");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        java.lang.Object obj6 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(obj6);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((long) (byte) 10);
        java.lang.String str18 = strBuilder14.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendNewLine();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln("");
        java.lang.String str35 = strBuilder31.rightString((int) '4');
        java.lang.Object[] objArray36 = new java.lang.Object[] { strBuilder23, wildcardClass28, 10.0d, (-1.0d), str35 };
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder14.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader40 = strBuilder39.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.append((java.lang.CharSequence) strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.append((long) (byte) 10);
        int int47 = strBuilder45.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder37.append((java.lang.CharSequence) strBuilder45);
        java.lang.StringBuffer stringBuffer52 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder51.append(stringBuffer52, (int) (short) 10, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder55.appendFixedWidthPadRight((java.lang.Object) strBuilder56, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder7.append(strBuilder56);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder56.appendSeparator(' ');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder56.replace(32, 0, "444444444");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "true\n10" + "'", str18, "true\n10");
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\n" + "'", str35, "\n");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(reader40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
    }

    @Test
    public void test2682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2682");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendSeparator("true\n10", (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.appendSeparator("true\n10100.0 \n", "\n1097########");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.appendSeparator("rue\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.deleteCharAt(0);
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
    }

    @Test
    public void test2683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2683");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder8.reverse();
        int int10 = strBuilder8.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        int int12 = strBuilder8.indexOf(strMatcher11);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.append((java.lang.CharSequence) strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.append((long) (byte) 10);
        java.lang.String str22 = strBuilder18.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.deleteAll("");
        java.lang.String str25 = strBuilder18.getNewLineText();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strBuilder18.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder18.appendln("97########");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        java.util.stream.IntStream intStream35 = strBuilder29.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder28.appendln((java.lang.Object) strBuilder29);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.appendNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        int int43 = strBuilder37.indexOf(strMatcher41, (int) '4');
        java.util.stream.IntStream intStream44 = strBuilder37.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder37.append((double) (short) 10);
        java.lang.StringBuffer stringBuffer47 = strBuilder46.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder36.append(stringBuffer47);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder8.appendln(stringBuffer47);
        int int50 = strBuilder49.length();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder49.insert(76, '\000');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 76");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "true\n10" + "'", str22, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(intStream35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(intStream44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(stringBuffer47);
        org.junit.Assert.assertEquals(stringBuffer47.toString(), "\n10.0");
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 7 + "'", int50 == 7);
    }

    @Test
    public void test2684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2684");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        boolean boolean4 = strBuilder2.startsWith("\n");
        int int6 = strBuilder2.indexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendln(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.replaceFirst(strMatcher18, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader22 = strBuilder21.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder21.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.appendNewLine();
        boolean boolean29 = strBuilder15.equalsIgnoreCase(strBuilder25);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder10.append((java.lang.Object) strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader32 = strBuilder31.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.minimizeCapacity();
        char[] charArray36 = strBuilder31.toCharArray();
        char[] charArray37 = strBuilder15.getChars(charArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder8.insert(1, charArray37);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.appendPadding((int) (short) 10, '\000');
        boolean boolean43 = strBuilder41.contains("true\n10\nclass java.lang.Object10.0-1.0true\n");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(reader32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[ ]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test2685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2685");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader9 = strBuilder8.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.append((java.lang.CharSequence) strBuilder8);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.append((long) (byte) 10);
        java.lang.String str16 = strBuilder12.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.deleteAll("");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        int int20 = strBuilder12.lastIndexOf(strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder4.appendln(strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str25 = strBuilder24.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader28 = strBuilder27.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.append((java.lang.CharSequence) strBuilder27);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.appendln(true);
        java.util.stream.IntStream intStream32 = strBuilder31.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln("");
        java.lang.String str36 = strBuilder35.getNewLineText();
        java.lang.Object[] objArray41 = new java.lang.Object[] { strBuilder31, strBuilder35, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder24.appendAll(objArray41);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        int int44 = strBuilder24.lastIndexOf(strMatcher43);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder24.append("true\n0.0\ntrue\nra");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder12.append((java.lang.CharSequence) strBuilder24);
        int int48 = strBuilder12.size();
        java.io.Writer writer49 = strBuilder12.asWriter();
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "true\n10" + "'", str16, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(reader28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(intStream32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 41 + "'", int48 == 41);
        org.junit.Assert.assertNotNull(writer49);
    }

    @Test
    public void test2686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2686");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.appendln(true);
        java.util.stream.IntStream intStream27 = strBuilder26.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder2.append(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder2.setCharAt((int) (short) 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst("false", "e\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.insert(0, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader43 = strBuilder42.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append((java.lang.CharSequence) strBuilder42);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder40.append((java.lang.CharSequence) strBuilder41);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.deleteFirst("true\n10100.01\ntrue\n10\nclass java.lang.Object10.0-1.0true\n\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader52 = strBuilder51.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.append((java.lang.CharSequence) strBuilder51);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder50.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.append((long) (byte) 10);
        int int59 = strBuilder57.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder57.appendSeparator("", 5);
        int int64 = strBuilder62.lastIndexOf("ass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder62.appendSeparator('\000', '4');
        boolean boolean68 = strBuilder49.equals((java.lang.Object) strBuilder67);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder67.insert(2, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.appendSeparator('4', ' ');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(intStream27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(reader43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(reader52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder74);
    }
}

