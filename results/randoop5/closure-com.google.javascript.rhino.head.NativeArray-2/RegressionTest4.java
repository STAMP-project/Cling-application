import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest4 {

    public static boolean debug = false;

    @Test
    public void test2001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2001");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray20, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj28 = nativeArray20.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray25);
        boolean boolean29 = nativeArray20.hasPrototypeMap();
        java.lang.Object[] objArray30 = nativeArray20.getIds();
        int int31 = nativeArray20.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray34.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray37, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj45 = nativeArray37.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray42);
        boolean boolean46 = nativeArray37.hasPrototypeMap();
        java.lang.Object[] objArray47 = nativeArray37.getIds();
        int int48 = nativeArray37.size();
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int52 = nativeArray50.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray37.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray50);
        java.lang.Object obj54 = nativeArray20.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        boolean boolean55 = nativeArray4.containsAll((java.util.Collection) nativeArray37);
        com.google.javascript.rhino.head.Scriptable scriptable56 = nativeArray4.getParentScope();
        boolean boolean58 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, (int) (byte) 100);
        com.google.javascript.rhino.head.Scriptable scriptable59 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray4);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[hi!]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(scriptable56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(scriptable59);
    }

    @Test
    public void test2002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2002");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        boolean boolean15 = nativeArray4.isEmpty();
        boolean boolean16 = nativeArray4.isExtensible();
        java.lang.Integer[] intArray17 = nativeArray4.getIndexIds();
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int22 = nativeArray20.lastIndexOf((java.lang.Object) (short) 10);
        long long23 = nativeArray20.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray20, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray28.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray31, (java.lang.Object) (-1));
        java.lang.Object[] objArray34 = nativeArray28.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable35 = nativeArray28.getParentScope();
        boolean boolean36 = nativeArray20.containsAll((java.util.Collection) nativeArray28);
        nativeArray28.delete("Array");
        boolean boolean40 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray28, (int) 'a');
        nativeArray4.defineProperty("hi!", (java.lang.Object) 'a', 10);
        com.google.javascript.rhino.head.Scriptable scriptable43 = nativeArray4.getParentScope();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1L + "'", long23 == 1L);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[null]");
        org.junit.Assert.assertNull(scriptable35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(scriptable43);
    }

    @Test
    public void test2003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2003");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int10 = nativeArray8.lastIndexOf((java.lang.Object) (short) 10);
        long long11 = nativeArray8.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray8, "", true);
        boolean boolean15 = nativeArray8.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable19 = nativeArray18.getParentScope();
        java.lang.Object[] objArray20 = nativeArray18.getIds();
        boolean boolean21 = nativeArray18.isEmpty();
        boolean boolean22 = nativeArray8.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray18);
        boolean boolean23 = nativeArray1.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray8);
        com.google.javascript.rhino.head.Scriptable scriptable24 = nativeArray1.getPrototype();
        com.google.javascript.rhino.head.Context context25 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int29 = nativeArray27.lastIndexOf((java.lang.Object) (short) 10);
        long long30 = nativeArray27.getLength();
        nativeArray27.delete((int) (byte) 1);
        boolean boolean33 = nativeArray27.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable37 = nativeArray36.getParentScope();
        java.lang.Object[] objArray38 = nativeArray36.getIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray27, "", (java.lang.Object) nativeArray36, 0);
        java.lang.Object[] objArray41 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray36);
        boolean boolean43 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray36, (int) '4');
        java.lang.Object obj47 = nativeArray36.getGetterOrSetter("hi!", (int) (byte) 0, false);
        nativeArray1.defineOwnProperties(context25, (com.google.javascript.rhino.head.ScriptableObject) nativeArray36);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(scriptable19);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(scriptable24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1L + "'", long30 == 1L);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(scriptable37);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(obj47);
    }

    @Test
    public void test2004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2004");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        com.google.javascript.rhino.head.Scriptable scriptable11 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.Context context15 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int19 = nativeArray17.lastIndexOf((java.lang.Object) (short) 10);
        long long20 = nativeArray17.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray17, "", true);
        boolean boolean24 = nativeArray17.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable28 = nativeArray27.getParentScope();
        java.lang.Object[] objArray29 = nativeArray27.getIds();
        boolean boolean30 = nativeArray27.isEmpty();
        boolean boolean31 = nativeArray17.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray27);
        boolean boolean33 = nativeArray27.isConst("object");
        nativeArray1.defineOwnProperties(context15, (com.google.javascript.rhino.head.ScriptableObject) nativeArray27);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray27, "hi!");
        nativeArray27.sealObject();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray27, "object", true);
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray45, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray50.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj53 = nativeArray45.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray50);
        boolean boolean54 = nativeArray45.hasPrototypeMap();
        java.lang.Object[] objArray55 = nativeArray45.getIds();
        int int56 = nativeArray45.size();
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray62 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray59.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray62, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray67 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray67.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj70 = nativeArray62.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray67);
        boolean boolean71 = nativeArray62.hasPrototypeMap();
        java.lang.Object[] objArray72 = nativeArray62.getIds();
        int int73 = nativeArray62.size();
        com.google.javascript.rhino.head.NativeArray nativeArray75 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int77 = nativeArray75.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray62.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray75);
        java.lang.Object obj79 = nativeArray45.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray62);
        java.lang.Object[] objArray80 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray62);
        java.lang.Object obj81 = nativeArray27.getAssociatedValue((java.lang.Object) nativeArray62);
        boolean boolean82 = nativeArray62.hasPrototypeMap();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj86 = nativeArray62.getGetterOrSetter("hi!", 100, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: hi!");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(scriptable11);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 1L + "'", long20 == 1L);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(scriptable28);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[hi!]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[hi!]");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[hi!]");
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test2005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2005");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        nativeArray4.sealObject();
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int21 = nativeArray19.lastIndexOf((java.lang.Object) (short) 10);
        long long22 = nativeArray19.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray19, "", true);
        boolean boolean26 = nativeArray19.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable30 = nativeArray29.getParentScope();
        java.lang.Object[] objArray31 = nativeArray29.getIds();
        boolean boolean32 = nativeArray29.isEmpty();
        boolean boolean33 = nativeArray19.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray29);
        java.lang.Object obj35 = nativeArray19.get((long) (byte) 0);
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray38.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray41, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray46.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj49 = nativeArray41.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray46);
        boolean boolean50 = nativeArray41.hasPrototypeMap();
        java.lang.Object[] objArray51 = nativeArray41.getIds();
        int int52 = nativeArray41.size();
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray55.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray58, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray63 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray63.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj66 = nativeArray58.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray63);
        boolean boolean67 = nativeArray58.hasPrototypeMap();
        java.lang.Object[] objArray68 = nativeArray58.getIds();
        int int69 = nativeArray58.size();
        com.google.javascript.rhino.head.NativeArray nativeArray71 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int73 = nativeArray71.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray58.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray71);
        java.lang.Object obj75 = nativeArray41.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray58);
        java.lang.Object[] objArray76 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray58);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray19, "", (java.lang.Object) objArray76);
        // The following exception was thrown during execution in test generation
        try {
            int int78 = nativeArray4.getAttributes("object", (com.google.javascript.rhino.head.Scriptable) nativeArray19);
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EvaluatorException; message: Property object not found.");
        } catch (com.google.javascript.rhino.head.EvaluatorException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1L + "'", long22 == 1L);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(scriptable30);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[hi!]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[hi!]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(objArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray76), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray76), "[hi!]");
    }

    @Test
    public void test2006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2006");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int21 = nativeArray19.lastIndexOf((java.lang.Object) (short) 10);
        long long22 = nativeArray19.getLength();
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray32.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj35 = nativeArray27.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray32);
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int40 = nativeArray38.lastIndexOf((java.lang.Object) (short) 10);
        long long41 = nativeArray38.getLength();
        nativeArray38.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray32, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray47.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray50, (java.lang.Object) (-1));
        java.lang.Object[] objArray53 = nativeArray47.getAllIds();
        nativeArray47.delete("");
        java.lang.Object obj56 = nativeArray32.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray47);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray32, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable59 = nativeArray32.getPrototype();
        com.google.javascript.rhino.head.Context context60 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray62 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int64 = nativeArray62.lastIndexOf((java.lang.Object) (short) 10);
        long long65 = nativeArray62.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray62, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray70 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray73 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray70.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray73, (java.lang.Object) (-1));
        java.lang.Object[] objArray76 = nativeArray70.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable77 = nativeArray70.getParentScope();
        boolean boolean78 = nativeArray62.containsAll((java.util.Collection) nativeArray70);
        nativeArray32.defineOwnProperties(context60, (com.google.javascript.rhino.head.ScriptableObject) nativeArray62);
        java.lang.Object obj80 = nativeArray1.associateValue((java.lang.Object) nativeArray19, (java.lang.Object) nativeArray32);
        nativeArray1.setAttributes((int) (byte) 1, (int) (byte) 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1L + "'", long22 == 1L);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 1L + "'", long41 == 1L);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[length]");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNull(scriptable59);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 1L + "'", long65 == 1L);
        org.junit.Assert.assertNotNull(objArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray76), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray76), "[null]");
        org.junit.Assert.assertNull(scriptable77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(obj80);
    }

    @Test
    public void test2007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2007");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj38 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        int int40 = nativeArray4.indexOf((java.lang.Object) 100.0f);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int45 = nativeArray43.lastIndexOf((java.lang.Object) (short) 10);
        long long46 = nativeArray43.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray43, "", true);
        boolean boolean50 = nativeArray43.hasPrototypeMap();
        java.lang.reflect.Method method53 = null;
        java.lang.reflect.Method method54 = null;
        nativeArray43.defineProperty("hi!", (java.lang.Object) (-1L), method53, method54, (int) (byte) 10);
        boolean boolean58 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray43, "");
        int int59 = nativeArray43.size();
        com.google.javascript.rhino.head.Scriptable scriptable61 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray43, "");
        java.lang.Object[] objArray62 = nativeArray43.getAllIds();
        java.lang.Object[] objArray63 = nativeArray43.toArray();
        boolean boolean64 = nativeArray4.has("object", (com.google.javascript.rhino.head.Scriptable) nativeArray43);
        nativeArray43.preventExtensions();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 1L + "'", long46 == 1L);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertNull(scriptable61);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[hi!, length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[hi!, length]");
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[null]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test2008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2008");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.Callable callable15 = null;
        nativeArray4.setGetterOrSetter("hi!", 0, callable15, false);
        java.lang.Integer[] intArray18 = nativeArray4.getIndexIds();
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((java.lang.Object[]) intArray18);
        com.google.javascript.rhino.head.Scriptable scriptable20 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray19);
        java.lang.Integer[] intArray21 = nativeArray19.getIndexIds();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertNull(scriptable20);
        org.junit.Assert.assertNotNull(intArray21);
    }

    @Test
    public void test2009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2009");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.getAllIds();
        nativeArray24.delete("");
        java.lang.Object obj33 = nativeArray9.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable36 = nativeArray9.getPrototype();
        com.google.javascript.rhino.head.Context context37 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int41 = nativeArray39.lastIndexOf((java.lang.Object) (short) 10);
        long long42 = nativeArray39.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray39, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray47.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray50, (java.lang.Object) (-1));
        java.lang.Object[] objArray53 = nativeArray47.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable54 = nativeArray47.getParentScope();
        boolean boolean55 = nativeArray39.containsAll((java.util.Collection) nativeArray47);
        nativeArray9.defineOwnProperties(context37, (com.google.javascript.rhino.head.ScriptableObject) nativeArray39);
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray61 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray58.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray61, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray66 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray66.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj69 = nativeArray61.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray66);
        com.google.javascript.rhino.head.Callable callable72 = null;
        nativeArray61.setGetterOrSetter("hi!", 0, callable72, false);
        boolean boolean75 = nativeArray39.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray61);
        com.google.javascript.rhino.head.Scriptable scriptable76 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray61);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj78 = nativeArray61.remove((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNull(scriptable36);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 1L + "'", long42 == 1L);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[null]");
        org.junit.Assert.assertNull(scriptable54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNull(scriptable76);
    }

    @Test
    public void test2010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2010");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj38 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        java.lang.Object[] objArray39 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray4);
        boolean boolean41 = nativeArray4.isConst("hi!");
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int46 = nativeArray44.lastIndexOf((java.lang.Object) (short) 10);
        long long47 = nativeArray44.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray44, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable51 = null;
        java.lang.Object[] objArray52 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable51);
        java.lang.Object[] objArray53 = nativeArray44.toArray(objArray52);
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int58 = nativeArray56.lastIndexOf((java.lang.Object) (short) 10);
        long long59 = nativeArray56.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray56, "", true);
        boolean boolean63 = nativeArray56.hasPrototypeMap();
        int int64 = nativeArray56.size();
        boolean boolean65 = nativeArray56.isEmpty();
        boolean boolean67 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray56, "Array");
        java.lang.Object obj68 = nativeArray44.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray56);
        java.lang.Object obj69 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray56);
        com.google.javascript.rhino.head.Scriptable scriptable70 = nativeArray4.getPrototype();
        com.google.javascript.rhino.head.Scriptable scriptable71 = nativeArray4.getPrototype();
        com.google.javascript.rhino.head.NativeArray nativeArray73 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int75 = nativeArray73.lastIndexOf((java.lang.Object) (short) 10);
        long long76 = nativeArray73.getLength();
        nativeArray73.delete((int) (byte) 1);
        boolean boolean79 = nativeArray73.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray82 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable83 = nativeArray82.getParentScope();
        java.lang.Object[] objArray84 = nativeArray82.getIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray73, "", (java.lang.Object) nativeArray82, 0);
        java.lang.Object[] objArray87 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray82);
        boolean boolean89 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray82, (int) '4');
        boolean boolean90 = nativeArray82.isEmpty();
        java.lang.Object obj91 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) boolean90);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 1L + "'", long47 == 1L);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[null]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 1L + "'", long59 == 1L);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNull(scriptable70);
        org.junit.Assert.assertNull(scriptable71);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 1L + "'", long76 == 1L);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNull(scriptable83);
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[]");
        org.junit.Assert.assertNotNull(objArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray87), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray87), "[]");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNull(obj91);
    }

    @Test
    public void test2011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2011");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable2 = nativeArray1.getParentScope();
        java.lang.Object[] objArray3 = nativeArray1.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray5 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray5.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray8, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray13.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj16 = nativeArray8.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray13);
        java.lang.Object obj17 = nativeArray1.getAssociatedValue((java.lang.Object) nativeArray8);
        com.google.javascript.rhino.head.Scriptable scriptable18 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        boolean boolean19 = nativeArray1.avoidObjectDetection();
        boolean boolean20 = nativeArray1.isSealed();
        org.junit.Assert.assertNull(scriptable2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[length]");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(scriptable18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test2012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2012");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj38 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        int int40 = nativeArray4.indexOf((java.lang.Object) 100.0f);
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray42, "", (java.lang.Object) 100);
        boolean boolean46 = nativeArray42.avoidObjectDetection();
        boolean boolean48 = nativeArray42.isConst("hi!");
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray54 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray51.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray54, (java.lang.Object) (-1));
        nativeArray42.setAttributes(0, (com.google.javascript.rhino.head.Scriptable) nativeArray54, (int) (byte) 10);
        int int59 = nativeArray4.lastIndexOf((java.lang.Object) nativeArray54);
        java.lang.Object[] objArray60 = nativeArray4.getAllIds();
        // The following exception was thrown during execution in test generation
        try {
            nativeArray4.activatePrototypeMap(0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[hi!, length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[hi!, length]");
    }

    @Test
    public void test2013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2013");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.getAllIds();
        nativeArray24.delete("");
        java.lang.Object obj33 = nativeArray9.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable36 = nativeArray9.getPrototype();
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        java.lang.Object obj41 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray39, "Array");
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, 8, (java.lang.Object) nativeArray39);
        com.google.javascript.rhino.head.Scriptable scriptable44 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray39, "");
        java.lang.Object[] objArray45 = nativeArray39.getIds();
        // The following exception was thrown during execution in test generation
        try {
            nativeArray39.setAttributes((int) 'a', (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: -1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNull(scriptable36);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNull(scriptable44);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[]");
    }

    @Test
    public void test2014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2014");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj38 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        int int40 = nativeArray4.indexOf((java.lang.Object) 100.0f);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int45 = nativeArray43.lastIndexOf((java.lang.Object) (short) 10);
        long long46 = nativeArray43.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray43, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable50 = null;
        java.lang.Object[] objArray51 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable50);
        java.lang.Object[] objArray52 = nativeArray43.toArray(objArray51);
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int57 = nativeArray55.lastIndexOf((java.lang.Object) (short) 10);
        long long58 = nativeArray55.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray55, "", true);
        boolean boolean62 = nativeArray55.hasPrototypeMap();
        int int63 = nativeArray55.size();
        boolean boolean64 = nativeArray55.isEmpty();
        boolean boolean66 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray55, "Array");
        java.lang.Object obj67 = nativeArray43.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray55);
        nativeArray55.setAttributes("object", (int) (byte) 0);
        boolean boolean71 = nativeArray4.has((int) (byte) 0, (com.google.javascript.rhino.head.Scriptable) nativeArray55);
        com.google.javascript.rhino.head.Scriptable scriptable73 = null;
        boolean boolean74 = nativeArray4.has((int) (byte) -1, scriptable73);
        java.util.Iterator iterator75 = nativeArray4.iterator();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 1L + "'", long46 == 1L);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[null]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 1L + "'", long58 == 1L);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(iterator75);
    }

    @Test
    public void test2015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2015");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.getAllIds();
        nativeArray24.delete("");
        java.lang.Object obj33 = nativeArray9.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable36 = nativeArray9.getPrototype();
        com.google.javascript.rhino.head.Context context37 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int41 = nativeArray39.lastIndexOf((java.lang.Object) (short) 10);
        long long42 = nativeArray39.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray39, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray47.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray50, (java.lang.Object) (-1));
        java.lang.Object[] objArray53 = nativeArray47.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable54 = nativeArray47.getParentScope();
        boolean boolean55 = nativeArray39.containsAll((java.util.Collection) nativeArray47);
        nativeArray9.defineOwnProperties(context37, (com.google.javascript.rhino.head.ScriptableObject) nativeArray39);
        com.google.javascript.rhino.head.Scriptable scriptable57 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray39);
        com.google.javascript.rhino.head.Context context58 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray63 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray63, "", (java.lang.Object) 100);
        java.lang.Object obj67 = nativeArray60.associateValue((java.lang.Object) ' ', (java.lang.Object) nativeArray63);
        java.lang.Object[] objArray68 = nativeArray63.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray70 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int72 = nativeArray70.lastIndexOf((java.lang.Object) (short) 10);
        long long73 = nativeArray70.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray70, "", true);
        boolean boolean77 = nativeArray70.hasPrototypeMap();
        int int78 = nativeArray70.size();
        boolean boolean79 = nativeArray70.isEmpty();
        com.google.javascript.rhino.head.Scriptable scriptable80 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray70);
        nativeArray70.setAttributes(1, (int) (short) 1);
        java.lang.Object[] objArray84 = nativeArray70.toArray();
        nativeArray39.defineOwnProperty(context58, (java.lang.Object) objArray68, (com.google.javascript.rhino.head.ScriptableObject) nativeArray70);
        java.lang.String str86 = nativeArray39.getTypeOf();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNull(scriptable36);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 1L + "'", long42 == 1L);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[null]");
        org.junit.Assert.assertNull(scriptable54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(scriptable57);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[null]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 1L + "'", long73 == 1L);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(scriptable80);
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[null]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "object" + "'", str86, "object");
    }

    @Test
    public void test2016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2016");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        nativeArray4.sealObject();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "Array", false);
        java.util.ListIterator listIterator20 = nativeArray4.listIterator();
        java.lang.Object[] objArray21 = nativeArray4.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable22 = nativeArray4.getParentScope();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(listIterator20);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[null]");
        org.junit.Assert.assertNull(scriptable22);
    }

    @Test
    public void test2017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2017");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray7 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray4.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray7, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj15 = nativeArray7.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray12);
        com.google.javascript.rhino.head.Callable callable18 = null;
        nativeArray7.setGetterOrSetter("hi!", 0, callable18, false);
        nativeArray1.setAttributes((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray7, (int) (short) 10);
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int27 = nativeArray25.lastIndexOf((java.lang.Object) (short) 10);
        long long28 = nativeArray25.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray25, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable32 = null;
        java.lang.Object[] objArray33 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable32);
        java.lang.Object[] objArray34 = nativeArray25.toArray(objArray33);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int39 = nativeArray37.lastIndexOf((java.lang.Object) (short) 10);
        long long40 = nativeArray37.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray37, "", true);
        boolean boolean44 = nativeArray37.hasPrototypeMap();
        int int45 = nativeArray37.size();
        boolean boolean46 = nativeArray37.isEmpty();
        boolean boolean48 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray37, "Array");
        java.lang.Object obj49 = nativeArray25.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        java.lang.Object obj50 = nativeArray1.get("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray25);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "object");
        boolean boolean53 = nativeArray1.isSealed();
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int58 = nativeArray56.lastIndexOf((java.lang.Object) (short) 10);
        long long59 = nativeArray56.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray56, "", true);
        boolean boolean63 = nativeArray56.hasPrototypeMap();
        java.lang.reflect.Method method66 = null;
        java.lang.reflect.Method method67 = null;
        nativeArray56.defineProperty("hi!", (java.lang.Object) (-1L), method66, method67, (int) (byte) 10);
        boolean boolean71 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray56, "");
        nativeArray56.sealObject();
        boolean boolean73 = nativeArray56.isSealed();
        com.google.javascript.rhino.head.NativeArray nativeArray75 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray78 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray78, "", (java.lang.Object) 100);
        java.lang.Object obj82 = nativeArray75.associateValue((java.lang.Object) ' ', (java.lang.Object) nativeArray78);
        java.lang.Object[] objArray83 = nativeArray78.toArray();
        java.lang.Object[] objArray84 = nativeArray56.toArray(objArray83);
        com.google.javascript.rhino.head.NativeArray nativeArray86 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray89 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray86.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray89, (java.lang.Object) (-1));
        java.lang.Object[] objArray92 = nativeArray86.getAllIds();
        nativeArray86.delete("");
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray86, "object");
        boolean boolean97 = nativeArray86.isSealed();
        nativeArray56.setPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray86);
        int int99 = nativeArray1.getAttributes((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray86);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 1L + "'", long28 == 1L);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[null]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 1L + "'", long40 == 1L);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 1L + "'", long59 == 1L);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray83), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray83), "[null]");
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[null]");
        org.junit.Assert.assertNotNull(objArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray92), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray92), "[length]");
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + int99 + "' != '" + 10 + "'", int99 == 10);
    }

    @Test
    public void test2018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2018");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.activatePrototypeMap((int) (short) 100);
        java.util.Iterator iterator4 = nativeArray1.iterator();
        boolean boolean5 = nativeArray1.hasPrototypeMap();
        boolean boolean7 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array");
        boolean boolean9 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!");
        boolean boolean10 = nativeArray1.isExtensible();
        java.lang.Object obj14 = nativeArray1.getGetterOrSetter("object", 0, false);
        org.junit.Assert.assertNotNull(iterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(obj14);
    }

    @Test
    public void test2019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2019");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int11 = nativeArray9.lastIndexOf((java.lang.Object) (short) 10);
        long long12 = nativeArray9.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray20, (java.lang.Object) (-1));
        java.lang.Object[] objArray23 = nativeArray17.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable24 = nativeArray17.getParentScope();
        boolean boolean25 = nativeArray9.containsAll((java.util.Collection) nativeArray17);
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int30 = nativeArray28.lastIndexOf((java.lang.Object) (short) 10);
        long long31 = nativeArray28.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray28, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable35 = null;
        java.lang.Object[] objArray36 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable35);
        java.lang.Object[] objArray37 = nativeArray28.toArray(objArray36);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) objArray36);
        nativeArray9.activatePrototypeMap((int) (byte) 10);
        boolean boolean41 = nativeArray1.has((int) (short) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int46 = nativeArray44.lastIndexOf((java.lang.Object) (short) 10);
        long long47 = nativeArray44.getLength();
        java.lang.Object[] objArray48 = nativeArray44.toArray();
        java.lang.Object obj49 = nativeArray1.get((int) (byte) 100, (com.google.javascript.rhino.head.Scriptable) nativeArray44);
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray54 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray51.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray54, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray59.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj62 = nativeArray54.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray59);
        boolean boolean63 = nativeArray54.hasPrototypeMap();
        java.lang.Object[] objArray64 = nativeArray54.getIds();
        int int65 = nativeArray54.size();
        java.util.Iterator iterator66 = nativeArray54.iterator();
        com.google.javascript.rhino.head.Scriptable scriptable67 = nativeArray54.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable68 = nativeArray54.getPrototype();
        java.lang.Object obj69 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray1, (java.lang.Object) scriptable68);
        com.google.javascript.rhino.head.NativeArray nativeArray71 = new com.google.javascript.rhino.head.NativeArray((long) (byte) 1);
        java.lang.Object[] objArray72 = nativeArray71.getIds();
        java.lang.Object obj73 = nativeArray1.getAssociatedValue((java.lang.Object) objArray72);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 1L + "'", long12 == 1L);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[null]");
        org.junit.Assert.assertNull(scriptable24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 1L + "'", long31 == 1L);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[null]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 1L + "'", long47 == 1L);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[null]");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[hi!]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertNotNull(iterator66);
        org.junit.Assert.assertNull(scriptable67);
        org.junit.Assert.assertNull(scriptable68);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[]");
        org.junit.Assert.assertNull(obj73);
    }

    @Test
    public void test2020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2020");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.activatePrototypeMap((int) (short) 100);
        java.util.Iterator iterator4 = nativeArray1.iterator();
        boolean boolean5 = nativeArray1.hasPrototypeMap();
        boolean boolean7 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj20 = nativeArray12.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray17);
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int25 = nativeArray23.lastIndexOf((java.lang.Object) (short) 10);
        long long26 = nativeArray23.getLength();
        nativeArray23.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray17, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray32.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray35, (java.lang.Object) (-1));
        java.lang.Object[] objArray38 = nativeArray32.getAllIds();
        nativeArray32.delete("");
        java.lang.Object obj41 = nativeArray17.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray32);
        nativeArray17.delete((int) (short) -1);
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable47 = nativeArray46.getParentScope();
        java.lang.Object[] objArray48 = nativeArray46.getIds();
        boolean boolean49 = nativeArray46.isEmpty();
        java.lang.Object obj51 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray46, 8);
        com.google.javascript.rhino.head.Scriptable scriptable52 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray46);
        nativeArray17.defineConst("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray46);
        com.google.javascript.rhino.head.Context context54 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int58 = nativeArray56.lastIndexOf((java.lang.Object) (short) 10);
        long long59 = nativeArray56.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray56, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray67 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray64.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray67, (java.lang.Object) (-1));
        java.lang.Object[] objArray70 = nativeArray64.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable71 = nativeArray64.getParentScope();
        boolean boolean72 = nativeArray56.containsAll((java.util.Collection) nativeArray64);
        nativeArray64.delete("Array");
        boolean boolean76 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray64, (int) 'a');
        boolean boolean77 = nativeArray64.hasPrototypeMap();
        boolean boolean78 = nativeArray64.isExtensible();
        nativeArray17.defineOwnProperties(context54, (com.google.javascript.rhino.head.ScriptableObject) nativeArray64);
        com.google.javascript.rhino.head.Scriptable scriptable80 = nativeArray64.getParentScope();
        nativeArray64.delete(2);
        com.google.javascript.rhino.head.NativeArray nativeArray85 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable86 = nativeArray85.getParentScope();
        java.lang.Object[] objArray87 = nativeArray85.getIds();
        boolean boolean88 = nativeArray85.isEmpty();
        int int89 = nativeArray85.size();
        java.util.ListIterator listIterator90 = nativeArray85.listIterator();
        nativeArray64.setAttributes(13, (com.google.javascript.rhino.head.Scriptable) nativeArray85, 8);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean93 = nativeArray1.add((java.lang.Object) nativeArray85);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(iterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 1L + "'", long26 == 1L);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[length]");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNull(scriptable47);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNull(scriptable52);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 1L + "'", long59 == 1L);
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[null]");
        org.junit.Assert.assertNull(scriptable71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNull(scriptable80);
        org.junit.Assert.assertNull(scriptable86);
        org.junit.Assert.assertNotNull(objArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray87), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray87), "[]");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 1 + "'", int89 == 1);
        org.junit.Assert.assertNotNull(listIterator90);
    }

    @Test
    public void test2021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2021");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj20 = nativeArray12.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray17);
        boolean boolean21 = nativeArray12.hasPrototypeMap();
        java.lang.Object[] objArray22 = nativeArray12.getIds();
        int int23 = nativeArray12.size();
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray28, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray33.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj36 = nativeArray28.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray33);
        boolean boolean37 = nativeArray28.hasPrototypeMap();
        java.lang.Object[] objArray38 = nativeArray28.getIds();
        int int39 = nativeArray28.size();
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray45, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray50.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj53 = nativeArray45.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray50);
        boolean boolean54 = nativeArray45.hasPrototypeMap();
        java.lang.Object[] objArray55 = nativeArray45.getIds();
        int int56 = nativeArray45.size();
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int60 = nativeArray58.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray45.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray58);
        java.lang.Object obj62 = nativeArray28.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray45);
        boolean boolean63 = nativeArray12.containsAll((java.util.Collection) nativeArray45);
        nativeArray1.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray12);
        com.google.javascript.rhino.head.Scriptable scriptable65 = nativeArray1.getParentScope();
        boolean boolean66 = nativeArray1.avoidObjectDetection();
        java.lang.String str67 = nativeArray1.getClassName();
        nativeArray1.setAttributes(2, 10);
        com.google.javascript.rhino.head.NativeArray nativeArray73 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray76 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray73.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray76, (java.lang.Object) (-1));
        java.lang.Object obj80 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray76, "hi!");
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, (int) (short) -1, obj80);
        long long82 = nativeArray1.jsGet_length();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[hi!]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[hi!]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[hi!]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(scriptable65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "Array" + "'", str67, "Array");
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + (-1) + "'", obj80, (-1));
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + 1L + "'", long82 == 1L);
    }

    @Test
    public void test2022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2022");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray15, (java.lang.Object) (-1));
        java.lang.Object[] objArray18 = nativeArray12.getAllIds();
        nativeArray12.delete("");
        long long21 = nativeArray12.getLength();
        boolean boolean22 = nativeArray1.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray12);
        com.google.javascript.rhino.head.Scriptable scriptable23 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        boolean boolean25 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array");
        // The following exception was thrown during execution in test generation
        try {
            int int27 = nativeArray1.getAttributes("hi!");
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EvaluatorException; message: Property hi! not found.");
        } catch (com.google.javascript.rhino.head.EvaluatorException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[length]");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1L + "'", long21 == 1L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(scriptable23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test2023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2023");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray(objArray7);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray(objArray7);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray15, (java.lang.Object) (-1));
        java.lang.Object[] objArray18 = nativeArray12.getAllIds();
        java.lang.String str19 = nativeArray12.getTypeOf();
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray21.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray24, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj32 = nativeArray24.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray29);
        boolean boolean33 = nativeArray24.hasPrototypeMap();
        java.lang.Object[] objArray34 = nativeArray24.getIds();
        int int35 = nativeArray24.size();
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int39 = nativeArray37.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray24.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray37);
        java.lang.Object[] objArray41 = nativeArray37.getAllIds();
        com.google.javascript.rhino.head.Scriptable scriptable43 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray37, "Array");
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        java.lang.Object obj47 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray45, "Array");
        boolean boolean49 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray45, "hi!");
        nativeArray37.setPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray45);
        com.google.javascript.rhino.head.Scriptable scriptable51 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray45);
        java.lang.Object obj53 = nativeArray45.get(0L);
        java.lang.Object obj54 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray12, obj53);
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable57 = nativeArray56.getParentScope();
        java.lang.Object[] objArray58 = nativeArray56.getIds();
        boolean boolean59 = nativeArray56.avoidObjectDetection();
        java.lang.Object obj63 = nativeArray56.getGetterOrSetter("", 0, true);
        boolean boolean64 = nativeArray56.avoidObjectDetection();
        nativeArray9.put("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) nativeArray56);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[null]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[length]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "object" + "'", str19, "object");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[hi!]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[length]");
        org.junit.Assert.assertNull(scriptable43);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(scriptable51);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNull(scriptable57);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test2024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2024");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable8 = nativeArray1.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable9 = nativeArray1.getParentScope();
        java.util.ListIterator listIterator10 = nativeArray1.listIterator();
        com.google.javascript.rhino.head.Scriptable scriptable12 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1, "object");
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray15.getParentScope();
        java.lang.Object[] objArray17 = nativeArray15.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray19.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray22, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray27.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj30 = nativeArray22.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray27);
        java.lang.Object obj31 = nativeArray15.getAssociatedValue((java.lang.Object) nativeArray22);
        com.google.javascript.rhino.head.Scriptable scriptable32 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray15);
        nativeArray15.delete(2);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray15, "Array");
        com.google.javascript.rhino.head.Scriptable scriptable37 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray15);
        nativeArray1.defineConst("", (com.google.javascript.rhino.head.Scriptable) nativeArray15);
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int43 = nativeArray41.lastIndexOf((java.lang.Object) (short) 10);
        long long44 = nativeArray41.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray41, "", true);
        boolean boolean48 = nativeArray41.hasPrototypeMap();
        int int49 = nativeArray41.size();
        boolean boolean50 = nativeArray41.isEmpty();
        com.google.javascript.rhino.head.Scriptable scriptable51 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray41);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray41, "", true);
        com.google.javascript.rhino.head.Context context55 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray57 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int59 = nativeArray57.lastIndexOf((java.lang.Object) (short) 10);
        long long60 = nativeArray57.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray57, "", true);
        boolean boolean64 = nativeArray57.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray67 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable68 = nativeArray67.getParentScope();
        java.lang.Object[] objArray69 = nativeArray67.getIds();
        boolean boolean70 = nativeArray67.isEmpty();
        boolean boolean71 = nativeArray57.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray67);
        boolean boolean73 = nativeArray67.isConst("object");
        nativeArray41.defineOwnProperties(context55, (com.google.javascript.rhino.head.ScriptableObject) nativeArray67);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray67, "hi!");
        boolean boolean77 = nativeArray15.has((int) (short) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray67);
        boolean boolean78 = nativeArray15.hasPrototypeMap();
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[null]");
        org.junit.Assert.assertNull(scriptable8);
        org.junit.Assert.assertNull(scriptable9);
        org.junit.Assert.assertNotNull(listIterator10);
        org.junit.Assert.assertNull(scriptable12);
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[length]");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(scriptable32);
        org.junit.Assert.assertNotNull(scriptable37);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 1L + "'", long44 == 1L);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(scriptable51);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 1L + "'", long60 == 1L);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(scriptable68);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test2025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2025");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable8 = nativeArray1.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable9 = nativeArray1.getParentScope();
        boolean boolean10 = nativeArray1.isSealed();
        java.lang.Object obj12 = nativeArray1.get(0L);
        long long13 = nativeArray1.getLength();
        // The following exception was thrown during execution in test generation
        try {
            int int15 = nativeArray1.getAttributes(10);
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EvaluatorException; message: Property 10 not found.");
        } catch (com.google.javascript.rhino.head.EvaluatorException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[null]");
        org.junit.Assert.assertNull(scriptable8);
        org.junit.Assert.assertNull(scriptable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
    }

    @Test
    public void test2026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2026");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        com.google.javascript.rhino.head.Scriptable scriptable11 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        boolean boolean13 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(scriptable11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test2027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2027");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray19.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray22, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray27.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj30 = nativeArray22.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray27);
        boolean boolean31 = nativeArray22.hasPrototypeMap();
        java.lang.Object[] objArray32 = nativeArray22.getIds();
        java.lang.Object[] objArray33 = nativeArray9.toArray(objArray32);
        boolean boolean35 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "Array");
        com.google.javascript.rhino.head.Scriptable scriptable36 = nativeArray9.getPrototype();
        long long37 = nativeArray9.getLength();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[null]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[null]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(scriptable36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 1L + "'", long37 == 1L);
    }

    @Test
    public void test2028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2028");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        java.lang.Object obj3 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array");
        boolean boolean5 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!");
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray8.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray11, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray16.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj19 = nativeArray11.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray16);
        boolean boolean20 = nativeArray11.hasPrototypeMap();
        java.lang.Object[] objArray21 = nativeArray11.getIds();
        int int22 = nativeArray11.size();
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray28, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray33.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj36 = nativeArray28.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray33);
        boolean boolean37 = nativeArray28.hasPrototypeMap();
        java.lang.Object[] objArray38 = nativeArray28.getIds();
        int int39 = nativeArray28.size();
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int43 = nativeArray41.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray28.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray41);
        java.lang.Object obj45 = nativeArray11.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray28);
        java.lang.Object[] objArray46 = nativeArray11.getIds();
        java.lang.String str47 = nativeArray11.getClassName();
        com.google.javascript.rhino.head.NativeArray nativeArray49 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int51 = nativeArray49.lastIndexOf((java.lang.Object) (short) 10);
        long long52 = nativeArray49.getLength();
        nativeArray49.setAttributes((int) (byte) 100, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int60 = nativeArray58.lastIndexOf((java.lang.Object) (short) 10);
        long long61 = nativeArray58.getLength();
        nativeArray58.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray49, (int) (byte) -1, (java.lang.Object) nativeArray58);
        java.util.Iterator iterator65 = nativeArray49.iterator();
        java.lang.Object[] objArray66 = nativeArray49.toArray();
        boolean boolean67 = nativeArray11.containsAll((java.util.Collection) nativeArray49);
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array", (java.lang.Object) boolean67, (int) (short) 10);
        boolean boolean70 = nativeArray1.isExtensible();
        com.google.javascript.rhino.head.Scriptable scriptable72 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1, "object");
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[hi!]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[hi!]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[hi!]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Array" + "'", str47, "Array");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 1L + "'", long52 == 1L);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 1L + "'", long61 == 1L);
        org.junit.Assert.assertNotNull(iterator65);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[null]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(scriptable72);
    }

    @Test
    public void test2029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2029");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.getAllIds();
        nativeArray24.delete("");
        java.lang.Object obj33 = nativeArray9.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        java.lang.Integer[] intArray34 = nativeArray24.getIndexIds();
        long long35 = nativeArray24.getLength();
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray38.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray41, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray46.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj49 = nativeArray41.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray46);
        boolean boolean50 = nativeArray41.hasPrototypeMap();
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray24, (-1), (java.lang.Object) nativeArray41);
        int int52 = nativeArray41.size();
        java.lang.String str53 = nativeArray41.getClassName();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1L + "'", long35 == 1L);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Array" + "'", str53, "Array");
    }

    @Test
    public void test2030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2030");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj38 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        java.lang.Object[] objArray39 = nativeArray4.getIds();
        java.lang.Integer[] intArray40 = nativeArray4.getIndexIds();
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray43.activatePrototypeMap((int) (short) 100);
        boolean boolean47 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray43, "hi!");
        long long48 = nativeArray43.jsGet_length();
        boolean boolean49 = nativeArray4.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray43);
        nativeArray4.setAttributes("hi!", 1);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "object");
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray56.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray59, (java.lang.Object) (-1));
        java.lang.Object[] objArray62 = nativeArray56.getAllIds();
        java.lang.String str63 = nativeArray56.getTypeOf();
        int int64 = nativeArray56.size();
        boolean boolean66 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray56, "hi!");
        java.lang.Object obj68 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray56, 100);
        nativeArray4.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray56);
        boolean boolean70 = nativeArray4.isExtensible();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[hi!]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 1L + "'", long48 == 1L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[length]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "object" + "'", str63, "object");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
    }

    @Test
    public void test2031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2031");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        java.lang.reflect.Method method11 = null;
        java.lang.reflect.Method method12 = null;
        nativeArray1.defineProperty("hi!", (java.lang.Object) (-1L), method11, method12, (int) (byte) 10);
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray20, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj28 = nativeArray20.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray25);
        boolean boolean29 = nativeArray20.hasPrototypeMap();
        java.lang.Object[] objArray30 = nativeArray20.getIds();
        int int31 = nativeArray20.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray34.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray37, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj45 = nativeArray37.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray42);
        boolean boolean46 = nativeArray37.hasPrototypeMap();
        java.lang.Object[] objArray47 = nativeArray37.getIds();
        int int48 = nativeArray37.size();
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int52 = nativeArray50.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray37.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray50);
        java.lang.Object obj54 = nativeArray20.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray56.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray59, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray64.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj67 = nativeArray59.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray64);
        boolean boolean68 = nativeArray59.hasPrototypeMap();
        java.lang.Object[] objArray69 = nativeArray59.getIds();
        int int70 = nativeArray59.size();
        com.google.javascript.rhino.head.NativeArray nativeArray73 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray76 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray73.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray76, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray81 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray81.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj84 = nativeArray76.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray81);
        boolean boolean85 = nativeArray76.hasPrototypeMap();
        java.lang.Object[] objArray86 = nativeArray76.getIds();
        int int87 = nativeArray76.size();
        com.google.javascript.rhino.head.NativeArray nativeArray89 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int91 = nativeArray89.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray76.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray89);
        java.lang.Object obj93 = nativeArray59.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray76);
        java.lang.Object[] objArray94 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray59);
        nativeArray1.put(2, (com.google.javascript.rhino.head.Scriptable) nativeArray37, (java.lang.Object) objArray94);
        boolean boolean97 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray37, "hi!");
        java.lang.String str98 = nativeArray37.getClassName();
        java.lang.Object[] objArray99 = nativeArray37.getIds();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[hi!]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(objArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray86), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray86), "[hi!]");
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(objArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray94), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray94), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "Array" + "'", str98, "Array");
        org.junit.Assert.assertNotNull(objArray99);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray99), "[2]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray99), "[2]");
    }

    @Test
    public void test2032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2032");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable11 = nativeArray10.getParentScope();
        java.lang.Object[] objArray12 = nativeArray10.getIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", (java.lang.Object) nativeArray10, 0);
        long long15 = nativeArray1.jsGet_length();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(scriptable11);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 1L + "'", long15 == 1L);
    }

    @Test
    public void test2033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2033");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        com.google.javascript.rhino.head.Scriptable scriptable18 = nativeArray9.getParentScope();
        boolean boolean19 = nativeArray9.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable23 = nativeArray22.getParentScope();
        java.lang.Object[] objArray24 = nativeArray22.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int29 = nativeArray27.lastIndexOf((java.lang.Object) (short) 10);
        long long30 = nativeArray27.getLength();
        nativeArray27.delete((int) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int37 = nativeArray35.lastIndexOf((java.lang.Object) (short) 10);
        long long38 = nativeArray35.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray35, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray43.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray46, (java.lang.Object) (-1));
        java.lang.Object[] objArray49 = nativeArray43.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable50 = nativeArray43.getParentScope();
        boolean boolean51 = nativeArray35.containsAll((java.util.Collection) nativeArray43);
        com.google.javascript.rhino.head.NativeArray nativeArray53 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray53.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray56, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray61 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray61.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj64 = nativeArray56.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray61);
        boolean boolean65 = nativeArray56.hasPrototypeMap();
        java.lang.Object[] objArray66 = nativeArray56.getIds();
        java.lang.Object[] objArray67 = nativeArray43.toArray(objArray66);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray27, "Array", (java.lang.Object) nativeArray43);
        boolean boolean69 = nativeArray22.has(0, (com.google.javascript.rhino.head.Scriptable) nativeArray27);
        boolean boolean70 = nativeArray9.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray22);
        boolean boolean72 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "");
        com.google.javascript.rhino.head.Scriptable scriptable74 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray9, "Array");
        nativeArray9.setAttributes((int) ' ', 1);
        nativeArray9.activatePrototypeMap((int) (byte) 10);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(scriptable18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(scriptable23);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[length]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1L + "'", long30 == 1L);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 1L + "'", long38 == 1L);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[null]");
        org.junit.Assert.assertNull(scriptable50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[null]");
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[null]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(scriptable74);
    }

    @Test
    public void test2034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2034");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int21 = nativeArray19.lastIndexOf((java.lang.Object) (short) 10);
        long long22 = nativeArray19.getLength();
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray32.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj35 = nativeArray27.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray32);
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int40 = nativeArray38.lastIndexOf((java.lang.Object) (short) 10);
        long long41 = nativeArray38.getLength();
        nativeArray38.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray32, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray47.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray50, (java.lang.Object) (-1));
        java.lang.Object[] objArray53 = nativeArray47.getAllIds();
        nativeArray47.delete("");
        java.lang.Object obj56 = nativeArray32.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray47);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray32, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable59 = nativeArray32.getPrototype();
        com.google.javascript.rhino.head.Context context60 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray62 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int64 = nativeArray62.lastIndexOf((java.lang.Object) (short) 10);
        long long65 = nativeArray62.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray62, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray70 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray73 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray70.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray73, (java.lang.Object) (-1));
        java.lang.Object[] objArray76 = nativeArray70.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable77 = nativeArray70.getParentScope();
        boolean boolean78 = nativeArray62.containsAll((java.util.Collection) nativeArray70);
        nativeArray32.defineOwnProperties(context60, (com.google.javascript.rhino.head.ScriptableObject) nativeArray62);
        java.lang.Object obj80 = nativeArray1.associateValue((java.lang.Object) nativeArray19, (java.lang.Object) nativeArray32);
        com.google.javascript.rhino.head.Scriptable scriptable81 = null;
        java.lang.Object[] objArray82 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable81);
        int int83 = nativeArray32.lastIndexOf((java.lang.Object) scriptable81);
        java.lang.Object obj85 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray32, "object");
        // The following exception was thrown during execution in test generation
        try {
            nativeArray32.setAttributes("", (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: -1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1L + "'", long22 == 1L);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 1L + "'", long41 == 1L);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[length]");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNull(scriptable59);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 1L + "'", long65 == 1L);
        org.junit.Assert.assertNotNull(objArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray76), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray76), "[null]");
        org.junit.Assert.assertNull(scriptable77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray82), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray82), "[]");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNotNull(obj85);
    }

    @Test
    public void test2035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2035");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        com.google.javascript.rhino.head.Scriptable scriptable11 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.Context context15 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int19 = nativeArray17.lastIndexOf((java.lang.Object) (short) 10);
        long long20 = nativeArray17.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray17, "", true);
        boolean boolean24 = nativeArray17.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable28 = nativeArray27.getParentScope();
        java.lang.Object[] objArray29 = nativeArray27.getIds();
        boolean boolean30 = nativeArray27.isEmpty();
        boolean boolean31 = nativeArray17.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray27);
        boolean boolean33 = nativeArray27.isConst("object");
        nativeArray1.defineOwnProperties(context15, (com.google.javascript.rhino.head.ScriptableObject) nativeArray27);
        java.lang.Object[] objArray35 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 'a');
        com.google.javascript.rhino.head.Context context39 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int43 = nativeArray41.lastIndexOf((java.lang.Object) (short) 10);
        long long44 = nativeArray41.getLength();
        nativeArray41.delete((int) (byte) 1);
        boolean boolean48 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray41, "");
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int52 = nativeArray50.lastIndexOf((java.lang.Object) (short) 10);
        long long53 = nativeArray50.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray50, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray61 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray58.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray61, (java.lang.Object) (-1));
        java.lang.Object[] objArray64 = nativeArray58.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable65 = nativeArray58.getParentScope();
        boolean boolean66 = nativeArray50.containsAll((java.util.Collection) nativeArray58);
        boolean boolean67 = nativeArray41.containsAll((java.util.Collection) nativeArray50);
        nativeArray38.defineOwnProperties(context39, (com.google.javascript.rhino.head.ScriptableObject) nativeArray50);
        java.lang.Object obj70 = nativeArray38.get((long) (short) 0);
        java.lang.Object obj72 = nativeArray38.get(0L);
        nativeArray1.setAttributes(8, (com.google.javascript.rhino.head.Scriptable) nativeArray38, 1);
        boolean boolean75 = nativeArray1.isExtensible();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(scriptable11);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 1L + "'", long20 == 1L);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(scriptable28);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 1L + "'", long44 == 1L);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 1L + "'", long53 == 1L);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[null]");
        org.junit.Assert.assertNull(scriptable65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
    }

    @Test
    public void test2036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2036");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj20 = nativeArray12.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray17);
        boolean boolean21 = nativeArray12.hasPrototypeMap();
        java.lang.Object[] objArray22 = nativeArray12.getIds();
        int int23 = nativeArray12.size();
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray28, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray33.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj36 = nativeArray28.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray33);
        boolean boolean37 = nativeArray28.hasPrototypeMap();
        java.lang.Object[] objArray38 = nativeArray28.getIds();
        int int39 = nativeArray28.size();
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray45, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray50.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj53 = nativeArray45.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray50);
        boolean boolean54 = nativeArray45.hasPrototypeMap();
        java.lang.Object[] objArray55 = nativeArray45.getIds();
        int int56 = nativeArray45.size();
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int60 = nativeArray58.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray45.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray58);
        java.lang.Object obj62 = nativeArray28.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray45);
        boolean boolean63 = nativeArray12.containsAll((java.util.Collection) nativeArray45);
        nativeArray1.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray12);
        com.google.javascript.rhino.head.NativeArray nativeArray66 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int68 = nativeArray66.lastIndexOf((java.lang.Object) (short) 10);
        java.lang.Object[] objArray69 = nativeArray66.getAllIds();
        boolean boolean70 = nativeArray66.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray72 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray72.activatePrototypeMap((int) (short) 100);
        long long75 = nativeArray72.jsGet_length();
        com.google.javascript.rhino.head.NativeArray nativeArray77 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray80 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray77.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray80, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray85 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray85.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj88 = nativeArray80.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray85);
        boolean boolean89 = nativeArray80.hasPrototypeMap();
        java.lang.Object[] objArray90 = nativeArray80.getIds();
        int int91 = nativeArray80.size();
        boolean boolean92 = nativeArray72.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray80);
        boolean boolean93 = nativeArray66.containsAll((java.util.Collection) nativeArray80);
        boolean boolean94 = nativeArray1.containsAll((java.util.Collection) nativeArray80);
        boolean boolean95 = nativeArray1.isEmpty();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[hi!]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[hi!]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[hi!]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[length]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 1L + "'", long75 == 1L);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(objArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray90), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray90), "[hi!]");
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 1 + "'", int91 == 1);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
    }

    @Test
    public void test2037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2037");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable2 = nativeArray1.getParentScope();
        com.google.javascript.rhino.head.NativeArray nativeArray5 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray5.activatePrototypeMap((int) (short) 100);
        com.google.javascript.rhino.head.Scriptable scriptable9 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray5, "");
        boolean boolean10 = nativeArray1.has(100, scriptable9);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int14 = nativeArray12.lastIndexOf((java.lang.Object) (short) 10);
        long long15 = nativeArray12.getLength();
        nativeArray12.delete((int) (byte) 1);
        boolean boolean18 = nativeArray12.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable22 = nativeArray21.getParentScope();
        java.lang.Object[] objArray23 = nativeArray21.getIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray12, "", (java.lang.Object) nativeArray21, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray28.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray31, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray36.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj39 = nativeArray31.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray36);
        boolean boolean40 = nativeArray31.hasPrototypeMap();
        java.lang.Object[] objArray41 = nativeArray31.getIds();
        int int42 = nativeArray31.size();
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int46 = nativeArray44.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray31.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray44);
        java.lang.Object obj48 = nativeArray12.get((int) (short) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray44);
        com.google.javascript.rhino.head.Scriptable scriptable49 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray44);
        nativeArray1.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray44);
        long long51 = nativeArray44.getLength();
        boolean boolean53 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray44, (int) ' ');
        org.junit.Assert.assertNull(scriptable2);
        org.junit.Assert.assertNull(scriptable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 1L + "'", long15 == 1L);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(scriptable22);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[hi!]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(scriptable49);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 1L + "'", long51 == 1L);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test2038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2038");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable8 = null;
        java.lang.Object[] objArray9 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable8);
        java.lang.Object[] objArray10 = nativeArray1.toArray(objArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int15 = nativeArray13.lastIndexOf((java.lang.Object) (short) 10);
        long long16 = nativeArray13.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "", true);
        boolean boolean20 = nativeArray13.hasPrototypeMap();
        int int21 = nativeArray13.size();
        boolean boolean22 = nativeArray13.isEmpty();
        boolean boolean24 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "Array");
        java.lang.Object obj25 = nativeArray1.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray13);
        com.google.javascript.rhino.head.Scriptable scriptable26 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray32, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray37.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj40 = nativeArray32.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        boolean boolean41 = nativeArray32.hasPrototypeMap();
        java.lang.Object[] objArray42 = nativeArray32.getIds();
        int int43 = nativeArray32.size();
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int47 = nativeArray45.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray32.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray45);
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray51.activatePrototypeMap((int) (short) 100);
        boolean boolean55 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray51, "hi!");
        nativeArray32.setAttributes("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray51, 8);
        nativeArray1.setAttributes("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray32, 0);
        com.google.javascript.rhino.head.Scriptable scriptable60 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray32);
        java.util.ListIterator listIterator61 = nativeArray32.listIterator();
        boolean boolean62 = nativeArray32.isSealed();
        boolean boolean64 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray32, "hi!");
        java.lang.Object[] objArray65 = nativeArray32.getAllIds();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[null]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1L + "'", long16 == 1L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNull(scriptable26);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[hi!]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(scriptable60);
        org.junit.Assert.assertNotNull(listIterator61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[hi!, Array, length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[hi!, Array, length]");
    }

    @Test
    public void test2039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2039");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable2 = nativeArray1.getParentScope();
        java.lang.Object[] objArray3 = nativeArray1.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray5 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray5.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray8, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray13.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj16 = nativeArray8.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray13);
        java.lang.Object obj17 = nativeArray1.getAssociatedValue((java.lang.Object) nativeArray8);
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable20 = nativeArray19.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable21 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray19);
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int25 = nativeArray23.lastIndexOf((java.lang.Object) (short) 10);
        long long26 = nativeArray23.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray23, "", true);
        boolean boolean30 = nativeArray23.hasPrototypeMap();
        int int31 = nativeArray23.size();
        boolean boolean32 = nativeArray23.isEmpty();
        nativeArray19.setPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray23);
        java.lang.Object obj34 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray8, (java.lang.Object) nativeArray19);
        java.lang.String str35 = nativeArray19.getClassName();
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray38.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray41, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int48 = nativeArray46.lastIndexOf((java.lang.Object) (short) 10);
        long long49 = nativeArray46.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray46, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray54 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray57 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray54.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray57, (java.lang.Object) (-1));
        java.lang.Object[] objArray60 = nativeArray54.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable61 = nativeArray54.getParentScope();
        boolean boolean62 = nativeArray46.containsAll((java.util.Collection) nativeArray54);
        com.google.javascript.rhino.head.NativeArray nativeArray65 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int67 = nativeArray65.lastIndexOf((java.lang.Object) (short) 10);
        long long68 = nativeArray65.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray65, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable72 = null;
        java.lang.Object[] objArray73 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable72);
        java.lang.Object[] objArray74 = nativeArray65.toArray(objArray73);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray46, "hi!", (java.lang.Object) objArray73);
        nativeArray46.activatePrototypeMap((int) (byte) 10);
        boolean boolean78 = nativeArray38.has((int) (short) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray46);
        com.google.javascript.rhino.head.NativeArray nativeArray80 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int82 = nativeArray80.lastIndexOf((java.lang.Object) (short) 10);
        long long83 = nativeArray80.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray80, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable87 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray80);
        nativeArray38.setParentScope(scriptable87);
        nativeArray38.delete((int) 'a');
        boolean boolean91 = nativeArray19.has((int) (short) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray38);
        com.google.javascript.rhino.head.Scriptable scriptable92 = nativeArray19.getPrototype();
        boolean boolean94 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray19, (int) (short) 1);
        org.junit.Assert.assertNull(scriptable2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[length]");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(scriptable20);
        org.junit.Assert.assertNull(scriptable21);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 1L + "'", long26 == 1L);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Array" + "'", str35, "Array");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 1L + "'", long49 == 1L);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[null]");
        org.junit.Assert.assertNull(scriptable61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 1L + "'", long68 == 1L);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[]");
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[null]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 1L + "'", long83 == 1L);
        org.junit.Assert.assertNull(scriptable87);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(scriptable92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test2040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2040");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int18 = nativeArray16.lastIndexOf((java.lang.Object) (short) 10);
        long long19 = nativeArray16.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray16, "", true);
        boolean boolean23 = nativeArray16.hasPrototypeMap();
        java.lang.reflect.Method method26 = null;
        java.lang.reflect.Method method27 = null;
        nativeArray16.defineProperty("hi!", (java.lang.Object) (-1L), method26, method27, (int) (byte) 10);
        boolean boolean31 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray16, "");
        nativeArray16.setAttributes("hi!", (int) (byte) 0);
        java.lang.Object[] objArray35 = nativeArray16.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray38.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray41, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray49 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray46.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray49, (java.lang.Object) (-1));
        nativeArray38.put((int) (byte) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray46, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray16, 0, (java.lang.Object) nativeArray46);
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        java.lang.Object obj58 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray56, "Array");
        int int59 = nativeArray46.indexOf((java.lang.Object) nativeArray56);
        boolean boolean60 = nativeArray4.has("object", (com.google.javascript.rhino.head.Scriptable) nativeArray46);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator listIterator62 = nativeArray4.listIterator((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 32");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 1L + "'", long19 == 1L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[hi!, length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[hi!, length]");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test2041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2041");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable8 = null;
        java.lang.Object[] objArray9 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable8);
        java.lang.Object[] objArray10 = nativeArray1.toArray(objArray9);
        com.google.javascript.rhino.head.Scriptable scriptable11 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray14.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray17, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray22.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj25 = nativeArray17.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray22);
        boolean boolean26 = nativeArray17.hasPrototypeMap();
        java.lang.Object[] objArray27 = nativeArray17.getIds();
        int int28 = nativeArray17.size();
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray30.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray33, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray38.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj41 = nativeArray33.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray38);
        boolean boolean42 = nativeArray33.hasPrototypeMap();
        java.lang.Object[] objArray43 = nativeArray33.getIds();
        int int44 = nativeArray33.size();
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray47.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray50, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray55.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj58 = nativeArray50.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray55);
        boolean boolean59 = nativeArray50.hasPrototypeMap();
        java.lang.Object[] objArray60 = nativeArray50.getIds();
        int int61 = nativeArray50.size();
        com.google.javascript.rhino.head.NativeArray nativeArray63 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int65 = nativeArray63.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray50.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray63);
        java.lang.Object obj67 = nativeArray33.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray50);
        boolean boolean68 = nativeArray17.containsAll((java.util.Collection) nativeArray50);
        com.google.javascript.rhino.head.NativeArray nativeArray71 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable72 = nativeArray71.getParentScope();
        java.lang.Object[] objArray73 = nativeArray71.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray75 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray78 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray75.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray78, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray83 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray83.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj86 = nativeArray78.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray83);
        java.lang.Object obj87 = nativeArray71.getAssociatedValue((java.lang.Object) nativeArray78);
        com.google.javascript.rhino.head.Scriptable scriptable88 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray71);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray50, "hi!", (java.lang.Object) scriptable88);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, (int) (short) 0, (java.lang.Object) scriptable88);
        java.util.Iterator iterator91 = nativeArray1.iterator();
        java.lang.Object obj93 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[null]");
        org.junit.Assert.assertNull(scriptable11);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[hi!]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[hi!]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[hi!]");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNull(scriptable72);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[length]");
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNull(obj87);
        org.junit.Assert.assertNull(scriptable88);
        org.junit.Assert.assertNotNull(iterator91);
        org.junit.Assert.assertNotNull(obj93);
    }

    @Test
    public void test2042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2042");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.getAllIds();
        nativeArray1.delete("");
        long long10 = nativeArray1.getLength();
        boolean boolean12 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, (int) (short) 10);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj14 = nativeArray1.get((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[length]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test2043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2043");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean8 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        boolean boolean9 = nativeArray1.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray15, (java.lang.Object) (-1));
        java.lang.Object[] objArray18 = nativeArray12.getAllIds();
        java.lang.String str19 = nativeArray12.getTypeOf();
        int int20 = nativeArray12.size();
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray23.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray26, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray31.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray34, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray39.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj42 = nativeArray34.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray39);
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int47 = nativeArray45.lastIndexOf((java.lang.Object) (short) 10);
        long long48 = nativeArray45.getLength();
        nativeArray45.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray39, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray54 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray57 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray54.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray57, (java.lang.Object) (-1));
        java.lang.Object[] objArray60 = nativeArray54.getAllIds();
        nativeArray54.delete("");
        java.lang.Object obj63 = nativeArray39.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray54);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray39, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable66 = nativeArray39.getPrototype();
        com.google.javascript.rhino.head.Context context67 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray69 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int71 = nativeArray69.lastIndexOf((java.lang.Object) (short) 10);
        long long72 = nativeArray69.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray69, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray77 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray80 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray77.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray80, (java.lang.Object) (-1));
        java.lang.Object[] objArray83 = nativeArray77.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable84 = nativeArray77.getParentScope();
        boolean boolean85 = nativeArray69.containsAll((java.util.Collection) nativeArray77);
        nativeArray39.defineOwnProperties(context67, (com.google.javascript.rhino.head.ScriptableObject) nativeArray69);
        nativeArray23.setAttributes(1, (com.google.javascript.rhino.head.Scriptable) nativeArray39, (int) (short) 10);
        java.lang.String str89 = nativeArray23.getTypeOf();
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray23, "object");
        java.lang.Object obj92 = nativeArray12.get((int) (byte) 0, (com.google.javascript.rhino.head.Scriptable) nativeArray23);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!", (java.lang.Object) (byte) 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[length]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "object" + "'", str19, "object");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 1L + "'", long48 == 1L);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[length]");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNull(scriptable66);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 1L + "'", long72 == 1L);
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray83), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray83), "[null]");
        org.junit.Assert.assertNull(scriptable84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "object" + "'", str89, "object");
        org.junit.Assert.assertNotNull(obj92);
    }

    @Test
    public void test2044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2044");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        java.lang.Object obj3 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 8);
        com.google.javascript.rhino.head.NativeArray nativeArray6 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray6.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray9, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray13.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray16, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray21.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj24 = nativeArray16.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        com.google.javascript.rhino.head.Callable callable27 = null;
        nativeArray16.setGetterOrSetter("hi!", 0, callable27, false);
        java.lang.Integer[] intArray30 = nativeArray16.getIndexIds();
        nativeArray9.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray16);
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        long long37 = nativeArray34.getLength();
        nativeArray34.delete((int) (byte) 1);
        boolean boolean41 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray34, "");
        nativeArray16.setAttributes("", (com.google.javascript.rhino.head.Scriptable) nativeArray34, 13);
        com.google.javascript.rhino.head.Scriptable scriptable44 = nativeArray34.getParentScope();
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array", (java.lang.Object) scriptable44);
        java.util.ListIterator listIterator46 = nativeArray1.listIterator();
        com.google.javascript.rhino.head.NativeArray nativeArray49 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int51 = nativeArray49.lastIndexOf((java.lang.Object) (short) 10);
        long long52 = nativeArray49.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray49, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable56 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray49);
        java.lang.Object[] objArray57 = nativeArray49.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int61 = nativeArray59.lastIndexOf((java.lang.Object) (short) 10);
        long long62 = nativeArray59.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray59, "", true);
        boolean boolean66 = nativeArray59.hasPrototypeMap();
        int int67 = nativeArray59.size();
        boolean boolean68 = nativeArray59.isEmpty();
        boolean boolean70 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray59, "Array");
        com.google.javascript.rhino.head.NativeArray nativeArray73 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int75 = nativeArray73.lastIndexOf((java.lang.Object) (short) 10);
        long long76 = nativeArray73.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray73, "", true);
        boolean boolean80 = nativeArray73.hasPrototypeMap();
        java.util.ListIterator listIterator81 = nativeArray73.listIterator();
        boolean boolean82 = nativeArray59.has("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray73);
        java.lang.Object[] objArray83 = nativeArray59.getAllIds();
        java.lang.Object[] objArray84 = nativeArray49.toArray(objArray83);
        long long85 = nativeArray49.getLength();
        int int86 = nativeArray1.getAttributes("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray49);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 1L + "'", long37 == 1L);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(scriptable44);
        org.junit.Assert.assertNotNull(listIterator46);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 1L + "'", long52 == 1L);
        org.junit.Assert.assertNull(scriptable56);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[length]");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 1L + "'", long62 == 1L);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 1L + "'", long76 == 1L);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(listIterator81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray83), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray83), "[null]");
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[null]");
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 1L + "'", long85 == 1L);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 5 + "'", int86 == 5);
    }

    @Test
    public void test2045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2045");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int22 = nativeArray20.lastIndexOf((java.lang.Object) (short) 10);
        long long23 = nativeArray20.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray20, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable27 = null;
        java.lang.Object[] objArray28 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable27);
        java.lang.Object[] objArray29 = nativeArray20.toArray(objArray28);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!", (java.lang.Object) objArray28);
        int int31 = nativeArray1.size();
        nativeArray1.activatePrototypeMap((int) (byte) 10);
        java.lang.Object obj35 = null;
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array", obj35, 8);
        boolean boolean39 = nativeArray1.contains((java.lang.Object) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable43 = nativeArray42.getParentScope();
        java.lang.Object[] objArray44 = nativeArray42.getAllIds();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj45 = com.google.javascript.rhino.head.ScriptableObject.callMethod((com.google.javascript.rhino.head.Scriptable) nativeArray1, "object", objArray44);
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EcmaError; message: TypeError: object is not a function, it is object.");
        } catch (com.google.javascript.rhino.head.EcmaError e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1L + "'", long23 == 1L);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[null]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(scriptable43);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[length]");
    }

    @Test
    public void test2046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2046");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        boolean boolean8 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "");
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int13 = nativeArray11.lastIndexOf((java.lang.Object) (short) 10);
        long long14 = nativeArray11.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray11, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray19.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray22, (java.lang.Object) (-1));
        java.lang.Object[] objArray25 = nativeArray19.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable26 = nativeArray19.getParentScope();
        boolean boolean27 = nativeArray11.containsAll((java.util.Collection) nativeArray19);
        com.google.javascript.rhino.head.Scriptable scriptable28 = nativeArray19.getParentScope();
        boolean boolean29 = nativeArray19.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable33 = nativeArray32.getParentScope();
        java.lang.Object[] objArray34 = nativeArray32.getIds();
        boolean boolean35 = nativeArray19.has("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray32);
        java.lang.reflect.Method method36 = null;
        java.lang.reflect.Method method37 = null;
        nativeArray4.defineProperty("hi!", (java.lang.Object) nativeArray19, method36, method37, 8);
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int44 = nativeArray42.lastIndexOf((java.lang.Object) (short) 10);
        long long45 = nativeArray42.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray42, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray53 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray50.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray53, (java.lang.Object) (-1));
        java.lang.Object[] objArray56 = nativeArray50.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable57 = nativeArray50.getParentScope();
        boolean boolean58 = nativeArray42.containsAll((java.util.Collection) nativeArray50);
        com.google.javascript.rhino.head.Scriptable scriptable59 = nativeArray50.getParentScope();
        boolean boolean60 = nativeArray50.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray63 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable64 = nativeArray63.getParentScope();
        java.lang.Object[] objArray65 = nativeArray63.getIds();
        boolean boolean66 = nativeArray50.has("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray63);
        boolean boolean67 = nativeArray4.has((int) (byte) 0, (com.google.javascript.rhino.head.Scriptable) nativeArray63);
        com.google.javascript.rhino.head.NativeArray nativeArray69 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray72 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray69.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray72, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray77 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray77.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj80 = nativeArray72.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray77);
        com.google.javascript.rhino.head.NativeArray nativeArray83 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int85 = nativeArray83.lastIndexOf((java.lang.Object) (short) 10);
        long long86 = nativeArray83.getLength();
        nativeArray83.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray77, "hi!", (java.lang.Object) (byte) 1);
        boolean boolean90 = nativeArray77.isSealed();
        nativeArray4.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray77);
        boolean boolean93 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[null]");
        org.junit.Assert.assertNull(scriptable26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(scriptable28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(scriptable33);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 1L + "'", long45 == 1L);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[null]");
        org.junit.Assert.assertNull(scriptable57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(scriptable59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(scriptable64);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertTrue("'" + long86 + "' != '" + 1L + "'", long86 == 1L);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
    }

    @Test
    public void test2047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2047");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        boolean boolean18 = nativeArray1.hasPrototypeMap();
        // The following exception was thrown during execution in test generation
        try {
            int int20 = nativeArray1.getAttributes(10);
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EvaluatorException; message: Property 10 not found.");
        } catch (com.google.javascript.rhino.head.EvaluatorException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test2048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2048");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.activatePrototypeMap((int) (short) 100);
        com.google.javascript.rhino.head.Scriptable scriptable4 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        java.lang.Object obj6 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 2);
        com.google.javascript.rhino.head.Scriptable scriptable7 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        java.lang.String str8 = nativeArray1.getClassName();
        // The following exception was thrown during execution in test generation
        try {
            nativeArray1.activatePrototypeMap(13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: null");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(scriptable4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(scriptable7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Array" + "'", str8, "Array");
    }

    @Test
    public void test2049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2049");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        nativeArray4.sealObject();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "Array", false);
        java.util.ListIterator listIterator20 = nativeArray4.listIterator();
        java.lang.Object[] objArray21 = nativeArray4.toArray();
        boolean boolean23 = nativeArray4.isConst("Array");
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(listIterator20);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[null]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test2050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2050");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray3 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray6 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray3.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray6, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray11.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj14 = nativeArray6.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray11);
        boolean boolean15 = nativeArray6.hasPrototypeMap();
        java.lang.Object[] objArray16 = nativeArray6.getIds();
        int int17 = nativeArray6.size();
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray20.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray23, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray28.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj31 = nativeArray23.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray28);
        boolean boolean32 = nativeArray23.hasPrototypeMap();
        java.lang.Object[] objArray33 = nativeArray23.getIds();
        int int34 = nativeArray23.size();
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int38 = nativeArray36.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray23.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray36);
        java.lang.Object obj40 = nativeArray6.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray23);
        java.lang.Object[] objArray41 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray6);
        boolean boolean43 = nativeArray6.isConst("hi!");
        nativeArray1.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray6);
        boolean boolean45 = nativeArray1.isSealed();
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int50 = nativeArray48.lastIndexOf((java.lang.Object) (short) 10);
        long long51 = nativeArray48.getLength();
        nativeArray48.delete((int) (byte) 1);
        boolean boolean55 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray48, "");
        com.google.javascript.rhino.head.NativeArray nativeArray57 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int59 = nativeArray57.lastIndexOf((java.lang.Object) (short) 10);
        long long60 = nativeArray57.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray57, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray65 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray68 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray65.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray68, (java.lang.Object) (-1));
        java.lang.Object[] objArray71 = nativeArray65.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable72 = nativeArray65.getParentScope();
        boolean boolean73 = nativeArray57.containsAll((java.util.Collection) nativeArray65);
        boolean boolean74 = nativeArray48.containsAll((java.util.Collection) nativeArray57);
        com.google.javascript.rhino.head.Scriptable scriptable76 = null;
        com.google.javascript.rhino.head.IdFunctionObject idFunctionObject78 = nativeArray57.exportAsJSClass(8, scriptable76, false);
        java.lang.Object obj79 = nativeArray1.get("", (com.google.javascript.rhino.head.Scriptable) idFunctionObject78);
        boolean boolean80 = nativeArray1.isExtensible();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj82 = nativeArray1.remove((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[hi!]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[hi!]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 1L + "'", long51 == 1L);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 1L + "'", long60 == 1L);
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[null]");
        org.junit.Assert.assertNull(scriptable72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(idFunctionObject78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
    }

    @Test
    public void test2051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2051");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int19 = nativeArray17.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray4.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray17);
        java.lang.Object[] objArray21 = nativeArray17.getAllIds();
        com.google.javascript.rhino.head.Scriptable scriptable23 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray17, "Array");
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        java.lang.Object obj27 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray25, "Array");
        boolean boolean29 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray25, "hi!");
        nativeArray17.setPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray25);
        boolean boolean31 = nativeArray25.hasPrototypeMap();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[length]");
        org.junit.Assert.assertNull(scriptable23);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test2052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2052");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray20, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj28 = nativeArray20.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray25);
        boolean boolean29 = nativeArray20.hasPrototypeMap();
        java.lang.Object[] objArray30 = nativeArray20.getIds();
        int int31 = nativeArray20.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray34.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray37, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj45 = nativeArray37.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray42);
        boolean boolean46 = nativeArray37.hasPrototypeMap();
        java.lang.Object[] objArray47 = nativeArray37.getIds();
        int int48 = nativeArray37.size();
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int52 = nativeArray50.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray37.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray50);
        java.lang.Object obj54 = nativeArray20.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        boolean boolean55 = nativeArray4.containsAll((java.util.Collection) nativeArray37);
        com.google.javascript.rhino.head.Scriptable scriptable56 = nativeArray4.getParentScope();
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable59 = nativeArray58.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable60 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray58);
        com.google.javascript.rhino.head.NativeArray nativeArray62 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int64 = nativeArray62.lastIndexOf((java.lang.Object) (short) 10);
        long long65 = nativeArray62.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray62, "", true);
        boolean boolean69 = nativeArray62.hasPrototypeMap();
        int int70 = nativeArray62.size();
        boolean boolean71 = nativeArray62.isEmpty();
        nativeArray58.setPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray62);
        nativeArray4.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray62);
        int int74 = nativeArray62.size();
        com.google.javascript.rhino.head.NativeArray nativeArray76 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray79 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray76.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray79, (java.lang.Object) (-1));
        java.lang.Object[] objArray82 = nativeArray76.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable83 = nativeArray76.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable84 = nativeArray76.getParentScope();
        boolean boolean85 = nativeArray76.isSealed();
        java.lang.String str86 = nativeArray76.getTypeOf();
        nativeArray62.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray76);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[hi!]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(scriptable56);
        org.junit.Assert.assertNull(scriptable59);
        org.junit.Assert.assertNull(scriptable60);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 1L + "'", long65 == 1L);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray82), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray82), "[null]");
        org.junit.Assert.assertNull(scriptable83);
        org.junit.Assert.assertNull(scriptable84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "object" + "'", str86, "object");
    }

    @Test
    public void test2053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2053");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.getAllIds();
        nativeArray24.delete("");
        java.lang.Object obj33 = nativeArray9.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!");
        nativeArray9.delete("Array");
        com.google.javascript.rhino.head.Scriptable scriptable38 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray9);
        java.lang.String str39 = nativeArray9.getClassName();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNull(scriptable38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Array" + "'", str39, "Array");
    }

    @Test
    public void test2054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2054");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        java.lang.Integer[] intArray7 = nativeArray1.getIndexIds();
        java.lang.Object obj9 = null;
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!", obj9);
        boolean boolean12 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 8);
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray14.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray17, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray21.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray24, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj32 = nativeArray24.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray29);
        com.google.javascript.rhino.head.Callable callable35 = null;
        nativeArray24.setGetterOrSetter("hi!", 0, callable35, false);
        java.lang.Integer[] intArray38 = nativeArray24.getIndexIds();
        nativeArray17.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray24);
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int44 = nativeArray42.lastIndexOf((java.lang.Object) (short) 10);
        long long45 = nativeArray42.getLength();
        nativeArray42.delete((int) (byte) 1);
        boolean boolean49 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray42, "");
        nativeArray24.setAttributes("", (com.google.javascript.rhino.head.Scriptable) nativeArray42, 13);
        nativeArray1.setPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray42);
        com.google.javascript.rhino.head.NativeArray nativeArray54 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int56 = nativeArray54.lastIndexOf((java.lang.Object) (short) 10);
        long long57 = nativeArray54.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray54, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray62 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray65 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray62.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray65, (java.lang.Object) (-1));
        java.lang.Object[] objArray68 = nativeArray62.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable69 = nativeArray62.getParentScope();
        boolean boolean70 = nativeArray54.containsAll((java.util.Collection) nativeArray62);
        com.google.javascript.rhino.head.NativeArray nativeArray73 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int75 = nativeArray73.lastIndexOf((java.lang.Object) (short) 10);
        long long76 = nativeArray73.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray73, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable80 = null;
        java.lang.Object[] objArray81 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable80);
        java.lang.Object[] objArray82 = nativeArray73.toArray(objArray81);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray54, "hi!", (java.lang.Object) objArray81);
        int int84 = nativeArray54.size();
        nativeArray54.activatePrototypeMap((int) (byte) 10);
        java.lang.Object obj88 = null;
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray54, "Array", obj88, 8);
        java.lang.Integer[] intArray91 = nativeArray54.getIndexIds();
        java.lang.Object[] objArray92 = nativeArray42.toArray((java.lang.Object[]) intArray91);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 1L + "'", long45 == 1L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 1L + "'", long57 == 1L);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[null]");
        org.junit.Assert.assertNull(scriptable69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 1L + "'", long76 == 1L);
        org.junit.Assert.assertNotNull(objArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[]");
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray82), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray82), "[null]");
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 1 + "'", int84 == 1);
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertNotNull(objArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray92), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray92), "[null]");
    }

    @Test
    public void test2055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2055");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable8 = nativeArray1.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable9 = nativeArray1.getParentScope();
        boolean boolean10 = nativeArray1.isSealed();
        com.google.javascript.rhino.head.Scriptable scriptable11 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray16, "", (java.lang.Object) 100);
        java.lang.Object obj20 = nativeArray13.associateValue((java.lang.Object) ' ', (java.lang.Object) nativeArray16);
        java.lang.Object[] objArray21 = nativeArray16.toArray();
        boolean boolean23 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray16, "");
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray29, (java.lang.Object) (-1));
        boolean boolean33 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray29, "");
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int38 = nativeArray36.lastIndexOf((java.lang.Object) (short) 10);
        long long39 = nativeArray36.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray36, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray44.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray47, (java.lang.Object) (-1));
        java.lang.Object[] objArray50 = nativeArray44.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable51 = nativeArray44.getParentScope();
        boolean boolean52 = nativeArray36.containsAll((java.util.Collection) nativeArray44);
        com.google.javascript.rhino.head.Scriptable scriptable53 = nativeArray44.getParentScope();
        boolean boolean54 = nativeArray44.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray57 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable58 = nativeArray57.getParentScope();
        java.lang.Object[] objArray59 = nativeArray57.getIds();
        boolean boolean60 = nativeArray44.has("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray57);
        java.lang.reflect.Method method61 = null;
        java.lang.reflect.Method method62 = null;
        nativeArray29.defineProperty("hi!", (java.lang.Object) nativeArray44, method61, method62, 8);
        nativeArray16.defineConst("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray44);
        java.lang.Object[] objArray66 = nativeArray16.getIds();
        nativeArray1.setPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray16);
        com.google.javascript.rhino.head.Scriptable scriptable68 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[null]");
        org.junit.Assert.assertNull(scriptable8);
        org.junit.Assert.assertNull(scriptable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(scriptable11);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[null]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 1L + "'", long39 == 1L);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[null]");
        org.junit.Assert.assertNull(scriptable51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(scriptable53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(scriptable58);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[]");
        org.junit.Assert.assertNull(scriptable68);
    }

    @Test
    public void test2056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2056");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", (java.lang.Object) 100);
        boolean boolean5 = nativeArray1.avoidObjectDetection();
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray8.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray11, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray16.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj19 = nativeArray11.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray16);
        boolean boolean20 = nativeArray11.hasPrototypeMap();
        java.lang.Object[] objArray21 = nativeArray11.getIds();
        int int22 = nativeArray11.size();
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int26 = nativeArray24.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray11.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray24);
        java.lang.Object[] objArray28 = nativeArray24.getAllIds();
        com.google.javascript.rhino.head.Context context29 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray31.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray34, (java.lang.Object) (-1));
        java.lang.Object[] objArray37 = nativeArray31.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable38 = nativeArray31.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable39 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray31);
        nativeArray24.defineOwnProperties(context29, (com.google.javascript.rhino.head.ScriptableObject) nativeArray31);
        boolean boolean41 = nativeArray1.has("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray31);
        nativeArray31.delete("object");
        boolean boolean45 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray31, (int) (byte) -1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[hi!]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[length]");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[null]");
        org.junit.Assert.assertNull(scriptable38);
        org.junit.Assert.assertNull(scriptable39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test2057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2057");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean8 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        java.lang.String str9 = nativeArray1.getTypeOf();
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray15.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray18, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray23.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj26 = nativeArray18.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray23);
        com.google.javascript.rhino.head.Callable callable29 = null;
        nativeArray18.setGetterOrSetter("hi!", 0, callable29, false);
        nativeArray12.setAttributes((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray18, (int) (short) 10);
        boolean boolean35 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray12, "object");
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!", (java.lang.Object) "object");
        boolean boolean38 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 13);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List list41 = nativeArray1.subList((int) '#', (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "object" + "'", str9, "object");
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    }

    @Test
    public void test2058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2058");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.getAllIds();
        java.lang.String str8 = nativeArray1.getTypeOf();
        int int9 = nativeArray1.size();
        boolean boolean11 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 2);
        java.lang.Object obj13 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, (int) (short) 10);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray15.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray18, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray23.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj26 = nativeArray18.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray23);
        boolean boolean27 = nativeArray18.hasPrototypeMap();
        java.lang.Object[] objArray28 = nativeArray18.getIds();
        int int29 = nativeArray18.size();
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray31.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray34, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray39.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj42 = nativeArray34.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray39);
        boolean boolean43 = nativeArray34.hasPrototypeMap();
        java.lang.Object[] objArray44 = nativeArray34.getIds();
        int int45 = nativeArray34.size();
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray48.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray51, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray56.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj59 = nativeArray51.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray56);
        boolean boolean60 = nativeArray51.hasPrototypeMap();
        java.lang.Object[] objArray61 = nativeArray51.getIds();
        int int62 = nativeArray51.size();
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int66 = nativeArray64.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray51.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray64);
        java.lang.Object obj68 = nativeArray34.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray51);
        boolean boolean69 = nativeArray18.containsAll((java.util.Collection) nativeArray51);
        com.google.javascript.rhino.head.Scriptable scriptable70 = nativeArray18.getParentScope();
        java.lang.Object[] objArray71 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray18);
        java.lang.Object obj72 = nativeArray1.get((java.lang.Object) nativeArray18);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator listIterator74 = nativeArray1.listIterator((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[length]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "object" + "'", str8, "object");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[hi!]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[hi!]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[hi!]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNull(scriptable70);
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!]");
        org.junit.Assert.assertNull(obj72);
    }

    @Test
    public void test2059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2059");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        com.google.javascript.rhino.head.Scriptable scriptable18 = nativeArray9.getParentScope();
        boolean boolean19 = nativeArray9.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int24 = nativeArray22.lastIndexOf((java.lang.Object) (short) 10);
        long long25 = nativeArray22.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray22, "", true);
        boolean boolean29 = nativeArray22.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable33 = nativeArray32.getParentScope();
        java.lang.Object[] objArray34 = nativeArray32.getIds();
        boolean boolean35 = nativeArray32.isEmpty();
        boolean boolean36 = nativeArray22.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray32);
        boolean boolean38 = nativeArray32.isConst("object");
        java.lang.Object obj40 = nativeArray32.get((java.lang.Object) (byte) 10);
        com.google.javascript.rhino.head.Scriptable scriptable41 = null;
        nativeArray32.setParentScope(scriptable41);
        nativeArray9.setAttributes((-1), (com.google.javascript.rhino.head.Scriptable) nativeArray32, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable47 = nativeArray46.getParentScope();
        java.lang.Object[] objArray48 = nativeArray46.getIds();
        boolean boolean49 = nativeArray46.avoidObjectDetection();
        java.lang.Object obj53 = nativeArray46.getGetterOrSetter("", 0, true);
        nativeArray32.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray46);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray32, "object", false);
        boolean boolean58 = nativeArray32.hasPrototypeMap();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(scriptable18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 1L + "'", long25 == 1L);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(scriptable33);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNull(scriptable47);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test2060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2060");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        nativeArray1.put((int) (byte) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray9, (java.lang.Object) 100L);
        java.lang.Object obj18 = nativeArray9.get((long) (byte) 10);
        long long19 = nativeArray9.getLength();
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 100L + "'", obj18, 100L);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 11L + "'", long19 == 11L);
    }

    @Test
    public void test2061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2061");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj38 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        java.lang.Object[] objArray39 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray21);
        boolean boolean40 = nativeArray21.isSealed();
        com.google.javascript.rhino.head.Scriptable scriptable41 = nativeArray21.getPrototype();
        nativeArray21.setAttributes("object", (int) (short) 10);
        java.lang.Integer[] intArray45 = nativeArray21.getIndexIds();
        boolean boolean47 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray21, "hi!");
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(scriptable41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test2062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2062");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        java.lang.Integer[] intArray7 = nativeArray1.getIndexIds();
        java.lang.Object obj9 = null;
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!", obj9);
        java.lang.Object obj12 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray1, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray15.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray18, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray23.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj26 = nativeArray18.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray23);
        boolean boolean27 = nativeArray18.hasPrototypeMap();
        java.lang.Object[] objArray28 = nativeArray18.getIds();
        int int29 = nativeArray18.size();
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray31.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray34, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray39.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj42 = nativeArray34.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray39);
        boolean boolean43 = nativeArray34.hasPrototypeMap();
        java.lang.Object[] objArray44 = nativeArray34.getIds();
        int int45 = nativeArray34.size();
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray48.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray51, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray56.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj59 = nativeArray51.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray56);
        boolean boolean60 = nativeArray51.hasPrototypeMap();
        java.lang.Object[] objArray61 = nativeArray51.getIds();
        int int62 = nativeArray51.size();
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int66 = nativeArray64.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray51.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray64);
        java.lang.Object obj68 = nativeArray34.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray51);
        boolean boolean69 = nativeArray18.containsAll((java.util.Collection) nativeArray51);
        com.google.javascript.rhino.head.NativeArray nativeArray72 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable73 = nativeArray72.getParentScope();
        java.lang.Object[] objArray74 = nativeArray72.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray76 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray79 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray76.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray79, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray84 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray84.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj87 = nativeArray79.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray84);
        java.lang.Object obj88 = nativeArray72.getAssociatedValue((java.lang.Object) nativeArray79);
        com.google.javascript.rhino.head.Scriptable scriptable89 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray72);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray51, "hi!", (java.lang.Object) scriptable89);
        boolean boolean91 = nativeArray51.avoidObjectDetection();
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "object", (java.lang.Object) boolean91);
        com.google.javascript.rhino.head.Scriptable scriptable93 = nativeArray1.getPrototype();
        // The following exception was thrown during execution in test generation
        try {
            int int95 = nativeArray1.getAttributes((int) 'a');
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EvaluatorException; message: Property 97 not found.");
        } catch (com.google.javascript.rhino.head.EvaluatorException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[hi!]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[hi!]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[hi!]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNull(scriptable73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[length]");
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNull(obj88);
        org.junit.Assert.assertNull(scriptable89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNull(scriptable93);
    }

    @Test
    public void test2063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2063");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable11 = nativeArray10.getParentScope();
        java.lang.Object[] objArray12 = nativeArray10.getIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", (java.lang.Object) nativeArray10, 0);
        java.lang.Object[] objArray15 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray10);
        boolean boolean17 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray10, (int) '4');
        java.lang.Object obj21 = nativeArray10.getGetterOrSetter("hi!", (int) (byte) 0, false);
        java.util.Iterator iterator22 = nativeArray10.iterator();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(scriptable11);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(iterator22);
    }

    @Test
    public void test2064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2064");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        nativeArray4.sealObject();
        java.lang.Object obj18 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, (int) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int23 = nativeArray21.lastIndexOf((java.lang.Object) (short) 10);
        long long24 = nativeArray21.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray21, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray32, (java.lang.Object) (-1));
        java.lang.Object[] objArray35 = nativeArray29.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable36 = nativeArray29.getParentScope();
        boolean boolean37 = nativeArray21.containsAll((java.util.Collection) nativeArray29);
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int42 = nativeArray40.lastIndexOf((java.lang.Object) (short) 10);
        long long43 = nativeArray40.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray40, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable47 = null;
        java.lang.Object[] objArray48 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable47);
        java.lang.Object[] objArray49 = nativeArray40.toArray(objArray48);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray21, "hi!", (java.lang.Object) objArray48);
        java.lang.String str51 = nativeArray21.getTypeOf();
        java.lang.Object[] objArray52 = nativeArray21.getAllIds();
        nativeArray4.defineConst("object", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        boolean boolean55 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "");
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 1L + "'", long24 == 1L);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[null]");
        org.junit.Assert.assertNull(scriptable36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 1L + "'", long43 == 1L);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[]");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[null]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "object" + "'", str51, "object");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[hi!, length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[hi!, length]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
    }

    @Test
    public void test2065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2065");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable8 = nativeArray1.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable9 = nativeArray1.getParentScope();
        boolean boolean10 = nativeArray1.isSealed();
        boolean boolean11 = nativeArray1.isEmpty();
        boolean boolean13 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 0);
        java.lang.Class<?> wildcardClass14 = nativeArray1.getClass();
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[null]");
        org.junit.Assert.assertNull(scriptable8);
        org.junit.Assert.assertNull(scriptable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test2066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2066");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        boolean boolean8 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "");
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int13 = nativeArray11.lastIndexOf((java.lang.Object) (short) 10);
        long long14 = nativeArray11.getLength();
        nativeArray11.setAttributes((int) (byte) 100, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int22 = nativeArray20.lastIndexOf((java.lang.Object) (short) 10);
        long long23 = nativeArray20.getLength();
        nativeArray20.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray11, (int) (byte) -1, (java.lang.Object) nativeArray20);
        boolean boolean27 = nativeArray4.has(4, (com.google.javascript.rhino.head.Scriptable) nativeArray11);
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray32, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray37.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj40 = nativeArray32.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int45 = nativeArray43.lastIndexOf((java.lang.Object) (short) 10);
        long long46 = nativeArray43.getLength();
        nativeArray43.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray37, "hi!", (java.lang.Object) (byte) 1);
        boolean boolean50 = nativeArray37.isSealed();
        boolean boolean51 = nativeArray4.containsAll((java.util.Collection) nativeArray37);
        java.lang.Object[] objArray52 = nativeArray37.toArray();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1L + "'", long23 == 1L);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 1L + "'", long46 == 1L);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[null]");
    }

    @Test
    public void test2067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2067");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.activatePrototypeMap((int) (short) 100);
        com.google.javascript.rhino.head.Scriptable scriptable4 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        java.lang.Object obj6 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 2);
        com.google.javascript.rhino.head.Scriptable scriptable7 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        java.lang.String str8 = nativeArray1.getClassName();
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int12 = nativeArray10.lastIndexOf((java.lang.Object) (short) 10);
        long long13 = nativeArray10.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray10, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        java.lang.Object[] objArray24 = nativeArray18.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable25 = nativeArray18.getParentScope();
        boolean boolean26 = nativeArray10.containsAll((java.util.Collection) nativeArray18);
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray28.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray31, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray36.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj39 = nativeArray31.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray36);
        boolean boolean40 = nativeArray31.hasPrototypeMap();
        java.lang.Object[] objArray41 = nativeArray31.getIds();
        java.lang.Object[] objArray42 = nativeArray18.toArray(objArray41);
        boolean boolean44 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray18, "Array");
        com.google.javascript.rhino.head.Scriptable scriptable45 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray18);
        boolean boolean46 = nativeArray18.isExtensible();
        boolean boolean47 = nativeArray1.contains((java.lang.Object) boolean46);
        org.junit.Assert.assertNull(scriptable4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(scriptable7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Array" + "'", str8, "Array");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[null]");
        org.junit.Assert.assertNull(scriptable25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[null]");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[null]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(scriptable45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test2068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2068");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable11 = nativeArray10.getParentScope();
        java.lang.Object[] objArray12 = nativeArray10.getIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", (java.lang.Object) nativeArray10, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray20, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj28 = nativeArray20.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray25);
        boolean boolean29 = nativeArray20.hasPrototypeMap();
        java.lang.Object[] objArray30 = nativeArray20.getIds();
        int int31 = nativeArray20.size();
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int35 = nativeArray33.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray20.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray33);
        java.lang.Object obj37 = nativeArray1.get((int) (short) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray33);
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray39.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray42, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int49 = nativeArray47.lastIndexOf((java.lang.Object) (short) 10);
        long long50 = nativeArray47.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray47, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray55.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray58, (java.lang.Object) (-1));
        java.lang.Object[] objArray61 = nativeArray55.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable62 = nativeArray55.getParentScope();
        boolean boolean63 = nativeArray47.containsAll((java.util.Collection) nativeArray55);
        com.google.javascript.rhino.head.NativeArray nativeArray66 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int68 = nativeArray66.lastIndexOf((java.lang.Object) (short) 10);
        long long69 = nativeArray66.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray66, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable73 = null;
        java.lang.Object[] objArray74 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable73);
        java.lang.Object[] objArray75 = nativeArray66.toArray(objArray74);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray47, "hi!", (java.lang.Object) objArray74);
        nativeArray47.activatePrototypeMap((int) (byte) 10);
        boolean boolean79 = nativeArray39.has((int) (short) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray47);
        com.google.javascript.rhino.head.NativeArray nativeArray82 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int84 = nativeArray82.lastIndexOf((java.lang.Object) (short) 10);
        long long85 = nativeArray82.getLength();
        java.lang.Object[] objArray86 = nativeArray82.toArray();
        java.lang.Object obj87 = nativeArray39.get((int) (byte) 100, (com.google.javascript.rhino.head.Scriptable) nativeArray82);
        java.lang.Object obj88 = nativeArray33.getAssociatedValue((java.lang.Object) nativeArray82);
        com.google.javascript.rhino.head.Scriptable scriptable89 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray33);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(scriptable11);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 1L + "'", long50 == 1L);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[null]");
        org.junit.Assert.assertNull(scriptable62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 1L + "'", long69 == 1L);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[]");
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[null]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 1L + "'", long85 == 1L);
        org.junit.Assert.assertNotNull(objArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray86), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray86), "[null]");
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNull(obj88);
        org.junit.Assert.assertNotNull(scriptable89);
    }

    @Test
    public void test2069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2069");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray3 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int5 = nativeArray3.lastIndexOf((java.lang.Object) (short) 10);
        long long6 = nativeArray3.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray3, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray11.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray14, (java.lang.Object) (-1));
        java.lang.Object[] objArray17 = nativeArray11.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable18 = nativeArray11.getParentScope();
        boolean boolean19 = nativeArray3.containsAll((java.util.Collection) nativeArray11);
        com.google.javascript.rhino.head.Scriptable scriptable20 = nativeArray11.getParentScope();
        boolean boolean21 = nativeArray1.containsAll((java.util.Collection) nativeArray11);
        java.lang.Object[] objArray22 = nativeArray1.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int27 = nativeArray25.lastIndexOf((java.lang.Object) (short) 10);
        long long28 = nativeArray25.getLength();
        nativeArray25.delete((int) (byte) 1);
        boolean boolean31 = nativeArray25.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable35 = nativeArray34.getParentScope();
        java.lang.Object[] objArray36 = nativeArray34.getIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray25, "", (java.lang.Object) nativeArray34, 0);
        java.lang.Integer[] intArray39 = nativeArray25.getIndexIds();
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int44 = nativeArray42.lastIndexOf((java.lang.Object) (short) 10);
        long long45 = nativeArray42.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray42, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable49 = null;
        java.lang.Object[] objArray50 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable49);
        java.lang.Object[] objArray51 = nativeArray42.toArray(objArray50);
        com.google.javascript.rhino.head.NativeArray nativeArray54 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int56 = nativeArray54.lastIndexOf((java.lang.Object) (short) 10);
        long long57 = nativeArray54.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray54, "", true);
        boolean boolean61 = nativeArray54.hasPrototypeMap();
        int int62 = nativeArray54.size();
        boolean boolean63 = nativeArray54.isEmpty();
        boolean boolean65 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray54, "Array");
        java.lang.Object obj66 = nativeArray42.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray54);
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray25, "object", (java.lang.Object) nativeArray42, (int) (short) 10);
        com.google.javascript.rhino.head.NativeArray nativeArray70 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int72 = nativeArray70.lastIndexOf((java.lang.Object) (short) 10);
        long long73 = nativeArray70.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray70, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable77 = null;
        java.lang.Object[] objArray78 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable77);
        java.lang.Object[] objArray79 = nativeArray70.toArray(objArray78);
        com.google.javascript.rhino.head.Scriptable scriptable80 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray70);
        com.google.javascript.rhino.head.Scriptable scriptable81 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray70);
        com.google.javascript.rhino.head.Scriptable scriptable83 = null;
        boolean boolean84 = nativeArray70.has((int) (byte) 10, scriptable83);
        nativeArray42.setPrototype(scriptable83);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, (int) (byte) 0, (java.lang.Object) scriptable83);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[null]");
        org.junit.Assert.assertNull(scriptable18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(scriptable20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[length]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 1L + "'", long28 == 1L);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(scriptable35);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 1L + "'", long45 == 1L);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[null]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 1L + "'", long57 == 1L);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 1L + "'", long73 == 1L);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[]");
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[null]");
        org.junit.Assert.assertNotNull(scriptable80);
        org.junit.Assert.assertNotNull(scriptable81);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test2070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2070");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.getAllIds();
        java.lang.String str8 = nativeArray1.getTypeOf();
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray10.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray13, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj21 = nativeArray13.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray18);
        boolean boolean22 = nativeArray13.hasPrototypeMap();
        java.lang.Object[] objArray23 = nativeArray13.getIds();
        int int24 = nativeArray13.size();
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int28 = nativeArray26.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray13.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray26);
        java.lang.Object[] objArray30 = nativeArray26.getAllIds();
        com.google.javascript.rhino.head.Scriptable scriptable32 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray26, "Array");
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        java.lang.Object obj36 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray34, "Array");
        boolean boolean38 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray34, "hi!");
        nativeArray26.setPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        com.google.javascript.rhino.head.Scriptable scriptable40 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj42 = nativeArray34.get(0L);
        java.lang.Object obj43 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray1, obj42);
        com.google.javascript.rhino.head.Context context44 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable47 = nativeArray46.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable48 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray46);
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int52 = nativeArray50.lastIndexOf((java.lang.Object) (short) 10);
        long long53 = nativeArray50.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray50, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray61 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray58.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray61, (java.lang.Object) (-1));
        java.lang.Object[] objArray64 = nativeArray58.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable65 = nativeArray58.getParentScope();
        boolean boolean66 = nativeArray50.containsAll((java.util.Collection) nativeArray58);
        com.google.javascript.rhino.head.NativeArray nativeArray69 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int71 = nativeArray69.lastIndexOf((java.lang.Object) (short) 10);
        long long72 = nativeArray69.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray69, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable76 = null;
        java.lang.Object[] objArray77 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable76);
        java.lang.Object[] objArray78 = nativeArray69.toArray(objArray77);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray50, "hi!", (java.lang.Object) objArray77);
        nativeArray50.activatePrototypeMap((int) (byte) 10);
        com.google.javascript.rhino.head.Scriptable scriptable82 = nativeArray50.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable84 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray50, "object");
        boolean boolean85 = nativeArray46.containsAll((java.util.Collection) nativeArray50);
        nativeArray1.defineOwnProperties(context44, (com.google.javascript.rhino.head.ScriptableObject) nativeArray46);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[length]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "object" + "'", str8, "object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[hi!]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertNull(scriptable32);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(scriptable40);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNull(scriptable47);
        org.junit.Assert.assertNull(scriptable48);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 1L + "'", long53 == 1L);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[null]");
        org.junit.Assert.assertNull(scriptable65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 1L + "'", long72 == 1L);
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray77), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray77), "[]");
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[null]");
        org.junit.Assert.assertNull(scriptable82);
        org.junit.Assert.assertNull(scriptable84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
    }

    @Test
    public void test2071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2071");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable8 = nativeArray1.getParentScope();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean10 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty(scriptable8, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[null]");
        org.junit.Assert.assertNull(scriptable8);
    }

    @Test
    public void test2072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2072");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "", (java.lang.Object) 100);
        java.lang.Object obj8 = nativeArray1.associateValue((java.lang.Object) ' ', (java.lang.Object) nativeArray4);
        java.lang.Object[] objArray9 = nativeArray4.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int13 = nativeArray11.lastIndexOf((java.lang.Object) (short) 10);
        long long14 = nativeArray11.getLength();
        nativeArray11.delete((int) (byte) 1);
        boolean boolean17 = nativeArray11.isExtensible();
        java.lang.Object obj19 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray11, 4);
        java.lang.Object[] objArray20 = nativeArray11.toArray();
        nativeArray11.delete((int) (short) 0);
        java.lang.Object obj24 = null;
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray11, "", obj24);
        boolean boolean26 = nativeArray11.isEmpty();
        java.lang.Object obj27 = nativeArray4.getAssociatedValue((java.lang.Object) nativeArray11);
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int31 = nativeArray29.lastIndexOf((java.lang.Object) (short) 10);
        long long32 = nativeArray29.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray29, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable36 = null;
        java.lang.Object[] objArray37 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable36);
        java.lang.Object[] objArray38 = nativeArray29.toArray(objArray37);
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int43 = nativeArray41.lastIndexOf((java.lang.Object) (short) 10);
        long long44 = nativeArray41.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray41, "", true);
        boolean boolean48 = nativeArray41.hasPrototypeMap();
        int int49 = nativeArray41.size();
        boolean boolean50 = nativeArray41.isEmpty();
        boolean boolean52 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray41, "Array");
        java.lang.Object obj53 = nativeArray29.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray41);
        com.google.javascript.rhino.head.Scriptable scriptable54 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray29);
        com.google.javascript.rhino.head.NativeArray nativeArray57 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray57.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray60, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray65 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray65.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj68 = nativeArray60.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray65);
        boolean boolean69 = nativeArray60.hasPrototypeMap();
        java.lang.Object[] objArray70 = nativeArray60.getIds();
        int int71 = nativeArray60.size();
        com.google.javascript.rhino.head.NativeArray nativeArray73 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int75 = nativeArray73.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray60.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray73);
        com.google.javascript.rhino.head.NativeArray nativeArray79 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray79.activatePrototypeMap((int) (short) 100);
        boolean boolean83 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray79, "hi!");
        nativeArray60.setAttributes("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray79, 8);
        nativeArray29.setAttributes("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray60, 0);
        com.google.javascript.rhino.head.Scriptable scriptable88 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray60);
        nativeArray4.setPrototype(scriptable88);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[null]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[null]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1L + "'", long32 == 1L);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[null]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 1L + "'", long44 == 1L);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNull(scriptable54);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[hi!]");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNull(scriptable88);
    }

    @Test
    public void test2073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2073");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        java.lang.Integer[] intArray7 = nativeArray1.getIndexIds();
        java.lang.Object obj9 = null;
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!", obj9);
        java.lang.Object obj12 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray1, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int16 = nativeArray14.lastIndexOf((java.lang.Object) (short) 10);
        long long17 = nativeArray14.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray14, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable21 = null;
        java.lang.Object[] objArray22 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable21);
        java.lang.Object[] objArray23 = nativeArray14.toArray(objArray22);
        com.google.javascript.rhino.head.Scriptable scriptable24 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray14);
        boolean boolean25 = nativeArray1.contains((java.lang.Object) nativeArray14);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray27.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray30, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray35.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray38, (java.lang.Object) (-1));
        nativeArray27.put((int) (byte) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray35, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray45.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray48, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray53 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray53.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj56 = nativeArray48.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray53);
        boolean boolean57 = nativeArray48.hasPrototypeMap();
        java.lang.Object[] objArray58 = nativeArray48.getIds();
        int int59 = nativeArray48.size();
        boolean boolean60 = nativeArray27.has((int) (short) 100, (com.google.javascript.rhino.head.Scriptable) nativeArray48);
        boolean boolean61 = nativeArray48.avoidObjectDetection();
        java.util.Iterator iterator62 = nativeArray48.iterator();
        boolean boolean63 = nativeArray1.contains((java.lang.Object) iterator62);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        nativeArray1.delete((int) ' ');
        long long68 = nativeArray1.getLength();
        int int69 = nativeArray1.size();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 1L + "'", long17 == 1L);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[null]");
        org.junit.Assert.assertNotNull(scriptable24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[hi!]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(iterator62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 1L + "'", long68 == 1L);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
    }

    @Test
    public void test2074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2074");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.setAttributes((int) (byte) 100, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int12 = nativeArray10.lastIndexOf((java.lang.Object) (short) 10);
        long long13 = nativeArray10.getLength();
        nativeArray10.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, (int) (byte) -1, (java.lang.Object) nativeArray10);
        boolean boolean17 = nativeArray1.isSealed();
        nativeArray1.setAttributes((int) (byte) 10, 0);
        java.lang.String str21 = nativeArray1.getClassName();
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray23.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray26, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray31.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj34 = nativeArray26.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray31);
        boolean boolean35 = nativeArray26.hasPrototypeMap();
        java.lang.Object[] objArray36 = nativeArray26.getIds();
        int int37 = nativeArray26.size();
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray40.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray43, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray48.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj51 = nativeArray43.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray48);
        boolean boolean52 = nativeArray43.hasPrototypeMap();
        java.lang.Object[] objArray53 = nativeArray43.getIds();
        int int54 = nativeArray43.size();
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int58 = nativeArray56.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray43.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray56);
        java.lang.Object obj60 = nativeArray26.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray43);
        java.lang.Object[] objArray61 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray43);
        boolean boolean62 = nativeArray43.isSealed();
        com.google.javascript.rhino.head.Scriptable scriptable63 = nativeArray43.getPrototype();
        nativeArray43.setAttributes("object", (int) (short) 10);
        java.lang.Integer[] intArray67 = nativeArray43.getIndexIds();
        java.lang.Object[] objArray68 = nativeArray1.toArray((java.lang.Object[]) intArray67);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Array" + "'", str21, "Array");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[hi!]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[hi!]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(scriptable63);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[null]");
    }

    @Test
    public void test2075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2075");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable2 = nativeArray1.getParentScope();
        com.google.javascript.rhino.head.NativeArray nativeArray5 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray5.activatePrototypeMap((int) (short) 100);
        com.google.javascript.rhino.head.Scriptable scriptable9 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray5, "");
        boolean boolean10 = nativeArray1.has(100, scriptable9);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int14 = nativeArray12.lastIndexOf((java.lang.Object) (short) 10);
        long long15 = nativeArray12.getLength();
        nativeArray12.delete((int) (byte) 1);
        boolean boolean18 = nativeArray12.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable22 = nativeArray21.getParentScope();
        java.lang.Object[] objArray23 = nativeArray21.getIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray12, "", (java.lang.Object) nativeArray21, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray28.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray31, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray36.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj39 = nativeArray31.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray36);
        boolean boolean40 = nativeArray31.hasPrototypeMap();
        java.lang.Object[] objArray41 = nativeArray31.getIds();
        int int42 = nativeArray31.size();
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int46 = nativeArray44.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray31.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray44);
        java.lang.Object obj48 = nativeArray12.get((int) (short) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray44);
        com.google.javascript.rhino.head.Scriptable scriptable49 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray44);
        nativeArray1.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray44);
        long long51 = nativeArray44.getLength();
        nativeArray44.preventExtensions();
        boolean boolean54 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray44, (int) (byte) -1);
        org.junit.Assert.assertNull(scriptable2);
        org.junit.Assert.assertNull(scriptable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 1L + "'", long15 == 1L);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(scriptable22);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[hi!]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(scriptable49);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 1L + "'", long51 == 1L);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
    }

    @Test
    public void test2076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2076");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.setAttributes((int) (byte) 100, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int12 = nativeArray10.lastIndexOf((java.lang.Object) (short) 10);
        long long13 = nativeArray10.getLength();
        nativeArray10.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, (int) (byte) -1, (java.lang.Object) nativeArray10);
        long long17 = nativeArray1.getLength();
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray19.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray22, (java.lang.Object) (-1));
        java.lang.Object[] objArray25 = nativeArray19.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable26 = nativeArray19.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable27 = nativeArray19.getParentScope();
        boolean boolean28 = nativeArray19.isSealed();
        boolean boolean29 = nativeArray19.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray32.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray35, (java.lang.Object) (-1));
        java.lang.Object[] objArray38 = nativeArray32.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable39 = nativeArray32.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable40 = nativeArray32.getParentScope();
        boolean boolean41 = nativeArray32.isSealed();
        java.lang.Object obj43 = nativeArray32.get(0L);
        long long44 = nativeArray32.getLength();
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int48 = nativeArray46.lastIndexOf((java.lang.Object) (short) 10);
        long long49 = nativeArray46.getLength();
        nativeArray46.delete((int) (byte) 1);
        boolean boolean52 = nativeArray46.isExtensible();
        com.google.javascript.rhino.head.Scriptable scriptable53 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray46);
        nativeArray19.putConst("", (com.google.javascript.rhino.head.Scriptable) nativeArray32, (java.lang.Object) nativeArray46);
        java.lang.Object obj55 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray1, (java.lang.Object) "");
        boolean boolean56 = nativeArray1.avoidObjectDetection();
        nativeArray1.sealObject();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 1L + "'", long17 == 1L);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[null]");
        org.junit.Assert.assertNull(scriptable26);
        org.junit.Assert.assertNull(scriptable27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[null]");
        org.junit.Assert.assertNull(scriptable39);
        org.junit.Assert.assertNull(scriptable40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 1L + "'", long44 == 1L);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 1L + "'", long49 == 1L);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(scriptable53);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test2077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2077");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable2 = nativeArray1.getParentScope();
        java.lang.Object[] objArray3 = nativeArray1.getIds();
        boolean boolean4 = nativeArray1.isEmpty();
        nativeArray1.delete((int) 'a');
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray9);
        java.lang.Integer[] intArray17 = nativeArray9.getIndexIds();
        nativeArray9.preventExtensions();
        java.lang.Object obj20 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!");
        java.lang.Object obj21 = nativeArray1.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        java.util.ListIterator listIterator22 = nativeArray9.listIterator();
        org.junit.Assert.assertNull(scriptable2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(listIterator22);
    }

    @Test
    public void test2078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2078");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj38 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        int int40 = nativeArray4.indexOf((java.lang.Object) 100.0f);
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray42, "", (java.lang.Object) 100);
        boolean boolean46 = nativeArray42.avoidObjectDetection();
        boolean boolean48 = nativeArray42.isConst("hi!");
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray54 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray51.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray54, (java.lang.Object) (-1));
        nativeArray42.setAttributes(0, (com.google.javascript.rhino.head.Scriptable) nativeArray54, (int) (byte) 10);
        int int59 = nativeArray4.lastIndexOf((java.lang.Object) nativeArray54);
        java.lang.Object[] objArray60 = nativeArray4.getIds();
        com.google.javascript.rhino.head.NativeArray nativeArray63 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable64 = nativeArray63.getParentScope();
        java.lang.Object[] objArray65 = nativeArray63.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray67 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray70 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray67.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray70, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray75 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray75.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj78 = nativeArray70.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray75);
        java.lang.Object obj79 = nativeArray63.getAssociatedValue((java.lang.Object) nativeArray70);
        com.google.javascript.rhino.head.NativeArray nativeArray81 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable82 = nativeArray81.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable83 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray81);
        com.google.javascript.rhino.head.NativeArray nativeArray85 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int87 = nativeArray85.lastIndexOf((java.lang.Object) (short) 10);
        long long88 = nativeArray85.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray85, "", true);
        boolean boolean92 = nativeArray85.hasPrototypeMap();
        int int93 = nativeArray85.size();
        boolean boolean94 = nativeArray85.isEmpty();
        nativeArray81.setPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray85);
        java.lang.Object obj96 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray70, (java.lang.Object) nativeArray81);
        // The following exception was thrown during execution in test generation
        try {
            nativeArray4.defineProperty("object", (java.lang.Object) nativeArray70, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: 52");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[hi!]");
        org.junit.Assert.assertNull(scriptable64);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[length]");
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertNull(scriptable82);
        org.junit.Assert.assertNull(scriptable83);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + 1L + "'", long88 == 1L);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 1 + "'", int93 == 1);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNull(obj96);
    }

    @Test
    public void test2079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2079");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray8.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray11, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray16.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj19 = nativeArray11.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray16);
        com.google.javascript.rhino.head.Callable callable22 = null;
        nativeArray11.setGetterOrSetter("hi!", 0, callable22, false);
        java.lang.Integer[] intArray25 = nativeArray11.getIndexIds();
        nativeArray4.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray11);
        boolean boolean28 = nativeArray11.isConst("hi!");
        java.lang.Object[] objArray29 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray11);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[hi!]");
    }

    @Test
    public void test2080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2080");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray19.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray22, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray27.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj30 = nativeArray22.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray27);
        boolean boolean31 = nativeArray22.hasPrototypeMap();
        java.lang.Object[] objArray32 = nativeArray22.getIds();
        java.lang.Object[] objArray33 = nativeArray9.toArray(objArray32);
        boolean boolean35 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "Array");
        boolean boolean37 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, (int) (short) 100);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[null]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[null]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test2081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2081");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        com.google.javascript.rhino.head.Scriptable scriptable18 = nativeArray9.getParentScope();
        boolean boolean19 = nativeArray9.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable23 = nativeArray22.getParentScope();
        java.lang.Object[] objArray24 = nativeArray22.getIds();
        boolean boolean25 = nativeArray9.has("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray22);
        java.lang.Integer[] intArray26 = nativeArray9.getIndexIds();
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray28.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray31, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int37 = nativeArray35.lastIndexOf((java.lang.Object) (short) 10);
        long long38 = nativeArray35.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray35, "", true);
        boolean boolean42 = nativeArray35.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable46 = nativeArray45.getParentScope();
        java.lang.Object[] objArray47 = nativeArray45.getIds();
        boolean boolean48 = nativeArray45.isEmpty();
        boolean boolean49 = nativeArray35.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray45);
        boolean boolean50 = nativeArray28.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray35);
        com.google.javascript.rhino.head.NativeArray nativeArray53 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int55 = nativeArray53.lastIndexOf((java.lang.Object) (short) 10);
        long long56 = nativeArray53.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray53, "", true);
        boolean boolean60 = nativeArray53.hasPrototypeMap();
        int int61 = nativeArray53.size();
        boolean boolean62 = nativeArray53.isEmpty();
        boolean boolean64 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray53, "Array");
        com.google.javascript.rhino.head.NativeArray nativeArray67 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int69 = nativeArray67.lastIndexOf((java.lang.Object) (short) 10);
        long long70 = nativeArray67.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray67, "", true);
        boolean boolean74 = nativeArray67.hasPrototypeMap();
        java.util.ListIterator listIterator75 = nativeArray67.listIterator();
        boolean boolean76 = nativeArray53.has("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray67);
        boolean boolean77 = nativeArray53.hasPrototypeMap();
        java.lang.Object[] objArray78 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray53);
        java.lang.reflect.Method method79 = null;
        java.lang.reflect.Method method80 = null;
        nativeArray35.defineProperty("hi!", (java.lang.Object) nativeArray53, method79, method80, (int) (short) 1);
        boolean boolean83 = nativeArray53.avoidObjectDetection();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean84 = nativeArray9.remove((java.lang.Object) boolean83);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(scriptable18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(scriptable23);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 1L + "'", long38 == 1L);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(scriptable46);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 1L + "'", long56 == 1L);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 1L + "'", long70 == 1L);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(listIterator75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[]");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test2082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2082");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        com.google.javascript.rhino.head.Scriptable scriptable18 = nativeArray9.getParentScope();
        boolean boolean19 = nativeArray9.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int24 = nativeArray22.lastIndexOf((java.lang.Object) (short) 10);
        long long25 = nativeArray22.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray22, "", true);
        boolean boolean29 = nativeArray22.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable33 = nativeArray32.getParentScope();
        java.lang.Object[] objArray34 = nativeArray32.getIds();
        boolean boolean35 = nativeArray32.isEmpty();
        boolean boolean36 = nativeArray22.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray32);
        boolean boolean38 = nativeArray32.isConst("object");
        java.lang.Object obj40 = nativeArray32.get((java.lang.Object) (byte) 10);
        com.google.javascript.rhino.head.Scriptable scriptable41 = null;
        nativeArray32.setParentScope(scriptable41);
        nativeArray9.setAttributes((-1), (com.google.javascript.rhino.head.Scriptable) nativeArray32, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray47.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray50, (java.lang.Object) (-1));
        java.lang.Object[] objArray53 = nativeArray47.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable54 = nativeArray47.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable55 = nativeArray47.getParentScope();
        boolean boolean56 = nativeArray47.isSealed();
        boolean boolean57 = nativeArray47.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray62 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray59.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray62, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray66 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray69 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray66.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray69, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray74 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray74.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj77 = nativeArray69.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray74);
        com.google.javascript.rhino.head.Callable callable80 = null;
        nativeArray69.setGetterOrSetter("hi!", 0, callable80, false);
        java.lang.Integer[] intArray83 = nativeArray69.getIndexIds();
        nativeArray62.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray69);
        java.lang.Object obj85 = nativeArray47.get((java.lang.Object) nativeArray69);
        com.google.javascript.rhino.head.NativeArray nativeArray87 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int89 = nativeArray87.lastIndexOf((java.lang.Object) (short) 10);
        long long90 = nativeArray87.getLength();
        nativeArray87.delete((int) (byte) 1);
        boolean boolean93 = nativeArray87.isExtensible();
        java.lang.Object obj95 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray87, 4);
        nativeArray32.put(0, (com.google.javascript.rhino.head.Scriptable) nativeArray47, (java.lang.Object) nativeArray87);
        java.lang.Class<?> wildcardClass97 = nativeArray32.getClass();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(scriptable18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 1L + "'", long25 == 1L);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(scriptable33);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[null]");
        org.junit.Assert.assertNull(scriptable54);
        org.junit.Assert.assertNull(scriptable55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertTrue("'" + long90 + "' != '" + 1L + "'", long90 == 1L);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test2083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2083");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        boolean boolean8 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "");
        java.lang.Object[] objArray9 = nativeArray4.toArray();
        nativeArray4.preventExtensions();
        nativeArray4.activatePrototypeMap((int) (short) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int16 = nativeArray14.lastIndexOf((java.lang.Object) (short) 10);
        long long17 = nativeArray14.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray14, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray22.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray25, (java.lang.Object) (-1));
        java.lang.Object[] objArray28 = nativeArray22.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable29 = nativeArray22.getParentScope();
        boolean boolean30 = nativeArray14.containsAll((java.util.Collection) nativeArray22);
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int35 = nativeArray33.lastIndexOf((java.lang.Object) (short) 10);
        long long36 = nativeArray33.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray33, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable40 = null;
        java.lang.Object[] objArray41 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable40);
        java.lang.Object[] objArray42 = nativeArray33.toArray(objArray41);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray14, "hi!", (java.lang.Object) objArray41);
        java.lang.Object[] objArray44 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray14);
        int int45 = nativeArray4.indexOf((java.lang.Object) nativeArray14);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[null]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 1L + "'", long17 == 1L);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[null]");
        org.junit.Assert.assertNull(scriptable29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 1L + "'", long36 == 1L);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[null]");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[hi!]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
    }

    @Test
    public void test2084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2084");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        java.lang.reflect.Method method11 = null;
        java.lang.reflect.Method method12 = null;
        nativeArray1.defineProperty("hi!", (java.lang.Object) (-1L), method11, method12, (int) (byte) 10);
        boolean boolean16 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        com.google.javascript.rhino.head.Scriptable scriptable17 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        nativeArray1.setAttributes("", 4);
        nativeArray1.setAttributes((int) (short) -1, 5);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(scriptable17);
    }

    @Test
    public void test2085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2085");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        boolean boolean15 = nativeArray4.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray29, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray34.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj37 = nativeArray29.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray34);
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int42 = nativeArray40.lastIndexOf((java.lang.Object) (short) 10);
        long long43 = nativeArray40.getLength();
        nativeArray40.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray34, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray49 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray52 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray49.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray52, (java.lang.Object) (-1));
        java.lang.Object[] objArray55 = nativeArray49.getAllIds();
        nativeArray49.delete("");
        java.lang.Object obj58 = nativeArray34.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray49);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray34, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable61 = nativeArray34.getPrototype();
        com.google.javascript.rhino.head.Context context62 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int66 = nativeArray64.lastIndexOf((java.lang.Object) (short) 10);
        long long67 = nativeArray64.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray64, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray72 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray75 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray72.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray75, (java.lang.Object) (-1));
        java.lang.Object[] objArray78 = nativeArray72.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable79 = nativeArray72.getParentScope();
        boolean boolean80 = nativeArray64.containsAll((java.util.Collection) nativeArray72);
        nativeArray34.defineOwnProperties(context62, (com.google.javascript.rhino.head.ScriptableObject) nativeArray64);
        nativeArray18.setAttributes(1, (com.google.javascript.rhino.head.Scriptable) nativeArray34, (int) (short) 10);
        java.lang.String str84 = nativeArray18.getTypeOf();
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray18, "object");
        nativeArray4.setAttributes(100, (com.google.javascript.rhino.head.Scriptable) nativeArray18, 2);
        com.google.javascript.rhino.head.Scriptable scriptable89 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray18);
        nativeArray18.sealObject();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 1L + "'", long43 == 1L);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[length]");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNull(scriptable61);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 1L + "'", long67 == 1L);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[null]");
        org.junit.Assert.assertNull(scriptable79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "object" + "'", str84, "object");
        org.junit.Assert.assertNull(scriptable89);
    }

    @Test
    public void test2086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2086");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        nativeArray1.put((int) (byte) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray9, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray19.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray22, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray27.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj30 = nativeArray22.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray27);
        boolean boolean31 = nativeArray22.hasPrototypeMap();
        java.lang.Object[] objArray32 = nativeArray22.getIds();
        int int33 = nativeArray22.size();
        boolean boolean34 = nativeArray1.has((int) (short) 100, (com.google.javascript.rhino.head.Scriptable) nativeArray22);
        boolean boolean36 = nativeArray22.isConst("hi!");
        com.google.javascript.rhino.head.Scriptable scriptable37 = nativeArray22.getPrototype();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean39 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty(scriptable37, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[hi!]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(scriptable37);
    }

    @Test
    public void test2087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2087");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray20, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj28 = nativeArray20.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray25);
        boolean boolean29 = nativeArray20.hasPrototypeMap();
        java.lang.Object[] objArray30 = nativeArray20.getIds();
        int int31 = nativeArray20.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray34.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray37, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj45 = nativeArray37.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray42);
        boolean boolean46 = nativeArray37.hasPrototypeMap();
        java.lang.Object[] objArray47 = nativeArray37.getIds();
        int int48 = nativeArray37.size();
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int52 = nativeArray50.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray37.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray50);
        java.lang.Object obj54 = nativeArray20.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        boolean boolean55 = nativeArray4.containsAll((java.util.Collection) nativeArray37);
        com.google.javascript.rhino.head.Scriptable scriptable56 = nativeArray4.getParentScope();
        boolean boolean58 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, (int) (byte) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray61 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray61.activatePrototypeMap((int) (short) 100);
        boolean boolean64 = nativeArray4.has((int) (short) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray61);
        java.lang.Object obj66 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray61, "Array");
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[hi!]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(scriptable56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(obj66);
    }

    @Test
    public void test2088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2088");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable12 = nativeArray11.getParentScope();
        java.lang.Object[] objArray13 = nativeArray11.getIds();
        boolean boolean14 = nativeArray11.isEmpty();
        boolean boolean15 = nativeArray1.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray11);
        boolean boolean17 = nativeArray11.isConst("object");
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable20 = nativeArray19.getParentScope();
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray23.activatePrototypeMap((int) (short) 100);
        com.google.javascript.rhino.head.Scriptable scriptable27 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray23, "");
        boolean boolean28 = nativeArray19.has(100, scriptable27);
        java.lang.String str29 = nativeArray19.getClassName();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean30 = nativeArray11.add((java.lang.Object) nativeArray19);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(scriptable12);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(scriptable20);
        org.junit.Assert.assertNull(scriptable27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Array" + "'", str29, "Array");
    }

    @Test
    public void test2089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2089");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        java.lang.Object[] objArray4 = nativeArray1.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray5 = new com.google.javascript.rhino.head.NativeArray(objArray4);
        com.google.javascript.rhino.head.NativeArray nativeArray6 = new com.google.javascript.rhino.head.NativeArray(objArray4);
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int10 = nativeArray8.lastIndexOf((java.lang.Object) (short) 10);
        long long11 = nativeArray8.getLength();
        nativeArray8.delete((int) (byte) 1);
        boolean boolean14 = nativeArray8.isExtensible();
        java.lang.Object obj16 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray8, 4);
        java.lang.Object[] objArray17 = nativeArray8.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray20.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray23, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray28.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj31 = nativeArray23.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray28);
        boolean boolean32 = nativeArray23.hasPrototypeMap();
        java.lang.Object[] objArray33 = nativeArray23.getIds();
        int int34 = nativeArray23.size();
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int38 = nativeArray36.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray23.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray36);
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable42 = nativeArray41.getParentScope();
        java.lang.Object[] objArray43 = nativeArray41.getIds();
        boolean boolean44 = nativeArray41.isEmpty();
        nativeArray8.put((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray23, (java.lang.Object) boolean44);
        long long46 = nativeArray8.getLength();
        java.lang.Object[] objArray47 = nativeArray8.toArray();
        java.lang.Object obj48 = nativeArray6.getAssociatedValue((java.lang.Object) nativeArray8);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[length]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[null]");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[hi!]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNull(scriptable42);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 1L + "'", long46 == 1L);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[null]");
        org.junit.Assert.assertNull(obj48);
    }

    @Test
    public void test2090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2090");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.getAllIds();
        nativeArray24.delete("");
        java.lang.Object obj33 = nativeArray9.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!");
        com.google.javascript.rhino.head.Context context36 = null;
        com.google.javascript.rhino.head.Scriptable scriptable37 = null;
        java.lang.Object[] objArray38 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable37);
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray40.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray43, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray48.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj51 = nativeArray43.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray48);
        com.google.javascript.rhino.head.Callable callable54 = null;
        nativeArray43.setGetterOrSetter("hi!", 0, callable54, false);
        com.google.javascript.rhino.head.Scriptable scriptable57 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray43);
        nativeArray9.defineOwnProperty(context36, (java.lang.Object) scriptable37, (com.google.javascript.rhino.head.ScriptableObject) nativeArray43);
        boolean boolean60 = nativeArray9.isConst("object");
        boolean boolean62 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, (int) '#');
        java.lang.Object obj64 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, (int) (short) 1);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNull(scriptable57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(obj64);
    }

    @Test
    public void test2091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2091");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.getAllIds();
        nativeArray1.delete("");
        long long10 = nativeArray1.getLength();
        boolean boolean12 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, (int) (short) 10);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray15.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray18, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray23.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj26 = nativeArray18.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray23);
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int31 = nativeArray29.lastIndexOf((java.lang.Object) (short) 10);
        long long32 = nativeArray29.getLength();
        nativeArray29.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray23, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray38.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray41, (java.lang.Object) (-1));
        java.lang.Object[] objArray44 = nativeArray38.getAllIds();
        nativeArray38.delete("");
        java.lang.Object obj47 = nativeArray23.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray38);
        java.lang.Integer[] intArray48 = nativeArray38.getIndexIds();
        nativeArray1.defineProperty("", (java.lang.Object) nativeArray38, 10);
        com.google.javascript.rhino.head.NativeArray nativeArray53 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int55 = nativeArray53.lastIndexOf((java.lang.Object) (short) 10);
        long long56 = nativeArray53.getLength();
        nativeArray53.delete((int) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray61 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int63 = nativeArray61.lastIndexOf((java.lang.Object) (short) 10);
        long long64 = nativeArray61.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray61, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray69 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray72 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray69.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray72, (java.lang.Object) (-1));
        java.lang.Object[] objArray75 = nativeArray69.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable76 = nativeArray69.getParentScope();
        boolean boolean77 = nativeArray61.containsAll((java.util.Collection) nativeArray69);
        com.google.javascript.rhino.head.NativeArray nativeArray79 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray82 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray79.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray82, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray87 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray87.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj90 = nativeArray82.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray87);
        boolean boolean91 = nativeArray82.hasPrototypeMap();
        java.lang.Object[] objArray92 = nativeArray82.getIds();
        java.lang.Object[] objArray93 = nativeArray69.toArray(objArray92);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray53, "Array", (java.lang.Object) nativeArray69);
        java.util.ListIterator listIterator95 = nativeArray53.listIterator();
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray38, "", (java.lang.Object) nativeArray53);
        java.lang.Object obj98 = nativeArray53.get((long) (short) 0);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[length]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1L + "'", long32 == 1L);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[length]");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 1L + "'", long56 == 1L);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 1L + "'", long64 == 1L);
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[null]");
        org.junit.Assert.assertNull(scriptable76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(objArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray92), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray92), "[null]");
        org.junit.Assert.assertNotNull(objArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray93), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray93), "[null]");
        org.junit.Assert.assertNotNull(listIterator95);
        org.junit.Assert.assertNull(obj98);
    }

    @Test
    public void test2092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2092");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        nativeArray9.delete("Array");
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray21.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray24, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj32 = nativeArray24.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray29);
        boolean boolean33 = nativeArray24.hasPrototypeMap();
        java.lang.Object[] objArray34 = nativeArray24.getIds();
        int int35 = nativeArray24.size();
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray38.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray41, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray46.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj49 = nativeArray41.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray46);
        boolean boolean50 = nativeArray41.hasPrototypeMap();
        java.lang.Object[] objArray51 = nativeArray41.getIds();
        int int52 = nativeArray41.size();
        com.google.javascript.rhino.head.NativeArray nativeArray54 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int56 = nativeArray54.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray41.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray54);
        java.lang.Object obj58 = nativeArray24.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray41);
        java.lang.Object[] objArray59 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray24);
        boolean boolean61 = nativeArray24.isConst("hi!");
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int66 = nativeArray64.lastIndexOf((java.lang.Object) (short) 10);
        long long67 = nativeArray64.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray64, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable71 = null;
        java.lang.Object[] objArray72 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable71);
        java.lang.Object[] objArray73 = nativeArray64.toArray(objArray72);
        com.google.javascript.rhino.head.NativeArray nativeArray76 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int78 = nativeArray76.lastIndexOf((java.lang.Object) (short) 10);
        long long79 = nativeArray76.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray76, "", true);
        boolean boolean83 = nativeArray76.hasPrototypeMap();
        int int84 = nativeArray76.size();
        boolean boolean85 = nativeArray76.isEmpty();
        boolean boolean87 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray76, "Array");
        java.lang.Object obj88 = nativeArray64.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray76);
        java.lang.Object obj89 = nativeArray24.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray76);
        boolean boolean90 = nativeArray9.contains((java.lang.Object) "");
        boolean boolean91 = nativeArray9.hasPrototypeMap();
        boolean boolean93 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, (-1));
        java.lang.Object obj95 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray9, (java.lang.Object) "");
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator listIterator97 = nativeArray9.listIterator((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 52");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[hi!]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[hi!]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 1L + "'", long67 == 1L);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[]");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[null]");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 1L + "'", long79 == 1L);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 1 + "'", int84 == 1);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNull(obj95);
    }

    @Test
    public void test2093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2093");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean8 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        boolean boolean9 = nativeArray1.hasPrototypeMap();
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "object");
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int16 = nativeArray14.lastIndexOf((java.lang.Object) (short) 10);
        long long17 = nativeArray14.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray14, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable21 = null;
        java.lang.Object[] objArray22 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable21);
        java.lang.Object[] objArray23 = nativeArray14.toArray(objArray22);
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int28 = nativeArray26.lastIndexOf((java.lang.Object) (short) 10);
        long long29 = nativeArray26.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray26, "", true);
        boolean boolean33 = nativeArray26.hasPrototypeMap();
        int int34 = nativeArray26.size();
        boolean boolean35 = nativeArray26.isEmpty();
        boolean boolean37 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray26, "Array");
        java.lang.Object obj38 = nativeArray14.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        nativeArray26.setAttributes("object", (int) (byte) 0);
        nativeArray26.preventExtensions();
        com.google.javascript.rhino.head.Scriptable scriptable43 = nativeArray26.getParentScope();
        java.lang.Object obj44 = nativeArray1.get("object", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int48 = nativeArray46.lastIndexOf((java.lang.Object) (short) 10);
        long long49 = nativeArray46.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray46, "", true);
        boolean boolean53 = nativeArray46.hasPrototypeMap();
        java.lang.reflect.Method method56 = null;
        java.lang.reflect.Method method57 = null;
        nativeArray46.defineProperty("hi!", (java.lang.Object) (-1L), method56, method57, (int) (byte) 10);
        boolean boolean61 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray46, "");
        nativeArray46.setAttributes("hi!", (int) (byte) 0);
        java.lang.Object[] objArray65 = nativeArray46.getAllIds();
        boolean boolean66 = nativeArray46.hasPrototypeMap();
        java.lang.Object obj67 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray69 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int71 = nativeArray69.lastIndexOf((java.lang.Object) (short) 10);
        long long72 = nativeArray69.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray69, "", true);
        boolean boolean76 = nativeArray69.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray79 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable80 = nativeArray79.getParentScope();
        java.lang.Object[] objArray81 = nativeArray79.getIds();
        boolean boolean82 = nativeArray79.isEmpty();
        boolean boolean83 = nativeArray69.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray79);
        java.lang.Object[] objArray84 = nativeArray69.getIds();
        java.lang.Object[] objArray85 = nativeArray69.getAllIds();
        java.lang.Object obj86 = nativeArray46.associateValue(obj67, (java.lang.Object) objArray85);
        int int87 = nativeArray26.indexOf((java.lang.Object) nativeArray46);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 1L + "'", long17 == 1L);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[null]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 1L + "'", long29 == 1L);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNull(scriptable43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 1L + "'", long49 == 1L);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[hi!, length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[hi!, length]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 1L + "'", long72 == 1L);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(scriptable80);
        org.junit.Assert.assertNotNull(objArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[]");
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray85), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray85), "[length]");
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
    }

    @Test
    public void test2094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2094");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        java.lang.reflect.Method method11 = null;
        java.lang.reflect.Method method12 = null;
        nativeArray1.defineProperty("hi!", (java.lang.Object) (-1L), method11, method12, (int) (byte) 10);
        boolean boolean16 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        nativeArray1.setAttributes("hi!", (int) (byte) 0);
        java.lang.Object[] objArray20 = nativeArray1.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray(objArray20);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj23 = nativeArray21.remove((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[hi!, length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[hi!, length]");
    }

    @Test
    public void test2095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2095");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        boolean boolean18 = nativeArray1.hasPrototypeMap();
        java.lang.Object obj20 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 10);
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        java.lang.Object[] objArray24 = nativeArray23.getIds();
        nativeArray23.setAttributes("", 0);
        // The following exception was thrown during execution in test generation
        try {
            nativeArray1.defineProperty("", (java.lang.Object) nativeArray23, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: 32");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
    }

    @Test
    public void test2096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2096");
        com.google.javascript.rhino.head.Context context0 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray2 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        java.lang.Object obj4 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray2, "Array");
        com.google.javascript.rhino.head.Scriptable scriptable5 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray2);
        java.lang.String str6 = nativeArray2.getClassName();
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int11 = nativeArray9.lastIndexOf((java.lang.Object) (short) 10);
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray13.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray16, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray20.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray23, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray28.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj31 = nativeArray23.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray28);
        com.google.javascript.rhino.head.Callable callable34 = null;
        nativeArray23.setGetterOrSetter("hi!", 0, callable34, false);
        java.lang.Integer[] intArray37 = nativeArray23.getIndexIds();
        nativeArray16.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray23);
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int42 = nativeArray40.lastIndexOf((java.lang.Object) (short) 10);
        long long43 = nativeArray40.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray40, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray48.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray51, (java.lang.Object) (-1));
        java.lang.Object[] objArray54 = nativeArray48.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable55 = nativeArray48.getParentScope();
        boolean boolean56 = nativeArray40.containsAll((java.util.Collection) nativeArray48);
        nativeArray48.delete("Array");
        java.lang.Object obj59 = nativeArray16.getAssociatedValue((java.lang.Object) nativeArray48);
        boolean boolean60 = nativeArray9.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray16);
        boolean boolean61 = nativeArray16.isExtensible();
        boolean boolean63 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray16, (int) (short) 100);
        java.lang.Object[] objArray64 = nativeArray16.toArray();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj65 = com.google.javascript.rhino.head.ScriptableObject.callMethod(context0, (com.google.javascript.rhino.head.Scriptable) nativeArray2, "Array", objArray64);
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EcmaError; message: TypeError: Array is not a function, it is object.");
        } catch (com.google.javascript.rhino.head.EcmaError e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNull(scriptable5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Array" + "'", str6, "Array");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 1L + "'", long43 == 1L);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[null]");
        org.junit.Assert.assertNull(scriptable55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[null]");
    }

    @Test
    public void test2097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2097");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        nativeArray9.delete("Array");
        boolean boolean21 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, (int) 'a');
        boolean boolean22 = nativeArray9.hasPrototypeMap();
        boolean boolean23 = nativeArray9.isExtensible();
        java.util.Iterator iterator24 = nativeArray9.iterator();
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable28 = nativeArray27.getParentScope();
        java.lang.Object[] objArray29 = nativeArray27.getIds();
        boolean boolean30 = nativeArray27.isEmpty();
        nativeArray27.delete((int) 'a');
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray35.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray38, (java.lang.Object) (-1));
        java.lang.Object[] objArray41 = nativeArray35.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable42 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray35);
        java.lang.Integer[] intArray43 = nativeArray35.getIndexIds();
        nativeArray35.preventExtensions();
        java.lang.Object obj46 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray35, "hi!");
        java.lang.Object obj47 = nativeArray27.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray35);
        com.google.javascript.rhino.head.Scriptable scriptable48 = nativeArray27.getPrototype();
        // The following exception was thrown during execution in test generation
        try {
            int int49 = nativeArray9.getAttributes("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray27);
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EvaluatorException; message: Property Array not found.");
        } catch (com.google.javascript.rhino.head.EvaluatorException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(iterator24);
        org.junit.Assert.assertNull(scriptable28);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[null]");
        org.junit.Assert.assertNull(scriptable42);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNull(scriptable48);
    }

    @Test
    public void test2098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2098");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        nativeArray9.delete("Array");
        boolean boolean21 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, (int) 'a');
        boolean boolean22 = nativeArray9.hasPrototypeMap();
        boolean boolean23 = nativeArray9.isExtensible();
        java.lang.String str24 = nativeArray9.getClassName();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Array" + "'", str24, "Array");
    }

    @Test
    public void test2099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2099");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.activatePrototypeMap((int) (short) 100);
        com.google.javascript.rhino.head.Scriptable scriptable5 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int10 = nativeArray8.lastIndexOf((java.lang.Object) (short) 10);
        long long11 = nativeArray8.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray8, "", true);
        boolean boolean15 = nativeArray8.hasPrototypeMap();
        int int16 = nativeArray8.size();
        boolean boolean17 = nativeArray8.isEmpty();
        com.google.javascript.rhino.head.Scriptable scriptable18 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray8);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray8, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable22 = nativeArray8.getParentScope();
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) (short) 10);
        java.lang.reflect.Method method26 = null;
        java.lang.reflect.Method method27 = null;
        nativeArray8.defineProperty("hi!", (java.lang.Object) nativeArray25, method26, method27, 0);
        nativeArray1.defineConst("", (com.google.javascript.rhino.head.Scriptable) nativeArray25);
        java.lang.Object obj32 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        boolean boolean33 = nativeArray1.isExtensible();
        org.junit.Assert.assertNull(scriptable5);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(scriptable18);
        org.junit.Assert.assertNull(scriptable22);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test2100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2100");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj38 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        java.lang.Object[] objArray39 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray4);
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int44 = nativeArray42.lastIndexOf((java.lang.Object) (short) 10);
        long long45 = nativeArray42.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray42, "", true);
        boolean boolean49 = nativeArray42.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray54 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray51.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray54, (java.lang.Object) (-1));
        java.lang.Object[] objArray57 = nativeArray51.getAllIds();
        nativeArray51.delete("");
        boolean boolean60 = nativeArray42.contains((java.lang.Object) "");
        boolean boolean61 = nativeArray4.has("object", (com.google.javascript.rhino.head.Scriptable) nativeArray42);
        nativeArray42.delete("Array");
        boolean boolean64 = nativeArray42.avoidObjectDetection();
        nativeArray42.sealObject();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[hi!]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 1L + "'", long45 == 1L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[length]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test2101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2101");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj38 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        java.lang.Object[] objArray39 = nativeArray4.getIds();
        boolean boolean40 = nativeArray4.avoidObjectDetection();
        boolean boolean42 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "Array");
        com.google.javascript.rhino.head.Scriptable scriptable43 = nativeArray4.getParentScope();
        java.lang.String str44 = nativeArray4.getTypeOf();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(scriptable43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "object" + "'", str44, "object");
    }

    @Test
    public void test2102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2102");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        java.lang.Object obj9 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 4);
        com.google.javascript.rhino.head.Scriptable scriptable10 = nativeArray1.getParentScope();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNull(scriptable10);
    }

    @Test
    public void test2103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2103");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable8 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray10.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray13, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj21 = nativeArray13.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray18);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int26 = nativeArray24.lastIndexOf((java.lang.Object) (short) 10);
        long long27 = nativeArray24.getLength();
        nativeArray24.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray18, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray33.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray36, (java.lang.Object) (-1));
        java.lang.Object[] objArray39 = nativeArray33.getAllIds();
        nativeArray33.delete("");
        java.lang.Object obj42 = nativeArray18.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray33);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray18, "hi!");
        com.google.javascript.rhino.head.Context context45 = null;
        com.google.javascript.rhino.head.Scriptable scriptable46 = null;
        java.lang.Object[] objArray47 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable46);
        com.google.javascript.rhino.head.NativeArray nativeArray49 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray52 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray49.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray52, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray57 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray57.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj60 = nativeArray52.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray57);
        com.google.javascript.rhino.head.Callable callable63 = null;
        nativeArray52.setGetterOrSetter("hi!", 0, callable63, false);
        com.google.javascript.rhino.head.Scriptable scriptable66 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray52);
        nativeArray18.defineOwnProperty(context45, (java.lang.Object) scriptable46, (com.google.javascript.rhino.head.ScriptableObject) nativeArray52);
        java.lang.Object[] objArray68 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray52);
        boolean boolean69 = nativeArray52.isEmpty();
        boolean boolean70 = nativeArray52.avoidObjectDetection();
        java.lang.Object obj71 = nativeArray1.getAssociatedValue((java.lang.Object) boolean70);
        long long72 = nativeArray1.getLength();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNull(scriptable8);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 1L + "'", long27 == 1L);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[length]");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNull(scriptable66);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 1L + "'", long72 == 1L);
    }

    @Test
    public void test2104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2104");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        com.google.javascript.rhino.head.Scriptable scriptable18 = nativeArray9.getParentScope();
        boolean boolean19 = nativeArray9.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int24 = nativeArray22.lastIndexOf((java.lang.Object) (short) 10);
        long long25 = nativeArray22.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray22, "", true);
        boolean boolean29 = nativeArray22.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable33 = nativeArray32.getParentScope();
        java.lang.Object[] objArray34 = nativeArray32.getIds();
        boolean boolean35 = nativeArray32.isEmpty();
        boolean boolean36 = nativeArray22.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray32);
        boolean boolean38 = nativeArray32.isConst("object");
        java.lang.Object obj40 = nativeArray32.get((java.lang.Object) (byte) 10);
        com.google.javascript.rhino.head.Scriptable scriptable41 = null;
        nativeArray32.setParentScope(scriptable41);
        nativeArray9.setAttributes((-1), (com.google.javascript.rhino.head.Scriptable) nativeArray32, 0);
        long long45 = nativeArray9.getLength();
        long long46 = nativeArray9.jsGet_length();
        java.lang.Object[] objArray47 = nativeArray9.getAllIds();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(scriptable18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 1L + "'", long25 == 1L);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(scriptable33);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 1L + "'", long45 == 1L);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 1L + "'", long46 == 1L);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[-1, length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[-1, length]");
    }

    @Test
    public void test2105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2105");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable12 = nativeArray11.getParentScope();
        java.lang.Object[] objArray13 = nativeArray11.getIds();
        boolean boolean14 = nativeArray11.isEmpty();
        boolean boolean15 = nativeArray1.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray11);
        boolean boolean17 = nativeArray11.isConst("object");
        nativeArray11.delete("object");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(scriptable12);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test2106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2106");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable8 = nativeArray1.getParentScope();
        com.google.javascript.rhino.head.Context context9 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray11.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray14, (java.lang.Object) (-1));
        java.lang.Object[] objArray17 = nativeArray11.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable18 = nativeArray11.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable19 = nativeArray11.getParentScope();
        java.util.ListIterator listIterator20 = nativeArray11.listIterator();
        nativeArray1.defineOwnProperties(context9, (com.google.javascript.rhino.head.ScriptableObject) nativeArray11);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int26 = nativeArray24.lastIndexOf((java.lang.Object) (short) 10);
        long long27 = nativeArray24.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray24, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray32.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray35, (java.lang.Object) (-1));
        java.lang.Object[] objArray38 = nativeArray32.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable39 = nativeArray32.getParentScope();
        boolean boolean40 = nativeArray24.containsAll((java.util.Collection) nativeArray32);
        com.google.javascript.rhino.head.Scriptable scriptable41 = nativeArray32.getParentScope();
        boolean boolean42 = nativeArray32.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable46 = nativeArray45.getParentScope();
        java.lang.Object[] objArray47 = nativeArray45.getIds();
        boolean boolean48 = nativeArray32.has("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray45);
        nativeArray1.setAttributes("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray32, 2);
        java.lang.Object[] objArray51 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray54 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray57 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray54.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray57, (java.lang.Object) (-1));
        java.lang.Object[] objArray60 = nativeArray54.getAllIds();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj61 = com.google.javascript.rhino.head.ScriptableObject.callMethod((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", objArray60);
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EcmaError; message: TypeError:  is not a function, it is object.");
        } catch (com.google.javascript.rhino.head.EcmaError e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[null]");
        org.junit.Assert.assertNull(scriptable8);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[null]");
        org.junit.Assert.assertNull(scriptable18);
        org.junit.Assert.assertNull(scriptable19);
        org.junit.Assert.assertNotNull(listIterator20);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 1L + "'", long27 == 1L);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[null]");
        org.junit.Assert.assertNull(scriptable39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(scriptable41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(scriptable46);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[length]");
    }

    @Test
    public void test2107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2107");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        java.lang.reflect.Method method11 = null;
        java.lang.reflect.Method method12 = null;
        nativeArray1.defineProperty("hi!", (java.lang.Object) (-1L), method11, method12, (int) (byte) 10);
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray20, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj28 = nativeArray20.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray25);
        boolean boolean29 = nativeArray20.hasPrototypeMap();
        java.lang.Object[] objArray30 = nativeArray20.getIds();
        int int31 = nativeArray20.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray34.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray37, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj45 = nativeArray37.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray42);
        boolean boolean46 = nativeArray37.hasPrototypeMap();
        java.lang.Object[] objArray47 = nativeArray37.getIds();
        int int48 = nativeArray37.size();
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int52 = nativeArray50.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray37.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray50);
        java.lang.Object obj54 = nativeArray20.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray56.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray59, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray64.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj67 = nativeArray59.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray64);
        boolean boolean68 = nativeArray59.hasPrototypeMap();
        java.lang.Object[] objArray69 = nativeArray59.getIds();
        int int70 = nativeArray59.size();
        com.google.javascript.rhino.head.NativeArray nativeArray73 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray76 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray73.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray76, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray81 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray81.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj84 = nativeArray76.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray81);
        boolean boolean85 = nativeArray76.hasPrototypeMap();
        java.lang.Object[] objArray86 = nativeArray76.getIds();
        int int87 = nativeArray76.size();
        com.google.javascript.rhino.head.NativeArray nativeArray89 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int91 = nativeArray89.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray76.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray89);
        java.lang.Object obj93 = nativeArray59.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray76);
        java.lang.Object[] objArray94 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray59);
        nativeArray1.put(2, (com.google.javascript.rhino.head.Scriptable) nativeArray37, (java.lang.Object) objArray94);
        nativeArray37.preventExtensions();
        com.google.javascript.rhino.head.Scriptable scriptable98 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray37, "");
        nativeArray37.sealObject();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[hi!]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(objArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray86), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray86), "[hi!]");
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(objArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray94), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray94), "[hi!]");
        org.junit.Assert.assertNull(scriptable98);
    }

    @Test
    public void test2108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2108");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        com.google.javascript.rhino.head.Scriptable scriptable11 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable15 = nativeArray1.getParentScope();
        java.lang.Object obj17 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray1, (java.lang.Object) 0.0f);
        nativeArray1.preventExtensions();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(scriptable11);
        org.junit.Assert.assertNull(scriptable15);
        org.junit.Assert.assertNull(obj17);
    }

    @Test
    public void test2109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2109");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.toArray();
        com.google.javascript.rhino.head.Context context8 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int12 = nativeArray10.lastIndexOf((java.lang.Object) (short) 10);
        long long13 = nativeArray10.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray10, "", true);
        boolean boolean17 = nativeArray10.hasPrototypeMap();
        int int18 = nativeArray10.size();
        boolean boolean19 = nativeArray10.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray21.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray24, (java.lang.Object) (-1));
        java.lang.Object[] objArray27 = nativeArray21.getAllIds();
        nativeArray21.delete("");
        long long30 = nativeArray21.getLength();
        boolean boolean31 = nativeArray10.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray21);
        nativeArray21.sealObject();
        nativeArray1.defineOwnProperties(context8, (com.google.javascript.rhino.head.ScriptableObject) nativeArray21);
        java.util.ListIterator listIterator34 = nativeArray21.listIterator();
        com.google.javascript.rhino.head.Scriptable scriptable36 = null;
        boolean boolean37 = nativeArray21.has((int) (short) 10, scriptable36);
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int42 = nativeArray40.lastIndexOf((java.lang.Object) (short) 10);
        long long43 = nativeArray40.getLength();
        nativeArray40.delete((int) (byte) 1);
        boolean boolean47 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray40, "");
        boolean boolean48 = nativeArray40.hasPrototypeMap();
        java.lang.Object obj49 = nativeArray21.get("object", (com.google.javascript.rhino.head.Scriptable) nativeArray40);
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int53 = nativeArray51.lastIndexOf((java.lang.Object) (short) 10);
        long long54 = nativeArray51.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray51, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray62 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray59.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray62, (java.lang.Object) (-1));
        java.lang.Object[] objArray65 = nativeArray59.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable66 = nativeArray59.getParentScope();
        boolean boolean67 = nativeArray51.containsAll((java.util.Collection) nativeArray59);
        com.google.javascript.rhino.head.Scriptable scriptable68 = nativeArray59.getParentScope();
        boolean boolean69 = nativeArray59.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray72 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int74 = nativeArray72.lastIndexOf((java.lang.Object) (short) 10);
        long long75 = nativeArray72.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray72, "", true);
        boolean boolean79 = nativeArray72.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray82 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable83 = nativeArray82.getParentScope();
        java.lang.Object[] objArray84 = nativeArray82.getIds();
        boolean boolean85 = nativeArray82.isEmpty();
        boolean boolean86 = nativeArray72.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray82);
        boolean boolean88 = nativeArray82.isConst("object");
        java.lang.Object obj90 = nativeArray82.get((java.lang.Object) (byte) 10);
        com.google.javascript.rhino.head.Scriptable scriptable91 = null;
        nativeArray82.setParentScope(scriptable91);
        nativeArray59.setAttributes((-1), (com.google.javascript.rhino.head.Scriptable) nativeArray82, 0);
        long long95 = nativeArray59.getLength();
        long long96 = nativeArray59.jsGet_length();
        java.lang.Object[] objArray97 = nativeArray59.getIds();
        java.lang.Object[] objArray98 = nativeArray40.toArray(objArray97);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[null]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[length]");
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1L + "'", long30 == 1L);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(listIterator34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 1L + "'", long43 == 1L);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 1L + "'", long54 == 1L);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[null]");
        org.junit.Assert.assertNull(scriptable66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(scriptable68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 1L + "'", long75 == 1L);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNull(scriptable83);
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNull(obj90);
        org.junit.Assert.assertTrue("'" + long95 + "' != '" + 1L + "'", long95 == 1L);
        org.junit.Assert.assertTrue("'" + long96 + "' != '" + 1L + "'", long96 == 1L);
        org.junit.Assert.assertNotNull(objArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray97), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray97), "[null]");
        org.junit.Assert.assertNotNull(objArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray98), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray98), "[null]");
    }

    @Test
    public void test2110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2110");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray15, (java.lang.Object) (-1));
        java.lang.Object[] objArray18 = nativeArray12.getAllIds();
        nativeArray12.delete("");
        long long21 = nativeArray12.getLength();
        boolean boolean22 = nativeArray1.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray12);
        com.google.javascript.rhino.head.Scriptable scriptable23 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass24 = scriptable23.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[length]");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1L + "'", long21 == 1L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(scriptable23);
    }

    @Test
    public void test2111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2111");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj20 = nativeArray12.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray17);
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int25 = nativeArray23.lastIndexOf((java.lang.Object) (short) 10);
        long long26 = nativeArray23.getLength();
        nativeArray23.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray17, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray32.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray35, (java.lang.Object) (-1));
        java.lang.Object[] objArray38 = nativeArray32.getAllIds();
        nativeArray32.delete("");
        java.lang.Object obj41 = nativeArray17.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray32);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray17, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable44 = nativeArray17.getPrototype();
        com.google.javascript.rhino.head.Context context45 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int49 = nativeArray47.lastIndexOf((java.lang.Object) (short) 10);
        long long50 = nativeArray47.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray47, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray55.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray58, (java.lang.Object) (-1));
        java.lang.Object[] objArray61 = nativeArray55.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable62 = nativeArray55.getParentScope();
        boolean boolean63 = nativeArray47.containsAll((java.util.Collection) nativeArray55);
        nativeArray17.defineOwnProperties(context45, (com.google.javascript.rhino.head.ScriptableObject) nativeArray47);
        nativeArray1.setAttributes(1, (com.google.javascript.rhino.head.Scriptable) nativeArray17, (int) (short) 10);
        java.lang.String str67 = nativeArray1.getTypeOf();
        java.lang.Object obj69 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, (int) (short) -1);
        nativeArray1.delete((int) ' ');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj75 = nativeArray1.getGetterOrSetter("hi!", 5, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: hi!");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 1L + "'", long26 == 1L);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[length]");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNull(scriptable44);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 1L + "'", long50 == 1L);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[null]");
        org.junit.Assert.assertNull(scriptable62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "object" + "'", str67, "object");
        org.junit.Assert.assertNotNull(obj69);
    }

    @Test
    public void test2112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2112");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj38 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        java.lang.Object[] objArray39 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray4);
        boolean boolean41 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "hi!");
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray43.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray46, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray51.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj54 = nativeArray46.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray51);
        boolean boolean55 = nativeArray46.hasPrototypeMap();
        java.lang.Object[] objArray56 = nativeArray46.getIds();
        int int57 = nativeArray46.size();
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray63 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray60.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray63, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray68 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray68.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj71 = nativeArray63.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray68);
        boolean boolean72 = nativeArray63.hasPrototypeMap();
        java.lang.Object[] objArray73 = nativeArray63.getIds();
        int int74 = nativeArray63.size();
        com.google.javascript.rhino.head.NativeArray nativeArray76 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int78 = nativeArray76.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray63.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray76);
        java.lang.Object obj80 = nativeArray46.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray63);
        java.lang.Object[] objArray81 = nativeArray46.getIds();
        boolean boolean82 = nativeArray46.avoidObjectDetection();
        boolean boolean84 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray46, "Array");
        nativeArray4.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray46);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray46, "Array");
        boolean boolean88 = nativeArray46.isSealed();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[hi!]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[hi!]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(objArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test2113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2113");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray3 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int5 = nativeArray3.lastIndexOf((java.lang.Object) (short) 10);
        long long6 = nativeArray3.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray3, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray11.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray14, (java.lang.Object) (-1));
        java.lang.Object[] objArray17 = nativeArray11.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable18 = nativeArray11.getParentScope();
        boolean boolean19 = nativeArray3.containsAll((java.util.Collection) nativeArray11);
        com.google.javascript.rhino.head.Scriptable scriptable20 = nativeArray11.getParentScope();
        boolean boolean21 = nativeArray1.containsAll((java.util.Collection) nativeArray11);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int26 = nativeArray24.lastIndexOf((java.lang.Object) (short) 10);
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray28.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray31, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray35.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray38, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray43.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj46 = nativeArray38.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray43);
        com.google.javascript.rhino.head.Callable callable49 = null;
        nativeArray38.setGetterOrSetter("hi!", 0, callable49, false);
        java.lang.Integer[] intArray52 = nativeArray38.getIndexIds();
        nativeArray31.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray38);
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int57 = nativeArray55.lastIndexOf((java.lang.Object) (short) 10);
        long long58 = nativeArray55.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray55, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray63 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray66 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray63.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray66, (java.lang.Object) (-1));
        java.lang.Object[] objArray69 = nativeArray63.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable70 = nativeArray63.getParentScope();
        boolean boolean71 = nativeArray55.containsAll((java.util.Collection) nativeArray63);
        nativeArray63.delete("Array");
        java.lang.Object obj74 = nativeArray31.getAssociatedValue((java.lang.Object) nativeArray63);
        boolean boolean75 = nativeArray24.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray31);
        boolean boolean76 = nativeArray31.isExtensible();
        boolean boolean78 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray31, (int) (short) 100);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean79 = nativeArray1.addAll((int) (short) 0, (java.util.Collection) nativeArray31);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[null]");
        org.junit.Assert.assertNull(scriptable18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(scriptable20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 1L + "'", long58 == 1L);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[null]");
        org.junit.Assert.assertNull(scriptable70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
    }

    @Test
    public void test2114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2114");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.activatePrototypeMap((int) (short) 100);
        com.google.javascript.rhino.head.Scriptable scriptable4 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray7 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray7.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray10, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray15, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray23.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray26, (java.lang.Object) (-1));
        java.lang.Object[] objArray29 = nativeArray23.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable30 = nativeArray23.getParentScope();
        boolean boolean31 = nativeArray15.containsAll((java.util.Collection) nativeArray23);
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        long long37 = nativeArray34.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray34, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable41 = null;
        java.lang.Object[] objArray42 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable41);
        java.lang.Object[] objArray43 = nativeArray34.toArray(objArray42);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray15, "hi!", (java.lang.Object) objArray42);
        nativeArray15.activatePrototypeMap((int) (byte) 10);
        boolean boolean47 = nativeArray7.has((int) (short) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray15);
        nativeArray7.setAttributes((int) (byte) 1, 10);
        java.util.ListIterator listIterator51 = nativeArray7.listIterator();
        nativeArray1.setAttributes("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray7, (int) (short) 10);
        com.google.javascript.rhino.head.Scriptable scriptable54 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        org.junit.Assert.assertNull(scriptable4);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[null]");
        org.junit.Assert.assertNull(scriptable30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 1L + "'", long37 == 1L);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[null]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(listIterator51);
        org.junit.Assert.assertNull(scriptable54);
    }

    @Test
    public void test2115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2115");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.Scriptable scriptable7 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        int int8 = nativeArray1.size();
        java.lang.Object obj10 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "object");
        org.junit.Assert.assertNull(scriptable7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(obj10);
    }

    @Test
    public void test2116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2116");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray7 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray4.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray7, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj15 = nativeArray7.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray12);
        com.google.javascript.rhino.head.Callable callable18 = null;
        nativeArray7.setGetterOrSetter("hi!", 0, callable18, false);
        nativeArray1.setAttributes((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray7, (int) (short) 10);
        boolean boolean23 = nativeArray7.hasPrototypeMap();
        boolean boolean24 = nativeArray7.isSealed();
        // The following exception was thrown during execution in test generation
        try {
            nativeArray7.setAttributes((int) (short) 10, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: 52");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test2117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2117");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable12 = nativeArray11.getParentScope();
        java.lang.Object[] objArray13 = nativeArray11.getIds();
        boolean boolean14 = nativeArray11.isEmpty();
        boolean boolean15 = nativeArray1.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray11);
        boolean boolean17 = nativeArray11.isConst("object");
        java.lang.Object obj19 = nativeArray11.get((java.lang.Object) (byte) 10);
        nativeArray11.preventExtensions();
        boolean boolean22 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray11, "hi!");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(scriptable12);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test2118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2118");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable8 = nativeArray1.getParentScope();
        com.google.javascript.rhino.head.Context context9 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray11.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray14, (java.lang.Object) (-1));
        java.lang.Object[] objArray17 = nativeArray11.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable18 = nativeArray11.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable19 = nativeArray11.getParentScope();
        java.util.ListIterator listIterator20 = nativeArray11.listIterator();
        nativeArray1.defineOwnProperties(context9, (com.google.javascript.rhino.head.ScriptableObject) nativeArray11);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int26 = nativeArray24.lastIndexOf((java.lang.Object) (short) 10);
        long long27 = nativeArray24.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray24, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray32.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray35, (java.lang.Object) (-1));
        java.lang.Object[] objArray38 = nativeArray32.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable39 = nativeArray32.getParentScope();
        boolean boolean40 = nativeArray24.containsAll((java.util.Collection) nativeArray32);
        com.google.javascript.rhino.head.Scriptable scriptable41 = nativeArray32.getParentScope();
        boolean boolean42 = nativeArray32.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable46 = nativeArray45.getParentScope();
        java.lang.Object[] objArray47 = nativeArray45.getIds();
        boolean boolean48 = nativeArray32.has("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray45);
        nativeArray1.setAttributes("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray32, 2);
        java.lang.Object[] objArray51 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        boolean boolean52 = nativeArray1.avoidObjectDetection();
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[null]");
        org.junit.Assert.assertNull(scriptable8);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[null]");
        org.junit.Assert.assertNull(scriptable18);
        org.junit.Assert.assertNull(scriptable19);
        org.junit.Assert.assertNotNull(listIterator20);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 1L + "'", long27 == 1L);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[null]");
        org.junit.Assert.assertNull(scriptable39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(scriptable41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(scriptable46);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test2119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2119");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj38 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        boolean boolean39 = nativeArray21.isSealed();
        com.google.javascript.rhino.head.Scriptable scriptable40 = nativeArray21.getParentScope();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(scriptable40);
    }

    @Test
    public void test2120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2120");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int19 = nativeArray17.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray4.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray17);
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int24 = nativeArray22.lastIndexOf((java.lang.Object) (short) 10);
        long long25 = nativeArray22.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray22, "", true);
        boolean boolean29 = nativeArray22.hasPrototypeMap();
        int int30 = nativeArray22.size();
        boolean boolean31 = nativeArray22.isEmpty();
        com.google.javascript.rhino.head.Scriptable scriptable32 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray22);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray22, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable36 = nativeArray22.getParentScope();
        java.lang.Object obj38 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray22, (java.lang.Object) 0.0f);
        boolean boolean39 = nativeArray4.contains((java.lang.Object) 0.0f);
        boolean boolean40 = nativeArray4.isSealed();
        boolean boolean42 = nativeArray4.isConst("");
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int46 = nativeArray44.lastIndexOf((java.lang.Object) (short) 10);
        long long47 = nativeArray44.getLength();
        nativeArray44.delete((int) (byte) 1);
        java.lang.Integer[] intArray50 = nativeArray44.getIndexIds();
        java.lang.Object obj52 = null;
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray44, "hi!", obj52);
        java.lang.Object obj55 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray44, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.NativeArray nativeArray57 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int59 = nativeArray57.lastIndexOf((java.lang.Object) (short) 10);
        long long60 = nativeArray57.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray57, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable64 = null;
        java.lang.Object[] objArray65 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable64);
        java.lang.Object[] objArray66 = nativeArray57.toArray(objArray65);
        com.google.javascript.rhino.head.Scriptable scriptable67 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray57);
        boolean boolean68 = nativeArray44.contains((java.lang.Object) nativeArray57);
        com.google.javascript.rhino.head.Scriptable scriptable69 = nativeArray44.getPrototype();
        int int70 = nativeArray4.lastIndexOf((java.lang.Object) scriptable69);
        java.lang.Object obj74 = nativeArray4.getGetterOrSetter("hi!", 0, true);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 1L + "'", long25 == 1L);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(scriptable32);
        org.junit.Assert.assertNull(scriptable36);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 1L + "'", long47 == 1L);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 1L + "'", long60 == 1L);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[]");
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[null]");
        org.junit.Assert.assertNotNull(scriptable67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(scriptable69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(obj74);
    }

    @Test
    public void test2121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2121");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int11 = nativeArray9.lastIndexOf((java.lang.Object) (short) 10);
        long long12 = nativeArray9.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray20, (java.lang.Object) (-1));
        java.lang.Object[] objArray23 = nativeArray17.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable24 = nativeArray17.getParentScope();
        boolean boolean25 = nativeArray9.containsAll((java.util.Collection) nativeArray17);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray27.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray30, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray35.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj38 = nativeArray30.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray35);
        boolean boolean39 = nativeArray30.hasPrototypeMap();
        java.lang.Object[] objArray40 = nativeArray30.getIds();
        java.lang.Object[] objArray41 = nativeArray17.toArray(objArray40);
        boolean boolean43 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray17, "Array");
        java.lang.Object obj44 = nativeArray4.get(2, (com.google.javascript.rhino.head.Scriptable) nativeArray17);
        com.google.javascript.rhino.head.Scriptable scriptable45 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray17);
        java.lang.Object obj46 = null;
        java.lang.Object obj47 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray17, obj46);
        boolean boolean49 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray17, (int) (short) 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 1L + "'", long12 == 1L);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[null]");
        org.junit.Assert.assertNull(scriptable24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[null]");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[null]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNull(scriptable45);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test2122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2122");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable8 = null;
        java.lang.Object[] objArray9 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable8);
        java.lang.Object[] objArray10 = nativeArray1.toArray(objArray9);
        com.google.javascript.rhino.head.Scriptable scriptable11 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.Scriptable scriptable12 = nativeArray1.getParentScope();
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        java.lang.Integer[] intArray21 = nativeArray15.getIndexIds();
        java.lang.Object obj23 = null;
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray15, "hi!", obj23);
        boolean boolean26 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray15, 8);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj27 = nativeArray1.set((int) (short) 100, (java.lang.Object) 8);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[null]");
        org.junit.Assert.assertNull(scriptable11);
        org.junit.Assert.assertNull(scriptable12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test2123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2123");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable8 = nativeArray1.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable9 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        java.lang.String str10 = nativeArray1.getTypeOf();
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray15, (java.lang.Object) (-1));
        java.lang.Object[] objArray18 = nativeArray12.getAllIds();
        nativeArray12.delete("");
        long long21 = nativeArray12.getLength();
        boolean boolean23 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray12, (int) (short) 10);
        nativeArray12.delete(2);
        com.google.javascript.rhino.head.Scriptable scriptable26 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray12);
        boolean boolean27 = nativeArray12.isExtensible();
        boolean boolean29 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray12, "");
        boolean boolean30 = nativeArray1.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray12);
        java.lang.Object obj32 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray12, (int) (short) 10);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[null]");
        org.junit.Assert.assertNull(scriptable8);
        org.junit.Assert.assertNull(scriptable9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "object" + "'", str10, "object");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[length]");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1L + "'", long21 == 1L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(scriptable26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(obj32);
    }

    @Test
    public void test2124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2124");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        boolean boolean8 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "");
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int13 = nativeArray11.lastIndexOf((java.lang.Object) (short) 10);
        long long14 = nativeArray11.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray11, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray19.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray22, (java.lang.Object) (-1));
        java.lang.Object[] objArray25 = nativeArray19.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable26 = nativeArray19.getParentScope();
        boolean boolean27 = nativeArray11.containsAll((java.util.Collection) nativeArray19);
        com.google.javascript.rhino.head.Scriptable scriptable28 = nativeArray19.getParentScope();
        boolean boolean29 = nativeArray19.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable33 = nativeArray32.getParentScope();
        java.lang.Object[] objArray34 = nativeArray32.getIds();
        boolean boolean35 = nativeArray19.has("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray32);
        java.lang.reflect.Method method36 = null;
        java.lang.reflect.Method method37 = null;
        nativeArray4.defineProperty("hi!", (java.lang.Object) nativeArray19, method36, method37, 8);
        nativeArray4.preventExtensions();
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int45 = nativeArray43.lastIndexOf((java.lang.Object) (short) 10);
        long long46 = nativeArray43.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray43, "", true);
        boolean boolean50 = nativeArray43.hasPrototypeMap();
        int int51 = nativeArray43.size();
        boolean boolean52 = nativeArray4.has((int) (byte) 0, (com.google.javascript.rhino.head.Scriptable) nativeArray43);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj54 = nativeArray43.get((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[null]");
        org.junit.Assert.assertNull(scriptable26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(scriptable28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(scriptable33);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 1L + "'", long46 == 1L);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test2125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2125");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable8 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray10.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray13, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj21 = nativeArray13.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray18);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int26 = nativeArray24.lastIndexOf((java.lang.Object) (short) 10);
        long long27 = nativeArray24.getLength();
        nativeArray24.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray18, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray33.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray36, (java.lang.Object) (-1));
        java.lang.Object[] objArray39 = nativeArray33.getAllIds();
        nativeArray33.delete("");
        java.lang.Object obj42 = nativeArray18.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray33);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray18, "hi!");
        com.google.javascript.rhino.head.Context context45 = null;
        com.google.javascript.rhino.head.Scriptable scriptable46 = null;
        java.lang.Object[] objArray47 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable46);
        com.google.javascript.rhino.head.NativeArray nativeArray49 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray52 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray49.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray52, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray57 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray57.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj60 = nativeArray52.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray57);
        com.google.javascript.rhino.head.Callable callable63 = null;
        nativeArray52.setGetterOrSetter("hi!", 0, callable63, false);
        com.google.javascript.rhino.head.Scriptable scriptable66 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray52);
        nativeArray18.defineOwnProperty(context45, (java.lang.Object) scriptable46, (com.google.javascript.rhino.head.ScriptableObject) nativeArray52);
        java.lang.Object[] objArray68 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray52);
        boolean boolean69 = nativeArray52.isEmpty();
        boolean boolean70 = nativeArray52.avoidObjectDetection();
        java.lang.Object obj71 = nativeArray1.getAssociatedValue((java.lang.Object) boolean70);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator listIterator73 = nativeArray1.listIterator((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNull(scriptable8);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 1L + "'", long27 == 1L);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[length]");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNull(scriptable66);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(obj71);
    }

    @Test
    public void test2126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2126");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        java.lang.Object[] objArray2 = nativeArray1.getIds();
        com.google.javascript.rhino.head.Scriptable scriptable3 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNull(scriptable3);
    }

    @Test
    public void test2127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2127");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", (java.lang.Object) 100);
        boolean boolean5 = nativeArray1.avoidObjectDetection();
        boolean boolean7 = nativeArray1.isConst("hi!");
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray10.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray13, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj21 = nativeArray13.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray18);
        boolean boolean22 = nativeArray13.hasPrototypeMap();
        java.lang.Object[] objArray23 = nativeArray13.getIds();
        int int24 = nativeArray13.size();
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray29, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray34.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj37 = nativeArray29.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray34);
        boolean boolean38 = nativeArray29.hasPrototypeMap();
        java.lang.Object[] objArray39 = nativeArray29.getIds();
        int int40 = nativeArray29.size();
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray43.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray46, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray51.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj54 = nativeArray46.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray51);
        boolean boolean55 = nativeArray46.hasPrototypeMap();
        java.lang.Object[] objArray56 = nativeArray46.getIds();
        int int57 = nativeArray46.size();
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int61 = nativeArray59.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray46.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray59);
        java.lang.Object obj63 = nativeArray29.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray46);
        boolean boolean64 = nativeArray13.containsAll((java.util.Collection) nativeArray46);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!", (java.lang.Object) nativeArray46);
        boolean boolean67 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray46, 1);
        boolean boolean69 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray46, "hi!");
        java.lang.Object[] objArray70 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray46);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[hi!]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[hi!]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[hi!]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[]");
    }

    @Test
    public void test2128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2128");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        com.google.javascript.rhino.head.Scriptable scriptable11 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.Context context15 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int19 = nativeArray17.lastIndexOf((java.lang.Object) (short) 10);
        long long20 = nativeArray17.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray17, "", true);
        boolean boolean24 = nativeArray17.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable28 = nativeArray27.getParentScope();
        java.lang.Object[] objArray29 = nativeArray27.getIds();
        boolean boolean30 = nativeArray27.isEmpty();
        boolean boolean31 = nativeArray17.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray27);
        boolean boolean33 = nativeArray27.isConst("object");
        nativeArray1.defineOwnProperties(context15, (com.google.javascript.rhino.head.ScriptableObject) nativeArray27);
        java.lang.Object[] objArray35 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.Scriptable scriptable36 = nativeArray1.getPrototype();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(scriptable11);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 1L + "'", long20 == 1L);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(scriptable28);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertNull(scriptable36);
    }

    @Test
    public void test2129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2129");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable2 = nativeArray1.getParentScope();
        java.lang.Object[] objArray3 = nativeArray1.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray6 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int8 = nativeArray6.lastIndexOf((java.lang.Object) (short) 10);
        long long9 = nativeArray6.getLength();
        nativeArray6.delete((int) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int16 = nativeArray14.lastIndexOf((java.lang.Object) (short) 10);
        long long17 = nativeArray14.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray14, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray22.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray25, (java.lang.Object) (-1));
        java.lang.Object[] objArray28 = nativeArray22.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable29 = nativeArray22.getParentScope();
        boolean boolean30 = nativeArray14.containsAll((java.util.Collection) nativeArray22);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray32.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray35, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray40.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj43 = nativeArray35.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray40);
        boolean boolean44 = nativeArray35.hasPrototypeMap();
        java.lang.Object[] objArray45 = nativeArray35.getIds();
        java.lang.Object[] objArray46 = nativeArray22.toArray(objArray45);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray6, "Array", (java.lang.Object) nativeArray22);
        boolean boolean48 = nativeArray1.has(0, (com.google.javascript.rhino.head.Scriptable) nativeArray6);
        com.google.javascript.rhino.head.Scriptable scriptable49 = nativeArray1.getPrototype();
        org.junit.Assert.assertNull(scriptable2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[length]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 1L + "'", long9 == 1L);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 1L + "'", long17 == 1L);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[null]");
        org.junit.Assert.assertNull(scriptable29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[null]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[null]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(scriptable49);
    }

    @Test
    public void test2130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2130");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj38 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        java.lang.Object[] objArray39 = nativeArray4.getIds();
        java.lang.String str40 = nativeArray4.getClassName();
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int44 = nativeArray42.lastIndexOf((java.lang.Object) (short) 10);
        long long45 = nativeArray42.getLength();
        nativeArray42.setAttributes((int) (byte) 100, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int53 = nativeArray51.lastIndexOf((java.lang.Object) (short) 10);
        long long54 = nativeArray51.getLength();
        nativeArray51.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray42, (int) (byte) -1, (java.lang.Object) nativeArray51);
        java.util.Iterator iterator58 = nativeArray42.iterator();
        java.lang.Object[] objArray59 = nativeArray42.toArray();
        boolean boolean60 = nativeArray4.containsAll((java.util.Collection) nativeArray42);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "", false);
        com.google.javascript.rhino.head.NativeArray nativeArray65 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable66 = nativeArray65.getParentScope();
        java.lang.Object[] objArray67 = nativeArray65.getIds();
        boolean boolean68 = nativeArray65.isEmpty();
        int int69 = nativeArray65.size();
        java.lang.Object[] objArray70 = nativeArray65.getIds();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean71 = nativeArray4.add((java.lang.Object) nativeArray65);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[hi!]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Array" + "'", str40, "Array");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 1L + "'", long45 == 1L);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 1L + "'", long54 == 1L);
        org.junit.Assert.assertNotNull(iterator58);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[null]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(scriptable66);
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[]");
    }

    @Test
    public void test2131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2131");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object obj10 = nativeArray4.getGetterOrSetter("object", (int) (short) 0, true);
        nativeArray4.setAttributes(1, (int) (short) 1);
        com.google.javascript.rhino.head.Scriptable scriptable14 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray4);
        com.google.javascript.rhino.head.Scriptable scriptable15 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray4);
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable19 = nativeArray18.getParentScope();
        java.lang.Object[] objArray20 = nativeArray18.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray22.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray25, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray30.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj33 = nativeArray25.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray30);
        java.lang.Object obj34 = nativeArray18.getAssociatedValue((java.lang.Object) nativeArray25);
        com.google.javascript.rhino.head.Scriptable scriptable35 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray18);
        nativeArray18.delete(2);
        int int38 = nativeArray18.size();
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray40.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray43, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray48.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj51 = nativeArray43.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray48);
        boolean boolean52 = nativeArray43.hasPrototypeMap();
        java.lang.Object[] objArray53 = nativeArray43.getIds();
        int int54 = nativeArray43.size();
        com.google.javascript.rhino.head.NativeArray nativeArray57 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray57.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray60, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray65 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray65.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj68 = nativeArray60.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray65);
        boolean boolean69 = nativeArray60.hasPrototypeMap();
        java.lang.Object[] objArray70 = nativeArray60.getIds();
        int int71 = nativeArray60.size();
        com.google.javascript.rhino.head.NativeArray nativeArray73 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int75 = nativeArray73.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray60.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray73);
        java.lang.Object obj77 = nativeArray43.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray60);
        java.lang.Object[] objArray78 = nativeArray43.getIds();
        java.lang.Integer[] intArray79 = nativeArray43.getIndexIds();
        nativeArray4.putConst("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray18, (java.lang.Object) intArray79);
        java.util.Iterator iterator81 = nativeArray4.iterator();
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(scriptable14);
        org.junit.Assert.assertNull(scriptable15);
        org.junit.Assert.assertNull(scriptable19);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[length]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNull(scriptable35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[hi!]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[hi!]");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[hi!]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertNotNull(iterator81);
    }

    @Test
    public void test2132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2132");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.getAllIds();
        nativeArray24.delete("");
        java.lang.Object obj33 = nativeArray9.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!");
        com.google.javascript.rhino.head.Context context36 = null;
        com.google.javascript.rhino.head.Scriptable scriptable37 = null;
        java.lang.Object[] objArray38 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable37);
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray40.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray43, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray48.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj51 = nativeArray43.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray48);
        com.google.javascript.rhino.head.Callable callable54 = null;
        nativeArray43.setGetterOrSetter("hi!", 0, callable54, false);
        com.google.javascript.rhino.head.Scriptable scriptable57 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray43);
        nativeArray9.defineOwnProperty(context36, (java.lang.Object) scriptable37, (com.google.javascript.rhino.head.ScriptableObject) nativeArray43);
        boolean boolean59 = nativeArray43.isExtensible();
        // The following exception was thrown during execution in test generation
        try {
            nativeArray43.clear();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNull(scriptable57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    }

    @Test
    public void test2133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2133");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.getAllIds();
        nativeArray24.delete("");
        java.lang.Object obj33 = nativeArray9.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        java.lang.Integer[] intArray34 = nativeArray24.getIndexIds();
        com.google.javascript.rhino.head.Scriptable scriptable35 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray24);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertNotNull(scriptable35);
    }

    @Test
    public void test2134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2134");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable8 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        boolean boolean9 = nativeArray1.avoidObjectDetection();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj11 = nativeArray1.remove((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNull(scriptable8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test2135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2135");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.getAllIds();
        nativeArray24.delete("");
        java.lang.Object obj33 = nativeArray9.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        nativeArray9.delete((int) (short) -1);
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable39 = nativeArray38.getParentScope();
        java.lang.Object[] objArray40 = nativeArray38.getIds();
        boolean boolean41 = nativeArray38.isEmpty();
        java.lang.Object obj43 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray38, 8);
        com.google.javascript.rhino.head.Scriptable scriptable44 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray38);
        nativeArray9.defineConst("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray38);
        com.google.javascript.rhino.head.Scriptable scriptable47 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray38, "Array");
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNull(scriptable39);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNull(scriptable44);
        org.junit.Assert.assertNull(scriptable47);
    }

    @Test
    public void test2136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2136");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        java.lang.Integer[] intArray7 = nativeArray1.getIndexIds();
        java.lang.Object obj9 = null;
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!", obj9);
        boolean boolean12 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 8);
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray14.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray17, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int24 = nativeArray22.lastIndexOf((java.lang.Object) (short) 10);
        long long25 = nativeArray22.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray22, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray30.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray33, (java.lang.Object) (-1));
        java.lang.Object[] objArray36 = nativeArray30.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable37 = nativeArray30.getParentScope();
        boolean boolean38 = nativeArray22.containsAll((java.util.Collection) nativeArray30);
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray40.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray43, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray48.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj51 = nativeArray43.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray48);
        boolean boolean52 = nativeArray43.hasPrototypeMap();
        java.lang.Object[] objArray53 = nativeArray43.getIds();
        java.lang.Object[] objArray54 = nativeArray30.toArray(objArray53);
        boolean boolean56 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray30, "Array");
        java.lang.Object obj57 = nativeArray17.get(2, (com.google.javascript.rhino.head.Scriptable) nativeArray30);
        java.lang.Object obj58 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray1, (java.lang.Object) nativeArray17);
        java.util.Collection collection59 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean60 = nativeArray1.addAll(collection59);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 1L + "'", long25 == 1L);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[null]");
        org.junit.Assert.assertNull(scriptable37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[null]");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[null]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNull(obj58);
    }

    @Test
    public void test2137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2137");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        java.lang.reflect.Method method11 = null;
        java.lang.reflect.Method method12 = null;
        nativeArray1.defineProperty("hi!", (java.lang.Object) (-1L), method11, method12, (int) (byte) 10);
        java.lang.Object obj16 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, (int) (byte) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int20 = nativeArray18.lastIndexOf((java.lang.Object) (short) 10);
        long long21 = nativeArray18.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray18, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable25 = null;
        java.lang.Object[] objArray26 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable25);
        java.lang.Object[] objArray27 = nativeArray18.toArray(objArray26);
        com.google.javascript.rhino.head.Scriptable scriptable28 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray18);
        com.google.javascript.rhino.head.Scriptable scriptable29 = nativeArray18.getParentScope();
        boolean boolean30 = nativeArray1.containsAll((java.util.Collection) nativeArray18);
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray33.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray36, (java.lang.Object) (-1));
        boolean boolean40 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray36, "");
        boolean boolean41 = nativeArray36.avoidObjectDetection();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean42 = nativeArray1.addAll((int) (short) -1, (java.util.Collection) nativeArray36);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1L + "'", long21 == 1L);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[null]");
        org.junit.Assert.assertNull(scriptable28);
        org.junit.Assert.assertNull(scriptable29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test2138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2138");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        java.lang.Object obj9 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 4);
        java.lang.Object[] objArray10 = nativeArray1.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray13.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray16, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray21.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj24 = nativeArray16.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        boolean boolean25 = nativeArray16.hasPrototypeMap();
        java.lang.Object[] objArray26 = nativeArray16.getIds();
        int int27 = nativeArray16.size();
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int31 = nativeArray29.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray16.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray29);
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable35 = nativeArray34.getParentScope();
        java.lang.Object[] objArray36 = nativeArray34.getIds();
        boolean boolean37 = nativeArray34.isEmpty();
        nativeArray1.put((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray16, (java.lang.Object) boolean37);
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray41.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray44, (java.lang.Object) (-1));
        java.lang.Object[] objArray47 = nativeArray41.getAllIds();
        java.lang.String str48 = nativeArray41.getTypeOf();
        boolean boolean49 = nativeArray16.has("object", (com.google.javascript.rhino.head.Scriptable) nativeArray41);
        com.google.javascript.rhino.head.Scriptable scriptable50 = nativeArray16.getParentScope();
        nativeArray16.setAttributes((int) (byte) 1, 2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[null]");
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[hi!]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(scriptable35);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[length]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "object" + "'", str48, "object");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(scriptable50);
    }

    @Test
    public void test2139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2139");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.Scriptable scriptable7 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        int int8 = nativeArray1.size();
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray14.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray17, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray22.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj25 = nativeArray17.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray22);
        com.google.javascript.rhino.head.Callable callable28 = null;
        nativeArray17.setGetterOrSetter("hi!", 0, callable28, false);
        nativeArray11.setAttributes((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray17, (int) (short) 10);
        java.util.ListIterator listIterator33 = nativeArray17.listIterator();
        java.lang.Object obj34 = nativeArray1.get(0, (com.google.javascript.rhino.head.Scriptable) nativeArray17);
        java.lang.Object obj36 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray17, "Array");
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable39 = nativeArray38.getParentScope();
        java.lang.Object[] objArray40 = nativeArray38.getIds();
        boolean boolean41 = nativeArray38.avoidObjectDetection();
        int int42 = nativeArray17.indexOf((java.lang.Object) nativeArray38);
        org.junit.Assert.assertNull(scriptable7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(listIterator33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNull(scriptable39);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
    }

    @Test
    public void test2140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2140");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int22 = nativeArray20.lastIndexOf((java.lang.Object) (short) 10);
        long long23 = nativeArray20.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray20, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable27 = null;
        java.lang.Object[] objArray28 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable27);
        java.lang.Object[] objArray29 = nativeArray20.toArray(objArray28);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!", (java.lang.Object) objArray28);
        int int31 = nativeArray1.size();
        nativeArray1.delete("object");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1L + "'", long23 == 1L);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[null]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
    }

    @Test
    public void test2141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2141");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable2 = nativeArray1.getParentScope();
        com.google.javascript.rhino.head.NativeArray nativeArray5 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray5.activatePrototypeMap((int) (short) 100);
        com.google.javascript.rhino.head.Scriptable scriptable9 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray5, "");
        boolean boolean10 = nativeArray1.has(100, scriptable9);
        nativeArray1.setAttributes(4, (int) (byte) 0);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        com.google.javascript.rhino.head.Callable callable32 = null;
        nativeArray21.setGetterOrSetter("hi!", 0, callable32, false);
        nativeArray15.setAttributes((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray21, (int) (short) 10);
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int41 = nativeArray39.lastIndexOf((java.lang.Object) (short) 10);
        long long42 = nativeArray39.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray39, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable46 = null;
        java.lang.Object[] objArray47 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable46);
        java.lang.Object[] objArray48 = nativeArray39.toArray(objArray47);
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int53 = nativeArray51.lastIndexOf((java.lang.Object) (short) 10);
        long long54 = nativeArray51.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray51, "", true);
        boolean boolean58 = nativeArray51.hasPrototypeMap();
        int int59 = nativeArray51.size();
        boolean boolean60 = nativeArray51.isEmpty();
        boolean boolean62 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray51, "Array");
        java.lang.Object obj63 = nativeArray39.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray51);
        java.lang.Object obj64 = nativeArray15.get("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray39);
        com.google.javascript.rhino.head.NativeArray nativeArray66 = new com.google.javascript.rhino.head.NativeArray((long) 2);
        java.lang.Object obj67 = nativeArray15.get((java.lang.Object) nativeArray66);
        com.google.javascript.rhino.head.NativeArray nativeArray70 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int72 = nativeArray70.lastIndexOf((java.lang.Object) (short) 10);
        long long73 = nativeArray70.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray70, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray78 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray81 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray78.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray81, (java.lang.Object) (-1));
        java.lang.Object[] objArray84 = nativeArray78.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable85 = nativeArray78.getParentScope();
        boolean boolean86 = nativeArray70.containsAll((java.util.Collection) nativeArray78);
        com.google.javascript.rhino.head.Scriptable scriptable87 = nativeArray78.getParentScope();
        boolean boolean88 = nativeArray78.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray91 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable92 = nativeArray91.getParentScope();
        java.lang.Object[] objArray93 = nativeArray91.getIds();
        boolean boolean94 = nativeArray78.has("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray91);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray15, "object", (java.lang.Object) nativeArray91);
        java.lang.Object[] objArray96 = nativeArray15.getIds();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean97 = nativeArray1.add((java.lang.Object) nativeArray15);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(scriptable2);
        org.junit.Assert.assertNull(scriptable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 1L + "'", long42 == 1L);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[null]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 1L + "'", long54 == 1L);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 1L + "'", long73 == 1L);
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[null]");
        org.junit.Assert.assertNull(scriptable85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNull(scriptable87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNull(scriptable92);
        org.junit.Assert.assertNotNull(objArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray93), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray93), "[]");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(objArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray96), "[object]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray96), "[object]");
    }

    @Test
    public void test2142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2142");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object obj8 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "hi!");
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray11.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray14, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray19.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj22 = nativeArray14.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray19);
        boolean boolean23 = nativeArray14.hasPrototypeMap();
        java.lang.Object[] objArray24 = nativeArray14.getIds();
        int int25 = nativeArray14.size();
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray28.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray31, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray36.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj39 = nativeArray31.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray36);
        boolean boolean40 = nativeArray31.hasPrototypeMap();
        java.lang.Object[] objArray41 = nativeArray31.getIds();
        int int42 = nativeArray31.size();
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int46 = nativeArray44.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray31.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray44);
        java.lang.Object obj48 = nativeArray14.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray31);
        boolean boolean49 = nativeArray31.isSealed();
        boolean boolean50 = nativeArray31.hasPrototypeMap();
        boolean boolean51 = nativeArray4.has(100, (com.google.javascript.rhino.head.Scriptable) nativeArray31);
        com.google.javascript.rhino.head.NativeArray nativeArray53 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray53.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray56, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray61 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray61.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj64 = nativeArray56.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray61);
        boolean boolean65 = nativeArray56.hasPrototypeMap();
        java.lang.Object[] objArray66 = nativeArray56.getIds();
        int int67 = nativeArray56.size();
        com.google.javascript.rhino.head.NativeArray nativeArray70 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray73 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray70.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray73, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray78 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray78.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj81 = nativeArray73.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray78);
        boolean boolean82 = nativeArray73.hasPrototypeMap();
        java.lang.Object[] objArray83 = nativeArray73.getIds();
        int int84 = nativeArray73.size();
        com.google.javascript.rhino.head.NativeArray nativeArray86 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int88 = nativeArray86.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray73.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray86);
        java.lang.Object obj90 = nativeArray56.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray73);
        java.lang.Object[] objArray91 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray56);
        boolean boolean93 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray56, "hi!");
        boolean boolean94 = nativeArray31.contains((java.lang.Object) nativeArray56);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj96 = nativeArray31.get((long) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + (-1) + "'", obj8, (-1));
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[hi!]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[hi!]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[hi!]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray83), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray83), "[hi!]");
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 1 + "'", int84 == 1);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(objArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray91), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray91), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test2143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2143");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable2 = nativeArray1.getParentScope();
        java.lang.Object[] objArray3 = nativeArray1.getIds();
        boolean boolean4 = nativeArray1.avoidObjectDetection();
        java.lang.Object obj8 = nativeArray1.getGetterOrSetter("", 0, true);
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int13 = nativeArray11.lastIndexOf((java.lang.Object) (short) 10);
        long long14 = nativeArray11.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray11, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray19.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray22, (java.lang.Object) (-1));
        java.lang.Object[] objArray25 = nativeArray19.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable26 = nativeArray19.getParentScope();
        boolean boolean27 = nativeArray11.containsAll((java.util.Collection) nativeArray19);
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray32, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray37.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj40 = nativeArray32.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        boolean boolean41 = nativeArray32.hasPrototypeMap();
        java.lang.Object[] objArray42 = nativeArray32.getIds();
        java.lang.Object[] objArray43 = nativeArray19.toArray(objArray42);
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int47 = nativeArray45.lastIndexOf((java.lang.Object) (short) 10);
        long long48 = nativeArray45.getLength();
        nativeArray45.delete((int) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray53 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int55 = nativeArray53.lastIndexOf((java.lang.Object) (short) 10);
        long long56 = nativeArray53.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray53, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray61 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray61.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray64, (java.lang.Object) (-1));
        java.lang.Object[] objArray67 = nativeArray61.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable68 = nativeArray61.getParentScope();
        boolean boolean69 = nativeArray53.containsAll((java.util.Collection) nativeArray61);
        com.google.javascript.rhino.head.NativeArray nativeArray71 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray74 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray71.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray74, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray79 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray79.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj82 = nativeArray74.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray79);
        boolean boolean83 = nativeArray74.hasPrototypeMap();
        java.lang.Object[] objArray84 = nativeArray74.getIds();
        java.lang.Object[] objArray85 = nativeArray61.toArray(objArray84);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray45, "Array", (java.lang.Object) nativeArray61);
        java.util.ListIterator listIterator87 = nativeArray45.listIterator();
        nativeArray19.setPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray45);
        java.lang.Object obj89 = nativeArray1.get(8, (com.google.javascript.rhino.head.Scriptable) nativeArray45);
        nativeArray1.sealObject();
        boolean boolean91 = nativeArray1.isEmpty();
        java.lang.Object[] objArray92 = nativeArray1.getIds();
        org.junit.Assert.assertNull(scriptable2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[null]");
        org.junit.Assert.assertNull(scriptable26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[null]");
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[null]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 1L + "'", long48 == 1L);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 1L + "'", long56 == 1L);
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[null]");
        org.junit.Assert.assertNull(scriptable68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[null]");
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray85), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray85), "[null]");
        org.junit.Assert.assertNotNull(listIterator87);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(objArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray92), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray92), "[]");
    }

    @Test
    public void test2144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2144");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.activatePrototypeMap((int) (short) 100);
        com.google.javascript.rhino.head.Scriptable scriptable5 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int10 = nativeArray8.lastIndexOf((java.lang.Object) (short) 10);
        long long11 = nativeArray8.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray8, "", true);
        boolean boolean15 = nativeArray8.hasPrototypeMap();
        int int16 = nativeArray8.size();
        boolean boolean17 = nativeArray8.isEmpty();
        com.google.javascript.rhino.head.Scriptable scriptable18 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray8);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray8, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable22 = nativeArray8.getParentScope();
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) (short) 10);
        java.lang.reflect.Method method26 = null;
        java.lang.reflect.Method method27 = null;
        nativeArray8.defineProperty("hi!", (java.lang.Object) nativeArray25, method26, method27, 0);
        nativeArray1.defineConst("", (com.google.javascript.rhino.head.Scriptable) nativeArray25);
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int35 = nativeArray33.lastIndexOf((java.lang.Object) (short) 10);
        long long36 = nativeArray33.getLength();
        nativeArray33.delete((int) (byte) 1);
        boolean boolean39 = nativeArray33.isExtensible();
        java.lang.Object obj41 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray33, 4);
        java.lang.Object[] objArray42 = nativeArray33.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray45.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray48, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray53 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray53.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj56 = nativeArray48.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray53);
        boolean boolean57 = nativeArray48.hasPrototypeMap();
        java.lang.Object[] objArray58 = nativeArray48.getIds();
        int int59 = nativeArray48.size();
        com.google.javascript.rhino.head.NativeArray nativeArray61 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int63 = nativeArray61.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray48.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray61);
        com.google.javascript.rhino.head.NativeArray nativeArray66 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable67 = nativeArray66.getParentScope();
        java.lang.Object[] objArray68 = nativeArray66.getIds();
        boolean boolean69 = nativeArray66.isEmpty();
        nativeArray33.put((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray48, (java.lang.Object) boolean69);
        com.google.javascript.rhino.head.NativeArray nativeArray73 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray76 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray73.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray76, (java.lang.Object) (-1));
        java.lang.Object[] objArray79 = nativeArray73.getAllIds();
        java.lang.String str80 = nativeArray73.getTypeOf();
        boolean boolean81 = nativeArray48.has("object", (com.google.javascript.rhino.head.Scriptable) nativeArray73);
        boolean boolean82 = nativeArray73.hasPrototypeMap();
        nativeArray73.delete("");
        // The following exception was thrown during execution in test generation
        try {
            int int85 = nativeArray25.getAttributes(4, (com.google.javascript.rhino.head.Scriptable) nativeArray73);
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EvaluatorException; message: Property 4 not found.");
        } catch (com.google.javascript.rhino.head.EvaluatorException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(scriptable5);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(scriptable18);
        org.junit.Assert.assertNull(scriptable22);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 1L + "'", long36 == 1L);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[null]");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[hi!]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNull(scriptable67);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[length]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "object" + "'", str80, "object");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test2145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2145");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray8.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray11, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray16.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj19 = nativeArray11.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray16);
        com.google.javascript.rhino.head.Callable callable22 = null;
        nativeArray11.setGetterOrSetter("hi!", 0, callable22, false);
        java.lang.Integer[] intArray25 = nativeArray11.getIndexIds();
        nativeArray4.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray11);
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int31 = nativeArray29.lastIndexOf((java.lang.Object) (short) 10);
        long long32 = nativeArray29.getLength();
        nativeArray29.delete((int) (byte) 1);
        boolean boolean36 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray29, "");
        nativeArray11.setAttributes("", (com.google.javascript.rhino.head.Scriptable) nativeArray29, 13);
        com.google.javascript.rhino.head.Scriptable scriptable39 = nativeArray29.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable40 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray29);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int45 = nativeArray43.lastIndexOf((java.lang.Object) (short) 10);
        long long46 = nativeArray43.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray43, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable50 = null;
        java.lang.Object[] objArray51 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable50);
        java.lang.Object[] objArray52 = nativeArray43.toArray(objArray51);
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int57 = nativeArray55.lastIndexOf((java.lang.Object) (short) 10);
        long long58 = nativeArray55.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray55, "", true);
        boolean boolean62 = nativeArray55.hasPrototypeMap();
        int int63 = nativeArray55.size();
        boolean boolean64 = nativeArray55.isEmpty();
        boolean boolean66 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray55, "Array");
        java.lang.Object obj67 = nativeArray43.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray55);
        com.google.javascript.rhino.head.NativeArray nativeArray70 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int72 = nativeArray70.lastIndexOf((java.lang.Object) (short) 10);
        long long73 = nativeArray70.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray70, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray78 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray81 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray78.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray81, (java.lang.Object) (-1));
        java.lang.Object[] objArray84 = nativeArray78.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable85 = nativeArray78.getParentScope();
        boolean boolean86 = nativeArray70.containsAll((java.util.Collection) nativeArray78);
        java.lang.Object obj87 = nativeArray55.get((int) (byte) -1, (com.google.javascript.rhino.head.Scriptable) nativeArray78);
        nativeArray29.defineProperty("object", (java.lang.Object) nativeArray55, (int) (short) 0);
        java.util.ListIterator listIterator90 = nativeArray55.listIterator();
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray55, "object");
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1L + "'", long32 == 1L);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(scriptable39);
        org.junit.Assert.assertNotNull(scriptable40);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 1L + "'", long46 == 1L);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[null]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 1L + "'", long58 == 1L);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 1L + "'", long73 == 1L);
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[null]");
        org.junit.Assert.assertNull(scriptable85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(listIterator90);
    }

    @Test
    public void test2146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2146");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable12 = nativeArray11.getParentScope();
        java.lang.Object[] objArray13 = nativeArray11.getIds();
        boolean boolean14 = nativeArray11.isEmpty();
        boolean boolean15 = nativeArray1.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray11);
        boolean boolean17 = nativeArray11.isConst("object");
        boolean boolean18 = nativeArray11.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        java.lang.Object obj23 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray21, "Array");
        boolean boolean24 = nativeArray21.isSealed();
        java.lang.Object obj25 = nativeArray11.get("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int29 = nativeArray27.lastIndexOf((java.lang.Object) (short) 10);
        long long30 = nativeArray27.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray27, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray35.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray38, (java.lang.Object) (-1));
        java.lang.Object[] objArray41 = nativeArray35.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable42 = nativeArray35.getParentScope();
        boolean boolean43 = nativeArray27.containsAll((java.util.Collection) nativeArray35);
        com.google.javascript.rhino.head.Scriptable scriptable44 = nativeArray35.getParentScope();
        boolean boolean45 = nativeArray35.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable49 = nativeArray48.getParentScope();
        java.lang.Object[] objArray50 = nativeArray48.getIds();
        boolean boolean51 = nativeArray35.has("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray48);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean52 = nativeArray11.retainAll((java.util.Collection) nativeArray35);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(scriptable12);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1L + "'", long30 == 1L);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[null]");
        org.junit.Assert.assertNull(scriptable42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(scriptable44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(scriptable49);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test2147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2147");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.getAllIds();
        nativeArray1.delete("");
        long long10 = nativeArray1.getLength();
        boolean boolean12 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, (int) (short) 10);
        nativeArray1.delete(2);
        com.google.javascript.rhino.head.Scriptable scriptable15 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        boolean boolean16 = nativeArray1.isExtensible();
        java.lang.Object obj18 = nativeArray1.get((long) (short) 0);
        nativeArray1.preventExtensions();
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[length]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(scriptable15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(obj18);
    }

    @Test
    public void test2148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2148");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        boolean boolean8 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "");
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray14, "", (java.lang.Object) 100);
        java.lang.Object obj18 = nativeArray11.associateValue((java.lang.Object) ' ', (java.lang.Object) nativeArray14);
        java.lang.Object[] objArray19 = nativeArray14.toArray();
        nativeArray4.setAttributes((int) (byte) 100, (com.google.javascript.rhino.head.Scriptable) nativeArray14, (int) (short) 0);
        long long22 = nativeArray14.jsGet_length();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[null]");
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1L + "'", long22 == 1L);
    }

    @Test
    public void test2149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2149");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int10 = nativeArray8.lastIndexOf((java.lang.Object) (short) 10);
        long long11 = nativeArray8.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray8, "", true);
        boolean boolean15 = nativeArray8.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable19 = nativeArray18.getParentScope();
        java.lang.Object[] objArray20 = nativeArray18.getIds();
        boolean boolean21 = nativeArray18.isEmpty();
        boolean boolean22 = nativeArray8.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray18);
        boolean boolean23 = nativeArray1.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray8);
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int28 = nativeArray26.lastIndexOf((java.lang.Object) (short) 10);
        long long29 = nativeArray26.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray26, "", true);
        boolean boolean33 = nativeArray26.hasPrototypeMap();
        int int34 = nativeArray26.size();
        boolean boolean35 = nativeArray26.isEmpty();
        boolean boolean37 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray26, "Array");
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int42 = nativeArray40.lastIndexOf((java.lang.Object) (short) 10);
        long long43 = nativeArray40.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray40, "", true);
        boolean boolean47 = nativeArray40.hasPrototypeMap();
        java.util.ListIterator listIterator48 = nativeArray40.listIterator();
        boolean boolean49 = nativeArray26.has("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray40);
        boolean boolean50 = nativeArray26.hasPrototypeMap();
        java.lang.Object[] objArray51 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray26);
        java.lang.reflect.Method method52 = null;
        java.lang.reflect.Method method53 = null;
        nativeArray8.defineProperty("hi!", (java.lang.Object) nativeArray26, method52, method53, (int) (short) 1);
        com.google.javascript.rhino.head.Scriptable scriptable56 = nativeArray26.getPrototype();
        java.lang.String str57 = nativeArray26.getTypeOf();
        // The following exception was thrown during execution in test generation
        try {
            nativeArray26.clear();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(scriptable19);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 1L + "'", long29 == 1L);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 1L + "'", long43 == 1L);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(listIterator48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertNull(scriptable56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "object" + "'", str57, "object");
    }

    @Test
    public void test2150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2150");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj38 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        java.lang.Object[] objArray39 = nativeArray4.getIds();
        java.lang.Integer[] intArray40 = nativeArray4.getIndexIds();
        java.lang.Object[] objArray41 = nativeArray4.toArray();
        boolean boolean43 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, (int) (short) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[hi!]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[null]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
    }

    @Test
    public void test2151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2151");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        com.google.javascript.rhino.head.NativeArray nativeArray5 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray5.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray8, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray15, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray20.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj23 = nativeArray15.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray20);
        com.google.javascript.rhino.head.Callable callable26 = null;
        nativeArray15.setGetterOrSetter("hi!", 0, callable26, false);
        java.lang.Integer[] intArray29 = nativeArray15.getIndexIds();
        nativeArray8.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray15);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int34 = nativeArray32.lastIndexOf((java.lang.Object) (short) 10);
        long long35 = nativeArray32.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray32, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray40.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray43, (java.lang.Object) (-1));
        java.lang.Object[] objArray46 = nativeArray40.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable47 = nativeArray40.getParentScope();
        boolean boolean48 = nativeArray32.containsAll((java.util.Collection) nativeArray40);
        nativeArray40.delete("Array");
        java.lang.Object obj51 = nativeArray8.getAssociatedValue((java.lang.Object) nativeArray40);
        boolean boolean52 = nativeArray1.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray8);
        java.lang.String str53 = nativeArray8.getTypeOf();
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int57 = nativeArray55.lastIndexOf((java.lang.Object) (short) 10);
        long long58 = nativeArray55.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray55, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable62 = null;
        java.lang.Object[] objArray63 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable62);
        java.lang.Object[] objArray64 = nativeArray55.toArray(objArray63);
        com.google.javascript.rhino.head.NativeArray nativeArray67 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int69 = nativeArray67.lastIndexOf((java.lang.Object) (short) 10);
        long long70 = nativeArray67.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray67, "", true);
        boolean boolean74 = nativeArray67.hasPrototypeMap();
        int int75 = nativeArray67.size();
        boolean boolean76 = nativeArray67.isEmpty();
        boolean boolean78 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray67, "Array");
        java.lang.Object obj79 = nativeArray55.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray67);
        com.google.javascript.rhino.head.Scriptable scriptable80 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray55);
        boolean boolean81 = nativeArray8.containsAll((java.util.Collection) nativeArray55);
        boolean boolean82 = nativeArray55.isSealed();
        boolean boolean83 = nativeArray55.isExtensible();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1L + "'", long35 == 1L);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[null]");
        org.junit.Assert.assertNull(scriptable47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "object" + "'", str53, "object");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 1L + "'", long58 == 1L);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[]");
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[null]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 1L + "'", long70 == 1L);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNull(scriptable80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
    }

    @Test
    public void test2152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2152");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int19 = nativeArray17.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray4.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray17);
        long long21 = nativeArray17.getLength();
        long long22 = nativeArray17.jsGet_length();
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int26 = nativeArray24.lastIndexOf((java.lang.Object) (short) 10);
        long long27 = nativeArray24.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray24, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray32.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray35, (java.lang.Object) (-1));
        java.lang.Object[] objArray38 = nativeArray32.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable39 = nativeArray32.getParentScope();
        boolean boolean40 = nativeArray24.containsAll((java.util.Collection) nativeArray32);
        com.google.javascript.rhino.head.Scriptable scriptable41 = nativeArray32.getParentScope();
        boolean boolean42 = nativeArray32.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable46 = nativeArray45.getParentScope();
        java.lang.Object[] objArray47 = nativeArray45.getIds();
        boolean boolean48 = nativeArray32.has("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray45);
        boolean boolean49 = nativeArray17.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray32);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1L + "'", long21 == 1L);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1L + "'", long22 == 1L);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 1L + "'", long27 == 1L);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[null]");
        org.junit.Assert.assertNull(scriptable39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(scriptable41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(scriptable46);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test2153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2153");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 5);
    }

    @Test
    public void test2154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2154");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        com.google.javascript.rhino.head.Scriptable scriptable18 = nativeArray9.getParentScope();
        boolean boolean19 = nativeArray9.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable23 = nativeArray22.getParentScope();
        java.lang.Object[] objArray24 = nativeArray22.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int29 = nativeArray27.lastIndexOf((java.lang.Object) (short) 10);
        long long30 = nativeArray27.getLength();
        nativeArray27.delete((int) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int37 = nativeArray35.lastIndexOf((java.lang.Object) (short) 10);
        long long38 = nativeArray35.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray35, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray43.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray46, (java.lang.Object) (-1));
        java.lang.Object[] objArray49 = nativeArray43.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable50 = nativeArray43.getParentScope();
        boolean boolean51 = nativeArray35.containsAll((java.util.Collection) nativeArray43);
        com.google.javascript.rhino.head.NativeArray nativeArray53 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray53.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray56, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray61 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray61.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj64 = nativeArray56.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray61);
        boolean boolean65 = nativeArray56.hasPrototypeMap();
        java.lang.Object[] objArray66 = nativeArray56.getIds();
        java.lang.Object[] objArray67 = nativeArray43.toArray(objArray66);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray27, "Array", (java.lang.Object) nativeArray43);
        boolean boolean69 = nativeArray22.has(0, (com.google.javascript.rhino.head.Scriptable) nativeArray27);
        boolean boolean70 = nativeArray9.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray22);
        com.google.javascript.rhino.head.NativeArray nativeArray72 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int74 = nativeArray72.lastIndexOf((java.lang.Object) (short) 10);
        boolean boolean75 = nativeArray9.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray72);
        long long76 = nativeArray9.jsGet_length();
        boolean boolean77 = nativeArray9.avoidObjectDetection();
        boolean boolean78 = nativeArray9.isEmpty();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(scriptable18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(scriptable23);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[length]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1L + "'", long30 == 1L);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 1L + "'", long38 == 1L);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[null]");
        org.junit.Assert.assertNull(scriptable50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[null]");
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[null]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 1L + "'", long76 == 1L);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
    }

    @Test
    public void test2155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2155");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        java.lang.Object[] objArray4 = nativeArray1.getAllIds();
        boolean boolean5 = nativeArray1.isExtensible();
        com.google.javascript.rhino.head.Scriptable scriptable6 = nativeArray1.getPrototype();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[length]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(scriptable6);
    }

    @Test
    public void test2156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2156");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) (byte) 1);
        boolean boolean22 = nativeArray9.isSealed();
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray32.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj35 = nativeArray27.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray32);
        boolean boolean36 = nativeArray27.hasPrototypeMap();
        java.lang.Object[] objArray37 = nativeArray27.getIds();
        int int38 = nativeArray27.size();
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray41.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray44, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray49 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray49.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj52 = nativeArray44.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray49);
        boolean boolean53 = nativeArray44.hasPrototypeMap();
        java.lang.Object[] objArray54 = nativeArray44.getIds();
        int int55 = nativeArray44.size();
        com.google.javascript.rhino.head.NativeArray nativeArray57 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int59 = nativeArray57.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray44.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray57);
        java.lang.Object obj61 = nativeArray27.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray44);
        boolean boolean62 = nativeArray44.isSealed();
        boolean boolean63 = nativeArray44.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray66 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray69 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray66.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray69, (java.lang.Object) (-1));
        java.lang.Object[] objArray72 = nativeArray66.getAllIds();
        boolean boolean73 = nativeArray44.has((int) (byte) 100, (com.google.javascript.rhino.head.Scriptable) nativeArray66);
        nativeArray44.preventExtensions();
        int int75 = nativeArray9.indexOf((java.lang.Object) nativeArray44);
        boolean boolean77 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "object");
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[hi!]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[hi!]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[length]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test2157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2157");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj38 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        java.lang.Object[] objArray39 = nativeArray4.getIds();
        java.lang.String str40 = nativeArray4.getClassName();
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int44 = nativeArray42.lastIndexOf((java.lang.Object) (short) 10);
        long long45 = nativeArray42.getLength();
        nativeArray42.setAttributes((int) (byte) 100, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int53 = nativeArray51.lastIndexOf((java.lang.Object) (short) 10);
        long long54 = nativeArray51.getLength();
        nativeArray51.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray42, (int) (byte) -1, (java.lang.Object) nativeArray51);
        java.util.Iterator iterator58 = nativeArray42.iterator();
        java.lang.Object[] objArray59 = nativeArray42.toArray();
        boolean boolean60 = nativeArray4.containsAll((java.util.Collection) nativeArray42);
        java.lang.Object[] objArray61 = nativeArray42.getAllIds();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[hi!]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Array" + "'", str40, "Array");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 1L + "'", long45 == 1L);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 1L + "'", long54 == 1L);
        org.junit.Assert.assertNotNull(iterator58);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[null]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[100, -1, length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[100, -1, length]");
    }

    @Test
    public void test2158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2158");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        java.lang.Integer[] intArray7 = nativeArray1.getIndexIds();
        java.lang.Object obj9 = null;
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!", obj9);
        boolean boolean12 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 8);
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray14.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray17, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int24 = nativeArray22.lastIndexOf((java.lang.Object) (short) 10);
        long long25 = nativeArray22.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray22, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray30.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray33, (java.lang.Object) (-1));
        java.lang.Object[] objArray36 = nativeArray30.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable37 = nativeArray30.getParentScope();
        boolean boolean38 = nativeArray22.containsAll((java.util.Collection) nativeArray30);
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray40.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray43, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray48.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj51 = nativeArray43.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray48);
        boolean boolean52 = nativeArray43.hasPrototypeMap();
        java.lang.Object[] objArray53 = nativeArray43.getIds();
        java.lang.Object[] objArray54 = nativeArray30.toArray(objArray53);
        boolean boolean56 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray30, "Array");
        java.lang.Object obj57 = nativeArray17.get(2, (com.google.javascript.rhino.head.Scriptable) nativeArray30);
        java.lang.Object obj58 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray1, (java.lang.Object) nativeArray17);
        boolean boolean59 = nativeArray17.isEmpty();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 1L + "'", long25 == 1L);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[null]");
        org.junit.Assert.assertNull(scriptable37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[null]");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[null]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test2159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2159");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.getAllIds();
        nativeArray1.delete("");
        long long10 = nativeArray1.getLength();
        long long11 = nativeArray1.getLength();
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray14.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray17, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray22.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj25 = nativeArray17.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray22);
        boolean boolean26 = nativeArray17.hasPrototypeMap();
        java.lang.Object[] objArray27 = nativeArray17.getIds();
        int int28 = nativeArray17.size();
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray30.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray33, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray38.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj41 = nativeArray33.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray38);
        boolean boolean42 = nativeArray33.hasPrototypeMap();
        java.lang.Object[] objArray43 = nativeArray33.getIds();
        int int44 = nativeArray33.size();
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray47.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray50, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray55.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj58 = nativeArray50.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray55);
        boolean boolean59 = nativeArray50.hasPrototypeMap();
        java.lang.Object[] objArray60 = nativeArray50.getIds();
        int int61 = nativeArray50.size();
        com.google.javascript.rhino.head.NativeArray nativeArray63 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int65 = nativeArray63.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray50.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray63);
        java.lang.Object obj67 = nativeArray33.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray50);
        boolean boolean68 = nativeArray17.containsAll((java.util.Collection) nativeArray50);
        com.google.javascript.rhino.head.NativeArray nativeArray71 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int73 = nativeArray71.lastIndexOf((java.lang.Object) (short) 10);
        long long74 = nativeArray71.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray71, "", true);
        boolean boolean78 = nativeArray71.hasPrototypeMap();
        int int79 = nativeArray71.size();
        boolean boolean80 = nativeArray71.isEmpty();
        com.google.javascript.rhino.head.Scriptable scriptable81 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray71);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray71, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable85 = nativeArray71.getParentScope();
        java.lang.Object obj86 = nativeArray17.get("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray71);
        java.util.Iterator iterator87 = nativeArray17.iterator();
        java.lang.Class<?> wildcardClass88 = iterator87.getClass();
        nativeArray1.defineProperty("hi!", (java.lang.Object) iterator87, (int) (byte) 10);
        com.google.javascript.rhino.head.Scriptable scriptable91 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[length]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[hi!]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[hi!]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[hi!]");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 1L + "'", long74 == 1L);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1 + "'", int79 == 1);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(scriptable81);
        org.junit.Assert.assertNull(scriptable85);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + (-1) + "'", obj86, (-1));
        org.junit.Assert.assertNotNull(iterator87);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNull(scriptable91);
    }

    @Test
    public void test2160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2160");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.getAllIds();
        nativeArray24.delete("");
        java.lang.Object obj33 = nativeArray9.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        java.lang.Integer[] intArray34 = nativeArray24.getIndexIds();
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray37.activatePrototypeMap((int) (short) 100);
        boolean boolean41 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray37, "hi!");
        boolean boolean42 = nativeArray37.isExtensible();
        java.lang.String str43 = nativeArray37.getTypeOf();
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray49 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray46.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray49, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray54 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray54.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj57 = nativeArray49.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray54);
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int62 = nativeArray60.lastIndexOf((java.lang.Object) (short) 10);
        long long63 = nativeArray60.getLength();
        nativeArray60.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray54, "hi!", (java.lang.Object) (byte) 1);
        nativeArray37.setAttributes("", (com.google.javascript.rhino.head.Scriptable) nativeArray54, 4);
        nativeArray24.defineProperty("hi!", (java.lang.Object) nativeArray54, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray72 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray75 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray72.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray75, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray80 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray80.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj83 = nativeArray75.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray80);
        boolean boolean84 = nativeArray75.hasPrototypeMap();
        java.lang.Object[] objArray85 = nativeArray75.getIds();
        int int86 = nativeArray75.size();
        com.google.javascript.rhino.head.NativeArray nativeArray88 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int90 = nativeArray88.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray75.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray88);
        nativeArray75.setAttributes("hi!", 2);
        boolean boolean95 = nativeArray24.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray75);
        java.lang.Integer[] intArray96 = nativeArray24.getIndexIds();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "object" + "'", str43, "object");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 1L + "'", long63 == 1L);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray85), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray85), "[hi!]");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 1 + "'", int86 == 1);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(intArray96);
    }

    @Test
    public void test2161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2161");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray20, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj28 = nativeArray20.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray25);
        boolean boolean29 = nativeArray20.hasPrototypeMap();
        java.lang.Object[] objArray30 = nativeArray20.getIds();
        int int31 = nativeArray20.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray34.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray37, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj45 = nativeArray37.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray42);
        boolean boolean46 = nativeArray37.hasPrototypeMap();
        java.lang.Object[] objArray47 = nativeArray37.getIds();
        int int48 = nativeArray37.size();
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int52 = nativeArray50.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray37.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray50);
        java.lang.Object obj54 = nativeArray20.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        boolean boolean55 = nativeArray4.containsAll((java.util.Collection) nativeArray37);
        java.lang.Object obj56 = null;
        java.lang.Object obj57 = nativeArray37.get(obj56);
        boolean boolean59 = nativeArray37.isConst("hi!");
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[hi!]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test2162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2162");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        int int18 = nativeArray9.size();
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int23 = nativeArray21.lastIndexOf((java.lang.Object) (short) 10);
        long long24 = nativeArray21.getLength();
        nativeArray21.delete((int) (byte) 1);
        boolean boolean27 = nativeArray21.isExtensible();
        java.lang.Object obj29 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray21, 4);
        java.lang.Object[] objArray30 = nativeArray21.toArray();
        nativeArray21.delete((int) (short) 0);
        java.lang.Object obj34 = null;
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray21, "", obj34);
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray38.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray41, (java.lang.Object) (-1));
        java.lang.Object[] objArray44 = nativeArray38.getAllIds();
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray21, "Array", (java.lang.Object) objArray44);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "Array", (java.lang.Object) objArray44);
        com.google.javascript.rhino.head.NativeArray nativeArray49 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray52 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray49.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray52, (java.lang.Object) (-1));
        java.lang.Object[] objArray55 = nativeArray49.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable56 = nativeArray49.getParentScope();
        com.google.javascript.rhino.head.Context context57 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray62 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray59.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray62, (java.lang.Object) (-1));
        java.lang.Object[] objArray65 = nativeArray59.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable66 = nativeArray59.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable67 = nativeArray59.getParentScope();
        java.util.ListIterator listIterator68 = nativeArray59.listIterator();
        nativeArray49.defineOwnProperties(context57, (com.google.javascript.rhino.head.ScriptableObject) nativeArray59);
        long long70 = nativeArray59.jsGet_length();
        boolean boolean71 = nativeArray59.isEmpty();
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "Array", (java.lang.Object) boolean71);
        com.google.javascript.rhino.head.Scriptable scriptable73 = nativeArray9.getPrototype();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 1L + "'", long24 == 1L);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[null]");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[length]");
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[null]");
        org.junit.Assert.assertNull(scriptable56);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[null]");
        org.junit.Assert.assertNull(scriptable66);
        org.junit.Assert.assertNull(scriptable67);
        org.junit.Assert.assertNotNull(listIterator68);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 1L + "'", long70 == 1L);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(scriptable73);
    }

    @Test
    public void test2163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2163");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable2 = nativeArray1.getParentScope();
        java.lang.Object[] objArray3 = nativeArray1.getIds();
        boolean boolean4 = nativeArray1.isEmpty();
        java.lang.Object obj6 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 8);
        com.google.javascript.rhino.head.Scriptable scriptable7 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        boolean boolean9 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array");
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable12 = nativeArray11.getParentScope();
        java.lang.Object[] objArray13 = nativeArray11.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int18 = nativeArray16.lastIndexOf((java.lang.Object) (short) 10);
        long long19 = nativeArray16.getLength();
        nativeArray16.delete((int) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int26 = nativeArray24.lastIndexOf((java.lang.Object) (short) 10);
        long long27 = nativeArray24.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray24, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray32.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray35, (java.lang.Object) (-1));
        java.lang.Object[] objArray38 = nativeArray32.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable39 = nativeArray32.getParentScope();
        boolean boolean40 = nativeArray24.containsAll((java.util.Collection) nativeArray32);
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray45, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray50.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj53 = nativeArray45.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray50);
        boolean boolean54 = nativeArray45.hasPrototypeMap();
        java.lang.Object[] objArray55 = nativeArray45.getIds();
        java.lang.Object[] objArray56 = nativeArray32.toArray(objArray55);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray16, "Array", (java.lang.Object) nativeArray32);
        boolean boolean58 = nativeArray11.has(0, (com.google.javascript.rhino.head.Scriptable) nativeArray16);
        boolean boolean59 = nativeArray1.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray16);
        com.google.javascript.rhino.head.Scriptable scriptable60 = nativeArray16.getPrototype();
        org.junit.Assert.assertNull(scriptable2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNull(scriptable7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(scriptable12);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[length]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 1L + "'", long19 == 1L);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 1L + "'", long27 == 1L);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[null]");
        org.junit.Assert.assertNull(scriptable39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[null]");
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[null]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(scriptable60);
    }

    @Test
    public void test2164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2164");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.activatePrototypeMap((int) (short) 100);
        boolean boolean5 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!");
        long long6 = nativeArray1.jsGet_length();
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int11 = nativeArray9.lastIndexOf((java.lang.Object) (short) 10);
        long long12 = nativeArray9.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable16 = null;
        java.lang.Object[] objArray17 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable16);
        java.lang.Object[] objArray18 = nativeArray9.toArray(objArray17);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int23 = nativeArray21.lastIndexOf((java.lang.Object) (short) 10);
        long long24 = nativeArray21.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray21, "", true);
        boolean boolean28 = nativeArray21.hasPrototypeMap();
        int int29 = nativeArray21.size();
        boolean boolean30 = nativeArray21.isEmpty();
        boolean boolean32 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray21, "Array");
        java.lang.Object obj33 = nativeArray9.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int38 = nativeArray36.lastIndexOf((java.lang.Object) (short) 10);
        long long39 = nativeArray36.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray36, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray44.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray47, (java.lang.Object) (-1));
        java.lang.Object[] objArray50 = nativeArray44.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable51 = nativeArray44.getParentScope();
        boolean boolean52 = nativeArray36.containsAll((java.util.Collection) nativeArray44);
        java.lang.Object obj53 = nativeArray21.get((int) (byte) -1, (com.google.javascript.rhino.head.Scriptable) nativeArray44);
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int57 = nativeArray55.lastIndexOf((java.lang.Object) (short) 10);
        long long58 = nativeArray55.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray55, "", true);
        boolean boolean62 = nativeArray55.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray65 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable66 = nativeArray65.getParentScope();
        java.lang.Object[] objArray67 = nativeArray65.getIds();
        boolean boolean68 = nativeArray65.isEmpty();
        boolean boolean69 = nativeArray55.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray65);
        boolean boolean71 = nativeArray65.isConst("object");
        nativeArray44.setPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray65);
        java.lang.Object[] objArray73 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray44);
        nativeArray44.preventExtensions();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj75 = nativeArray1.set(100, (java.lang.Object) nativeArray44);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 1L + "'", long12 == 1L);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[null]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 1L + "'", long24 == 1L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 1L + "'", long39 == 1L);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[null]");
        org.junit.Assert.assertNull(scriptable51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 1L + "'", long58 == 1L);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(scriptable66);
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[]");
    }

    @Test
    public void test2165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2165");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        com.google.javascript.rhino.head.Scriptable scriptable11 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.Context context15 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int19 = nativeArray17.lastIndexOf((java.lang.Object) (short) 10);
        long long20 = nativeArray17.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray17, "", true);
        boolean boolean24 = nativeArray17.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable28 = nativeArray27.getParentScope();
        java.lang.Object[] objArray29 = nativeArray27.getIds();
        boolean boolean30 = nativeArray27.isEmpty();
        boolean boolean31 = nativeArray17.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray27);
        boolean boolean33 = nativeArray27.isConst("object");
        nativeArray1.defineOwnProperties(context15, (com.google.javascript.rhino.head.ScriptableObject) nativeArray27);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray27, "hi!");
        nativeArray27.sealObject();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray27, "object", true);
        java.lang.Object[] objArray41 = nativeArray27.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray(objArray41);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray(objArray41);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(scriptable11);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 1L + "'", long20 == 1L);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(scriptable28);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[null]");
    }

    @Test
    public void test2166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2166");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable8 = null;
        java.lang.Object[] objArray9 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable8);
        java.lang.Object[] objArray10 = nativeArray1.toArray(objArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int15 = nativeArray13.lastIndexOf((java.lang.Object) (short) 10);
        long long16 = nativeArray13.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "", true);
        boolean boolean20 = nativeArray13.hasPrototypeMap();
        int int21 = nativeArray13.size();
        boolean boolean22 = nativeArray13.isEmpty();
        boolean boolean24 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "Array");
        java.lang.Object obj25 = nativeArray1.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray13);
        com.google.javascript.rhino.head.Scriptable scriptable26 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray32, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray37.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj40 = nativeArray32.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        boolean boolean41 = nativeArray32.hasPrototypeMap();
        java.lang.Object[] objArray42 = nativeArray32.getIds();
        int int43 = nativeArray32.size();
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int47 = nativeArray45.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray32.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray45);
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray51.activatePrototypeMap((int) (short) 100);
        boolean boolean55 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray51, "hi!");
        nativeArray32.setAttributes("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray51, 8);
        nativeArray1.setAttributes("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray32, 0);
        com.google.javascript.rhino.head.Scriptable scriptable60 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray32);
        java.util.ListIterator listIterator61 = nativeArray32.listIterator();
        boolean boolean62 = nativeArray32.isSealed();
        boolean boolean64 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray32, "hi!");
        com.google.javascript.rhino.head.NativeArray nativeArray67 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray67.activatePrototypeMap((int) (short) 100);
        java.util.Iterator iterator70 = nativeArray67.iterator();
        boolean boolean71 = nativeArray67.avoidObjectDetection();
        boolean boolean72 = nativeArray67.isEmpty();
        int int73 = nativeArray32.getAttributes("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray67);
        com.google.javascript.rhino.head.NativeArray nativeArray77 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray80 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray77.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray80, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray85 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray85.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj88 = nativeArray80.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray85);
        boolean boolean89 = nativeArray80.hasPrototypeMap();
        java.lang.Object[] objArray90 = nativeArray80.getIds();
        int int91 = nativeArray80.size();
        com.google.javascript.rhino.head.NativeArray nativeArray93 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int95 = nativeArray93.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray80.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray93);
        // The following exception was thrown during execution in test generation
        try {
            nativeArray67.initPrototypeValue(1, "hi!", (java.lang.Object) nativeArray93, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: hi!");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[null]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1L + "'", long16 == 1L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNull(scriptable26);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[hi!]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(scriptable60);
        org.junit.Assert.assertNotNull(listIterator61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(iterator70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 8 + "'", int73 == 8);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(objArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray90), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray90), "[hi!]");
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 1 + "'", int91 == 1);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + (-1) + "'", int95 == (-1));
    }

    @Test
    public void test2167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2167");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray19.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray22, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray27.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj30 = nativeArray22.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray27);
        boolean boolean31 = nativeArray22.hasPrototypeMap();
        java.lang.Object[] objArray32 = nativeArray22.getIds();
        java.lang.Object[] objArray33 = nativeArray9.toArray(objArray32);
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray36.activatePrototypeMap((int) (short) 100);
        boolean boolean40 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray36, "hi!");
        long long41 = nativeArray36.jsGet_length();
        nativeArray9.setAttributes("object", (com.google.javascript.rhino.head.Scriptable) nativeArray36, (int) (byte) 10);
        long long44 = nativeArray36.jsGet_length();
        boolean boolean46 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray36, 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[null]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[null]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 1L + "'", long41 == 1L);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 1L + "'", long44 == 1L);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
    }

    @Test
    public void test2168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2168");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        java.lang.Object obj3 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array");
        boolean boolean5 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!");
        nativeArray1.activatePrototypeMap((int) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable11 = nativeArray10.getParentScope();
        java.lang.Object[] objArray12 = nativeArray10.getIds();
        boolean boolean13 = nativeArray10.isEmpty();
        nativeArray10.delete((int) 'a');
        java.lang.Object obj16 = nativeArray1.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray10);
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray21, "", (java.lang.Object) 100);
        java.lang.Object obj25 = nativeArray18.associateValue((java.lang.Object) ' ', (java.lang.Object) nativeArray21);
        java.lang.Object[] objArray26 = nativeArray21.toArray();
        boolean boolean28 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray21, "");
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray31.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray34, (java.lang.Object) (-1));
        boolean boolean38 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray34, "");
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int43 = nativeArray41.lastIndexOf((java.lang.Object) (short) 10);
        long long44 = nativeArray41.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray41, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray49 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray52 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray49.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray52, (java.lang.Object) (-1));
        java.lang.Object[] objArray55 = nativeArray49.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable56 = nativeArray49.getParentScope();
        boolean boolean57 = nativeArray41.containsAll((java.util.Collection) nativeArray49);
        com.google.javascript.rhino.head.Scriptable scriptable58 = nativeArray49.getParentScope();
        boolean boolean59 = nativeArray49.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray62 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable63 = nativeArray62.getParentScope();
        java.lang.Object[] objArray64 = nativeArray62.getIds();
        boolean boolean65 = nativeArray49.has("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray62);
        java.lang.reflect.Method method66 = null;
        java.lang.reflect.Method method67 = null;
        nativeArray34.defineProperty("hi!", (java.lang.Object) nativeArray49, method66, method67, 8);
        nativeArray21.defineConst("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray49);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean71 = nativeArray1.addAll((java.util.Collection) nativeArray49);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(scriptable11);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[null]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 1L + "'", long44 == 1L);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[null]");
        org.junit.Assert.assertNull(scriptable56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(scriptable58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(scriptable63);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test2169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2169");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray8.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray11, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray16.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj19 = nativeArray11.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray16);
        com.google.javascript.rhino.head.Callable callable22 = null;
        nativeArray11.setGetterOrSetter("hi!", 0, callable22, false);
        java.lang.Integer[] intArray25 = nativeArray11.getIndexIds();
        nativeArray4.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray11);
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int31 = nativeArray29.lastIndexOf((java.lang.Object) (short) 10);
        long long32 = nativeArray29.getLength();
        nativeArray29.delete((int) (byte) 1);
        boolean boolean36 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray29, "");
        nativeArray11.setAttributes("", (com.google.javascript.rhino.head.Scriptable) nativeArray29, 13);
        boolean boolean39 = nativeArray29.avoidObjectDetection();
        boolean boolean41 = nativeArray29.isConst("hi!");
        nativeArray29.activatePrototypeMap((int) '#');
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1L + "'", long32 == 1L);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test2170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2170");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.toArray();
        com.google.javascript.rhino.head.Context context8 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int12 = nativeArray10.lastIndexOf((java.lang.Object) (short) 10);
        long long13 = nativeArray10.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray10, "", true);
        boolean boolean17 = nativeArray10.hasPrototypeMap();
        int int18 = nativeArray10.size();
        boolean boolean19 = nativeArray10.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray21.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray24, (java.lang.Object) (-1));
        java.lang.Object[] objArray27 = nativeArray21.getAllIds();
        nativeArray21.delete("");
        long long30 = nativeArray21.getLength();
        boolean boolean31 = nativeArray10.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray21);
        nativeArray21.sealObject();
        nativeArray1.defineOwnProperties(context8, (com.google.javascript.rhino.head.ScriptableObject) nativeArray21);
        java.util.ListIterator listIterator34 = nativeArray21.listIterator();
        com.google.javascript.rhino.head.Scriptable scriptable36 = null;
        boolean boolean37 = nativeArray21.has((int) (short) 10, scriptable36);
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int42 = nativeArray40.lastIndexOf((java.lang.Object) (short) 10);
        long long43 = nativeArray40.getLength();
        nativeArray40.delete((int) (byte) 1);
        boolean boolean47 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray40, "");
        boolean boolean48 = nativeArray40.hasPrototypeMap();
        java.lang.Object obj49 = nativeArray21.get("object", (com.google.javascript.rhino.head.Scriptable) nativeArray40);
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable52 = nativeArray51.getParentScope();
        java.lang.Object[] objArray53 = nativeArray51.getIds();
        boolean boolean54 = nativeArray51.isEmpty();
        nativeArray51.delete((int) 'a');
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray62 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray59.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray62, (java.lang.Object) (-1));
        java.lang.Object[] objArray65 = nativeArray59.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable66 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray59);
        java.lang.Integer[] intArray67 = nativeArray59.getIndexIds();
        nativeArray59.preventExtensions();
        java.lang.Object obj70 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray59, "hi!");
        java.lang.Object obj71 = nativeArray51.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray59);
        com.google.javascript.rhino.head.Scriptable scriptable72 = nativeArray51.getPrototype();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean73 = nativeArray40.addAll((java.util.Collection) nativeArray51);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[null]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[length]");
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1L + "'", long30 == 1L);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(listIterator34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 1L + "'", long43 == 1L);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNull(scriptable52);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[null]");
        org.junit.Assert.assertNull(scriptable66);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNull(scriptable72);
    }

    @Test
    public void test2171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2171");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        boolean boolean8 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "");
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int13 = nativeArray11.lastIndexOf((java.lang.Object) (short) 10);
        long long14 = nativeArray11.getLength();
        nativeArray11.setAttributes((int) (byte) 100, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int22 = nativeArray20.lastIndexOf((java.lang.Object) (short) 10);
        long long23 = nativeArray20.getLength();
        nativeArray20.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray11, (int) (byte) -1, (java.lang.Object) nativeArray20);
        boolean boolean27 = nativeArray4.has(4, (com.google.javascript.rhino.head.Scriptable) nativeArray11);
        boolean boolean28 = nativeArray4.isSealed();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1L + "'", long23 == 1L);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test2172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2172");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        boolean boolean12 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array");
        long long13 = nativeArray1.getLength();
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        boolean boolean21 = nativeArray15.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray23.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray26, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray31.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj34 = nativeArray26.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray31);
        boolean boolean35 = nativeArray26.hasPrototypeMap();
        java.lang.Object[] objArray36 = nativeArray26.getIds();
        int int37 = nativeArray26.size();
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray39.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray42, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray47.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj50 = nativeArray42.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray47);
        boolean boolean51 = nativeArray42.hasPrototypeMap();
        java.lang.Object[] objArray52 = nativeArray42.getIds();
        int int53 = nativeArray42.size();
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray56.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray59, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray64.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj67 = nativeArray59.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray64);
        boolean boolean68 = nativeArray59.hasPrototypeMap();
        java.lang.Object[] objArray69 = nativeArray59.getIds();
        int int70 = nativeArray59.size();
        com.google.javascript.rhino.head.NativeArray nativeArray72 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int74 = nativeArray72.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray59.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray72);
        java.lang.Object obj76 = nativeArray42.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray59);
        boolean boolean77 = nativeArray26.containsAll((java.util.Collection) nativeArray59);
        nativeArray15.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray26);
        java.util.Iterator iterator79 = nativeArray15.iterator();
        int int80 = nativeArray1.indexOf((java.lang.Object) iterator79);
        java.lang.Object[] objArray81 = nativeArray1.getIds();
        com.google.javascript.rhino.head.NativeArray nativeArray84 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray87 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray87, "", (java.lang.Object) 100);
        java.lang.Object obj91 = nativeArray84.associateValue((java.lang.Object) ' ', (java.lang.Object) nativeArray87);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray87, "Array");
        java.lang.Object[] objArray94 = nativeArray87.toArray();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj95 = com.google.javascript.rhino.head.ScriptableObject.callMethod((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array", objArray94);
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EcmaError; message: TypeError: Array is not a function, it is object.");
        } catch (com.google.javascript.rhino.head.EcmaError e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[hi!]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[hi!]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(iterator79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNotNull(objArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[]");
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(objArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray94), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray94), "[null]");
    }

    @Test
    public void test2173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2173");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        boolean boolean8 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "");
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int13 = nativeArray11.lastIndexOf((java.lang.Object) (short) 10);
        long long14 = nativeArray11.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray11, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray19.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray22, (java.lang.Object) (-1));
        java.lang.Object[] objArray25 = nativeArray19.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable26 = nativeArray19.getParentScope();
        boolean boolean27 = nativeArray11.containsAll((java.util.Collection) nativeArray19);
        com.google.javascript.rhino.head.Scriptable scriptable28 = nativeArray19.getParentScope();
        boolean boolean29 = nativeArray19.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable33 = nativeArray32.getParentScope();
        java.lang.Object[] objArray34 = nativeArray32.getIds();
        boolean boolean35 = nativeArray19.has("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray32);
        java.lang.reflect.Method method36 = null;
        java.lang.reflect.Method method37 = null;
        nativeArray4.defineProperty("hi!", (java.lang.Object) nativeArray19, method36, method37, 8);
        java.lang.String str40 = nativeArray4.getTypeOf();
        java.lang.Object obj42 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "Array");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[null]");
        org.junit.Assert.assertNull(scriptable26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(scriptable28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(scriptable33);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "object" + "'", str40, "object");
        org.junit.Assert.assertNotNull(obj42);
    }

    @Test
    public void test2174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2174");
        com.google.javascript.rhino.head.Context context0 = null;
        com.google.javascript.rhino.head.Scriptable scriptable1 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        java.lang.Object obj6 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "Array");
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int11 = nativeArray9.lastIndexOf((java.lang.Object) (short) 10);
        long long12 = nativeArray9.getLength();
        nativeArray9.delete((int) (byte) 1);
        boolean boolean16 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "");
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int20 = nativeArray18.lastIndexOf((java.lang.Object) (short) 10);
        long long21 = nativeArray18.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray18, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray29, (java.lang.Object) (-1));
        java.lang.Object[] objArray32 = nativeArray26.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable33 = nativeArray26.getParentScope();
        boolean boolean34 = nativeArray18.containsAll((java.util.Collection) nativeArray26);
        boolean boolean35 = nativeArray9.containsAll((java.util.Collection) nativeArray18);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int39 = nativeArray37.lastIndexOf((java.lang.Object) (short) 10);
        long long40 = nativeArray37.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray37, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray45.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray48, (java.lang.Object) (-1));
        java.lang.Object[] objArray51 = nativeArray45.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable52 = nativeArray45.getParentScope();
        boolean boolean53 = nativeArray37.containsAll((java.util.Collection) nativeArray45);
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int57 = nativeArray55.lastIndexOf((java.lang.Object) (short) 10);
        long long58 = nativeArray55.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray55, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray63 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray66 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray63.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray66, (java.lang.Object) (-1));
        java.lang.Object[] objArray69 = nativeArray63.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable70 = nativeArray63.getParentScope();
        boolean boolean71 = nativeArray55.containsAll((java.util.Collection) nativeArray63);
        com.google.javascript.rhino.head.NativeArray nativeArray73 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray76 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray73.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray76, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray81 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray81.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj84 = nativeArray76.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray81);
        boolean boolean85 = nativeArray76.hasPrototypeMap();
        java.lang.Object[] objArray86 = nativeArray76.getIds();
        java.lang.Object[] objArray87 = nativeArray63.toArray(objArray86);
        java.lang.Object obj88 = nativeArray9.associateValue((java.lang.Object) boolean53, (java.lang.Object) nativeArray63);
        com.google.javascript.rhino.head.Scriptable scriptable89 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray63);
        boolean boolean90 = nativeArray4.has("hi!", scriptable89);
        boolean boolean91 = nativeArray4.avoidObjectDetection();
        boolean boolean92 = nativeArray4.isEmpty();
        nativeArray4.delete("");
        java.lang.Object[] objArray95 = nativeArray4.getIds();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj96 = com.google.javascript.rhino.head.ScriptableObject.callMethod(context0, scriptable1, "", objArray95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 1L + "'", long12 == 1L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1L + "'", long21 == 1L);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[null]");
        org.junit.Assert.assertNull(scriptable33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 1L + "'", long40 == 1L);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[null]");
        org.junit.Assert.assertNull(scriptable52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 1L + "'", long58 == 1L);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[null]");
        org.junit.Assert.assertNull(scriptable70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(objArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray86), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray86), "[null]");
        org.junit.Assert.assertNotNull(objArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray87), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray87), "[null]");
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(scriptable89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(objArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray95), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray95), "[]");
    }

    @Test
    public void test2175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2175");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.getAllIds();
        nativeArray1.delete("");
        long long10 = nativeArray1.getLength();
        boolean boolean12 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, (int) (short) 10);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray15.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray18, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray23.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj26 = nativeArray18.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray23);
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int31 = nativeArray29.lastIndexOf((java.lang.Object) (short) 10);
        long long32 = nativeArray29.getLength();
        nativeArray29.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray23, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray38.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray41, (java.lang.Object) (-1));
        java.lang.Object[] objArray44 = nativeArray38.getAllIds();
        nativeArray38.delete("");
        java.lang.Object obj47 = nativeArray23.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray38);
        java.lang.Integer[] intArray48 = nativeArray38.getIndexIds();
        nativeArray1.defineProperty("", (java.lang.Object) nativeArray38, 10);
        com.google.javascript.rhino.head.NativeArray nativeArray53 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int55 = nativeArray53.lastIndexOf((java.lang.Object) (short) 10);
        long long56 = nativeArray53.getLength();
        nativeArray53.delete((int) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray61 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int63 = nativeArray61.lastIndexOf((java.lang.Object) (short) 10);
        long long64 = nativeArray61.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray61, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray69 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray72 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray69.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray72, (java.lang.Object) (-1));
        java.lang.Object[] objArray75 = nativeArray69.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable76 = nativeArray69.getParentScope();
        boolean boolean77 = nativeArray61.containsAll((java.util.Collection) nativeArray69);
        com.google.javascript.rhino.head.NativeArray nativeArray79 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray82 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray79.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray82, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray87 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray87.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj90 = nativeArray82.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray87);
        boolean boolean91 = nativeArray82.hasPrototypeMap();
        java.lang.Object[] objArray92 = nativeArray82.getIds();
        java.lang.Object[] objArray93 = nativeArray69.toArray(objArray92);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray53, "Array", (java.lang.Object) nativeArray69);
        java.util.ListIterator listIterator95 = nativeArray53.listIterator();
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray38, "", (java.lang.Object) nativeArray53);
        com.google.javascript.rhino.head.Scriptable scriptable97 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray38);
        java.lang.Object[] objArray98 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray38);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[length]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1L + "'", long32 == 1L);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[length]");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 1L + "'", long56 == 1L);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 1L + "'", long64 == 1L);
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[null]");
        org.junit.Assert.assertNull(scriptable76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(objArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray92), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray92), "[null]");
        org.junit.Assert.assertNotNull(objArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray93), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray93), "[null]");
        org.junit.Assert.assertNotNull(listIterator95);
        org.junit.Assert.assertNotNull(scriptable97);
        org.junit.Assert.assertNotNull(objArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray98), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray98), "[]");
    }

    @Test
    public void test2176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2176");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable2 = nativeArray1.getParentScope();
        java.lang.Object[] objArray3 = nativeArray1.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray5 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray5.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray8, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray13.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj16 = nativeArray8.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray13);
        java.lang.Object obj17 = nativeArray1.getAssociatedValue((java.lang.Object) nativeArray8);
        com.google.javascript.rhino.head.Scriptable scriptable18 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        boolean boolean19 = nativeArray1.avoidObjectDetection();
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray22.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray25, (java.lang.Object) (-1));
        java.lang.Object[] objArray28 = nativeArray22.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable29 = nativeArray22.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable30 = nativeArray22.getParentScope();
        boolean boolean31 = nativeArray22.isSealed();
        com.google.javascript.rhino.head.Scriptable scriptable32 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray22);
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray37, "", (java.lang.Object) 100);
        java.lang.Object obj41 = nativeArray34.associateValue((java.lang.Object) ' ', (java.lang.Object) nativeArray37);
        java.lang.Object[] objArray42 = nativeArray37.toArray();
        boolean boolean44 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray37, "");
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray47.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray50, (java.lang.Object) (-1));
        boolean boolean54 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray50, "");
        com.google.javascript.rhino.head.NativeArray nativeArray57 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int59 = nativeArray57.lastIndexOf((java.lang.Object) (short) 10);
        long long60 = nativeArray57.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray57, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray65 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray68 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray65.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray68, (java.lang.Object) (-1));
        java.lang.Object[] objArray71 = nativeArray65.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable72 = nativeArray65.getParentScope();
        boolean boolean73 = nativeArray57.containsAll((java.util.Collection) nativeArray65);
        com.google.javascript.rhino.head.Scriptable scriptable74 = nativeArray65.getParentScope();
        boolean boolean75 = nativeArray65.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray78 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable79 = nativeArray78.getParentScope();
        java.lang.Object[] objArray80 = nativeArray78.getIds();
        boolean boolean81 = nativeArray65.has("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray78);
        java.lang.reflect.Method method82 = null;
        java.lang.reflect.Method method83 = null;
        nativeArray50.defineProperty("hi!", (java.lang.Object) nativeArray65, method82, method83, 8);
        nativeArray37.defineConst("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray65);
        java.lang.Object[] objArray87 = nativeArray37.getIds();
        nativeArray22.setPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray37);
        boolean boolean89 = nativeArray1.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        org.junit.Assert.assertNull(scriptable2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[length]");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(scriptable18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[null]");
        org.junit.Assert.assertNull(scriptable29);
        org.junit.Assert.assertNull(scriptable30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(scriptable32);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[null]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 1L + "'", long60 == 1L);
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[null]");
        org.junit.Assert.assertNull(scriptable72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(scriptable74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNull(scriptable79);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(objArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray87), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray87), "[]");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test2177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2177");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray13.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray16, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray21.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj24 = nativeArray16.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int29 = nativeArray27.lastIndexOf((java.lang.Object) (short) 10);
        long long30 = nativeArray27.getLength();
        nativeArray27.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray21, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray36.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray39, (java.lang.Object) (-1));
        java.lang.Object[] objArray42 = nativeArray36.getAllIds();
        nativeArray36.delete("");
        java.lang.Object obj45 = nativeArray21.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray36);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray21, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable48 = nativeArray21.getPrototype();
        com.google.javascript.rhino.head.Context context49 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int53 = nativeArray51.lastIndexOf((java.lang.Object) (short) 10);
        long long54 = nativeArray51.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray51, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray62 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray59.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray62, (java.lang.Object) (-1));
        java.lang.Object[] objArray65 = nativeArray59.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable66 = nativeArray59.getParentScope();
        boolean boolean67 = nativeArray51.containsAll((java.util.Collection) nativeArray59);
        nativeArray21.defineOwnProperties(context49, (com.google.javascript.rhino.head.ScriptableObject) nativeArray51);
        java.lang.Object obj69 = nativeArray1.get((int) ' ', (com.google.javascript.rhino.head.Scriptable) nativeArray51);
        java.lang.String str70 = nativeArray51.getClassName();
        com.google.javascript.rhino.head.Scriptable scriptable71 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray51);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1L + "'", long30 == 1L);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[length]");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNull(scriptable48);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 1L + "'", long54 == 1L);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[null]");
        org.junit.Assert.assertNull(scriptable66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "Array" + "'", str70, "Array");
        org.junit.Assert.assertNull(scriptable71);
    }

    @Test
    public void test2178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2178");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "", (java.lang.Object) 100);
        java.lang.Object obj8 = nativeArray1.associateValue((java.lang.Object) ' ', (java.lang.Object) nativeArray4);
        java.lang.Object[] objArray9 = nativeArray4.toArray();
        boolean boolean11 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj13 = nativeArray4.get((long) 5);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[null]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test2179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2179");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        java.lang.Integer[] intArray7 = nativeArray1.getIndexIds();
        java.lang.Object obj9 = null;
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!", obj9);
        boolean boolean12 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 8);
        java.lang.Object[] objArray13 = nativeArray1.getAllIds();
        java.lang.String str14 = nativeArray1.getClassName();
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int18 = nativeArray16.lastIndexOf((java.lang.Object) (short) 10);
        long long19 = nativeArray16.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray16, "", true);
        boolean boolean23 = nativeArray16.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable27 = nativeArray26.getParentScope();
        java.lang.Object[] objArray28 = nativeArray26.getIds();
        boolean boolean29 = nativeArray26.isEmpty();
        boolean boolean30 = nativeArray16.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        java.lang.Object[] objArray31 = nativeArray16.getIds();
        java.lang.Object[] objArray32 = nativeArray16.getAllIds();
        int int33 = nativeArray1.indexOf((java.lang.Object) nativeArray16);
        nativeArray1.setAttributes("Array", 13);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[hi!, length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[hi!, length]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Array" + "'", str14, "Array");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 1L + "'", long19 == 1L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(scriptable27);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[length]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
    }

    @Test
    public void test2180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2180");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.getAllIds();
        nativeArray24.delete("");
        java.lang.Object obj33 = nativeArray9.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!");
        com.google.javascript.rhino.head.Context context36 = null;
        com.google.javascript.rhino.head.Scriptable scriptable37 = null;
        java.lang.Object[] objArray38 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable37);
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray40.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray43, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray48.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj51 = nativeArray43.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray48);
        com.google.javascript.rhino.head.Callable callable54 = null;
        nativeArray43.setGetterOrSetter("hi!", 0, callable54, false);
        com.google.javascript.rhino.head.Scriptable scriptable57 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray43);
        nativeArray9.defineOwnProperty(context36, (java.lang.Object) scriptable37, (com.google.javascript.rhino.head.ScriptableObject) nativeArray43);
        java.lang.Object[] objArray59 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray43);
        nativeArray43.delete(13);
        java.lang.Object[] objArray62 = nativeArray43.toArray();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNull(scriptable57);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[hi!]");
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[null]");
    }

    @Test
    public void test2181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2181");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable2 = nativeArray1.getParentScope();
        java.lang.Object[] objArray3 = nativeArray1.getIds();
        boolean boolean4 = nativeArray1.isEmpty();
        nativeArray1.delete((int) 'a');
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray9);
        java.lang.Integer[] intArray17 = nativeArray9.getIndexIds();
        nativeArray9.preventExtensions();
        java.lang.Object obj20 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!");
        java.lang.Object obj21 = nativeArray1.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj23 = nativeArray9.get((long) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(scriptable2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
    }

    @Test
    public void test2182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2182");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.activatePrototypeMap((int) (short) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray6 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int8 = nativeArray6.lastIndexOf((java.lang.Object) (short) 10);
        long long9 = nativeArray6.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray6, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray14.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray17, (java.lang.Object) (-1));
        java.lang.Object[] objArray20 = nativeArray14.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable21 = nativeArray14.getParentScope();
        boolean boolean22 = nativeArray6.containsAll((java.util.Collection) nativeArray14);
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int27 = nativeArray25.lastIndexOf((java.lang.Object) (short) 10);
        long long28 = nativeArray25.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray25, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable32 = null;
        java.lang.Object[] objArray33 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable32);
        java.lang.Object[] objArray34 = nativeArray25.toArray(objArray33);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray6, "hi!", (java.lang.Object) objArray33);
        int int36 = nativeArray6.size();
        nativeArray6.activatePrototypeMap((int) (byte) 10);
        java.lang.Object obj40 = null;
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray6, "Array", obj40, 8);
        boolean boolean44 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray6, 10);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, (int) (byte) 100, (java.lang.Object) nativeArray6);
        boolean boolean47 = nativeArray6.isConst("Array");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 1L + "'", long9 == 1L);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[null]");
        org.junit.Assert.assertNull(scriptable21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 1L + "'", long28 == 1L);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[null]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test2183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2183");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        com.google.javascript.rhino.head.Scriptable scriptable18 = nativeArray9.getParentScope();
        boolean boolean19 = nativeArray9.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable23 = nativeArray22.getParentScope();
        java.lang.Object[] objArray24 = nativeArray22.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int29 = nativeArray27.lastIndexOf((java.lang.Object) (short) 10);
        long long30 = nativeArray27.getLength();
        nativeArray27.delete((int) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int37 = nativeArray35.lastIndexOf((java.lang.Object) (short) 10);
        long long38 = nativeArray35.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray35, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray43.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray46, (java.lang.Object) (-1));
        java.lang.Object[] objArray49 = nativeArray43.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable50 = nativeArray43.getParentScope();
        boolean boolean51 = nativeArray35.containsAll((java.util.Collection) nativeArray43);
        com.google.javascript.rhino.head.NativeArray nativeArray53 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray53.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray56, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray61 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray61.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj64 = nativeArray56.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray61);
        boolean boolean65 = nativeArray56.hasPrototypeMap();
        java.lang.Object[] objArray66 = nativeArray56.getIds();
        java.lang.Object[] objArray67 = nativeArray43.toArray(objArray66);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray27, "Array", (java.lang.Object) nativeArray43);
        boolean boolean69 = nativeArray22.has(0, (com.google.javascript.rhino.head.Scriptable) nativeArray27);
        boolean boolean70 = nativeArray9.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray22);
        boolean boolean72 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "");
        boolean boolean74 = nativeArray9.isConst("Array");
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", false);
        java.lang.Object obj79 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "Array");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(scriptable18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(scriptable23);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[length]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1L + "'", long30 == 1L);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 1L + "'", long38 == 1L);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[null]");
        org.junit.Assert.assertNull(scriptable50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[null]");
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[null]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(obj79);
    }

    @Test
    public void test2184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2184");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        boolean boolean8 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "");
        java.lang.Object[] objArray9 = nativeArray4.toArray();
        nativeArray4.preventExtensions();
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "Array");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj14 = nativeArray4.remove((int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[null]");
    }

    @Test
    public void test2185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2185");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int11 = nativeArray9.lastIndexOf((java.lang.Object) (short) 10);
        long long12 = nativeArray9.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray20, (java.lang.Object) (-1));
        java.lang.Object[] objArray23 = nativeArray17.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable24 = nativeArray17.getParentScope();
        boolean boolean25 = nativeArray9.containsAll((java.util.Collection) nativeArray17);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray27.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray30, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray35.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj38 = nativeArray30.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray35);
        boolean boolean39 = nativeArray30.hasPrototypeMap();
        java.lang.Object[] objArray40 = nativeArray30.getIds();
        java.lang.Object[] objArray41 = nativeArray17.toArray(objArray40);
        boolean boolean43 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray17, "Array");
        java.lang.Object obj44 = nativeArray4.get(2, (com.google.javascript.rhino.head.Scriptable) nativeArray17);
        boolean boolean45 = nativeArray4.avoidObjectDetection();
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "");
        nativeArray4.activatePrototypeMap(100);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 1L + "'", long12 == 1L);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[null]");
        org.junit.Assert.assertNull(scriptable24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[null]");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[null]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test2186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2186");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable2 = nativeArray1.getParentScope();
        java.lang.Object[] objArray3 = nativeArray1.getIds();
        boolean boolean4 = nativeArray1.isEmpty();
        java.lang.Object obj6 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 8);
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray8.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray11, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray16.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj19 = nativeArray11.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray16);
        boolean boolean20 = nativeArray11.hasPrototypeMap();
        java.lang.Object[] objArray21 = nativeArray11.getIds();
        int int22 = nativeArray11.size();
        nativeArray11.sealObject();
        java.lang.Object obj25 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray11, (int) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int30 = nativeArray28.lastIndexOf((java.lang.Object) (short) 10);
        long long31 = nativeArray28.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray28, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray36.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray39, (java.lang.Object) (-1));
        java.lang.Object[] objArray42 = nativeArray36.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable43 = nativeArray36.getParentScope();
        boolean boolean44 = nativeArray28.containsAll((java.util.Collection) nativeArray36);
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int49 = nativeArray47.lastIndexOf((java.lang.Object) (short) 10);
        long long50 = nativeArray47.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray47, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable54 = null;
        java.lang.Object[] objArray55 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable54);
        java.lang.Object[] objArray56 = nativeArray47.toArray(objArray55);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray28, "hi!", (java.lang.Object) objArray55);
        java.lang.String str58 = nativeArray28.getTypeOf();
        java.lang.Object[] objArray59 = nativeArray28.getAllIds();
        nativeArray11.defineConst("object", (com.google.javascript.rhino.head.Scriptable) nativeArray28);
        boolean boolean61 = nativeArray1.containsAll((java.util.Collection) nativeArray11);
        org.junit.Assert.assertNull(scriptable2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[hi!]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 1L + "'", long31 == 1L);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[null]");
        org.junit.Assert.assertNull(scriptable43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 1L + "'", long50 == 1L);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[]");
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[null]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "object" + "'", str58, "object");
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[hi!, length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[hi!, length]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
    }

    @Test
    public void test2187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2187");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj38 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        int int40 = nativeArray4.indexOf((java.lang.Object) 100.0f);
        boolean boolean41 = nativeArray4.isEmpty();
        java.lang.Object[] objArray42 = nativeArray4.getAllIds();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[hi!, length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[hi!, length]");
    }

    @Test
    public void test2188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2188");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable8 = null;
        java.lang.Object[] objArray9 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable8);
        java.lang.Object[] objArray10 = nativeArray1.toArray(objArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int15 = nativeArray13.lastIndexOf((java.lang.Object) (short) 10);
        long long16 = nativeArray13.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "", true);
        boolean boolean20 = nativeArray13.hasPrototypeMap();
        int int21 = nativeArray13.size();
        boolean boolean22 = nativeArray13.isEmpty();
        boolean boolean24 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "Array");
        java.lang.Object obj25 = nativeArray1.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray13);
        com.google.javascript.rhino.head.Scriptable scriptable26 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray32, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray37.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj40 = nativeArray32.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        boolean boolean41 = nativeArray32.hasPrototypeMap();
        java.lang.Object[] objArray42 = nativeArray32.getIds();
        int int43 = nativeArray32.size();
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int47 = nativeArray45.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray32.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray45);
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray51.activatePrototypeMap((int) (short) 100);
        boolean boolean55 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray51, "hi!");
        nativeArray32.setAttributes("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray51, 8);
        nativeArray1.setAttributes("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray32, 0);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "object");
        nativeArray1.sealObject();
        boolean boolean63 = nativeArray1.hasPrototypeMap();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[null]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1L + "'", long16 == 1L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNull(scriptable26);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[hi!]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test2189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2189");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.setAttributes((int) (byte) 100, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int12 = nativeArray10.lastIndexOf((java.lang.Object) (short) 10);
        long long13 = nativeArray10.getLength();
        nativeArray10.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, (int) (byte) -1, (java.lang.Object) nativeArray10);
        long long17 = nativeArray1.getLength();
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray19.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray22, (java.lang.Object) (-1));
        java.lang.Object[] objArray25 = nativeArray19.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable26 = nativeArray19.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable27 = nativeArray19.getParentScope();
        boolean boolean28 = nativeArray19.isSealed();
        boolean boolean29 = nativeArray19.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray32.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray35, (java.lang.Object) (-1));
        java.lang.Object[] objArray38 = nativeArray32.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable39 = nativeArray32.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable40 = nativeArray32.getParentScope();
        boolean boolean41 = nativeArray32.isSealed();
        java.lang.Object obj43 = nativeArray32.get(0L);
        long long44 = nativeArray32.getLength();
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int48 = nativeArray46.lastIndexOf((java.lang.Object) (short) 10);
        long long49 = nativeArray46.getLength();
        nativeArray46.delete((int) (byte) 1);
        boolean boolean52 = nativeArray46.isExtensible();
        com.google.javascript.rhino.head.Scriptable scriptable53 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray46);
        nativeArray19.putConst("", (com.google.javascript.rhino.head.Scriptable) nativeArray32, (java.lang.Object) nativeArray46);
        java.lang.Object obj55 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray1, (java.lang.Object) "");
        boolean boolean56 = nativeArray1.avoidObjectDetection();
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray61 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray61, "", (java.lang.Object) 100);
        java.lang.Object obj65 = nativeArray58.associateValue((java.lang.Object) ' ', (java.lang.Object) nativeArray61);
        boolean boolean67 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray61, "");
        com.google.javascript.rhino.head.Scriptable scriptable68 = nativeArray61.getParentScope();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean69 = nativeArray1.retainAll((java.util.Collection) nativeArray61);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 1L + "'", long17 == 1L);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[null]");
        org.junit.Assert.assertNull(scriptable26);
        org.junit.Assert.assertNull(scriptable27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[null]");
        org.junit.Assert.assertNull(scriptable39);
        org.junit.Assert.assertNull(scriptable40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 1L + "'", long44 == 1L);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 1L + "'", long49 == 1L);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(scriptable53);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(scriptable68);
    }

    @Test
    public void test2190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2190");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray15, (java.lang.Object) (-1));
        java.lang.Object[] objArray18 = nativeArray12.getAllIds();
        nativeArray12.delete("");
        long long21 = nativeArray12.getLength();
        boolean boolean22 = nativeArray1.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray12);
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int27 = nativeArray25.lastIndexOf((java.lang.Object) (short) 10);
        long long28 = nativeArray25.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray25, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray33.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray36, (java.lang.Object) (-1));
        java.lang.Object[] objArray39 = nativeArray33.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable40 = nativeArray33.getParentScope();
        boolean boolean41 = nativeArray25.containsAll((java.util.Collection) nativeArray33);
        com.google.javascript.rhino.head.Scriptable scriptable42 = nativeArray33.getParentScope();
        boolean boolean43 = nativeArray33.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable47 = nativeArray46.getParentScope();
        java.lang.Object[] objArray48 = nativeArray46.getIds();
        boolean boolean49 = nativeArray33.has("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray46);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray12, "object", (java.lang.Object) nativeArray33);
        com.google.javascript.rhino.head.NativeArray nativeArray53 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int55 = nativeArray53.lastIndexOf((java.lang.Object) (short) 10);
        long long56 = nativeArray53.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray53, "", true);
        boolean boolean60 = nativeArray53.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray63 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable64 = nativeArray63.getParentScope();
        java.lang.Object[] objArray65 = nativeArray63.getIds();
        boolean boolean66 = nativeArray63.isEmpty();
        boolean boolean67 = nativeArray53.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray63);
        java.lang.Object[] objArray68 = nativeArray53.getIds();
        nativeArray12.defineConst("object", (com.google.javascript.rhino.head.Scriptable) nativeArray53);
        com.google.javascript.rhino.head.NativeArray nativeArray72 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        java.lang.Object obj74 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray72, "Array");
        com.google.javascript.rhino.head.Scriptable scriptable75 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray72);
        java.lang.String str76 = nativeArray72.getClassName();
        nativeArray72.setAttributes("", (int) (byte) 1);
        java.lang.Object[] objArray80 = nativeArray72.getAllIds();
        java.lang.Object obj81 = nativeArray12.get(100, (com.google.javascript.rhino.head.Scriptable) nativeArray72);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj85 = nativeArray72.getGetterOrSetter("Array", 10, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Array");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[length]");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1L + "'", long21 == 1L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 1L + "'", long28 == 1L);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[null]");
        org.junit.Assert.assertNull(scriptable40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(scriptable42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(scriptable47);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 1L + "'", long56 == 1L);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(scriptable64);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[]");
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNull(scriptable75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "Array" + "'", str76, "Array");
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[, length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[, length]");
        org.junit.Assert.assertNotNull(obj81);
    }

    @Test
    public void test2191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2191");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        java.util.ListIterator listIterator9 = nativeArray1.listIterator();
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray15, (java.lang.Object) (-1));
        java.lang.Object[] objArray18 = nativeArray12.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable19 = nativeArray12.getParentScope();
        com.google.javascript.rhino.head.Context context20 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray22.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray25, (java.lang.Object) (-1));
        java.lang.Object[] objArray28 = nativeArray22.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable29 = nativeArray22.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable30 = nativeArray22.getParentScope();
        java.util.ListIterator listIterator31 = nativeArray22.listIterator();
        nativeArray12.defineOwnProperties(context20, (com.google.javascript.rhino.head.ScriptableObject) nativeArray22);
        java.lang.Object obj33 = nativeArray1.get(100, (com.google.javascript.rhino.head.Scriptable) nativeArray22);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray22, "", true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(listIterator9);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[null]");
        org.junit.Assert.assertNull(scriptable19);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[null]");
        org.junit.Assert.assertNull(scriptable29);
        org.junit.Assert.assertNull(scriptable30);
        org.junit.Assert.assertNotNull(listIterator31);
        org.junit.Assert.assertNotNull(obj33);
    }

    @Test
    public void test2192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2192");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int11 = nativeArray9.lastIndexOf((java.lang.Object) (short) 10);
        long long12 = nativeArray9.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray20, (java.lang.Object) (-1));
        java.lang.Object[] objArray23 = nativeArray17.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable24 = nativeArray17.getParentScope();
        boolean boolean25 = nativeArray9.containsAll((java.util.Collection) nativeArray17);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray27.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray30, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray35.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj38 = nativeArray30.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray35);
        boolean boolean39 = nativeArray30.hasPrototypeMap();
        java.lang.Object[] objArray40 = nativeArray30.getIds();
        java.lang.Object[] objArray41 = nativeArray17.toArray(objArray40);
        boolean boolean43 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray17, "Array");
        java.lang.Object obj44 = nativeArray4.get(2, (com.google.javascript.rhino.head.Scriptable) nativeArray17);
        com.google.javascript.rhino.head.Scriptable scriptable45 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray17);
        java.lang.Object obj46 = null;
        java.lang.Object obj47 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray17, obj46);
        java.lang.Class<?> wildcardClass48 = nativeArray17.getClass();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 1L + "'", long12 == 1L);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[null]");
        org.junit.Assert.assertNull(scriptable24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[null]");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[null]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNull(scriptable45);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test2193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2193");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable8 = null;
        java.lang.Object[] objArray9 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable8);
        java.lang.Object[] objArray10 = nativeArray1.toArray(objArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int15 = nativeArray13.lastIndexOf((java.lang.Object) (short) 10);
        long long16 = nativeArray13.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "", true);
        boolean boolean20 = nativeArray13.hasPrototypeMap();
        int int21 = nativeArray13.size();
        boolean boolean22 = nativeArray13.isEmpty();
        boolean boolean24 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "Array");
        java.lang.Object obj25 = nativeArray1.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray13);
        nativeArray1.setAttributes("Array", 1);
        int int29 = nativeArray1.size();
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int33 = nativeArray31.lastIndexOf((java.lang.Object) (short) 10);
        long long34 = nativeArray31.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray31, "", true);
        boolean boolean38 = nativeArray31.hasPrototypeMap();
        int int39 = nativeArray31.size();
        boolean boolean40 = nativeArray31.isEmpty();
        com.google.javascript.rhino.head.Scriptable scriptable41 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray31);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray31, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable45 = nativeArray31.getParentScope();
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) (short) 10);
        java.lang.reflect.Method method49 = null;
        java.lang.reflect.Method method50 = null;
        nativeArray31.defineProperty("hi!", (java.lang.Object) nativeArray48, method49, method50, 0);
        boolean boolean53 = nativeArray48.isSealed();
        boolean boolean54 = nativeArray1.contains((java.lang.Object) nativeArray48);
        com.google.javascript.rhino.head.Scriptable scriptable55 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray48);
        java.lang.Object obj57 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray48, (int) (byte) 0);
        boolean boolean58 = nativeArray48.hasPrototypeMap();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[null]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1L + "'", long16 == 1L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 1L + "'", long34 == 1L);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(scriptable41);
        org.junit.Assert.assertNull(scriptable45);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(scriptable55);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test2194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2194");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable17 = nativeArray16.getParentScope();
        java.lang.Object[] objArray18 = nativeArray16.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray20.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray23, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray28.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj31 = nativeArray23.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray28);
        java.lang.Object obj32 = nativeArray16.getAssociatedValue((java.lang.Object) nativeArray23);
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable35 = nativeArray34.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable36 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int40 = nativeArray38.lastIndexOf((java.lang.Object) (short) 10);
        long long41 = nativeArray38.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray38, "", true);
        boolean boolean45 = nativeArray38.hasPrototypeMap();
        int int46 = nativeArray38.size();
        boolean boolean47 = nativeArray38.isEmpty();
        nativeArray34.setPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray38);
        java.lang.Object obj49 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray23, (java.lang.Object) nativeArray34);
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray54 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray51.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray54, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.Scriptable scriptable57 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray51);
        int int58 = nativeArray34.lastIndexOf((java.lang.Object) scriptable57);
        boolean boolean59 = nativeArray4.has((int) ' ', (com.google.javascript.rhino.head.Scriptable) nativeArray34);
        com.google.javascript.rhino.head.Scriptable scriptable60 = nativeArray34.getPrototype();
        java.lang.Object[] objArray62 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj63 = com.google.javascript.rhino.head.ScriptableObject.callMethod((com.google.javascript.rhino.head.Scriptable) nativeArray34, "hi!", objArray62);
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EcmaError; message: TypeError: hi! is not a function, it is object.");
        } catch (com.google.javascript.rhino.head.EcmaError e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(scriptable17);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[length]");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNull(scriptable35);
        org.junit.Assert.assertNull(scriptable36);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 1L + "'", long41 == 1L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNull(scriptable57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(scriptable60);
    }

    @Test
    public void test2195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2195");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable2 = nativeArray1.getParentScope();
        java.lang.Object[] objArray3 = nativeArray1.getIds();
        com.google.javascript.rhino.head.Scriptable scriptable4 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        org.junit.Assert.assertNull(scriptable2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNull(scriptable4);
    }

    @Test
    public void test2196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2196");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) ' ');
        boolean boolean3 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, (int) (byte) 10);
        com.google.javascript.rhino.head.NativeArray nativeArray5 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int7 = nativeArray5.lastIndexOf((java.lang.Object) (short) 10);
        long long8 = nativeArray5.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray5, "", true);
        boolean boolean12 = nativeArray5.hasPrototypeMap();
        int int13 = nativeArray5.size();
        boolean boolean14 = nativeArray5.isEmpty();
        com.google.javascript.rhino.head.Scriptable scriptable15 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray5);
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int34 = nativeArray32.lastIndexOf((java.lang.Object) (short) 10);
        long long35 = nativeArray32.getLength();
        nativeArray32.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray26, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray41.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray44, (java.lang.Object) (-1));
        java.lang.Object[] objArray47 = nativeArray41.getAllIds();
        nativeArray41.delete("");
        java.lang.Object obj50 = nativeArray26.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray41);
        java.lang.Integer[] intArray51 = nativeArray41.getIndexIds();
        long long52 = nativeArray41.getLength();
        nativeArray5.defineConst("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray41);
        boolean boolean54 = nativeArray1.containsAll((java.util.Collection) nativeArray41);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 1L + "'", long8 == 1L);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(scriptable15);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1L + "'", long35 == 1L);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[length]");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 1L + "'", long52 == 1L);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
    }

    @Test
    public void test2197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2197");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int10 = nativeArray8.lastIndexOf((java.lang.Object) (short) 10);
        long long11 = nativeArray8.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray8, "", true);
        boolean boolean15 = nativeArray8.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable19 = nativeArray18.getParentScope();
        java.lang.Object[] objArray20 = nativeArray18.getIds();
        boolean boolean21 = nativeArray18.isEmpty();
        boolean boolean22 = nativeArray8.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray18);
        boolean boolean23 = nativeArray1.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray8);
        com.google.javascript.rhino.head.Scriptable scriptable24 = nativeArray1.getPrototype();
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray27.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray30, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray35.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj38 = nativeArray30.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray35);
        boolean boolean39 = nativeArray30.hasPrototypeMap();
        java.lang.Object[] objArray40 = nativeArray30.getIds();
        int int41 = nativeArray30.size();
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray44.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray47, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray52 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray52.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj55 = nativeArray47.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray52);
        boolean boolean56 = nativeArray47.hasPrototypeMap();
        java.lang.Object[] objArray57 = nativeArray47.getIds();
        int int58 = nativeArray47.size();
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int62 = nativeArray60.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray47.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray60);
        java.lang.Object obj64 = nativeArray30.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray47);
        java.lang.Object[] objArray65 = nativeArray30.getIds();
        boolean boolean66 = nativeArray30.avoidObjectDetection();
        boolean boolean67 = nativeArray1.has("object", (com.google.javascript.rhino.head.Scriptable) nativeArray30);
        java.util.Iterator iterator68 = nativeArray1.iterator();
        java.lang.Class<?> wildcardClass69 = nativeArray1.getClass();
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(scriptable19);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(scriptable24);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[hi!]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[hi!]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(iterator68);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test2198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2198");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        java.lang.Object obj9 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 4);
        java.lang.Object[] objArray10 = nativeArray1.toArray();
        boolean boolean11 = nativeArray1.hasPrototypeMap();
        long long12 = nativeArray1.getLength();
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray14.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray17, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray22.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj25 = nativeArray17.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray22);
        boolean boolean26 = nativeArray17.hasPrototypeMap();
        java.lang.Object[] objArray27 = nativeArray17.getIds();
        int int28 = nativeArray17.size();
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray31.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray34, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray39.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj42 = nativeArray34.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray39);
        boolean boolean43 = nativeArray34.hasPrototypeMap();
        java.lang.Object[] objArray44 = nativeArray34.getIds();
        int int45 = nativeArray34.size();
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int49 = nativeArray47.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray34.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray47);
        java.lang.Object obj51 = nativeArray17.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object[] objArray52 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray17);
        boolean boolean54 = nativeArray17.isConst("hi!");
        com.google.javascript.rhino.head.NativeArray nativeArray57 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int59 = nativeArray57.lastIndexOf((java.lang.Object) (short) 10);
        long long60 = nativeArray57.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray57, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable64 = null;
        java.lang.Object[] objArray65 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable64);
        java.lang.Object[] objArray66 = nativeArray57.toArray(objArray65);
        com.google.javascript.rhino.head.NativeArray nativeArray69 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int71 = nativeArray69.lastIndexOf((java.lang.Object) (short) 10);
        long long72 = nativeArray69.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray69, "", true);
        boolean boolean76 = nativeArray69.hasPrototypeMap();
        int int77 = nativeArray69.size();
        boolean boolean78 = nativeArray69.isEmpty();
        boolean boolean80 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray69, "Array");
        java.lang.Object obj81 = nativeArray57.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray69);
        java.lang.Object obj82 = nativeArray17.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray69);
        boolean boolean84 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray17, "hi!");
        java.lang.Object obj85 = nativeArray1.get((java.lang.Object) "hi!");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[null]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 1L + "'", long12 == 1L);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[hi!]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[hi!]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 1L + "'", long60 == 1L);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[]");
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[null]");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 1L + "'", long72 == 1L);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNull(obj85);
    }

    @Test
    public void test2199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2199");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", (java.lang.Object) 100);
        nativeArray1.activatePrototypeMap(1);
        boolean boolean8 = nativeArray1.isConst("object");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test2200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2200");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        nativeArray1.put((int) (byte) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray9, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray19.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray22, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray27.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj30 = nativeArray22.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray27);
        boolean boolean31 = nativeArray22.hasPrototypeMap();
        java.lang.Object[] objArray32 = nativeArray22.getIds();
        int int33 = nativeArray22.size();
        boolean boolean34 = nativeArray1.has((int) (short) 100, (com.google.javascript.rhino.head.Scriptable) nativeArray22);
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray22, "hi!", (java.lang.Object) 1.0f, 1);
        com.google.javascript.rhino.head.Scriptable scriptable39 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray22);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[hi!]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(scriptable39);
    }

    @Test
    public void test2201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2201");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.getAllIds();
        nativeArray1.delete("");
        long long10 = nativeArray1.getLength();
        boolean boolean11 = nativeArray1.hasPrototypeMap();
        com.google.javascript.rhino.head.Scriptable scriptable12 = nativeArray1.getPrototype();
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray15.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray18, (java.lang.Object) (-1));
        java.lang.Object[] objArray21 = nativeArray15.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable22 = nativeArray15.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable23 = nativeArray15.getParentScope();
        boolean boolean24 = nativeArray15.isSealed();
        boolean boolean25 = nativeArray15.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray28.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray31, (java.lang.Object) (-1));
        java.lang.Object[] objArray34 = nativeArray28.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable35 = nativeArray28.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable36 = nativeArray28.getParentScope();
        boolean boolean37 = nativeArray28.isSealed();
        java.lang.Object obj39 = nativeArray28.get(0L);
        long long40 = nativeArray28.getLength();
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int44 = nativeArray42.lastIndexOf((java.lang.Object) (short) 10);
        long long45 = nativeArray42.getLength();
        nativeArray42.delete((int) (byte) 1);
        boolean boolean48 = nativeArray42.isExtensible();
        com.google.javascript.rhino.head.Scriptable scriptable49 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray42);
        nativeArray15.putConst("", (com.google.javascript.rhino.head.Scriptable) nativeArray28, (java.lang.Object) nativeArray42);
        java.lang.Object obj51 = nativeArray1.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray28);
        com.google.javascript.rhino.head.NativeArray nativeArray54 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray57 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray54.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray57, (java.lang.Object) (-1));
        java.lang.Object[] objArray60 = nativeArray54.getAllIds();
        nativeArray54.delete("");
        long long63 = nativeArray54.getLength();
        boolean boolean65 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray54, (int) (short) 10);
        nativeArray54.delete(2);
        com.google.javascript.rhino.head.Scriptable scriptable68 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray54);
        java.lang.reflect.Method method69 = null;
        java.lang.reflect.Method method70 = null;
        // The following exception was thrown during execution in test generation
        try {
            nativeArray1.defineProperty("Array", (java.lang.Object) scriptable68, method69, method70, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: -1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[length]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(scriptable12);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[null]");
        org.junit.Assert.assertNull(scriptable22);
        org.junit.Assert.assertNull(scriptable23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[null]");
        org.junit.Assert.assertNull(scriptable35);
        org.junit.Assert.assertNull(scriptable36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 1L + "'", long40 == 1L);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 1L + "'", long45 == 1L);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(scriptable49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[length]");
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 1L + "'", long63 == 1L);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(scriptable68);
    }

    @Test
    public void test2202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2202");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        boolean boolean8 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "");
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray14, "", (java.lang.Object) 100);
        java.lang.Object obj18 = nativeArray11.associateValue((java.lang.Object) ' ', (java.lang.Object) nativeArray14);
        java.lang.Object[] objArray19 = nativeArray14.toArray();
        nativeArray4.setAttributes((int) (byte) 100, (com.google.javascript.rhino.head.Scriptable) nativeArray14, (int) (short) 0);
        boolean boolean22 = nativeArray14.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int27 = nativeArray25.lastIndexOf((java.lang.Object) (short) 10);
        long long28 = nativeArray25.getLength();
        nativeArray25.delete((int) (byte) 1);
        java.lang.Integer[] intArray31 = nativeArray25.getIndexIds();
        java.lang.Object obj33 = null;
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray25, "hi!", obj33);
        java.lang.Object obj36 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray25, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int40 = nativeArray38.lastIndexOf((java.lang.Object) (short) 10);
        long long41 = nativeArray38.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray38, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable45 = null;
        java.lang.Object[] objArray46 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable45);
        java.lang.Object[] objArray47 = nativeArray38.toArray(objArray46);
        com.google.javascript.rhino.head.Scriptable scriptable48 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray38);
        boolean boolean49 = nativeArray25.contains((java.lang.Object) nativeArray38);
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray54 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray51.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray54, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray62 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray59.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray62, (java.lang.Object) (-1));
        nativeArray51.put((int) (byte) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray59, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.NativeArray nativeArray69 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray72 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray69.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray72, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray77 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray77.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj80 = nativeArray72.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray77);
        boolean boolean81 = nativeArray72.hasPrototypeMap();
        java.lang.Object[] objArray82 = nativeArray72.getIds();
        int int83 = nativeArray72.size();
        boolean boolean84 = nativeArray51.has((int) (short) 100, (com.google.javascript.rhino.head.Scriptable) nativeArray72);
        boolean boolean85 = nativeArray72.avoidObjectDetection();
        java.util.Iterator iterator86 = nativeArray72.iterator();
        boolean boolean87 = nativeArray25.contains((java.lang.Object) iterator86);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray25, "");
        nativeArray25.delete((int) ' ');
        java.lang.Object obj92 = null;
        nativeArray14.putConst("", (com.google.javascript.rhino.head.Scriptable) nativeArray25, obj92);
        java.lang.Class<?> wildcardClass94 = nativeArray25.getClass();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[null]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 1L + "'", long28 == 1L);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 1L + "'", long41 == 1L);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[null]");
        org.junit.Assert.assertNotNull(scriptable48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray82), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray82), "[hi!]");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(iterator86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test2203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2203");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int22 = nativeArray20.lastIndexOf((java.lang.Object) (short) 10);
        long long23 = nativeArray20.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray20, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable27 = null;
        java.lang.Object[] objArray28 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable27);
        java.lang.Object[] objArray29 = nativeArray20.toArray(objArray28);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!", (java.lang.Object) objArray28);
        java.lang.Object[] objArray31 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        java.lang.Object[] objArray32 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1L + "'", long23 == 1L);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[null]");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[hi!]");
    }

    @Test
    public void test2204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2204");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        com.google.javascript.rhino.head.Scriptable scriptable18 = nativeArray9.getParentScope();
        boolean boolean19 = nativeArray9.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable23 = nativeArray22.getParentScope();
        java.lang.Object[] objArray24 = nativeArray22.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int29 = nativeArray27.lastIndexOf((java.lang.Object) (short) 10);
        long long30 = nativeArray27.getLength();
        nativeArray27.delete((int) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int37 = nativeArray35.lastIndexOf((java.lang.Object) (short) 10);
        long long38 = nativeArray35.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray35, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray43.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray46, (java.lang.Object) (-1));
        java.lang.Object[] objArray49 = nativeArray43.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable50 = nativeArray43.getParentScope();
        boolean boolean51 = nativeArray35.containsAll((java.util.Collection) nativeArray43);
        com.google.javascript.rhino.head.NativeArray nativeArray53 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray53.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray56, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray61 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray61.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj64 = nativeArray56.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray61);
        boolean boolean65 = nativeArray56.hasPrototypeMap();
        java.lang.Object[] objArray66 = nativeArray56.getIds();
        java.lang.Object[] objArray67 = nativeArray43.toArray(objArray66);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray27, "Array", (java.lang.Object) nativeArray43);
        boolean boolean69 = nativeArray22.has(0, (com.google.javascript.rhino.head.Scriptable) nativeArray27);
        boolean boolean70 = nativeArray9.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray22);
        boolean boolean71 = nativeArray9.isExtensible();
        int int72 = nativeArray9.size();
        nativeArray9.preventExtensions();
        // The following exception was thrown during execution in test generation
        try {
            nativeArray9.clear();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(scriptable18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(scriptable23);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[length]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1L + "'", long30 == 1L);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 1L + "'", long38 == 1L);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[null]");
        org.junit.Assert.assertNull(scriptable50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[null]");
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[null]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
    }

    @Test
    public void test2205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2205");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.activatePrototypeMap((int) (short) 100);
        java.util.Iterator iterator4 = nativeArray1.iterator();
        boolean boolean5 = nativeArray1.hasPrototypeMap();
        int int6 = nativeArray1.size();
        com.google.javascript.rhino.head.Scriptable scriptable8 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array");
        com.google.javascript.rhino.head.Scriptable scriptable9 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        org.junit.Assert.assertNotNull(iterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNull(scriptable8);
        org.junit.Assert.assertNull(scriptable9);
    }

    @Test
    public void test2206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2206");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int19 = nativeArray17.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray4.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray17);
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int24 = nativeArray22.lastIndexOf((java.lang.Object) (short) 10);
        long long25 = nativeArray22.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray22, "", true);
        boolean boolean29 = nativeArray22.hasPrototypeMap();
        int int30 = nativeArray22.size();
        boolean boolean31 = nativeArray22.isEmpty();
        com.google.javascript.rhino.head.Scriptable scriptable32 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray22);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray22, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable36 = nativeArray22.getParentScope();
        java.lang.Object obj38 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray22, (java.lang.Object) 0.0f);
        boolean boolean39 = nativeArray4.contains((java.lang.Object) 0.0f);
        boolean boolean40 = nativeArray4.isSealed();
        boolean boolean42 = nativeArray4.isConst("");
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int46 = nativeArray44.lastIndexOf((java.lang.Object) (short) 10);
        long long47 = nativeArray44.getLength();
        nativeArray44.delete((int) (byte) 1);
        java.lang.Integer[] intArray50 = nativeArray44.getIndexIds();
        java.lang.Object obj52 = null;
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray44, "hi!", obj52);
        java.lang.Object obj55 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray44, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.NativeArray nativeArray57 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int59 = nativeArray57.lastIndexOf((java.lang.Object) (short) 10);
        long long60 = nativeArray57.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray57, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable64 = null;
        java.lang.Object[] objArray65 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable64);
        java.lang.Object[] objArray66 = nativeArray57.toArray(objArray65);
        com.google.javascript.rhino.head.Scriptable scriptable67 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray57);
        boolean boolean68 = nativeArray44.contains((java.lang.Object) nativeArray57);
        com.google.javascript.rhino.head.Scriptable scriptable69 = nativeArray44.getPrototype();
        int int70 = nativeArray4.lastIndexOf((java.lang.Object) scriptable69);
        java.lang.String str71 = nativeArray4.getTypeOf();
        com.google.javascript.rhino.head.NativeArray nativeArray74 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray74.activatePrototypeMap((int) (short) 100);
        boolean boolean78 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray74, "hi!");
        boolean boolean79 = nativeArray74.isExtensible();
        java.lang.String str80 = nativeArray74.getTypeOf();
        boolean boolean81 = nativeArray74.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray83 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray86 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray86, "", (java.lang.Object) 100);
        java.lang.Object obj90 = nativeArray83.associateValue((java.lang.Object) ' ', (java.lang.Object) nativeArray86);
        java.lang.Object[] objArray91 = nativeArray86.toArray();
        nativeArray4.put((int) (byte) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray74, (java.lang.Object) nativeArray86);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 1L + "'", long25 == 1L);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(scriptable32);
        org.junit.Assert.assertNull(scriptable36);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 1L + "'", long47 == 1L);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 1L + "'", long60 == 1L);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[]");
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[null]");
        org.junit.Assert.assertNotNull(scriptable67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(scriptable69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "object" + "'", str71, "object");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "object" + "'", str80, "object");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(objArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray91), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray91), "[null]");
    }

    @Test
    public void test2207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2207");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int19 = nativeArray17.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray4.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray17);
        boolean boolean21 = nativeArray4.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray23.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray26, (java.lang.Object) (-1));
        java.lang.Object[] objArray29 = nativeArray23.getAllIds();
        nativeArray23.delete("");
        long long32 = nativeArray23.getLength();
        boolean boolean34 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray23, (int) (short) 10);
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int38 = nativeArray36.lastIndexOf((java.lang.Object) (short) 10);
        long long39 = nativeArray36.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray36, "", true);
        boolean boolean43 = nativeArray36.hasPrototypeMap();
        int int44 = nativeArray36.size();
        boolean boolean45 = nativeArray36.isEmpty();
        nativeArray23.setPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray36);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean47 = nativeArray4.retainAll((java.util.Collection) nativeArray23);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[length]");
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1L + "'", long32 == 1L);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 1L + "'", long39 == 1L);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    }

    @Test
    public void test2208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2208");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        com.google.javascript.rhino.head.Scriptable scriptable18 = nativeArray9.getParentScope();
        boolean boolean19 = nativeArray9.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable23 = nativeArray22.getParentScope();
        java.lang.Object[] objArray24 = nativeArray22.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int29 = nativeArray27.lastIndexOf((java.lang.Object) (short) 10);
        long long30 = nativeArray27.getLength();
        nativeArray27.delete((int) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int37 = nativeArray35.lastIndexOf((java.lang.Object) (short) 10);
        long long38 = nativeArray35.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray35, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray43.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray46, (java.lang.Object) (-1));
        java.lang.Object[] objArray49 = nativeArray43.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable50 = nativeArray43.getParentScope();
        boolean boolean51 = nativeArray35.containsAll((java.util.Collection) nativeArray43);
        com.google.javascript.rhino.head.NativeArray nativeArray53 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray53.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray56, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray61 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray61.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj64 = nativeArray56.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray61);
        boolean boolean65 = nativeArray56.hasPrototypeMap();
        java.lang.Object[] objArray66 = nativeArray56.getIds();
        java.lang.Object[] objArray67 = nativeArray43.toArray(objArray66);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray27, "Array", (java.lang.Object) nativeArray43);
        boolean boolean69 = nativeArray22.has(0, (com.google.javascript.rhino.head.Scriptable) nativeArray27);
        boolean boolean70 = nativeArray9.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray22);
        com.google.javascript.rhino.head.NativeArray nativeArray72 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int74 = nativeArray72.lastIndexOf((java.lang.Object) (short) 10);
        boolean boolean75 = nativeArray9.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray72);
        long long76 = nativeArray9.jsGet_length();
        int int77 = nativeArray9.size();
        nativeArray9.activatePrototypeMap((int) (short) 10);
        java.lang.Object[] objArray80 = nativeArray9.getAllIds();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(scriptable18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(scriptable23);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[length]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1L + "'", long30 == 1L);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 1L + "'", long38 == 1L);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[null]");
        org.junit.Assert.assertNull(scriptable50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[null]");
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[null]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 1L + "'", long76 == 1L);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[constructor, toString, toLocaleString, toSource, join, reverse, sort, push, pop, shift, length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[constructor, toString, toLocaleString, toSource, join, reverse, sort, push, pop, shift, length]");
    }

    @Test
    public void test2209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2209");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray15, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray20.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj23 = nativeArray15.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray20);
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int28 = nativeArray26.lastIndexOf((java.lang.Object) (short) 10);
        long long29 = nativeArray26.getLength();
        nativeArray26.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray20, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray35.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray38, (java.lang.Object) (-1));
        java.lang.Object[] objArray41 = nativeArray35.getAllIds();
        nativeArray35.delete("");
        java.lang.Object obj44 = nativeArray20.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray35);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray20, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable47 = nativeArray20.getPrototype();
        com.google.javascript.rhino.head.NativeArray nativeArray49 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int51 = nativeArray49.lastIndexOf((java.lang.Object) (short) 10);
        long long52 = nativeArray49.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray49, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray57 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray57.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray60, (java.lang.Object) (-1));
        java.lang.Object[] objArray63 = nativeArray57.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable64 = nativeArray57.getParentScope();
        boolean boolean65 = nativeArray49.containsAll((java.util.Collection) nativeArray57);
        nativeArray57.delete("Array");
        boolean boolean68 = nativeArray20.containsAll((java.util.Collection) nativeArray57);
        boolean boolean69 = nativeArray1.containsAll((java.util.Collection) nativeArray20);
        java.util.Iterator iterator70 = nativeArray20.iterator();
        long long71 = nativeArray20.jsGet_length();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 1L + "'", long29 == 1L);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[length]");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNull(scriptable47);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 1L + "'", long52 == 1L);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[null]");
        org.junit.Assert.assertNull(scriptable64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(iterator70);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 1L + "'", long71 == 1L);
    }

    @Test
    public void test2210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2210");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.getAllIds();
        nativeArray24.delete("");
        java.lang.Object obj33 = nativeArray9.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable36 = nativeArray9.getPrototype();
        com.google.javascript.rhino.head.Context context37 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int41 = nativeArray39.lastIndexOf((java.lang.Object) (short) 10);
        long long42 = nativeArray39.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray39, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray47.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray50, (java.lang.Object) (-1));
        java.lang.Object[] objArray53 = nativeArray47.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable54 = nativeArray47.getParentScope();
        boolean boolean55 = nativeArray39.containsAll((java.util.Collection) nativeArray47);
        nativeArray9.defineOwnProperties(context37, (com.google.javascript.rhino.head.ScriptableObject) nativeArray39);
        java.lang.String str57 = nativeArray39.getTypeOf();
        com.google.javascript.rhino.head.Scriptable scriptable58 = nativeArray39.getPrototype();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNull(scriptable36);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 1L + "'", long42 == 1L);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[null]");
        org.junit.Assert.assertNull(scriptable54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "object" + "'", str57, "object");
        org.junit.Assert.assertNull(scriptable58);
    }

    @Test
    public void test2211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2211");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "", (java.lang.Object) 100);
        java.lang.Object obj8 = nativeArray1.associateValue((java.lang.Object) ' ', (java.lang.Object) nativeArray4);
        java.lang.Object[] objArray9 = nativeArray4.toArray();
        boolean boolean11 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "");
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray14.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray17, (java.lang.Object) (-1));
        boolean boolean21 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray17, "");
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int26 = nativeArray24.lastIndexOf((java.lang.Object) (short) 10);
        long long27 = nativeArray24.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray24, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray32.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray35, (java.lang.Object) (-1));
        java.lang.Object[] objArray38 = nativeArray32.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable39 = nativeArray32.getParentScope();
        boolean boolean40 = nativeArray24.containsAll((java.util.Collection) nativeArray32);
        com.google.javascript.rhino.head.Scriptable scriptable41 = nativeArray32.getParentScope();
        boolean boolean42 = nativeArray32.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable46 = nativeArray45.getParentScope();
        java.lang.Object[] objArray47 = nativeArray45.getIds();
        boolean boolean48 = nativeArray32.has("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray45);
        java.lang.reflect.Method method49 = null;
        java.lang.reflect.Method method50 = null;
        nativeArray17.defineProperty("hi!", (java.lang.Object) nativeArray32, method49, method50, 8);
        nativeArray4.defineConst("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray32);
        nativeArray4.activatePrototypeMap((int) (byte) 10);
        java.lang.String str56 = nativeArray4.getClassName();
        com.google.javascript.rhino.head.Scriptable scriptable57 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray4);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[null]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 1L + "'", long27 == 1L);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[null]");
        org.junit.Assert.assertNull(scriptable39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(scriptable41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(scriptable46);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Array" + "'", str56, "Array");
        org.junit.Assert.assertNull(scriptable57);
    }

    @Test
    public void test2212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2212");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        java.lang.Object obj3 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 8);
        com.google.javascript.rhino.head.NativeArray nativeArray6 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray6.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray9, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray13.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray16, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray21.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj24 = nativeArray16.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        com.google.javascript.rhino.head.Callable callable27 = null;
        nativeArray16.setGetterOrSetter("hi!", 0, callable27, false);
        java.lang.Integer[] intArray30 = nativeArray16.getIndexIds();
        nativeArray9.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray16);
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        long long37 = nativeArray34.getLength();
        nativeArray34.delete((int) (byte) 1);
        boolean boolean41 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray34, "");
        nativeArray16.setAttributes("", (com.google.javascript.rhino.head.Scriptable) nativeArray34, 13);
        com.google.javascript.rhino.head.Scriptable scriptable44 = nativeArray34.getParentScope();
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array", (java.lang.Object) scriptable44);
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int50 = nativeArray48.lastIndexOf((java.lang.Object) (short) 10);
        long long51 = nativeArray48.getLength();
        nativeArray48.delete((int) (byte) 1);
        boolean boolean54 = nativeArray48.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray57 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable58 = nativeArray57.getParentScope();
        java.lang.Object[] objArray59 = nativeArray57.getIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray48, "", (java.lang.Object) nativeArray57, 0);
        java.lang.Object[] objArray62 = nativeArray48.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable63 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray48);
        boolean boolean64 = nativeArray1.has("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray48);
        java.util.ListIterator listIterator65 = nativeArray1.listIterator();
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 1L + "'", long37 == 1L);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(scriptable44);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 1L + "'", long51 == 1L);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(scriptable58);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[]");
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[null]");
        org.junit.Assert.assertNull(scriptable63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(listIterator65);
    }

    @Test
    public void test2213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2213");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.getAllIds();
        nativeArray1.delete("");
        long long10 = nativeArray1.getLength();
        boolean boolean11 = nativeArray1.hasPrototypeMap();
        boolean boolean12 = nativeArray1.isExtensible();
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[length]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test2214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2214");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.getAllIds();
        java.lang.String str8 = nativeArray1.getTypeOf();
        int int9 = nativeArray1.size();
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray15, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray20.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray23, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray28.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj31 = nativeArray23.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray28);
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        long long37 = nativeArray34.getLength();
        nativeArray34.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray28, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray43.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray46, (java.lang.Object) (-1));
        java.lang.Object[] objArray49 = nativeArray43.getAllIds();
        nativeArray43.delete("");
        java.lang.Object obj52 = nativeArray28.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray43);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray28, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable55 = nativeArray28.getPrototype();
        com.google.javascript.rhino.head.Context context56 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int60 = nativeArray58.lastIndexOf((java.lang.Object) (short) 10);
        long long61 = nativeArray58.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray58, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray66 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray69 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray66.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray69, (java.lang.Object) (-1));
        java.lang.Object[] objArray72 = nativeArray66.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable73 = nativeArray66.getParentScope();
        boolean boolean74 = nativeArray58.containsAll((java.util.Collection) nativeArray66);
        nativeArray28.defineOwnProperties(context56, (com.google.javascript.rhino.head.ScriptableObject) nativeArray58);
        nativeArray12.setAttributes(1, (com.google.javascript.rhino.head.Scriptable) nativeArray28, (int) (short) 10);
        java.lang.String str78 = nativeArray12.getTypeOf();
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray12, "object");
        java.lang.Object obj81 = nativeArray1.get((int) (byte) 0, (com.google.javascript.rhino.head.Scriptable) nativeArray12);
        boolean boolean83 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray12, (int) (short) 0);
        java.lang.Object[] objArray84 = nativeArray12.getIds();
        int int85 = nativeArray12.size();
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[length]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "object" + "'", str8, "object");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 1L + "'", long37 == 1L);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[length]");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNull(scriptable55);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 1L + "'", long61 == 1L);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[null]");
        org.junit.Assert.assertNull(scriptable73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "object" + "'", str78, "object");
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[object]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[object]");
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 1 + "'", int85 == 1);
    }

    @Test
    public void test2215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2215");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj20 = nativeArray12.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray17);
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int25 = nativeArray23.lastIndexOf((java.lang.Object) (short) 10);
        long long26 = nativeArray23.getLength();
        nativeArray23.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray17, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray32.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray35, (java.lang.Object) (-1));
        java.lang.Object[] objArray38 = nativeArray32.getAllIds();
        nativeArray32.delete("");
        java.lang.Object obj41 = nativeArray17.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray32);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray17, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable44 = nativeArray17.getPrototype();
        com.google.javascript.rhino.head.Context context45 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int49 = nativeArray47.lastIndexOf((java.lang.Object) (short) 10);
        long long50 = nativeArray47.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray47, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray55.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray58, (java.lang.Object) (-1));
        java.lang.Object[] objArray61 = nativeArray55.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable62 = nativeArray55.getParentScope();
        boolean boolean63 = nativeArray47.containsAll((java.util.Collection) nativeArray55);
        nativeArray17.defineOwnProperties(context45, (com.google.javascript.rhino.head.ScriptableObject) nativeArray47);
        nativeArray1.setAttributes(1, (com.google.javascript.rhino.head.Scriptable) nativeArray17, (int) (short) 10);
        nativeArray1.setAttributes(1, 0);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List list72 = nativeArray1.subList((int) '4', (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 1L + "'", long26 == 1L);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[length]");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNull(scriptable44);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 1L + "'", long50 == 1L);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[null]");
        org.junit.Assert.assertNull(scriptable62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
    }

    @Test
    public void test2216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2216");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray20, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj28 = nativeArray20.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray25);
        boolean boolean29 = nativeArray20.hasPrototypeMap();
        java.lang.Object[] objArray30 = nativeArray20.getIds();
        int int31 = nativeArray20.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray34.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray37, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj45 = nativeArray37.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray42);
        boolean boolean46 = nativeArray37.hasPrototypeMap();
        java.lang.Object[] objArray47 = nativeArray37.getIds();
        int int48 = nativeArray37.size();
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int52 = nativeArray50.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray37.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray50);
        java.lang.Object obj54 = nativeArray20.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        boolean boolean55 = nativeArray4.containsAll((java.util.Collection) nativeArray37);
        java.lang.Object obj57 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "object");
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int62 = nativeArray60.lastIndexOf((java.lang.Object) (short) 10);
        long long63 = nativeArray60.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray60, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray68 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray71 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray68.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray71, (java.lang.Object) (-1));
        java.lang.Object[] objArray74 = nativeArray68.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable75 = nativeArray68.getParentScope();
        boolean boolean76 = nativeArray60.containsAll((java.util.Collection) nativeArray68);
        nativeArray68.delete("Array");
        java.lang.Object[] objArray79 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray68);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "hi!", (java.lang.Object) objArray79);
        com.google.javascript.rhino.head.NativeArray nativeArray81 = new com.google.javascript.rhino.head.NativeArray(objArray79);
        // The following exception was thrown during execution in test generation
        try {
            nativeArray81.clear();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[hi!]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 1L + "'", long63 == 1L);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[null]");
        org.junit.Assert.assertNull(scriptable75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[]");
    }

    @Test
    public void test2217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2217");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        com.google.javascript.rhino.head.NativeArray nativeArray5 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray5.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray8, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray15, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray20.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj23 = nativeArray15.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray20);
        com.google.javascript.rhino.head.Callable callable26 = null;
        nativeArray15.setGetterOrSetter("hi!", 0, callable26, false);
        java.lang.Integer[] intArray29 = nativeArray15.getIndexIds();
        nativeArray8.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray15);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int34 = nativeArray32.lastIndexOf((java.lang.Object) (short) 10);
        long long35 = nativeArray32.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray32, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray40.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray43, (java.lang.Object) (-1));
        java.lang.Object[] objArray46 = nativeArray40.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable47 = nativeArray40.getParentScope();
        boolean boolean48 = nativeArray32.containsAll((java.util.Collection) nativeArray40);
        nativeArray40.delete("Array");
        java.lang.Object obj51 = nativeArray8.getAssociatedValue((java.lang.Object) nativeArray40);
        boolean boolean52 = nativeArray1.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray8);
        java.lang.String str53 = nativeArray8.getTypeOf();
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int57 = nativeArray55.lastIndexOf((java.lang.Object) (short) 10);
        long long58 = nativeArray55.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray55, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable62 = null;
        java.lang.Object[] objArray63 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable62);
        java.lang.Object[] objArray64 = nativeArray55.toArray(objArray63);
        com.google.javascript.rhino.head.NativeArray nativeArray67 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int69 = nativeArray67.lastIndexOf((java.lang.Object) (short) 10);
        long long70 = nativeArray67.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray67, "", true);
        boolean boolean74 = nativeArray67.hasPrototypeMap();
        int int75 = nativeArray67.size();
        boolean boolean76 = nativeArray67.isEmpty();
        boolean boolean78 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray67, "Array");
        java.lang.Object obj79 = nativeArray55.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray67);
        com.google.javascript.rhino.head.Scriptable scriptable80 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray55);
        boolean boolean81 = nativeArray8.containsAll((java.util.Collection) nativeArray55);
        java.lang.String str82 = nativeArray55.getTypeOf();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1L + "'", long35 == 1L);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[null]");
        org.junit.Assert.assertNull(scriptable47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "object" + "'", str53, "object");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 1L + "'", long58 == 1L);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[]");
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[null]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 1L + "'", long70 == 1L);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNull(scriptable80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "object" + "'", str82, "object");
    }

    @Test
    public void test2218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2218");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        boolean boolean15 = nativeArray4.isEmpty();
        boolean boolean16 = nativeArray4.isExtensible();
        java.lang.Integer[] intArray17 = nativeArray4.getIndexIds();
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int22 = nativeArray20.lastIndexOf((java.lang.Object) (short) 10);
        long long23 = nativeArray20.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray20, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray28.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray31, (java.lang.Object) (-1));
        java.lang.Object[] objArray34 = nativeArray28.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable35 = nativeArray28.getParentScope();
        boolean boolean36 = nativeArray20.containsAll((java.util.Collection) nativeArray28);
        nativeArray28.delete("Array");
        boolean boolean40 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray28, (int) 'a');
        nativeArray4.defineProperty("hi!", (java.lang.Object) 'a', 10);
        boolean boolean44 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.util.List list47 = nativeArray4.subList((int) '#', 5);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1L + "'", long23 == 1L);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[null]");
        org.junit.Assert.assertNull(scriptable35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    }

    @Test
    public void test2219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2219");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.getAllIds();
        nativeArray24.delete("");
        java.lang.Object obj33 = nativeArray9.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable36 = nativeArray9.getPrototype();
        com.google.javascript.rhino.head.Context context37 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int41 = nativeArray39.lastIndexOf((java.lang.Object) (short) 10);
        long long42 = nativeArray39.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray39, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray47.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray50, (java.lang.Object) (-1));
        java.lang.Object[] objArray53 = nativeArray47.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable54 = nativeArray47.getParentScope();
        boolean boolean55 = nativeArray39.containsAll((java.util.Collection) nativeArray47);
        nativeArray9.defineOwnProperties(context37, (com.google.javascript.rhino.head.ScriptableObject) nativeArray39);
        com.google.javascript.rhino.head.Scriptable scriptable57 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray39);
        com.google.javascript.rhino.head.Context context58 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray63 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray63, "", (java.lang.Object) 100);
        java.lang.Object obj67 = nativeArray60.associateValue((java.lang.Object) ' ', (java.lang.Object) nativeArray63);
        java.lang.Object[] objArray68 = nativeArray63.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray70 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int72 = nativeArray70.lastIndexOf((java.lang.Object) (short) 10);
        long long73 = nativeArray70.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray70, "", true);
        boolean boolean77 = nativeArray70.hasPrototypeMap();
        int int78 = nativeArray70.size();
        boolean boolean79 = nativeArray70.isEmpty();
        com.google.javascript.rhino.head.Scriptable scriptable80 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray70);
        nativeArray70.setAttributes(1, (int) (short) 1);
        java.lang.Object[] objArray84 = nativeArray70.toArray();
        nativeArray39.defineOwnProperty(context58, (java.lang.Object) objArray68, (com.google.javascript.rhino.head.ScriptableObject) nativeArray70);
        nativeArray39.preventExtensions();
        nativeArray39.delete((int) (short) 0);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNull(scriptable36);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 1L + "'", long42 == 1L);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[null]");
        org.junit.Assert.assertNull(scriptable54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(scriptable57);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[null]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 1L + "'", long73 == 1L);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(scriptable80);
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[null]");
    }

    @Test
    public void test2220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2220");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray3 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int5 = nativeArray3.lastIndexOf((java.lang.Object) (short) 10);
        long long6 = nativeArray3.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray3, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray11.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray14, (java.lang.Object) (-1));
        java.lang.Object[] objArray17 = nativeArray11.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable18 = nativeArray11.getParentScope();
        boolean boolean19 = nativeArray3.containsAll((java.util.Collection) nativeArray11);
        com.google.javascript.rhino.head.Scriptable scriptable20 = nativeArray11.getParentScope();
        boolean boolean21 = nativeArray1.containsAll((java.util.Collection) nativeArray11);
        boolean boolean22 = nativeArray11.hasPrototypeMap();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[null]");
        org.junit.Assert.assertNull(scriptable18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(scriptable20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test2221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2221");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable8 = nativeArray1.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable9 = nativeArray1.getParentScope();
        boolean boolean10 = nativeArray1.isSealed();
        java.lang.Object obj12 = nativeArray1.get(0L);
        long long13 = nativeArray1.getLength();
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int18 = nativeArray16.lastIndexOf((java.lang.Object) (short) 10);
        long long19 = nativeArray16.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray16, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable31 = nativeArray24.getParentScope();
        boolean boolean32 = nativeArray16.containsAll((java.util.Collection) nativeArray24);
        com.google.javascript.rhino.head.Scriptable scriptable33 = nativeArray24.getParentScope();
        boolean boolean34 = nativeArray24.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable38 = nativeArray37.getParentScope();
        java.lang.Object[] objArray39 = nativeArray37.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int44 = nativeArray42.lastIndexOf((java.lang.Object) (short) 10);
        long long45 = nativeArray42.getLength();
        nativeArray42.delete((int) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int52 = nativeArray50.lastIndexOf((java.lang.Object) (short) 10);
        long long53 = nativeArray50.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray50, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray61 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray58.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray61, (java.lang.Object) (-1));
        java.lang.Object[] objArray64 = nativeArray58.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable65 = nativeArray58.getParentScope();
        boolean boolean66 = nativeArray50.containsAll((java.util.Collection) nativeArray58);
        com.google.javascript.rhino.head.NativeArray nativeArray68 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray71 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray68.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray71, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray76 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray76.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj79 = nativeArray71.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray76);
        boolean boolean80 = nativeArray71.hasPrototypeMap();
        java.lang.Object[] objArray81 = nativeArray71.getIds();
        java.lang.Object[] objArray82 = nativeArray58.toArray(objArray81);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray42, "Array", (java.lang.Object) nativeArray58);
        boolean boolean84 = nativeArray37.has(0, (com.google.javascript.rhino.head.Scriptable) nativeArray42);
        boolean boolean85 = nativeArray24.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        boolean boolean86 = nativeArray24.isExtensible();
        java.lang.Object obj87 = nativeArray1.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        // The following exception was thrown during execution in test generation
        try {
            int int89 = nativeArray24.getAttributes(10);
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EvaluatorException; message: Property 10 not found.");
        } catch (com.google.javascript.rhino.head.EvaluatorException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[null]");
        org.junit.Assert.assertNull(scriptable8);
        org.junit.Assert.assertNull(scriptable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 1L + "'", long19 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[null]");
        org.junit.Assert.assertNull(scriptable31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(scriptable33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(scriptable38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[length]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 1L + "'", long45 == 1L);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 1L + "'", long53 == 1L);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[null]");
        org.junit.Assert.assertNull(scriptable65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(objArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[null]");
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray82), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray82), "[null]");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(obj87);
    }

    @Test
    public void test2222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2222");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable8 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        java.lang.Object[] objArray9 = nativeArray1.getAllIds();
        java.util.ListIterator listIterator10 = nativeArray1.listIterator();
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int14 = nativeArray12.lastIndexOf((java.lang.Object) (short) 10);
        long long15 = nativeArray12.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray12, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable19 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray12);
        nativeArray12.activatePrototypeMap(100);
        int int22 = nativeArray1.lastIndexOf((java.lang.Object) nativeArray12);
        nativeArray12.setAttributes(5, (int) (byte) 1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNull(scriptable8);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[length]");
        org.junit.Assert.assertNotNull(listIterator10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 1L + "'", long15 == 1L);
        org.junit.Assert.assertNull(scriptable19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
    }

    @Test
    public void test2223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2223");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable12 = nativeArray11.getParentScope();
        java.lang.Object[] objArray13 = nativeArray11.getIds();
        boolean boolean14 = nativeArray11.isEmpty();
        boolean boolean15 = nativeArray1.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray11);
        java.lang.Object[] objArray16 = nativeArray1.getIds();
        java.lang.Object[] objArray17 = nativeArray1.getAllIds();
        boolean boolean18 = nativeArray1.hasPrototypeMap();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(scriptable12);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[length]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test2224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2224");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.delete((-1));
        com.google.javascript.rhino.head.NativeArray nativeArray5 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray5.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray8, (java.lang.Object) (-1));
        java.lang.Object[] objArray11 = nativeArray5.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable12 = nativeArray5.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable13 = nativeArray5.getParentScope();
        boolean boolean14 = nativeArray5.isSealed();
        java.lang.Object obj16 = nativeArray5.get(0L);
        long long17 = nativeArray5.getLength();
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int22 = nativeArray20.lastIndexOf((java.lang.Object) (short) 10);
        long long23 = nativeArray20.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray20, "", true);
        boolean boolean27 = nativeArray20.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable31 = nativeArray30.getParentScope();
        java.lang.Object[] objArray32 = nativeArray30.getIds();
        boolean boolean33 = nativeArray30.isEmpty();
        boolean boolean34 = nativeArray20.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray30);
        boolean boolean36 = nativeArray30.isConst("object");
        java.lang.Object obj38 = nativeArray30.get((java.lang.Object) (byte) 10);
        nativeArray30.preventExtensions();
        boolean boolean40 = nativeArray5.has("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray30);
        int int41 = nativeArray1.lastIndexOf((java.lang.Object) nativeArray5);
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray44.activatePrototypeMap((int) (short) 100);
        boolean boolean47 = nativeArray5.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray44);
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray5, "object", (java.lang.Object) (byte) 1);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[null]");
        org.junit.Assert.assertNull(scriptable12);
        org.junit.Assert.assertNull(scriptable13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 1L + "'", long17 == 1L);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1L + "'", long23 == 1L);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(scriptable31);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test2225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2225");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.setAttributes((int) (byte) 100, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int12 = nativeArray10.lastIndexOf((java.lang.Object) (short) 10);
        long long13 = nativeArray10.getLength();
        nativeArray10.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, (int) (byte) -1, (java.lang.Object) nativeArray10);
        com.google.javascript.rhino.head.Scriptable scriptable17 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray10);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray20.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray23, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray27.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray30, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray35.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj38 = nativeArray30.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray35);
        com.google.javascript.rhino.head.Callable callable41 = null;
        nativeArray30.setGetterOrSetter("hi!", 0, callable41, false);
        java.lang.Integer[] intArray44 = nativeArray30.getIndexIds();
        nativeArray23.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray30);
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int50 = nativeArray48.lastIndexOf((java.lang.Object) (short) 10);
        long long51 = nativeArray48.getLength();
        nativeArray48.delete((int) (byte) 1);
        boolean boolean55 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray48, "");
        nativeArray30.setAttributes("", (com.google.javascript.rhino.head.Scriptable) nativeArray48, 13);
        com.google.javascript.rhino.head.Scriptable scriptable58 = nativeArray48.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable59 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray48);
        java.lang.String str60 = nativeArray48.getTypeOf();
        nativeArray10.setAttributes((int) (short) -1, (com.google.javascript.rhino.head.Scriptable) nativeArray48, 4);
        boolean boolean63 = nativeArray48.hasPrototypeMap();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNull(scriptable17);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 1L + "'", long51 == 1L);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(scriptable58);
        org.junit.Assert.assertNotNull(scriptable59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "object" + "'", str60, "object");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test2226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2226");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable8 = null;
        java.lang.Object[] objArray9 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable8);
        java.lang.Object[] objArray10 = nativeArray1.toArray(objArray9);
        com.google.javascript.rhino.head.Scriptable scriptable11 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray14.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray17, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray22.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj25 = nativeArray17.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray22);
        boolean boolean26 = nativeArray17.hasPrototypeMap();
        java.lang.Object[] objArray27 = nativeArray17.getIds();
        int int28 = nativeArray17.size();
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray30.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray33, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray38.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj41 = nativeArray33.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray38);
        boolean boolean42 = nativeArray33.hasPrototypeMap();
        java.lang.Object[] objArray43 = nativeArray33.getIds();
        int int44 = nativeArray33.size();
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray47.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray50, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray55.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj58 = nativeArray50.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray55);
        boolean boolean59 = nativeArray50.hasPrototypeMap();
        java.lang.Object[] objArray60 = nativeArray50.getIds();
        int int61 = nativeArray50.size();
        com.google.javascript.rhino.head.NativeArray nativeArray63 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int65 = nativeArray63.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray50.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray63);
        java.lang.Object obj67 = nativeArray33.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray50);
        boolean boolean68 = nativeArray17.containsAll((java.util.Collection) nativeArray50);
        com.google.javascript.rhino.head.NativeArray nativeArray71 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable72 = nativeArray71.getParentScope();
        java.lang.Object[] objArray73 = nativeArray71.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray75 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray78 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray75.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray78, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray83 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray83.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj86 = nativeArray78.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray83);
        java.lang.Object obj87 = nativeArray71.getAssociatedValue((java.lang.Object) nativeArray78);
        com.google.javascript.rhino.head.Scriptable scriptable88 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray71);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray50, "hi!", (java.lang.Object) scriptable88);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, (int) (short) 0, (java.lang.Object) scriptable88);
        java.lang.Integer[] intArray91 = nativeArray1.getIndexIds();
        java.lang.Object obj93 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, (int) (byte) -1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[null]");
        org.junit.Assert.assertNull(scriptable11);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[hi!]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[hi!]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[hi!]");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNull(scriptable72);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[length]");
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNull(obj87);
        org.junit.Assert.assertNull(scriptable88);
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertNotNull(obj93);
    }

    @Test
    public void test2227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2227");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray6 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int8 = nativeArray6.lastIndexOf((java.lang.Object) (short) 10);
        long long9 = nativeArray6.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray6, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray14.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray17, (java.lang.Object) (-1));
        java.lang.Object[] objArray20 = nativeArray14.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable21 = nativeArray14.getParentScope();
        boolean boolean22 = nativeArray6.containsAll((java.util.Collection) nativeArray14);
        com.google.javascript.rhino.head.Scriptable scriptable23 = nativeArray14.getParentScope();
        boolean boolean24 = nativeArray4.containsAll((java.util.Collection) nativeArray14);
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray29, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray34.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj37 = nativeArray29.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray34);
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int42 = nativeArray40.lastIndexOf((java.lang.Object) (short) 10);
        long long43 = nativeArray40.getLength();
        nativeArray40.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray34, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray49 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray52 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray49.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray52, (java.lang.Object) (-1));
        java.lang.Object[] objArray55 = nativeArray49.getAllIds();
        nativeArray49.delete("");
        java.lang.Object obj58 = nativeArray34.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray49);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray34, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable61 = nativeArray34.getPrototype();
        com.google.javascript.rhino.head.Context context62 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int66 = nativeArray64.lastIndexOf((java.lang.Object) (short) 10);
        long long67 = nativeArray64.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray64, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray72 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray75 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray72.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray75, (java.lang.Object) (-1));
        java.lang.Object[] objArray78 = nativeArray72.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable79 = nativeArray72.getParentScope();
        boolean boolean80 = nativeArray64.containsAll((java.util.Collection) nativeArray72);
        nativeArray34.defineOwnProperties(context62, (com.google.javascript.rhino.head.ScriptableObject) nativeArray64);
        java.lang.Object obj83 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray34, "");
        nativeArray1.put("", (com.google.javascript.rhino.head.Scriptable) nativeArray14, (java.lang.Object) nativeArray34);
        java.lang.Object[] objArray85 = nativeArray1.getIds();
        java.util.Iterator iterator86 = nativeArray1.iterator();
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 1L + "'", long9 == 1L);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[null]");
        org.junit.Assert.assertNull(scriptable21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(scriptable23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 1L + "'", long43 == 1L);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[length]");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNull(scriptable61);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 1L + "'", long67 == 1L);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[null]");
        org.junit.Assert.assertNull(scriptable79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray85), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray85), "[]");
        org.junit.Assert.assertNotNull(iterator86);
    }

    @Test
    public void test2228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2228");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.setAttributes((int) (byte) 100, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        boolean boolean13 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!");
        long long14 = nativeArray9.jsGet_length();
        boolean boolean15 = nativeArray1.contains((java.lang.Object) long14);
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable18 = nativeArray17.getParentScope();
        java.lang.Object[] objArray19 = nativeArray17.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray21.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray24, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj32 = nativeArray24.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray29);
        java.lang.Object obj33 = nativeArray17.getAssociatedValue((java.lang.Object) nativeArray24);
        nativeArray24.preventExtensions();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray24, "Array", false);
        boolean boolean38 = nativeArray1.containsAll((java.util.Collection) nativeArray24);
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray43.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray46, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray51.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj54 = nativeArray46.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray51);
        com.google.javascript.rhino.head.Callable callable57 = null;
        nativeArray46.setGetterOrSetter("hi!", 0, callable57, false);
        nativeArray40.setAttributes((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray46, (int) (short) 10);
        java.lang.Object obj62 = null;
        int int63 = nativeArray40.lastIndexOf(obj62);
        com.google.javascript.rhino.head.NativeArray nativeArray66 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray69 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray66.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray69, (java.lang.Object) (-1));
        java.lang.Object[] objArray72 = nativeArray66.getAllIds();
        nativeArray66.delete("");
        long long75 = nativeArray66.getLength();
        boolean boolean77 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray66, (int) (short) 10);
        nativeArray66.delete(2);
        com.google.javascript.rhino.head.Scriptable scriptable80 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray66);
        java.lang.reflect.Method method81 = null;
        java.lang.reflect.Method method82 = null;
        nativeArray40.defineProperty("object", (java.lang.Object) scriptable80, method81, method82, (int) (short) 0);
        com.google.javascript.rhino.head.Scriptable scriptable86 = null;
        boolean boolean87 = nativeArray40.has((int) (short) 0, scriptable86);
        java.lang.Object obj88 = nativeArray24.get((java.lang.Object) (short) 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(scriptable18);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[length]");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[length]");
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 1L + "'", long75 == 1L);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNull(scriptable80);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNull(obj88);
    }

    @Test
    public void test2229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2229");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj20 = nativeArray12.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray17);
        boolean boolean21 = nativeArray12.hasPrototypeMap();
        java.lang.Object[] objArray22 = nativeArray12.getIds();
        int int23 = nativeArray12.size();
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray28, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray33.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj36 = nativeArray28.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray33);
        boolean boolean37 = nativeArray28.hasPrototypeMap();
        java.lang.Object[] objArray38 = nativeArray28.getIds();
        int int39 = nativeArray28.size();
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray45, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray50.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj53 = nativeArray45.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray50);
        boolean boolean54 = nativeArray45.hasPrototypeMap();
        java.lang.Object[] objArray55 = nativeArray45.getIds();
        int int56 = nativeArray45.size();
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int60 = nativeArray58.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray45.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray58);
        java.lang.Object obj62 = nativeArray28.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray45);
        boolean boolean63 = nativeArray12.containsAll((java.util.Collection) nativeArray45);
        nativeArray1.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray12);
        java.util.Iterator iterator65 = nativeArray1.iterator();
        nativeArray1.activatePrototypeMap(2);
        nativeArray1.sealObject();
        com.google.javascript.rhino.head.NativeArray nativeArray71 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray71.activatePrototypeMap((int) (short) 100);
        com.google.javascript.rhino.head.Scriptable scriptable74 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray71);
        java.lang.Object obj76 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray71, 2);
        com.google.javascript.rhino.head.Scriptable scriptable77 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray71);
        boolean boolean79 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray71, "Array");
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray71, "object", true);
        boolean boolean84 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray71, 0);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", (java.lang.Object) 0);
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EvaluatorException; message: Cannot modify a property of a sealed object: .");
        } catch (com.google.javascript.rhino.head.EvaluatorException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[hi!]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[hi!]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[hi!]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(iterator65);
        org.junit.Assert.assertNull(scriptable74);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(scriptable77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test2230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2230");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        com.google.javascript.rhino.head.Scriptable scriptable11 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.Context context15 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int19 = nativeArray17.lastIndexOf((java.lang.Object) (short) 10);
        long long20 = nativeArray17.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray17, "", true);
        boolean boolean24 = nativeArray17.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable28 = nativeArray27.getParentScope();
        java.lang.Object[] objArray29 = nativeArray27.getIds();
        boolean boolean30 = nativeArray27.isEmpty();
        boolean boolean31 = nativeArray17.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray27);
        boolean boolean33 = nativeArray27.isConst("object");
        nativeArray1.defineOwnProperties(context15, (com.google.javascript.rhino.head.ScriptableObject) nativeArray27);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray27, "hi!");
        nativeArray27.sealObject();
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable41 = nativeArray40.getParentScope();
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray44.activatePrototypeMap((int) (short) 100);
        com.google.javascript.rhino.head.Scriptable scriptable48 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray44, "");
        boolean boolean49 = nativeArray40.has(100, scriptable48);
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int53 = nativeArray51.lastIndexOf((java.lang.Object) (short) 10);
        long long54 = nativeArray51.getLength();
        nativeArray51.delete((int) (byte) 1);
        boolean boolean57 = nativeArray51.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable61 = nativeArray60.getParentScope();
        java.lang.Object[] objArray62 = nativeArray60.getIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray51, "", (java.lang.Object) nativeArray60, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray67 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray70 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray67.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray70, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray75 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray75.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj78 = nativeArray70.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray75);
        boolean boolean79 = nativeArray70.hasPrototypeMap();
        java.lang.Object[] objArray80 = nativeArray70.getIds();
        int int81 = nativeArray70.size();
        com.google.javascript.rhino.head.NativeArray nativeArray83 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int85 = nativeArray83.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray70.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray83);
        java.lang.Object obj87 = nativeArray51.get((int) (short) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray83);
        com.google.javascript.rhino.head.Scriptable scriptable88 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray83);
        nativeArray40.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray83);
        long long90 = nativeArray83.getLength();
        // The following exception was thrown during execution in test generation
        try {
            nativeArray27.setAttributes(2, (com.google.javascript.rhino.head.Scriptable) nativeArray83, 10);
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EvaluatorException; message: Cannot modify a property of a sealed object: 2.");
        } catch (com.google.javascript.rhino.head.EvaluatorException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(scriptable11);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 1L + "'", long20 == 1L);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(scriptable28);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(scriptable41);
        org.junit.Assert.assertNull(scriptable48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 1L + "'", long54 == 1L);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(scriptable61);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[]");
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[hi!]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(scriptable88);
        org.junit.Assert.assertTrue("'" + long90 + "' != '" + 1L + "'", long90 == 1L);
    }

    @Test
    public void test2231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2231");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.setAttributes((int) (byte) 100, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int12 = nativeArray10.lastIndexOf((java.lang.Object) (short) 10);
        long long13 = nativeArray10.getLength();
        nativeArray10.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, (int) (byte) -1, (java.lang.Object) nativeArray10);
        boolean boolean17 = nativeArray1.isSealed();
        nativeArray1.setAttributes((int) (byte) 10, 0);
        com.google.javascript.rhino.head.Context context21 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray23.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray26, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray31.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj34 = nativeArray26.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray31);
        boolean boolean35 = nativeArray26.hasPrototypeMap();
        java.lang.Object[] objArray36 = nativeArray26.getIds();
        int int37 = nativeArray26.size();
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int41 = nativeArray39.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray26.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray39);
        long long43 = nativeArray39.getLength();
        long long44 = nativeArray39.jsGet_length();
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray47.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray50, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int57 = nativeArray55.lastIndexOf((java.lang.Object) (short) 10);
        long long58 = nativeArray55.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray55, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray63 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray66 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray63.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray66, (java.lang.Object) (-1));
        java.lang.Object[] objArray69 = nativeArray63.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable70 = nativeArray63.getParentScope();
        boolean boolean71 = nativeArray55.containsAll((java.util.Collection) nativeArray63);
        com.google.javascript.rhino.head.NativeArray nativeArray73 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray76 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray73.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray76, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray81 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray81.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj84 = nativeArray76.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray81);
        boolean boolean85 = nativeArray76.hasPrototypeMap();
        java.lang.Object[] objArray86 = nativeArray76.getIds();
        java.lang.Object[] objArray87 = nativeArray63.toArray(objArray86);
        boolean boolean89 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray63, "Array");
        java.lang.Object obj90 = nativeArray50.get(2, (com.google.javascript.rhino.head.Scriptable) nativeArray63);
        nativeArray50.delete((int) '#');
        boolean boolean93 = nativeArray39.has((int) (short) 100, (com.google.javascript.rhino.head.Scriptable) nativeArray50);
        nativeArray39.setAttributes(0, (int) (byte) 1);
        java.lang.Object[] objArray97 = nativeArray39.getAllIds();
        // The following exception was thrown during execution in test generation
        try {
            nativeArray1.defineOwnProperties(context21, (com.google.javascript.rhino.head.ScriptableObject) nativeArray39);
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EcmaError; message: TypeError: Expected argument of type object, but instead had type object");
        } catch (com.google.javascript.rhino.head.EcmaError e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[hi!]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 1L + "'", long43 == 1L);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 1L + "'", long44 == 1L);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 1L + "'", long58 == 1L);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[null]");
        org.junit.Assert.assertNull(scriptable70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(objArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray86), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray86), "[null]");
        org.junit.Assert.assertNotNull(objArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray87), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray87), "[null]");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(objArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray97), "[0, length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray97), "[0, length]");
    }

    @Test
    public void test2232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2232");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj38 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        java.lang.Object[] objArray39 = nativeArray4.getIds();
        java.lang.Integer[] intArray40 = nativeArray4.getIndexIds();
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray43.activatePrototypeMap((int) (short) 100);
        boolean boolean47 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray43, "hi!");
        long long48 = nativeArray43.jsGet_length();
        boolean boolean49 = nativeArray4.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray43);
        nativeArray4.setAttributes("hi!", 1);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "object");
        com.google.javascript.rhino.head.NativeArray nativeArray57 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int59 = nativeArray57.lastIndexOf((java.lang.Object) (short) 10);
        long long60 = nativeArray57.getLength();
        nativeArray57.setAttributes((int) (byte) 100, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray66 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int68 = nativeArray66.lastIndexOf((java.lang.Object) (short) 10);
        long long69 = nativeArray66.getLength();
        nativeArray66.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray57, (int) (byte) -1, (java.lang.Object) nativeArray66);
        long long73 = nativeArray57.getLength();
        java.lang.Integer[] intArray74 = nativeArray57.getIndexIds();
        boolean boolean75 = nativeArray4.has("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray57);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[hi!]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 1L + "'", long48 == 1L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 1L + "'", long60 == 1L);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 1L + "'", long69 == 1L);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 1L + "'", long73 == 1L);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test2233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2233");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj38 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        java.lang.Object[] objArray39 = nativeArray4.getIds();
        boolean boolean40 = nativeArray4.avoidObjectDetection();
        boolean boolean42 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "Array");
        com.google.javascript.rhino.head.Scriptable scriptable43 = nativeArray4.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable44 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray4);
        java.lang.Object[] objArray45 = nativeArray4.getAllIds();
        // The following exception was thrown during execution in test generation
        try {
            nativeArray4.setAttributes("hi!", (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: 97");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(scriptable43);
        org.junit.Assert.assertNull(scriptable44);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[hi!, length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[hi!, length]");
    }

    @Test
    public void test2234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2234");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray7 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray4.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray7, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj15 = nativeArray7.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray12);
        com.google.javascript.rhino.head.Callable callable18 = null;
        nativeArray7.setGetterOrSetter("hi!", 0, callable18, false);
        nativeArray1.setAttributes((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray7, (int) (short) 10);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray32.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj35 = nativeArray27.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray32);
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int40 = nativeArray38.lastIndexOf((java.lang.Object) (short) 10);
        long long41 = nativeArray38.getLength();
        nativeArray38.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray32, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray47.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray50, (java.lang.Object) (-1));
        java.lang.Object[] objArray53 = nativeArray47.getAllIds();
        nativeArray47.delete("");
        java.lang.Object obj56 = nativeArray32.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray47);
        java.lang.Integer[] intArray57 = nativeArray47.getIndexIds();
        java.lang.Object obj58 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray1, (java.lang.Object) intArray57);
        com.google.javascript.rhino.head.NativeArray nativeArray61 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray61.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray64, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray69 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray69.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj72 = nativeArray64.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray69);
        com.google.javascript.rhino.head.NativeArray nativeArray75 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int77 = nativeArray75.lastIndexOf((java.lang.Object) (short) 10);
        long long78 = nativeArray75.getLength();
        nativeArray75.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray69, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray84 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray87 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray84.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray87, (java.lang.Object) (-1));
        java.lang.Object[] objArray90 = nativeArray84.getAllIds();
        nativeArray84.delete("");
        java.lang.Object obj93 = nativeArray69.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray84);
        nativeArray1.setAttributes("object", (com.google.javascript.rhino.head.Scriptable) nativeArray84, (int) (short) 10);
        boolean boolean97 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray84, "hi!");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 1L + "'", long41 == 1L);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[length]");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 1L + "'", long78 == 1L);
        org.junit.Assert.assertNotNull(objArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray90), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray90), "[length]");
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test2235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2235");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        com.google.javascript.rhino.head.Scriptable scriptable11 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable15 = nativeArray1.getParentScope();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) (short) 10);
        java.lang.reflect.Method method19 = null;
        java.lang.reflect.Method method20 = null;
        nativeArray1.defineProperty("hi!", (java.lang.Object) nativeArray18, method19, method20, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.activatePrototypeMap((int) (short) 100);
        boolean boolean29 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray25, "hi!");
        boolean boolean30 = nativeArray25.isExtensible();
        nativeArray18.putConst("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray25, (java.lang.Object) 100);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray33 = nativeArray25.getIds();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: 24");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(scriptable11);
        org.junit.Assert.assertNull(scriptable15);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test2236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2236");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        com.google.javascript.rhino.head.Scriptable scriptable18 = nativeArray9.getParentScope();
        boolean boolean19 = nativeArray9.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable23 = nativeArray22.getParentScope();
        java.lang.Object[] objArray24 = nativeArray22.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int29 = nativeArray27.lastIndexOf((java.lang.Object) (short) 10);
        long long30 = nativeArray27.getLength();
        nativeArray27.delete((int) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int37 = nativeArray35.lastIndexOf((java.lang.Object) (short) 10);
        long long38 = nativeArray35.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray35, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray43.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray46, (java.lang.Object) (-1));
        java.lang.Object[] objArray49 = nativeArray43.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable50 = nativeArray43.getParentScope();
        boolean boolean51 = nativeArray35.containsAll((java.util.Collection) nativeArray43);
        com.google.javascript.rhino.head.NativeArray nativeArray53 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray53.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray56, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray61 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray61.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj64 = nativeArray56.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray61);
        boolean boolean65 = nativeArray56.hasPrototypeMap();
        java.lang.Object[] objArray66 = nativeArray56.getIds();
        java.lang.Object[] objArray67 = nativeArray43.toArray(objArray66);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray27, "Array", (java.lang.Object) nativeArray43);
        boolean boolean69 = nativeArray22.has(0, (com.google.javascript.rhino.head.Scriptable) nativeArray27);
        boolean boolean70 = nativeArray9.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray22);
        com.google.javascript.rhino.head.NativeArray nativeArray72 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int74 = nativeArray72.lastIndexOf((java.lang.Object) (short) 10);
        long long75 = nativeArray72.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray72, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable79 = null;
        java.lang.Object[] objArray80 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable79);
        java.lang.Object[] objArray81 = nativeArray72.toArray(objArray80);
        com.google.javascript.rhino.head.NativeArray nativeArray82 = new com.google.javascript.rhino.head.NativeArray(objArray81);
        com.google.javascript.rhino.head.NativeArray nativeArray83 = new com.google.javascript.rhino.head.NativeArray(objArray81);
        java.lang.Object[] objArray84 = nativeArray9.toArray(objArray81);
        com.google.javascript.rhino.head.NativeArray nativeArray85 = new com.google.javascript.rhino.head.NativeArray(objArray84);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(scriptable18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(scriptable23);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[length]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1L + "'", long30 == 1L);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 1L + "'", long38 == 1L);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[null]");
        org.junit.Assert.assertNull(scriptable50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[null]");
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[null]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 1L + "'", long75 == 1L);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[]");
        org.junit.Assert.assertNotNull(objArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[null]");
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[null]");
    }

    @Test
    public void test2237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2237");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray7 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray4.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray7, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj15 = nativeArray7.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray12);
        com.google.javascript.rhino.head.Callable callable18 = null;
        nativeArray7.setGetterOrSetter("hi!", 0, callable18, false);
        nativeArray1.setAttributes((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray7, (int) (short) 10);
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int27 = nativeArray25.lastIndexOf((java.lang.Object) (short) 10);
        long long28 = nativeArray25.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray25, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable32 = null;
        java.lang.Object[] objArray33 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable32);
        java.lang.Object[] objArray34 = nativeArray25.toArray(objArray33);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int39 = nativeArray37.lastIndexOf((java.lang.Object) (short) 10);
        long long40 = nativeArray37.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray37, "", true);
        boolean boolean44 = nativeArray37.hasPrototypeMap();
        int int45 = nativeArray37.size();
        boolean boolean46 = nativeArray37.isEmpty();
        boolean boolean48 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray37, "Array");
        java.lang.Object obj49 = nativeArray25.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        java.lang.Object obj50 = nativeArray1.get("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray25);
        com.google.javascript.rhino.head.NativeArray nativeArray52 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable53 = nativeArray52.getParentScope();
        java.lang.Object[] objArray54 = nativeArray52.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray56.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray59, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray64.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj67 = nativeArray59.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray64);
        java.lang.Object obj68 = nativeArray52.getAssociatedValue((java.lang.Object) nativeArray59);
        java.lang.Object obj69 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray25, (java.lang.Object) nativeArray52);
        nativeArray25.delete((int) (byte) 0);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 1L + "'", long28 == 1L);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[null]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 1L + "'", long40 == 1L);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNull(scriptable53);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[length]");
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNull(obj69);
    }

    @Test
    public void test2238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2238");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        java.lang.Integer[] intArray7 = nativeArray1.getIndexIds();
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((java.lang.Object[]) intArray7);
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray14.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray17, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray22.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj25 = nativeArray17.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray22);
        com.google.javascript.rhino.head.Callable callable28 = null;
        nativeArray17.setGetterOrSetter("hi!", 0, callable28, false);
        nativeArray11.setAttributes((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray17, (int) (short) 10);
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int37 = nativeArray35.lastIndexOf((java.lang.Object) (short) 10);
        long long38 = nativeArray35.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray35, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable42 = null;
        java.lang.Object[] objArray43 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable42);
        java.lang.Object[] objArray44 = nativeArray35.toArray(objArray43);
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int49 = nativeArray47.lastIndexOf((java.lang.Object) (short) 10);
        long long50 = nativeArray47.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray47, "", true);
        boolean boolean54 = nativeArray47.hasPrototypeMap();
        int int55 = nativeArray47.size();
        boolean boolean56 = nativeArray47.isEmpty();
        boolean boolean58 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray47, "Array");
        java.lang.Object obj59 = nativeArray35.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray47);
        java.lang.Object obj60 = nativeArray11.get("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray35);
        com.google.javascript.rhino.head.NativeArray nativeArray62 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable63 = nativeArray62.getParentScope();
        java.lang.Object[] objArray64 = nativeArray62.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray66 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray69 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray66.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray69, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray74 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray74.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj77 = nativeArray69.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray74);
        java.lang.Object obj78 = nativeArray62.getAssociatedValue((java.lang.Object) nativeArray69);
        java.lang.Object obj79 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray35, (java.lang.Object) nativeArray62);
        boolean boolean80 = nativeArray8.has((int) '#', (com.google.javascript.rhino.head.Scriptable) nativeArray62);
        com.google.javascript.rhino.head.Scriptable scriptable82 = null;
        boolean boolean83 = nativeArray62.has((int) (byte) 0, scriptable82);
        com.google.javascript.rhino.head.Scriptable scriptable85 = null;
        boolean boolean86 = nativeArray62.has((int) (short) 1, scriptable85);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 1L + "'", long38 == 1L);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[]");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[null]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 1L + "'", long50 == 1L);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNull(scriptable63);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[length]");
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNull(obj78);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test2239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2239");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object obj8 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "hi!");
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int13 = nativeArray11.lastIndexOf((java.lang.Object) (short) 10);
        long long14 = nativeArray11.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray11, "", true);
        boolean boolean18 = nativeArray11.hasPrototypeMap();
        int int19 = nativeArray11.size();
        boolean boolean20 = nativeArray11.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray23.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray26, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray31.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj34 = nativeArray26.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray31);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int39 = nativeArray37.lastIndexOf((java.lang.Object) (short) 10);
        long long40 = nativeArray37.getLength();
        nativeArray37.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray31, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray49 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray46.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray49, (java.lang.Object) (-1));
        java.lang.Object[] objArray52 = nativeArray46.getAllIds();
        nativeArray46.delete("");
        java.lang.Object obj55 = nativeArray31.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray46);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray31, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable58 = nativeArray31.getPrototype();
        com.google.javascript.rhino.head.Context context59 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray61 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int63 = nativeArray61.lastIndexOf((java.lang.Object) (short) 10);
        long long64 = nativeArray61.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray61, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray69 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray72 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray69.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray72, (java.lang.Object) (-1));
        java.lang.Object[] objArray75 = nativeArray69.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable76 = nativeArray69.getParentScope();
        boolean boolean77 = nativeArray61.containsAll((java.util.Collection) nativeArray69);
        nativeArray31.defineOwnProperties(context59, (com.google.javascript.rhino.head.ScriptableObject) nativeArray61);
        java.lang.Object obj79 = nativeArray11.get((int) ' ', (com.google.javascript.rhino.head.Scriptable) nativeArray61);
        java.lang.Integer[] intArray80 = nativeArray11.getIndexIds();
        java.lang.Object obj81 = nativeArray4.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray11);
        boolean boolean82 = nativeArray4.isEmpty();
        java.lang.Object obj84 = null;
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "Array", obj84);
        com.google.javascript.rhino.head.Scriptable scriptable87 = null;
        java.lang.Object obj88 = nativeArray4.get((int) (short) 1, scriptable87);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Scriptable scriptable89 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype(scriptable87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + (-1) + "'", obj8, (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 1L + "'", long40 == 1L);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[length]");
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNull(scriptable58);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 1L + "'", long64 == 1L);
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[null]");
        org.junit.Assert.assertNull(scriptable76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(obj88);
    }

    @Test
    public void test2240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2240");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.setAttributes((int) (byte) 100, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int12 = nativeArray10.lastIndexOf((java.lang.Object) (short) 10);
        long long13 = nativeArray10.getLength();
        nativeArray10.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, (int) (byte) -1, (java.lang.Object) nativeArray10);
        java.util.Iterator iterator17 = nativeArray1.iterator();
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray20.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray23, (java.lang.Object) (-1));
        java.lang.Object[] objArray26 = nativeArray20.toArray();
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "object", (java.lang.Object) objArray26);
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray(objArray26);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(iterator17);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[null]");
    }

    @Test
    public void test2241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2241");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable8 = nativeArray1.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable9 = nativeArray1.getParentScope();
        boolean boolean10 = nativeArray1.isSealed();
        java.lang.Object obj12 = nativeArray1.get(0L);
        long long13 = nativeArray1.getLength();
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int18 = nativeArray16.lastIndexOf((java.lang.Object) (short) 10);
        long long19 = nativeArray16.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray16, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable31 = nativeArray24.getParentScope();
        boolean boolean32 = nativeArray16.containsAll((java.util.Collection) nativeArray24);
        com.google.javascript.rhino.head.Scriptable scriptable33 = nativeArray24.getParentScope();
        boolean boolean34 = nativeArray24.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable38 = nativeArray37.getParentScope();
        java.lang.Object[] objArray39 = nativeArray37.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int44 = nativeArray42.lastIndexOf((java.lang.Object) (short) 10);
        long long45 = nativeArray42.getLength();
        nativeArray42.delete((int) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int52 = nativeArray50.lastIndexOf((java.lang.Object) (short) 10);
        long long53 = nativeArray50.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray50, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray61 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray58.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray61, (java.lang.Object) (-1));
        java.lang.Object[] objArray64 = nativeArray58.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable65 = nativeArray58.getParentScope();
        boolean boolean66 = nativeArray50.containsAll((java.util.Collection) nativeArray58);
        com.google.javascript.rhino.head.NativeArray nativeArray68 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray71 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray68.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray71, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray76 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray76.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj79 = nativeArray71.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray76);
        boolean boolean80 = nativeArray71.hasPrototypeMap();
        java.lang.Object[] objArray81 = nativeArray71.getIds();
        java.lang.Object[] objArray82 = nativeArray58.toArray(objArray81);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray42, "Array", (java.lang.Object) nativeArray58);
        boolean boolean84 = nativeArray37.has(0, (com.google.javascript.rhino.head.Scriptable) nativeArray42);
        boolean boolean85 = nativeArray24.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        boolean boolean86 = nativeArray24.isExtensible();
        java.lang.Object obj87 = nativeArray1.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        long long88 = nativeArray1.getLength();
        nativeArray1.preventExtensions();
        boolean boolean91 = nativeArray1.isConst("Array");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[null]");
        org.junit.Assert.assertNull(scriptable8);
        org.junit.Assert.assertNull(scriptable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 1L + "'", long19 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[null]");
        org.junit.Assert.assertNull(scriptable31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(scriptable33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(scriptable38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[length]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 1L + "'", long45 == 1L);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 1L + "'", long53 == 1L);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[null]");
        org.junit.Assert.assertNull(scriptable65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(objArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[null]");
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray82), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray82), "[null]");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + 1L + "'", long88 == 1L);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test2242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2242");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.activatePrototypeMap((int) (short) 100);
        com.google.javascript.rhino.head.Scriptable scriptable4 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray7 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int9 = nativeArray7.lastIndexOf((java.lang.Object) (short) 10);
        long long10 = nativeArray7.getLength();
        nativeArray7.delete((int) (byte) 1);
        boolean boolean13 = nativeArray7.isExtensible();
        java.lang.Object obj15 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray7, 4);
        java.lang.Object[] objArray16 = nativeArray7.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray19.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray22, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray27.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj30 = nativeArray22.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray27);
        boolean boolean31 = nativeArray22.hasPrototypeMap();
        java.lang.Object[] objArray32 = nativeArray22.getIds();
        int int33 = nativeArray22.size();
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int37 = nativeArray35.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray22.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray35);
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable41 = nativeArray40.getParentScope();
        java.lang.Object[] objArray42 = nativeArray40.getIds();
        boolean boolean43 = nativeArray40.isEmpty();
        nativeArray7.put((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray22, (java.lang.Object) boolean43);
        java.lang.Object[] objArray45 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray7);
        long long46 = nativeArray7.jsGet_length();
        boolean boolean47 = nativeArray1.has((int) (byte) -1, (com.google.javascript.rhino.head.Scriptable) nativeArray7);
        // The following exception was thrown during execution in test generation
        try {
            nativeArray7.clear();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(scriptable4);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[null]");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[hi!]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNull(scriptable41);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[]");
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 1L + "'", long46 == 1L);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test2243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2243");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        com.google.javascript.rhino.head.Scriptable scriptable18 = nativeArray9.getParentScope();
        boolean boolean19 = nativeArray9.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int24 = nativeArray22.lastIndexOf((java.lang.Object) (short) 10);
        long long25 = nativeArray22.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray22, "", true);
        boolean boolean29 = nativeArray22.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable33 = nativeArray32.getParentScope();
        java.lang.Object[] objArray34 = nativeArray32.getIds();
        boolean boolean35 = nativeArray32.isEmpty();
        boolean boolean36 = nativeArray22.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray32);
        boolean boolean38 = nativeArray32.isConst("object");
        java.lang.Object obj40 = nativeArray32.get((java.lang.Object) (byte) 10);
        com.google.javascript.rhino.head.Scriptable scriptable41 = null;
        nativeArray32.setParentScope(scriptable41);
        nativeArray9.setAttributes((-1), (com.google.javascript.rhino.head.Scriptable) nativeArray32, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray47.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray50, (java.lang.Object) (-1));
        java.lang.Object[] objArray53 = nativeArray47.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable54 = nativeArray47.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable55 = nativeArray47.getParentScope();
        boolean boolean56 = nativeArray47.isSealed();
        boolean boolean57 = nativeArray47.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray62 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray59.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray62, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray66 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray69 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray66.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray69, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray74 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray74.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj77 = nativeArray69.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray74);
        com.google.javascript.rhino.head.Callable callable80 = null;
        nativeArray69.setGetterOrSetter("hi!", 0, callable80, false);
        java.lang.Integer[] intArray83 = nativeArray69.getIndexIds();
        nativeArray62.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray69);
        java.lang.Object obj85 = nativeArray47.get((java.lang.Object) nativeArray69);
        com.google.javascript.rhino.head.NativeArray nativeArray87 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int89 = nativeArray87.lastIndexOf((java.lang.Object) (short) 10);
        long long90 = nativeArray87.getLength();
        nativeArray87.delete((int) (byte) 1);
        boolean boolean93 = nativeArray87.isExtensible();
        java.lang.Object obj95 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray87, 4);
        nativeArray32.put(0, (com.google.javascript.rhino.head.Scriptable) nativeArray47, (java.lang.Object) nativeArray87);
        boolean boolean97 = nativeArray47.isSealed();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(scriptable18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 1L + "'", long25 == 1L);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(scriptable33);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[null]");
        org.junit.Assert.assertNull(scriptable54);
        org.junit.Assert.assertNull(scriptable55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertTrue("'" + long90 + "' != '" + 1L + "'", long90 == 1L);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test2244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2244");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        java.util.ListIterator listIterator9 = nativeArray1.listIterator();
        com.google.javascript.rhino.head.Scriptable scriptable10 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.Scriptable scriptable12 = null;
        java.lang.Object obj13 = nativeArray1.get((int) ' ', scriptable12);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(listIterator9);
        org.junit.Assert.assertNull(scriptable10);
        org.junit.Assert.assertNotNull(obj13);
    }

    @Test
    public void test2245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2245");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        boolean boolean9 = nativeArray1.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int13 = nativeArray11.lastIndexOf((java.lang.Object) (short) 10);
        long long14 = nativeArray11.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray11, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable18 = null;
        java.lang.Object[] objArray19 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable18);
        java.lang.Object[] objArray20 = nativeArray11.toArray(objArray19);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray(objArray20);
        java.lang.Object obj22 = nativeArray1.getAssociatedValue((java.lang.Object) nativeArray21);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int26 = nativeArray24.lastIndexOf((java.lang.Object) (short) 10);
        long long27 = nativeArray24.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray24, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray32.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray35, (java.lang.Object) (-1));
        java.lang.Object[] objArray38 = nativeArray32.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable39 = nativeArray32.getParentScope();
        boolean boolean40 = nativeArray24.containsAll((java.util.Collection) nativeArray32);
        com.google.javascript.rhino.head.Scriptable scriptable41 = nativeArray32.getParentScope();
        boolean boolean42 = nativeArray32.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable46 = nativeArray45.getParentScope();
        java.lang.Object[] objArray47 = nativeArray45.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int52 = nativeArray50.lastIndexOf((java.lang.Object) (short) 10);
        long long53 = nativeArray50.getLength();
        nativeArray50.delete((int) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int60 = nativeArray58.lastIndexOf((java.lang.Object) (short) 10);
        long long61 = nativeArray58.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray58, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray66 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray69 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray66.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray69, (java.lang.Object) (-1));
        java.lang.Object[] objArray72 = nativeArray66.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable73 = nativeArray66.getParentScope();
        boolean boolean74 = nativeArray58.containsAll((java.util.Collection) nativeArray66);
        com.google.javascript.rhino.head.NativeArray nativeArray76 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray79 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray76.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray79, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray84 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray84.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj87 = nativeArray79.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray84);
        boolean boolean88 = nativeArray79.hasPrototypeMap();
        java.lang.Object[] objArray89 = nativeArray79.getIds();
        java.lang.Object[] objArray90 = nativeArray66.toArray(objArray89);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray50, "Array", (java.lang.Object) nativeArray66);
        boolean boolean92 = nativeArray45.has(0, (com.google.javascript.rhino.head.Scriptable) nativeArray50);
        boolean boolean93 = nativeArray32.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray45);
        boolean boolean95 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray32, "");
        com.google.javascript.rhino.head.Scriptable scriptable97 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray32, "Array");
        boolean boolean98 = nativeArray21.containsAll((java.util.Collection) nativeArray32);
        long long99 = nativeArray32.jsGet_length();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[null]");
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 1L + "'", long27 == 1L);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[null]");
        org.junit.Assert.assertNull(scriptable39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(scriptable41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(scriptable46);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[length]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 1L + "'", long53 == 1L);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 1L + "'", long61 == 1L);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[null]");
        org.junit.Assert.assertNull(scriptable73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(objArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray89), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray89), "[null]");
        org.junit.Assert.assertNotNull(objArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray90), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray90), "[null]");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNull(scriptable97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
        org.junit.Assert.assertTrue("'" + long99 + "' != '" + 1L + "'", long99 == 1L);
    }

    @Test
    public void test2246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2246");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray7 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray4.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray7, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj15 = nativeArray7.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray12);
        com.google.javascript.rhino.head.Callable callable18 = null;
        nativeArray7.setGetterOrSetter("hi!", 0, callable18, false);
        nativeArray1.setAttributes((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray7, (int) (short) 10);
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int27 = nativeArray25.lastIndexOf((java.lang.Object) (short) 10);
        long long28 = nativeArray25.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray25, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable32 = null;
        java.lang.Object[] objArray33 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable32);
        java.lang.Object[] objArray34 = nativeArray25.toArray(objArray33);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int39 = nativeArray37.lastIndexOf((java.lang.Object) (short) 10);
        long long40 = nativeArray37.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray37, "", true);
        boolean boolean44 = nativeArray37.hasPrototypeMap();
        int int45 = nativeArray37.size();
        boolean boolean46 = nativeArray37.isEmpty();
        boolean boolean48 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray37, "Array");
        java.lang.Object obj49 = nativeArray25.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        java.lang.Object obj50 = nativeArray1.get("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray25);
        com.google.javascript.rhino.head.NativeArray nativeArray52 = new com.google.javascript.rhino.head.NativeArray((long) 2);
        java.lang.Object obj53 = nativeArray1.get((java.lang.Object) nativeArray52);
        nativeArray1.activatePrototypeMap(2);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 1L + "'", long28 == 1L);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[null]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 1L + "'", long40 == 1L);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNull(obj53);
    }

    @Test
    public void test2247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2247");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        java.lang.reflect.Method method11 = null;
        java.lang.reflect.Method method12 = null;
        nativeArray1.defineProperty("hi!", (java.lang.Object) (-1L), method11, method12, (int) (byte) 10);
        boolean boolean16 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        nativeArray1.setAttributes("hi!", (int) (byte) 0);
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray22.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray25, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.Scriptable scriptable28 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray22);
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray31.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray34, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray39.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray42, (java.lang.Object) (-1));
        nativeArray31.put((int) (byte) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray39, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.NativeArray nativeArray49 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray52 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray49.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray52, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray57 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray57.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj60 = nativeArray52.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray57);
        boolean boolean61 = nativeArray52.hasPrototypeMap();
        java.lang.Object[] objArray62 = nativeArray52.getIds();
        int int63 = nativeArray52.size();
        boolean boolean64 = nativeArray31.has((int) (short) 100, (com.google.javascript.rhino.head.Scriptable) nativeArray52);
        com.google.javascript.rhino.head.IdFunctionObject idFunctionObject66 = nativeArray22.exportAsJSClass(10, (com.google.javascript.rhino.head.Scriptable) nativeArray52, false);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", (java.lang.Object) nativeArray52);
        java.util.Iterator iterator68 = nativeArray52.iterator();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(scriptable28);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[hi!]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(idFunctionObject66);
        org.junit.Assert.assertNotNull(iterator68);
    }

    @Test
    public void test2248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2248");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        java.lang.Integer[] intArray7 = nativeArray1.getIndexIds();
        java.lang.Object obj9 = null;
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!", obj9);
        java.lang.Object obj12 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray1, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int16 = nativeArray14.lastIndexOf((java.lang.Object) (short) 10);
        long long17 = nativeArray14.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray14, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable21 = null;
        java.lang.Object[] objArray22 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable21);
        java.lang.Object[] objArray23 = nativeArray14.toArray(objArray22);
        com.google.javascript.rhino.head.Scriptable scriptable24 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray14);
        boolean boolean25 = nativeArray1.contains((java.lang.Object) nativeArray14);
        com.google.javascript.rhino.head.Scriptable scriptable26 = nativeArray1.getPrototype();
        com.google.javascript.rhino.head.Scriptable scriptable27 = nativeArray1.getParentScope();
        java.lang.Object obj28 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean29 = nativeArray1.add(obj28);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 1L + "'", long17 == 1L);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[null]");
        org.junit.Assert.assertNotNull(scriptable24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(scriptable26);
        org.junit.Assert.assertNull(scriptable27);
    }

    @Test
    public void test2249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2249");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray7 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray4.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray7, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj15 = nativeArray7.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray12);
        com.google.javascript.rhino.head.Callable callable18 = null;
        nativeArray7.setGetterOrSetter("hi!", 0, callable18, false);
        nativeArray1.setAttributes((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray7, (int) (short) 10);
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray28, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray33.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray36, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray41.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj44 = nativeArray36.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray41);
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int49 = nativeArray47.lastIndexOf((java.lang.Object) (short) 10);
        long long50 = nativeArray47.getLength();
        nativeArray47.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray41, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray56.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray59, (java.lang.Object) (-1));
        java.lang.Object[] objArray62 = nativeArray56.getAllIds();
        nativeArray56.delete("");
        java.lang.Object obj65 = nativeArray41.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray56);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray41, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable68 = nativeArray41.getPrototype();
        com.google.javascript.rhino.head.Context context69 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray71 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int73 = nativeArray71.lastIndexOf((java.lang.Object) (short) 10);
        long long74 = nativeArray71.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray71, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray79 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray82 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray79.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray82, (java.lang.Object) (-1));
        java.lang.Object[] objArray85 = nativeArray79.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable86 = nativeArray79.getParentScope();
        boolean boolean87 = nativeArray71.containsAll((java.util.Collection) nativeArray79);
        nativeArray41.defineOwnProperties(context69, (com.google.javascript.rhino.head.ScriptableObject) nativeArray71);
        nativeArray25.setAttributes(1, (com.google.javascript.rhino.head.Scriptable) nativeArray41, (int) (short) 10);
        java.lang.String str91 = nativeArray25.getTypeOf();
        java.lang.Object obj93 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray25, (int) (short) -1);
        nativeArray7.setAttributes((int) '4', (com.google.javascript.rhino.head.Scriptable) nativeArray25, 8);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 1L + "'", long50 == 1L);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[length]");
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNull(scriptable68);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 1L + "'", long74 == 1L);
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray85), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray85), "[null]");
        org.junit.Assert.assertNull(scriptable86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "object" + "'", str91, "object");
        org.junit.Assert.assertNotNull(obj93);
    }

    @Test
    public void test2250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2250");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable8 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        boolean boolean9 = nativeArray1.isSealed();
        boolean boolean10 = nativeArray1.isExtensible();
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[null]");
        org.junit.Assert.assertNull(scriptable8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test2251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2251");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        boolean boolean12 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array");
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray15, "", true);
        boolean boolean22 = nativeArray15.hasPrototypeMap();
        java.util.ListIterator listIterator23 = nativeArray15.listIterator();
        boolean boolean24 = nativeArray1.has("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray15);
        boolean boolean25 = nativeArray1.hasPrototypeMap();
        java.lang.Object[] objArray26 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray32, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray37.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj40 = nativeArray32.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int45 = nativeArray43.lastIndexOf((java.lang.Object) (short) 10);
        long long46 = nativeArray43.getLength();
        nativeArray43.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray37, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray52 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray52.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray55, (java.lang.Object) (-1));
        java.lang.Object[] objArray58 = nativeArray52.getAllIds();
        nativeArray52.delete("");
        java.lang.Object obj61 = nativeArray37.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray52);
        com.google.javascript.rhino.head.Scriptable scriptable62 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray52);
        com.google.javascript.rhino.head.Scriptable scriptable63 = nativeArray52.getPrototype();
        com.google.javascript.rhino.head.NativeArray nativeArray65 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray68 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray68, "", (java.lang.Object) 100);
        java.lang.Object obj72 = nativeArray65.associateValue((java.lang.Object) ' ', (java.lang.Object) nativeArray68);
        boolean boolean74 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray68, "");
        // The following exception was thrown during execution in test generation
        try {
            nativeArray1.putConst("object", scriptable63, (java.lang.Object) nativeArray68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(listIterator23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 1L + "'", long46 == 1L);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[length]");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(scriptable62);
        org.junit.Assert.assertNull(scriptable63);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
    }

    @Test
    public void test2252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2252");
        com.google.javascript.rhino.head.Scriptable scriptable0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj2 = com.google.javascript.rhino.head.ScriptableObject.getProperty(scriptable0, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2253");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.getAllIds();
        nativeArray24.delete("");
        java.lang.Object obj33 = nativeArray9.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!");
        nativeArray9.delete("Array");
        boolean boolean38 = nativeArray9.isExtensible();
        java.lang.String str39 = nativeArray9.getClassName();
        com.google.javascript.rhino.head.Scriptable scriptable41 = null;
        java.lang.Object obj42 = nativeArray9.get((int) (short) 10, scriptable41);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean44 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty(scriptable41, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Array" + "'", str39, "Array");
        org.junit.Assert.assertNotNull(obj42);
    }

    @Test
    public void test2254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2254");
        com.google.javascript.rhino.head.Scriptable scriptable0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj2 = com.google.javascript.rhino.head.ScriptableObject.getProperty(scriptable0, "object");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2255");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray7 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray4.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray7, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj15 = nativeArray7.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray12);
        com.google.javascript.rhino.head.Callable callable18 = null;
        nativeArray7.setGetterOrSetter("hi!", 0, callable18, false);
        nativeArray1.setAttributes((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray7, (int) (short) 10);
        boolean boolean23 = nativeArray7.hasPrototypeMap();
        boolean boolean24 = nativeArray7.isSealed();
        com.google.javascript.rhino.head.Scriptable scriptable26 = null;
        java.lang.Object obj27 = nativeArray7.get("object", scriptable26);
        boolean boolean28 = nativeArray7.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray30.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray33, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.Scriptable scriptable36 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray30);
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray38.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray41, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.Scriptable scriptable44 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray38);
        nativeArray30.setPrototype(scriptable44);
        int int46 = nativeArray30.size();
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int50 = nativeArray48.lastIndexOf((java.lang.Object) (short) 10);
        long long51 = nativeArray48.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray48, "", true);
        boolean boolean55 = nativeArray48.hasPrototypeMap();
        com.google.javascript.rhino.head.Scriptable scriptable56 = nativeArray48.getParentScope();
        boolean boolean57 = nativeArray30.containsAll((java.util.Collection) nativeArray48);
        java.lang.Object obj58 = nativeArray7.getAssociatedValue((java.lang.Object) nativeArray30);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(scriptable36);
        org.junit.Assert.assertNull(scriptable44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 1L + "'", long51 == 1L);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(scriptable56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(obj58);
    }

    @Test
    public void test2256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2256");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj38 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        java.lang.Object[] objArray39 = nativeArray4.getIds();
        java.lang.Integer[] intArray40 = nativeArray4.getIndexIds();
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray43.activatePrototypeMap((int) (short) 100);
        boolean boolean47 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray43, "hi!");
        long long48 = nativeArray43.jsGet_length();
        boolean boolean49 = nativeArray4.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray43);
        com.google.javascript.rhino.head.Scriptable scriptable50 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray43);
        com.google.javascript.rhino.head.NativeArray nativeArray53 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray53.activatePrototypeMap((int) (short) 100);
        boolean boolean56 = nativeArray43.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray53);
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int61 = nativeArray59.lastIndexOf((java.lang.Object) (short) 10);
        long long62 = nativeArray59.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray59, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray67 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray70 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray67.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray70, (java.lang.Object) (-1));
        java.lang.Object[] objArray73 = nativeArray67.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable74 = nativeArray67.getParentScope();
        boolean boolean75 = nativeArray59.containsAll((java.util.Collection) nativeArray67);
        com.google.javascript.rhino.head.NativeArray nativeArray78 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int80 = nativeArray78.lastIndexOf((java.lang.Object) (short) 10);
        long long81 = nativeArray78.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray78, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable85 = null;
        java.lang.Object[] objArray86 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable85);
        java.lang.Object[] objArray87 = nativeArray78.toArray(objArray86);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray59, "hi!", (java.lang.Object) objArray86);
        int int89 = nativeArray59.size();
        nativeArray59.activatePrototypeMap((int) (byte) 10);
        java.lang.Object obj93 = null;
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray59, "Array", obj93, 8);
        java.lang.Integer[] intArray96 = nativeArray59.getIndexIds();
        nativeArray53.defineProperty("", (java.lang.Object) nativeArray59, (int) (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[hi!]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 1L + "'", long48 == 1L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(scriptable50);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 1L + "'", long62 == 1L);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[null]");
        org.junit.Assert.assertNull(scriptable74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + 1L + "'", long81 == 1L);
        org.junit.Assert.assertNotNull(objArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray86), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray86), "[]");
        org.junit.Assert.assertNotNull(objArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray87), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray87), "[null]");
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 1 + "'", int89 == 1);
        org.junit.Assert.assertNotNull(intArray96);
    }

    @Test
    public void test2257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2257");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable11 = nativeArray10.getParentScope();
        java.lang.Object[] objArray12 = nativeArray10.getIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", (java.lang.Object) nativeArray10, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray20, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj28 = nativeArray20.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray25);
        boolean boolean29 = nativeArray20.hasPrototypeMap();
        java.lang.Object[] objArray30 = nativeArray20.getIds();
        int int31 = nativeArray20.size();
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int35 = nativeArray33.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray20.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray33);
        java.lang.Object obj37 = nativeArray1.get((int) (short) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray33);
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        java.lang.Object obj42 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray40, "Array");
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray44.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray47, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray52 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray52.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj55 = nativeArray47.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray52);
        boolean boolean56 = nativeArray47.hasPrototypeMap();
        java.lang.Object[] objArray57 = nativeArray47.getIds();
        int int58 = nativeArray47.size();
        com.google.javascript.rhino.head.NativeArray nativeArray61 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray61.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray64, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray69 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray69.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj72 = nativeArray64.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray69);
        boolean boolean73 = nativeArray64.hasPrototypeMap();
        java.lang.Object[] objArray74 = nativeArray64.getIds();
        int int75 = nativeArray64.size();
        com.google.javascript.rhino.head.NativeArray nativeArray77 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int79 = nativeArray77.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray64.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray77);
        java.lang.Object obj81 = nativeArray47.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray64);
        java.lang.Object[] objArray82 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray47);
        boolean boolean84 = nativeArray47.isConst("hi!");
        int int85 = nativeArray40.indexOf((java.lang.Object) boolean84);
        nativeArray1.setAttributes(1, (com.google.javascript.rhino.head.Scriptable) nativeArray40, 4);
        java.lang.Object[] objArray88 = nativeArray40.getAllIds();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj92 = nativeArray40.getGetterOrSetter("", 13, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(scriptable11);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[hi!]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[hi!]");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray82), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray82), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertNotNull(objArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray88), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray88), "[length]");
    }

    @Test
    public void test2258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2258");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.getAllIds();
        nativeArray1.delete("");
        java.lang.Object[] objArray10 = nativeArray1.getIds();
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int14 = nativeArray12.lastIndexOf((java.lang.Object) (short) 10);
        long long15 = nativeArray12.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray12, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray20.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray23, (java.lang.Object) (-1));
        java.lang.Object[] objArray26 = nativeArray20.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable27 = nativeArray20.getParentScope();
        boolean boolean28 = nativeArray12.containsAll((java.util.Collection) nativeArray20);
        com.google.javascript.rhino.head.Scriptable scriptable29 = nativeArray20.getParentScope();
        boolean boolean30 = nativeArray20.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable34 = nativeArray33.getParentScope();
        java.lang.Object[] objArray35 = nativeArray33.getIds();
        boolean boolean36 = nativeArray20.has("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray33);
        java.lang.Integer[] intArray37 = nativeArray20.getIndexIds();
        int int38 = nativeArray1.indexOf((java.lang.Object) nativeArray20);
        nativeArray20.delete("hi!");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[length]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 1L + "'", long15 == 1L);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[null]");
        org.junit.Assert.assertNull(scriptable27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(scriptable29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(scriptable34);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
    }

    @Test
    public void test2259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2259");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable12 = nativeArray11.getParentScope();
        java.lang.Object[] objArray13 = nativeArray11.getIds();
        boolean boolean14 = nativeArray11.isEmpty();
        boolean boolean15 = nativeArray1.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray11);
        boolean boolean17 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray19.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray22, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray27.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray30, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray35.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj38 = nativeArray30.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray35);
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int43 = nativeArray41.lastIndexOf((java.lang.Object) (short) 10);
        long long44 = nativeArray41.getLength();
        nativeArray41.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray35, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray53 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray50.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray53, (java.lang.Object) (-1));
        java.lang.Object[] objArray56 = nativeArray50.getAllIds();
        nativeArray50.delete("");
        java.lang.Object obj59 = nativeArray35.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray50);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray35, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable62 = nativeArray35.getPrototype();
        com.google.javascript.rhino.head.Context context63 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray65 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int67 = nativeArray65.lastIndexOf((java.lang.Object) (short) 10);
        long long68 = nativeArray65.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray65, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray73 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray76 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray73.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray76, (java.lang.Object) (-1));
        java.lang.Object[] objArray79 = nativeArray73.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable80 = nativeArray73.getParentScope();
        boolean boolean81 = nativeArray65.containsAll((java.util.Collection) nativeArray73);
        nativeArray35.defineOwnProperties(context63, (com.google.javascript.rhino.head.ScriptableObject) nativeArray65);
        nativeArray19.setAttributes(1, (com.google.javascript.rhino.head.Scriptable) nativeArray35, (int) (short) 10);
        java.lang.String str85 = nativeArray19.getTypeOf();
        java.lang.Object obj87 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray19, (int) (short) -1);
        nativeArray19.delete((int) ' ');
        // The following exception was thrown during execution in test generation
        try {
            nativeArray1.initPrototypeMethod((java.lang.Object) nativeArray19, (int) '4', "object", (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(scriptable12);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 1L + "'", long44 == 1L);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[length]");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNull(scriptable62);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 1L + "'", long68 == 1L);
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[null]");
        org.junit.Assert.assertNull(scriptable80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "object" + "'", str85, "object");
        org.junit.Assert.assertNotNull(obj87);
    }

    @Test
    public void test2260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2260");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        nativeArray9.delete("Array");
        boolean boolean21 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, (int) 'a');
        int int22 = nativeArray9.size();
        long long23 = nativeArray9.getLength();
        boolean boolean24 = nativeArray9.isSealed();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1L + "'", long23 == 1L);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test2261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2261");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.activatePrototypeMap((int) (short) 100);
        java.util.Iterator iterator4 = nativeArray1.iterator();
        boolean boolean5 = nativeArray1.hasPrototypeMap();
        boolean boolean7 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray15, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray20.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj23 = nativeArray15.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray20);
        boolean boolean24 = nativeArray15.hasPrototypeMap();
        java.lang.Object[] objArray25 = nativeArray15.getIds();
        int int26 = nativeArray15.size();
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray32, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray37.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj40 = nativeArray32.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        boolean boolean41 = nativeArray32.hasPrototypeMap();
        java.lang.Object[] objArray42 = nativeArray32.getIds();
        int int43 = nativeArray32.size();
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int47 = nativeArray45.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray32.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray45);
        java.lang.Object obj49 = nativeArray15.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray32);
        java.lang.Object[] objArray50 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray15);
        boolean boolean52 = nativeArray15.isConst("hi!");
        nativeArray10.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray15);
        java.lang.Object obj54 = nativeArray1.get((int) (short) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray15);
        com.google.javascript.rhino.head.NativeArray nativeArray57 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray57.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray60, (java.lang.Object) (-1));
        java.lang.Object[] objArray63 = nativeArray57.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray(objArray63);
        java.lang.Object obj65 = nativeArray1.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray64);
        com.google.javascript.rhino.head.NativeArray nativeArray67 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int69 = nativeArray67.lastIndexOf((java.lang.Object) (short) 10);
        long long70 = nativeArray67.getLength();
        nativeArray67.delete((int) (byte) 1);
        boolean boolean74 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray67, "");
        java.lang.Object obj75 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray1, (java.lang.Object) "");
        org.junit.Assert.assertNotNull(iterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[hi!]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[hi!]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[null]");
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 1L + "'", long70 == 1L);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(obj75);
    }

    @Test
    public void test2262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2262");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List list11 = nativeArray1.subList((int) (byte) 100, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test2263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2263");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        boolean boolean12 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array");
        boolean boolean14 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 10);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test2264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2264");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.getAllIds();
        nativeArray1.delete("");
        long long10 = nativeArray1.getLength();
        boolean boolean12 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, (int) (short) 10);
        nativeArray1.delete(2);
        com.google.javascript.rhino.head.Scriptable scriptable15 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        boolean boolean16 = nativeArray1.isExtensible();
        nativeArray1.delete((int) (short) 0);
        java.lang.Object[] objArray19 = nativeArray1.toArray();
        nativeArray1.delete("");
        java.lang.Object[] objArray22 = nativeArray1.toArray();
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[length]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(scriptable15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[null]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[null]");
    }

    @Test
    public void test2265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2265");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object obj8 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "hi!");
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray11.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray14, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray19.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj22 = nativeArray14.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray19);
        boolean boolean23 = nativeArray14.hasPrototypeMap();
        java.lang.Object[] objArray24 = nativeArray14.getIds();
        int int25 = nativeArray14.size();
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray28.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray31, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray36.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj39 = nativeArray31.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray36);
        boolean boolean40 = nativeArray31.hasPrototypeMap();
        java.lang.Object[] objArray41 = nativeArray31.getIds();
        int int42 = nativeArray31.size();
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int46 = nativeArray44.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray31.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray44);
        java.lang.Object obj48 = nativeArray14.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray31);
        boolean boolean49 = nativeArray31.isSealed();
        boolean boolean50 = nativeArray31.hasPrototypeMap();
        boolean boolean51 = nativeArray4.has(100, (com.google.javascript.rhino.head.Scriptable) nativeArray31);
        com.google.javascript.rhino.head.NativeArray nativeArray54 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray57 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray54.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray57, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray62 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray62.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj65 = nativeArray57.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray62);
        boolean boolean66 = nativeArray57.hasPrototypeMap();
        java.lang.Object[] objArray67 = nativeArray57.getIds();
        int int68 = nativeArray57.size();
        com.google.javascript.rhino.head.NativeArray nativeArray70 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int72 = nativeArray70.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray57.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray70);
        nativeArray57.setAttributes("hi!", 2);
        com.google.javascript.rhino.head.Scriptable scriptable77 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray57);
        java.lang.Object obj78 = nativeArray31.get("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray57);
        // The following exception was thrown during execution in test generation
        try {
            nativeArray31.clear();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + (-1) + "'", obj8, (-1));
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[hi!]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[hi!]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[hi!]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNull(scriptable77);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + (-1) + "'", obj78, (-1));
    }

    @Test
    public void test2266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2266");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj38 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        boolean boolean39 = nativeArray4.isExtensible();
        boolean boolean41 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, 5);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test2267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2267");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        com.google.javascript.rhino.head.Scriptable scriptable8 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.Scriptable scriptable9 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype(scriptable8);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(scriptable8);
        org.junit.Assert.assertNull(scriptable9);
    }

    @Test
    public void test2268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2268");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable12 = nativeArray11.getParentScope();
        java.lang.Object[] objArray13 = nativeArray11.getIds();
        boolean boolean14 = nativeArray11.isEmpty();
        boolean boolean15 = nativeArray1.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray11);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray11, "", false);
        java.lang.Object[] objArray19 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray11);
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray22.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray25, (java.lang.Object) (-1));
        java.lang.Object[] objArray28 = nativeArray22.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable29 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray22);
        nativeArray22.setAttributes((int) (short) 0, 2);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray11, "object", (java.lang.Object) 2);
        com.google.javascript.rhino.head.Scriptable scriptable34 = nativeArray11.getParentScope();
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray37.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray40, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray45.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj48 = nativeArray40.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray45);
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int53 = nativeArray51.lastIndexOf((java.lang.Object) (short) 10);
        long long54 = nativeArray51.getLength();
        nativeArray51.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray45, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray63 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray60.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray63, (java.lang.Object) (-1));
        java.lang.Object[] objArray66 = nativeArray60.getAllIds();
        nativeArray60.delete("");
        java.lang.Object obj69 = nativeArray45.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray60);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray45, "hi!");
        com.google.javascript.rhino.head.Context context72 = null;
        com.google.javascript.rhino.head.Scriptable scriptable73 = null;
        java.lang.Object[] objArray74 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable73);
        com.google.javascript.rhino.head.NativeArray nativeArray76 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray79 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray76.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray79, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray84 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray84.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj87 = nativeArray79.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray84);
        com.google.javascript.rhino.head.Callable callable90 = null;
        nativeArray79.setGetterOrSetter("hi!", 0, callable90, false);
        com.google.javascript.rhino.head.Scriptable scriptable93 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray79);
        nativeArray45.defineOwnProperty(context72, (java.lang.Object) scriptable73, (com.google.javascript.rhino.head.ScriptableObject) nativeArray79);
        boolean boolean95 = nativeArray45.avoidObjectDetection();
        java.lang.String str96 = nativeArray45.getClassName();
        nativeArray45.preventExtensions();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean98 = nativeArray11.addAll((int) (byte) 0, (java.util.Collection) nativeArray45);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(scriptable12);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[null]");
        org.junit.Assert.assertNull(scriptable29);
        org.junit.Assert.assertNull(scriptable34);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 1L + "'", long54 == 1L);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[length]");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[]");
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNull(scriptable93);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "Array" + "'", str96, "Array");
    }

    @Test
    public void test2269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2269");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.activatePrototypeMap((int) (short) 100);
        java.util.Iterator iterator4 = nativeArray1.iterator();
        boolean boolean5 = nativeArray1.hasPrototypeMap();
        int int6 = nativeArray1.size();
        com.google.javascript.rhino.head.Scriptable scriptable8 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array");
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean10 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty(scriptable8, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(iterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNull(scriptable8);
    }

    @Test
    public void test2270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2270");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.getAllIds();
        nativeArray24.delete("");
        java.lang.Object obj33 = nativeArray9.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!");
        nativeArray9.delete("Array");
        com.google.javascript.rhino.head.Scriptable scriptable38 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray41.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray44, (java.lang.Object) (-1));
        java.lang.Object[] objArray47 = nativeArray41.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable48 = nativeArray41.getParentScope();
        com.google.javascript.rhino.head.Context context49 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray54 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray51.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray54, (java.lang.Object) (-1));
        java.lang.Object[] objArray57 = nativeArray51.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable58 = nativeArray51.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable59 = nativeArray51.getParentScope();
        java.util.ListIterator listIterator60 = nativeArray51.listIterator();
        nativeArray41.defineOwnProperties(context49, (com.google.javascript.rhino.head.ScriptableObject) nativeArray51);
        com.google.javascript.rhino.head.NativeArray nativeArray63 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray66 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray69 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray66.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray69, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray74 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray74.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj77 = nativeArray69.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray74);
        com.google.javascript.rhino.head.Callable callable80 = null;
        nativeArray69.setGetterOrSetter("hi!", 0, callable80, false);
        nativeArray63.setAttributes((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray69, (int) (short) 10);
        boolean boolean85 = nativeArray69.hasPrototypeMap();
        boolean boolean86 = nativeArray69.isSealed();
        com.google.javascript.rhino.head.Scriptable scriptable88 = null;
        java.lang.Object obj89 = nativeArray69.get("object", scriptable88);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray41, (java.lang.Object) "object");
        com.google.javascript.rhino.head.NativeArray nativeArray93 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray93.activatePrototypeMap((int) (short) 100);
        java.util.Iterator iterator96 = nativeArray93.iterator();
        boolean boolean97 = nativeArray93.avoidObjectDetection();
        boolean boolean98 = nativeArray93.isEmpty();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj99 = nativeArray9.set((int) (short) 1, (java.lang.Object) nativeArray93);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNull(scriptable38);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[null]");
        org.junit.Assert.assertNull(scriptable48);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[null]");
        org.junit.Assert.assertNull(scriptable58);
        org.junit.Assert.assertNull(scriptable59);
        org.junit.Assert.assertNotNull(listIterator60);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(iterator96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
    }

    @Test
    public void test2271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2271");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable11 = nativeArray10.getParentScope();
        java.lang.Object[] objArray12 = nativeArray10.getIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", (java.lang.Object) nativeArray10, 0);
        nativeArray1.setAttributes("hi!", 10);
        boolean boolean18 = nativeArray1.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int23 = nativeArray21.lastIndexOf((java.lang.Object) (short) 10);
        long long24 = nativeArray21.getLength();
        nativeArray21.delete((int) (byte) 1);
        boolean boolean27 = nativeArray21.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable31 = nativeArray30.getParentScope();
        java.lang.Object[] objArray32 = nativeArray30.getIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray21, "", (java.lang.Object) nativeArray30, 0);
        java.lang.Object[] objArray35 = nativeArray21.toArray();
        nativeArray21.preventExtensions();
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "object", (java.lang.Object) nativeArray21);
        nativeArray21.setAttributes("object", (int) (short) 0);
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray45, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray50.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj53 = nativeArray45.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray50);
        com.google.javascript.rhino.head.Callable callable56 = null;
        nativeArray45.setGetterOrSetter("hi!", 0, callable56, false);
        java.lang.Integer[] intArray59 = nativeArray45.getIndexIds();
        java.lang.Object[] objArray60 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray45);
        java.lang.Object[] objArray61 = nativeArray21.toArray(objArray60);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(scriptable11);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 1L + "'", long24 == 1L);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(scriptable31);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[null]");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[null]");
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[null]");
    }

    @Test
    public void test2272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2272");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        java.lang.Integer[] intArray7 = nativeArray1.getIndexIds();
        java.lang.Object obj9 = null;
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!", obj9);
        boolean boolean12 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 8);
        java.lang.Object[] objArray13 = nativeArray1.getAllIds();
        java.lang.String str14 = nativeArray1.getClassName();
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int18 = nativeArray16.lastIndexOf((java.lang.Object) (short) 10);
        long long19 = nativeArray16.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray16, "", true);
        boolean boolean23 = nativeArray16.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable27 = nativeArray26.getParentScope();
        java.lang.Object[] objArray28 = nativeArray26.getIds();
        boolean boolean29 = nativeArray26.isEmpty();
        boolean boolean30 = nativeArray16.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        java.lang.Object[] objArray31 = nativeArray16.getIds();
        java.lang.Object[] objArray32 = nativeArray16.getAllIds();
        int int33 = nativeArray1.indexOf((java.lang.Object) nativeArray16);
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int37 = nativeArray35.lastIndexOf((java.lang.Object) (short) 10);
        long long38 = nativeArray35.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray35, "", true);
        boolean boolean42 = nativeArray35.hasPrototypeMap();
        com.google.javascript.rhino.head.Scriptable scriptable44 = null;
        java.lang.Object obj45 = nativeArray35.get((int) '#', scriptable44);
        boolean boolean46 = nativeArray1.contains((java.lang.Object) scriptable44);
        java.lang.Object[] objArray47 = nativeArray1.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray53 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray50.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray53, (java.lang.Object) (-1));
        java.lang.Object[] objArray56 = nativeArray50.getAllIds();
        java.lang.String str57 = nativeArray50.getTypeOf();
        com.google.javascript.rhino.head.IdFunctionObject idFunctionObject59 = nativeArray1.exportAsJSClass(1, (com.google.javascript.rhino.head.Scriptable) nativeArray50, false);
        com.google.javascript.rhino.head.NativeArray nativeArray62 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable63 = nativeArray62.getParentScope();
        java.lang.Object[] objArray64 = nativeArray62.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray66 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray69 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray66.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray69, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray74 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray74.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj77 = nativeArray69.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray74);
        java.lang.Object obj78 = nativeArray62.getAssociatedValue((java.lang.Object) nativeArray69);
        nativeArray69.preventExtensions();
        boolean boolean81 = nativeArray69.isConst("hi!");
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray50, "Array", (java.lang.Object) "hi!", (int) (short) 1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[hi!, length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[hi!, length]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Array" + "'", str14, "Array");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 1L + "'", long19 == 1L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(scriptable27);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[length]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 1L + "'", long38 == 1L);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[hi!, length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[hi!, length]");
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[length]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "object" + "'", str57, "object");
        org.junit.Assert.assertNotNull(idFunctionObject59);
        org.junit.Assert.assertNull(scriptable63);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[length]");
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNull(obj78);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test2273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2273");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray8.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray11, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray16.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj19 = nativeArray11.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray16);
        com.google.javascript.rhino.head.Callable callable22 = null;
        nativeArray11.setGetterOrSetter("hi!", 0, callable22, false);
        java.lang.Integer[] intArray25 = nativeArray11.getIndexIds();
        nativeArray4.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray11);
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int30 = nativeArray28.lastIndexOf((java.lang.Object) (short) 10);
        long long31 = nativeArray28.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray28, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray36.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray39, (java.lang.Object) (-1));
        java.lang.Object[] objArray42 = nativeArray36.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable43 = nativeArray36.getParentScope();
        boolean boolean44 = nativeArray28.containsAll((java.util.Collection) nativeArray36);
        nativeArray36.delete("Array");
        java.lang.Object obj47 = nativeArray4.getAssociatedValue((java.lang.Object) nativeArray36);
        nativeArray36.activatePrototypeMap(13);
        // The following exception was thrown during execution in test generation
        try {
            int int51 = nativeArray36.getAttributes(1);
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EvaluatorException; message: Property 1 not found.");
        } catch (com.google.javascript.rhino.head.EvaluatorException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 1L + "'", long31 == 1L);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[null]");
        org.junit.Assert.assertNull(scriptable43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(obj47);
    }

    @Test
    public void test2274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2274");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object obj10 = nativeArray4.getGetterOrSetter("object", (int) (short) 0, true);
        nativeArray4.setAttributes((int) (short) -1, 4);
        boolean boolean14 = nativeArray4.avoidObjectDetection();
        boolean boolean16 = nativeArray4.isConst("Array");
        java.lang.Class<?> wildcardClass17 = nativeArray4.getClass();
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test2275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2275");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.getAllIds();
        nativeArray24.delete("");
        java.lang.Object obj33 = nativeArray9.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable36 = nativeArray9.getPrototype();
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int40 = nativeArray38.lastIndexOf((java.lang.Object) (short) 10);
        long long41 = nativeArray38.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray38, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray49 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray46.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray49, (java.lang.Object) (-1));
        java.lang.Object[] objArray52 = nativeArray46.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable53 = nativeArray46.getParentScope();
        boolean boolean54 = nativeArray38.containsAll((java.util.Collection) nativeArray46);
        nativeArray46.delete("Array");
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int61 = nativeArray59.lastIndexOf((java.lang.Object) (short) 10);
        long long62 = nativeArray59.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray59, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray67 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray70 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray67.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray70, (java.lang.Object) (-1));
        java.lang.Object[] objArray73 = nativeArray67.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable74 = nativeArray67.getParentScope();
        boolean boolean75 = nativeArray59.containsAll((java.util.Collection) nativeArray67);
        com.google.javascript.rhino.head.NativeArray nativeArray77 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray80 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray77.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray80, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray85 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray85.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj88 = nativeArray80.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray85);
        boolean boolean89 = nativeArray80.hasPrototypeMap();
        java.lang.Object[] objArray90 = nativeArray80.getIds();
        java.lang.Object[] objArray91 = nativeArray67.toArray(objArray90);
        boolean boolean93 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray67, "Array");
        com.google.javascript.rhino.head.IdFunctionObject idFunctionObject95 = nativeArray46.exportAsJSClass((int) (byte) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray67, true);
        com.google.javascript.rhino.head.Scriptable scriptable96 = nativeArray46.getPrototype();
        int int97 = nativeArray9.lastIndexOf((java.lang.Object) scriptable96);
        boolean boolean99 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!");
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNull(scriptable36);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 1L + "'", long41 == 1L);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[null]");
        org.junit.Assert.assertNull(scriptable53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 1L + "'", long62 == 1L);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[null]");
        org.junit.Assert.assertNull(scriptable74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(objArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray90), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray90), "[null]");
        org.junit.Assert.assertNotNull(objArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray91), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray91), "[null]");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(idFunctionObject95);
        org.junit.Assert.assertNull(scriptable96);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 0 + "'", int97 == 0);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test2276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2276");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        java.lang.reflect.Method method11 = null;
        java.lang.reflect.Method method12 = null;
        nativeArray1.defineProperty("hi!", (java.lang.Object) (-1L), method11, method12, (int) (byte) 10);
        boolean boolean16 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        int int17 = nativeArray1.size();
        com.google.javascript.rhino.head.Scriptable scriptable19 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        java.lang.String str20 = nativeArray1.getTypeOf();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNull(scriptable19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "object" + "'", str20, "object");
    }

    @Test
    public void test2277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2277");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.getAllIds();
        nativeArray24.delete("");
        java.lang.Object obj33 = nativeArray9.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        java.lang.Integer[] intArray34 = nativeArray24.getIndexIds();
        long long35 = nativeArray24.getLength();
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray38.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray41, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray46.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj49 = nativeArray41.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray46);
        boolean boolean50 = nativeArray41.hasPrototypeMap();
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray24, (-1), (java.lang.Object) nativeArray41);
        java.util.Collection collection52 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean53 = nativeArray41.containsAll(collection52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1L + "'", long35 == 1L);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test2278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2278");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.activatePrototypeMap((int) (short) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray6 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int8 = nativeArray6.lastIndexOf((java.lang.Object) (short) 10);
        long long9 = nativeArray6.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray6, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray14.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray17, (java.lang.Object) (-1));
        java.lang.Object[] objArray20 = nativeArray14.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable21 = nativeArray14.getParentScope();
        boolean boolean22 = nativeArray6.containsAll((java.util.Collection) nativeArray14);
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int27 = nativeArray25.lastIndexOf((java.lang.Object) (short) 10);
        long long28 = nativeArray25.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray25, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable32 = null;
        java.lang.Object[] objArray33 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable32);
        java.lang.Object[] objArray34 = nativeArray25.toArray(objArray33);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray6, "hi!", (java.lang.Object) objArray33);
        int int36 = nativeArray6.size();
        nativeArray6.activatePrototypeMap((int) (byte) 10);
        java.lang.Object obj40 = null;
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray6, "Array", obj40, 8);
        boolean boolean44 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray6, 10);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, (int) (byte) 100, (java.lang.Object) nativeArray6);
        boolean boolean47 = nativeArray6.isConst("");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 1L + "'", long9 == 1L);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[null]");
        org.junit.Assert.assertNull(scriptable21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 1L + "'", long28 == 1L);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[null]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test2279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2279");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj38 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        java.lang.Object[] objArray39 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray21);
        boolean boolean40 = nativeArray21.isSealed();
        com.google.javascript.rhino.head.Scriptable scriptable41 = nativeArray21.getPrototype();
        nativeArray21.setAttributes("object", (int) (short) 10);
        int int45 = nativeArray21.size();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(scriptable41);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
    }

    @Test
    public void test2280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2280");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int19 = nativeArray17.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray4.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray17);
        java.lang.Object[] objArray21 = nativeArray17.getAllIds();
        nativeArray17.preventExtensions();
        nativeArray17.preventExtensions();
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable27 = nativeArray26.getParentScope();
        java.lang.Object[] objArray28 = nativeArray26.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray30.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray33, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray38.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj41 = nativeArray33.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray38);
        java.lang.Object obj42 = nativeArray26.getAssociatedValue((java.lang.Object) nativeArray33);
        nativeArray33.preventExtensions();
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray49 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray46.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray49, (java.lang.Object) (-1));
        java.lang.Object[] objArray52 = nativeArray46.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable53 = nativeArray46.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable54 = nativeArray46.getParentScope();
        java.lang.Object obj55 = nativeArray33.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray46);
        com.google.javascript.rhino.head.NativeArray nativeArray57 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray57.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray60, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray65 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray65.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj68 = nativeArray60.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray65);
        com.google.javascript.rhino.head.Callable callable71 = null;
        nativeArray60.setGetterOrSetter("hi!", 0, callable71, false);
        nativeArray17.put((int) (short) 100, (com.google.javascript.rhino.head.Scriptable) nativeArray33, (java.lang.Object) "hi!");
        int int75 = nativeArray33.size();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[length]");
        org.junit.Assert.assertNull(scriptable27);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[length]");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[null]");
        org.junit.Assert.assertNull(scriptable53);
        org.junit.Assert.assertNull(scriptable54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 101 + "'", int75 == 101);
    }

    @Test
    public void test2281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2281");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj38 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        java.lang.Object[] objArray39 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray4);
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int44 = nativeArray42.lastIndexOf((java.lang.Object) (short) 10);
        long long45 = nativeArray42.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray42, "", true);
        boolean boolean49 = nativeArray42.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray54 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray51.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray54, (java.lang.Object) (-1));
        java.lang.Object[] objArray57 = nativeArray51.getAllIds();
        nativeArray51.delete("");
        boolean boolean60 = nativeArray42.contains((java.lang.Object) "");
        boolean boolean61 = nativeArray4.has("object", (com.google.javascript.rhino.head.Scriptable) nativeArray42);
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable65 = nativeArray64.getParentScope();
        java.lang.Object[] objArray66 = nativeArray64.getIds();
        boolean boolean67 = nativeArray64.isEmpty();
        nativeArray64.activatePrototypeMap(13);
        java.util.Iterator iterator70 = nativeArray64.iterator();
        nativeArray4.setAttributes((int) (short) 100, (com.google.javascript.rhino.head.Scriptable) nativeArray64, 0);
        java.lang.Object[] objArray73 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray64);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[hi!]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 1L + "'", long45 == 1L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[length]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(scriptable65);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(iterator70);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[]");
    }

    @Test
    public void test2282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2282");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.getAllIds();
        nativeArray1.delete("");
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "object");
        boolean boolean12 = nativeArray1.isSealed();
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray14.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray17, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray22.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj25 = nativeArray17.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray22);
        boolean boolean26 = nativeArray17.hasPrototypeMap();
        java.lang.Object[] objArray27 = nativeArray17.getIds();
        int int28 = nativeArray17.size();
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int32 = nativeArray30.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray17.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray30);
        java.lang.String str34 = nativeArray17.getClassName();
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray36.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray39, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray44.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj47 = nativeArray39.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray44);
        boolean boolean48 = nativeArray39.hasPrototypeMap();
        java.lang.Object[] objArray49 = nativeArray39.getIds();
        int int50 = nativeArray39.size();
        com.google.javascript.rhino.head.NativeArray nativeArray52 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray52.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray55, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray60.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj63 = nativeArray55.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray60);
        boolean boolean64 = nativeArray55.hasPrototypeMap();
        java.lang.Object[] objArray65 = nativeArray55.getIds();
        int int66 = nativeArray55.size();
        com.google.javascript.rhino.head.NativeArray nativeArray69 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray72 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray69.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray72, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray77 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray77.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj80 = nativeArray72.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray77);
        boolean boolean81 = nativeArray72.hasPrototypeMap();
        java.lang.Object[] objArray82 = nativeArray72.getIds();
        int int83 = nativeArray72.size();
        com.google.javascript.rhino.head.NativeArray nativeArray85 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int87 = nativeArray85.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray72.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray85);
        java.lang.Object obj89 = nativeArray55.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray72);
        boolean boolean90 = nativeArray39.containsAll((java.util.Collection) nativeArray72);
        com.google.javascript.rhino.head.Scriptable scriptable91 = nativeArray39.getParentScope();
        java.lang.Object[] objArray92 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray39);
        java.lang.Object[] objArray93 = nativeArray17.toArray(objArray92);
        com.google.javascript.rhino.head.NativeArray nativeArray94 = new com.google.javascript.rhino.head.NativeArray(objArray93);
        boolean boolean95 = nativeArray1.containsAll((java.util.Collection) nativeArray94);
        java.lang.Object obj97 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 4);
        int int98 = nativeArray1.size();
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[length]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[hi!]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Array" + "'", str34, "Array");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[hi!]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[hi!]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray82), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray82), "[hi!]");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNull(scriptable91);
        org.junit.Assert.assertNotNull(objArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray92), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray92), "[null]");
        org.junit.Assert.assertNotNull(objArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray93), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray93), "[null]");
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 1 + "'", int98 == 1);
    }

    @Test
    public void test2283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2283");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj20 = nativeArray12.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray17);
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int25 = nativeArray23.lastIndexOf((java.lang.Object) (short) 10);
        long long26 = nativeArray23.getLength();
        nativeArray23.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray17, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray32.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray35, (java.lang.Object) (-1));
        java.lang.Object[] objArray38 = nativeArray32.getAllIds();
        nativeArray32.delete("");
        java.lang.Object obj41 = nativeArray17.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray32);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray17, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable44 = nativeArray17.getPrototype();
        com.google.javascript.rhino.head.Context context45 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int49 = nativeArray47.lastIndexOf((java.lang.Object) (short) 10);
        long long50 = nativeArray47.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray47, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray55.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray58, (java.lang.Object) (-1));
        java.lang.Object[] objArray61 = nativeArray55.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable62 = nativeArray55.getParentScope();
        boolean boolean63 = nativeArray47.containsAll((java.util.Collection) nativeArray55);
        nativeArray17.defineOwnProperties(context45, (com.google.javascript.rhino.head.ScriptableObject) nativeArray47);
        nativeArray1.setAttributes(1, (com.google.javascript.rhino.head.Scriptable) nativeArray17, (int) (short) 10);
        java.lang.String str67 = nativeArray1.getTypeOf();
        java.lang.Object obj69 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, (int) (short) -1);
        nativeArray1.delete((int) ' ');
        java.lang.String str72 = nativeArray1.getTypeOf();
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "object");
        boolean boolean75 = nativeArray1.isEmpty();
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 1L + "'", long26 == 1L);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[length]");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNull(scriptable44);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 1L + "'", long50 == 1L);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[null]");
        org.junit.Assert.assertNull(scriptable62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "object" + "'", str67, "object");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "object" + "'", str72, "object");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test2284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2284");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable8 = nativeArray1.getParentScope();
        com.google.javascript.rhino.head.Context context9 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray11.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray14, (java.lang.Object) (-1));
        java.lang.Object[] objArray17 = nativeArray11.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable18 = nativeArray11.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable19 = nativeArray11.getParentScope();
        java.util.ListIterator listIterator20 = nativeArray11.listIterator();
        nativeArray1.defineOwnProperties(context9, (com.google.javascript.rhino.head.ScriptableObject) nativeArray11);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int26 = nativeArray24.lastIndexOf((java.lang.Object) (short) 10);
        long long27 = nativeArray24.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray24, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray32.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray35, (java.lang.Object) (-1));
        java.lang.Object[] objArray38 = nativeArray32.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable39 = nativeArray32.getParentScope();
        boolean boolean40 = nativeArray24.containsAll((java.util.Collection) nativeArray32);
        com.google.javascript.rhino.head.Scriptable scriptable41 = nativeArray32.getParentScope();
        boolean boolean42 = nativeArray32.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable46 = nativeArray45.getParentScope();
        java.lang.Object[] objArray47 = nativeArray45.getIds();
        boolean boolean48 = nativeArray32.has("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray45);
        nativeArray1.setAttributes("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray32, 2);
        com.google.javascript.rhino.head.NativeArray nativeArray53 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int55 = nativeArray53.lastIndexOf((java.lang.Object) (short) 10);
        long long56 = nativeArray53.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray53, "", true);
        boolean boolean60 = nativeArray53.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray62 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray65 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray62.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray65, (java.lang.Object) (-1));
        java.lang.Object[] objArray68 = nativeArray62.getAllIds();
        nativeArray62.delete("");
        boolean boolean71 = nativeArray53.contains((java.lang.Object) "");
        java.lang.Object obj72 = nativeArray1.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray53);
        com.google.javascript.rhino.head.Scriptable scriptable73 = nativeArray1.getParentScope();
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[null]");
        org.junit.Assert.assertNull(scriptable8);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[null]");
        org.junit.Assert.assertNull(scriptable18);
        org.junit.Assert.assertNull(scriptable19);
        org.junit.Assert.assertNotNull(listIterator20);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 1L + "'", long27 == 1L);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[null]");
        org.junit.Assert.assertNull(scriptable39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(scriptable41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(scriptable46);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 1L + "'", long56 == 1L);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[length]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNull(scriptable73);
    }

    @Test
    public void test2285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2285");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray15, (java.lang.Object) (-1));
        java.lang.Object[] objArray18 = nativeArray12.getAllIds();
        nativeArray12.delete("");
        long long21 = nativeArray12.getLength();
        boolean boolean22 = nativeArray1.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray12);
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int27 = nativeArray25.lastIndexOf((java.lang.Object) (short) 10);
        long long28 = nativeArray25.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray25, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray33.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray36, (java.lang.Object) (-1));
        java.lang.Object[] objArray39 = nativeArray33.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable40 = nativeArray33.getParentScope();
        boolean boolean41 = nativeArray25.containsAll((java.util.Collection) nativeArray33);
        com.google.javascript.rhino.head.Scriptable scriptable42 = nativeArray33.getParentScope();
        boolean boolean43 = nativeArray33.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable47 = nativeArray46.getParentScope();
        java.lang.Object[] objArray48 = nativeArray46.getIds();
        boolean boolean49 = nativeArray33.has("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray46);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray12, "object", (java.lang.Object) nativeArray33);
        boolean boolean51 = nativeArray12.hasPrototypeMap();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[length]");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1L + "'", long21 == 1L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 1L + "'", long28 == 1L);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[null]");
        org.junit.Assert.assertNull(scriptable40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(scriptable42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(scriptable47);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test2286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2286");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.getAllIds();
        nativeArray24.delete("");
        java.lang.Object obj33 = nativeArray9.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        com.google.javascript.rhino.head.Scriptable scriptable35 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray24, "");
        boolean boolean36 = nativeArray24.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int40 = nativeArray38.lastIndexOf((java.lang.Object) (short) 10);
        long long41 = nativeArray38.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray38, "", true);
        boolean boolean45 = nativeArray38.hasPrototypeMap();
        int int46 = nativeArray38.size();
        boolean boolean47 = nativeArray38.isEmpty();
        com.google.javascript.rhino.head.Scriptable scriptable48 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray38);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray38, "", true);
        com.google.javascript.rhino.head.Context context52 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray54 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int56 = nativeArray54.lastIndexOf((java.lang.Object) (short) 10);
        long long57 = nativeArray54.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray54, "", true);
        boolean boolean61 = nativeArray54.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable65 = nativeArray64.getParentScope();
        java.lang.Object[] objArray66 = nativeArray64.getIds();
        boolean boolean67 = nativeArray64.isEmpty();
        boolean boolean68 = nativeArray54.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray64);
        boolean boolean70 = nativeArray64.isConst("object");
        nativeArray38.defineOwnProperties(context52, (com.google.javascript.rhino.head.ScriptableObject) nativeArray64);
        java.lang.Object[] objArray72 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray38);
        java.lang.Object[] objArray73 = nativeArray24.toArray(objArray72);
        java.lang.Object obj75 = null;
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray24, (int) (byte) 10, obj75);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNull(scriptable35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 1L + "'", long41 == 1L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(scriptable48);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 1L + "'", long57 == 1L);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(scriptable65);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[]");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[null]");
    }

    @Test
    public void test2287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2287");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.getAllIds();
        nativeArray24.delete("");
        java.lang.Object obj33 = nativeArray9.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable36 = nativeArray9.getPrototype();
        com.google.javascript.rhino.head.Context context37 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int41 = nativeArray39.lastIndexOf((java.lang.Object) (short) 10);
        long long42 = nativeArray39.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray39, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray47.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray50, (java.lang.Object) (-1));
        java.lang.Object[] objArray53 = nativeArray47.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable54 = nativeArray47.getParentScope();
        boolean boolean55 = nativeArray39.containsAll((java.util.Collection) nativeArray47);
        nativeArray9.defineOwnProperties(context37, (com.google.javascript.rhino.head.ScriptableObject) nativeArray39);
        boolean boolean57 = nativeArray39.isSealed();
        // The following exception was thrown during execution in test generation
        try {
            int int59 = nativeArray39.getAttributes((int) ' ');
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EvaluatorException; message: Property 32 not found.");
        } catch (com.google.javascript.rhino.head.EvaluatorException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNull(scriptable36);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 1L + "'", long42 == 1L);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[null]");
        org.junit.Assert.assertNull(scriptable54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test2288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2288");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.getAllIds();
        nativeArray24.delete("");
        java.lang.Object obj33 = nativeArray9.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        java.lang.Integer[] intArray34 = nativeArray24.getIndexIds();
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray37.activatePrototypeMap((int) (short) 100);
        boolean boolean41 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray37, "hi!");
        boolean boolean42 = nativeArray37.isExtensible();
        java.lang.String str43 = nativeArray37.getTypeOf();
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray49 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray46.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray49, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray54 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray54.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj57 = nativeArray49.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray54);
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int62 = nativeArray60.lastIndexOf((java.lang.Object) (short) 10);
        long long63 = nativeArray60.getLength();
        nativeArray60.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray54, "hi!", (java.lang.Object) (byte) 1);
        nativeArray37.setAttributes("", (com.google.javascript.rhino.head.Scriptable) nativeArray54, 4);
        nativeArray24.defineProperty("hi!", (java.lang.Object) nativeArray54, 0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray71 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray54);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: 24");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "object" + "'", str43, "object");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 1L + "'", long63 == 1L);
    }

    @Test
    public void test2289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2289");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean8 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        boolean boolean9 = nativeArray1.hasPrototypeMap();
        java.lang.Object[] objArray10 = nativeArray1.getIds();
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray15, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray20.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj23 = nativeArray15.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray20);
        boolean boolean24 = nativeArray15.hasPrototypeMap();
        java.lang.Object[] objArray25 = nativeArray15.getIds();
        int int26 = nativeArray15.size();
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray32, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray37.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj40 = nativeArray32.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        boolean boolean41 = nativeArray32.hasPrototypeMap();
        java.lang.Object[] objArray42 = nativeArray32.getIds();
        int int43 = nativeArray32.size();
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int47 = nativeArray45.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray32.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray45);
        java.lang.Object obj49 = nativeArray15.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray32);
        java.lang.Object[] objArray50 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray32);
        boolean boolean51 = nativeArray32.isSealed();
        java.lang.Object obj52 = nativeArray1.getAssociatedValue((java.lang.Object) nativeArray32);
        long long53 = nativeArray32.jsGet_length();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[hi!]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[hi!]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 1L + "'", long53 == 1L);
    }

    @Test
    public void test2290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2290");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        com.google.javascript.rhino.head.Scriptable scriptable18 = nativeArray9.getParentScope();
        boolean boolean19 = nativeArray9.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int24 = nativeArray22.lastIndexOf((java.lang.Object) (short) 10);
        long long25 = nativeArray22.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray22, "", true);
        boolean boolean29 = nativeArray22.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable33 = nativeArray32.getParentScope();
        java.lang.Object[] objArray34 = nativeArray32.getIds();
        boolean boolean35 = nativeArray32.isEmpty();
        boolean boolean36 = nativeArray22.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray32);
        boolean boolean38 = nativeArray32.isConst("object");
        java.lang.Object obj40 = nativeArray32.get((java.lang.Object) (byte) 10);
        com.google.javascript.rhino.head.Scriptable scriptable41 = null;
        nativeArray32.setParentScope(scriptable41);
        nativeArray9.setAttributes((-1), (com.google.javascript.rhino.head.Scriptable) nativeArray32, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray47.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray50, (java.lang.Object) (-1));
        java.lang.Object[] objArray53 = nativeArray47.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable54 = nativeArray47.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable55 = nativeArray47.getParentScope();
        boolean boolean56 = nativeArray47.isSealed();
        boolean boolean57 = nativeArray47.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray62 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray59.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray62, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray66 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray69 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray66.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray69, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray74 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray74.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj77 = nativeArray69.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray74);
        com.google.javascript.rhino.head.Callable callable80 = null;
        nativeArray69.setGetterOrSetter("hi!", 0, callable80, false);
        java.lang.Integer[] intArray83 = nativeArray69.getIndexIds();
        nativeArray62.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray69);
        java.lang.Object obj85 = nativeArray47.get((java.lang.Object) nativeArray69);
        com.google.javascript.rhino.head.NativeArray nativeArray87 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int89 = nativeArray87.lastIndexOf((java.lang.Object) (short) 10);
        long long90 = nativeArray87.getLength();
        nativeArray87.delete((int) (byte) 1);
        boolean boolean93 = nativeArray87.isExtensible();
        java.lang.Object obj95 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray87, 4);
        nativeArray32.put(0, (com.google.javascript.rhino.head.Scriptable) nativeArray47, (java.lang.Object) nativeArray87);
        com.google.javascript.rhino.head.Scriptable scriptable97 = nativeArray47.getParentScope();
        // The following exception was thrown during execution in test generation
        try {
            int int99 = nativeArray47.getAttributes("object");
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EvaluatorException; message: Property object not found.");
        } catch (com.google.javascript.rhino.head.EvaluatorException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(scriptable18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 1L + "'", long25 == 1L);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(scriptable33);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[null]");
        org.junit.Assert.assertNull(scriptable54);
        org.junit.Assert.assertNull(scriptable55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertTrue("'" + long90 + "' != '" + 1L + "'", long90 == 1L);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNull(scriptable97);
    }

    @Test
    public void test2291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2291");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        com.google.javascript.rhino.head.Scriptable scriptable18 = nativeArray9.getParentScope();
        boolean boolean19 = nativeArray9.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable23 = nativeArray22.getParentScope();
        java.lang.Object[] objArray24 = nativeArray22.getIds();
        boolean boolean25 = nativeArray9.has("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray22);
        java.util.Iterator iterator26 = nativeArray22.iterator();
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int31 = nativeArray29.lastIndexOf((java.lang.Object) (short) 10);
        long long32 = nativeArray29.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray29, "", true);
        boolean boolean36 = nativeArray29.hasPrototypeMap();
        boolean boolean37 = nativeArray29.isExtensible();
        boolean boolean38 = nativeArray22.has((int) (byte) 100, (com.google.javascript.rhino.head.Scriptable) nativeArray29);
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 2);
        java.lang.Object obj42 = nativeArray22.get("object", (com.google.javascript.rhino.head.Scriptable) nativeArray41);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj44 = nativeArray22.get((long) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(scriptable18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(scriptable23);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(iterator26);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1L + "'", long32 == 1L);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(obj42);
    }

    @Test
    public void test2292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2292");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.getAllIds();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array", true);
        java.lang.Object obj12 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        java.lang.Object[] objArray13 = nativeArray1.getAllIds();
        java.lang.Object[] objArray14 = nativeArray1.toArray();
        nativeArray1.delete("hi!");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[length]");
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[length]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[null]");
    }

    @Test
    public void test2293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2293");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        java.lang.Integer[] intArray7 = nativeArray1.getIndexIds();
        java.lang.Object obj9 = null;
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!", obj9);
        java.lang.Object obj12 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray1, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray15.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray18, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray23.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj26 = nativeArray18.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray23);
        boolean boolean27 = nativeArray18.hasPrototypeMap();
        java.lang.Object[] objArray28 = nativeArray18.getIds();
        int int29 = nativeArray18.size();
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray32.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray35, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray40.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj43 = nativeArray35.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray40);
        boolean boolean44 = nativeArray35.hasPrototypeMap();
        java.lang.Object[] objArray45 = nativeArray35.getIds();
        int int46 = nativeArray35.size();
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int50 = nativeArray48.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray35.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray48);
        java.lang.Object obj52 = nativeArray18.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray35);
        java.lang.Object[] objArray53 = nativeArray18.getIds();
        java.lang.Integer[] intArray54 = nativeArray18.getIndexIds();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj55 = com.google.javascript.rhino.head.ScriptableObject.callMethod((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", (java.lang.Object[]) intArray54);
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EcmaError; message: TypeError:  is not a function, it is object.");
        } catch (com.google.javascript.rhino.head.EcmaError e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[hi!]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[hi!]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[hi!]");
        org.junit.Assert.assertNotNull(intArray54);
    }

    @Test
    public void test2294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2294");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.getAllIds();
        nativeArray1.delete("");
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "object");
        boolean boolean12 = nativeArray1.hasPrototypeMap();
        nativeArray1.delete(0);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[length]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test2295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2295");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        java.lang.reflect.Method method11 = null;
        java.lang.reflect.Method method12 = null;
        nativeArray1.defineProperty("hi!", (java.lang.Object) (-1L), method11, method12, (int) (byte) 10);
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray20, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj28 = nativeArray20.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray25);
        boolean boolean29 = nativeArray20.hasPrototypeMap();
        java.lang.Object[] objArray30 = nativeArray20.getIds();
        int int31 = nativeArray20.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray34.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray37, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj45 = nativeArray37.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray42);
        boolean boolean46 = nativeArray37.hasPrototypeMap();
        java.lang.Object[] objArray47 = nativeArray37.getIds();
        int int48 = nativeArray37.size();
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int52 = nativeArray50.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray37.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray50);
        java.lang.Object obj54 = nativeArray20.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray56.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray59, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray64.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj67 = nativeArray59.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray64);
        boolean boolean68 = nativeArray59.hasPrototypeMap();
        java.lang.Object[] objArray69 = nativeArray59.getIds();
        int int70 = nativeArray59.size();
        com.google.javascript.rhino.head.NativeArray nativeArray73 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray76 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray73.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray76, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray81 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray81.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj84 = nativeArray76.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray81);
        boolean boolean85 = nativeArray76.hasPrototypeMap();
        java.lang.Object[] objArray86 = nativeArray76.getIds();
        int int87 = nativeArray76.size();
        com.google.javascript.rhino.head.NativeArray nativeArray89 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int91 = nativeArray89.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray76.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray89);
        java.lang.Object obj93 = nativeArray59.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray76);
        java.lang.Object[] objArray94 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray59);
        nativeArray1.put(2, (com.google.javascript.rhino.head.Scriptable) nativeArray37, (java.lang.Object) objArray94);
        com.google.javascript.rhino.head.Scriptable scriptable96 = nativeArray37.getParentScope();
        boolean boolean98 = com.google.javascript.rhino.head.ScriptableObject.hasProperty(scriptable96, (int) ' ');
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[hi!]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(objArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray86), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray86), "[hi!]");
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(objArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray94), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray94), "[hi!]");
        org.junit.Assert.assertNotNull(scriptable96);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test2296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2296");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.getAllIds();
        nativeArray24.delete("");
        java.lang.Object obj33 = nativeArray9.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        java.lang.Integer[] intArray34 = nativeArray24.getIndexIds();
        long long35 = nativeArray24.getLength();
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray38.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray41, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray46.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj49 = nativeArray41.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray46);
        boolean boolean50 = nativeArray41.hasPrototypeMap();
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray24, (-1), (java.lang.Object) nativeArray41);
        int int52 = nativeArray41.size();
        java.lang.Object obj54 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray41, (int) (byte) 10);
        boolean boolean56 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray41, "");
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1L + "'", long35 == 1L);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test2297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2297");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int22 = nativeArray20.lastIndexOf((java.lang.Object) (short) 10);
        long long23 = nativeArray20.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray20, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable27 = null;
        java.lang.Object[] objArray28 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable27);
        java.lang.Object[] objArray29 = nativeArray20.toArray(objArray28);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!", (java.lang.Object) objArray28);
        int int31 = nativeArray1.size();
        nativeArray1.activatePrototypeMap((int) (byte) 10);
        java.lang.Object obj35 = null;
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array", obj35, 8);
        boolean boolean39 = nativeArray1.contains((java.lang.Object) 100);
        nativeArray1.delete((int) (byte) -1);
        long long42 = nativeArray1.getLength();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1L + "'", long23 == 1L);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[null]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 1L + "'", long42 == 1L);
    }

    @Test
    public void test2298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2298");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.activatePrototypeMap((int) (short) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray5 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int7 = nativeArray5.lastIndexOf((java.lang.Object) (short) 10);
        long long8 = nativeArray5.getLength();
        nativeArray5.delete((int) (byte) 1);
        boolean boolean11 = nativeArray5.isExtensible();
        java.lang.Object obj13 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray5, 4);
        java.lang.Object[] objArray14 = nativeArray5.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray20, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj28 = nativeArray20.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray25);
        boolean boolean29 = nativeArray20.hasPrototypeMap();
        java.lang.Object[] objArray30 = nativeArray20.getIds();
        int int31 = nativeArray20.size();
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int35 = nativeArray33.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray20.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray33);
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable39 = nativeArray38.getParentScope();
        java.lang.Object[] objArray40 = nativeArray38.getIds();
        boolean boolean41 = nativeArray38.isEmpty();
        nativeArray5.put((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray20, (java.lang.Object) boolean41);
        java.lang.Object obj43 = nativeArray1.get((java.lang.Object) boolean41);
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable47 = nativeArray46.getParentScope();
        java.lang.Object[] objArray48 = nativeArray46.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray53 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray50.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray53, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray58.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj61 = nativeArray53.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray58);
        java.lang.Object obj62 = nativeArray46.getAssociatedValue((java.lang.Object) nativeArray53);
        com.google.javascript.rhino.head.Scriptable scriptable63 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray46);
        nativeArray46.delete("hi!");
        com.google.javascript.rhino.head.Scriptable scriptable67 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray46, "hi!");
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!", (java.lang.Object) scriptable67);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 1L + "'", long8 == 1L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[null]");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNull(scriptable39);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNull(scriptable47);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[length]");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNull(scriptable63);
        org.junit.Assert.assertNull(scriptable67);
    }

    @Test
    public void test2299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2299");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.getAllIds();
        nativeArray24.delete("");
        java.lang.Object obj33 = nativeArray9.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable36 = nativeArray9.getPrototype();
        com.google.javascript.rhino.head.Context context37 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int41 = nativeArray39.lastIndexOf((java.lang.Object) (short) 10);
        long long42 = nativeArray39.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray39, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray47.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray50, (java.lang.Object) (-1));
        java.lang.Object[] objArray53 = nativeArray47.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable54 = nativeArray47.getParentScope();
        boolean boolean55 = nativeArray39.containsAll((java.util.Collection) nativeArray47);
        nativeArray9.defineOwnProperties(context37, (com.google.javascript.rhino.head.ScriptableObject) nativeArray39);
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int61 = nativeArray59.lastIndexOf((java.lang.Object) (short) 10);
        long long62 = nativeArray59.getLength();
        nativeArray59.delete((int) (byte) 1);
        boolean boolean65 = nativeArray59.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray68 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable69 = nativeArray68.getParentScope();
        java.lang.Object[] objArray70 = nativeArray68.getIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray59, "", (java.lang.Object) nativeArray68, 0);
        java.lang.Object[] objArray73 = nativeArray59.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray75 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray75.activatePrototypeMap((int) (short) 100);
        java.util.Iterator iterator78 = nativeArray75.iterator();
        nativeArray9.putConst("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray59, (java.lang.Object) iterator78);
        com.google.javascript.rhino.head.NativeArray nativeArray81 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray84 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray81.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray84, (java.lang.Object) (-1));
        java.lang.Object[] objArray87 = nativeArray81.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable88 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray81);
        boolean boolean89 = nativeArray81.isSealed();
        java.lang.Object obj90 = nativeArray9.get((java.lang.Object) nativeArray81);
        long long91 = nativeArray9.jsGet_length();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNull(scriptable36);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 1L + "'", long42 == 1L);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[null]");
        org.junit.Assert.assertNull(scriptable54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 1L + "'", long62 == 1L);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(scriptable69);
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[]");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[null]");
        org.junit.Assert.assertNotNull(iterator78);
        org.junit.Assert.assertNotNull(objArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray87), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray87), "[null]");
        org.junit.Assert.assertNull(scriptable88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNull(obj90);
        org.junit.Assert.assertTrue("'" + long91 + "' != '" + 1L + "'", long91 == 1L);
    }

    @Test
    public void test2300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2300");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable2 = nativeArray1.getParentScope();
        java.lang.Object[] objArray3 = nativeArray1.getIds();
        java.lang.Object[] objArray4 = nativeArray1.getIds();
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int10 = nativeArray8.lastIndexOf((java.lang.Object) (short) 10);
        long long11 = nativeArray8.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray8, "", true);
        boolean boolean15 = nativeArray8.hasPrototypeMap();
        java.lang.reflect.Method method18 = null;
        java.lang.reflect.Method method19 = null;
        nativeArray8.defineProperty("hi!", (java.lang.Object) (-1L), method18, method19, (int) (byte) 10);
        boolean boolean23 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray8, "");
        nativeArray8.sealObject();
        boolean boolean25 = nativeArray8.isSealed();
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray30, "", (java.lang.Object) 100);
        java.lang.Object obj34 = nativeArray27.associateValue((java.lang.Object) ' ', (java.lang.Object) nativeArray30);
        java.lang.Object[] objArray35 = nativeArray30.toArray();
        java.lang.Object[] objArray36 = nativeArray8.toArray(objArray35);
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray38.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray41, (java.lang.Object) (-1));
        java.lang.Object[] objArray44 = nativeArray38.getAllIds();
        nativeArray38.delete("");
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray38, "object");
        boolean boolean49 = nativeArray38.isSealed();
        nativeArray8.setPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray38);
        java.lang.Object obj52 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray38, 8);
        // The following exception was thrown during execution in test generation
        try {
            nativeArray1.initPrototypeValue((int) (short) 0, "Array", obj52, 13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(scriptable2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[null]");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[null]");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[length]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(obj52);
    }

    @Test
    public void test2301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2301");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean8 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        java.lang.String str9 = nativeArray1.getTypeOf();
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray15.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray18, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray23.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj26 = nativeArray18.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray23);
        com.google.javascript.rhino.head.Callable callable29 = null;
        nativeArray18.setGetterOrSetter("hi!", 0, callable29, false);
        nativeArray12.setAttributes((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray18, (int) (short) 10);
        boolean boolean35 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray12, "object");
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!", (java.lang.Object) "object");
        nativeArray1.delete(13);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "object" + "'", str9, "object");
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test2302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2302");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj38 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        java.lang.Object[] objArray39 = nativeArray4.getIds();
        java.lang.Integer[] intArray40 = nativeArray4.getIndexIds();
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray43.activatePrototypeMap((int) (short) 100);
        boolean boolean47 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray43, "hi!");
        long long48 = nativeArray43.jsGet_length();
        boolean boolean49 = nativeArray4.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray43);
        com.google.javascript.rhino.head.Scriptable scriptable50 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray43);
        com.google.javascript.rhino.head.NativeArray nativeArray53 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray53.activatePrototypeMap((int) (short) 100);
        boolean boolean56 = nativeArray43.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray53);
        com.google.javascript.rhino.head.Scriptable scriptable57 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray43);
        nativeArray43.sealObject();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[hi!]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 1L + "'", long48 == 1L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(scriptable50);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(scriptable57);
    }

    @Test
    public void test2303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2303");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        java.lang.reflect.Method method11 = null;
        java.lang.reflect.Method method12 = null;
        nativeArray1.defineProperty("hi!", (java.lang.Object) (-1L), method11, method12, (int) (byte) 10);
        boolean boolean16 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        nativeArray1.setAttributes("hi!", (int) (byte) 0);
        java.lang.Object[] objArray20 = nativeArray1.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray23.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray26, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray31.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray34, (java.lang.Object) (-1));
        nativeArray23.put((int) (byte) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray31, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 0, (java.lang.Object) nativeArray31);
        java.lang.Integer[] intArray40 = nativeArray31.getIndexIds();
        // The following exception was thrown during execution in test generation
        try {
            int int42 = nativeArray31.getAttributes(5);
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EvaluatorException; message: Property 5 not found.");
        } catch (com.google.javascript.rhino.head.EvaluatorException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[hi!, length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[hi!, length]");
        org.junit.Assert.assertNotNull(intArray40);
    }

    @Test
    public void test2304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2304");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.getAllIds();
        nativeArray24.delete("");
        java.lang.Object obj33 = nativeArray9.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable36 = nativeArray9.getPrototype();
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        java.lang.Object obj41 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray39, "Array");
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, 8, (java.lang.Object) nativeArray39);
        com.google.javascript.rhino.head.Scriptable scriptable44 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray39, "");
        java.lang.Object[] objArray45 = nativeArray39.getIds();
        int int46 = nativeArray39.size();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNull(scriptable36);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNull(scriptable44);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
    }

    @Test
    public void test2305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2305");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object obj10 = nativeArray4.getGetterOrSetter("object", (int) (short) 0, true);
        nativeArray4.setAttributes(1, (int) (short) 1);
        com.google.javascript.rhino.head.Scriptable scriptable14 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray4);
        com.google.javascript.rhino.head.Scriptable scriptable15 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray4);
        java.util.Iterator iterator16 = nativeArray4.iterator();
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(scriptable14);
        org.junit.Assert.assertNull(scriptable15);
        org.junit.Assert.assertNotNull(iterator16);
    }

    @Test
    public void test2306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2306");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        com.google.javascript.rhino.head.Scriptable scriptable9 = nativeArray1.getParentScope();
        boolean boolean10 = nativeArray1.hasPrototypeMap();
        java.util.Iterator iterator11 = nativeArray1.iterator();
        // The following exception was thrown during execution in test generation
        try {
            int int13 = nativeArray1.getAttributes(1);
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EvaluatorException; message: Property 1 not found.");
        } catch (com.google.javascript.rhino.head.EvaluatorException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(scriptable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(iterator11);
    }

    @Test
    public void test2307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2307");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        java.lang.Integer[] intArray7 = nativeArray1.getIndexIds();
        java.lang.Object obj9 = null;
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!", obj9);
        java.lang.Object obj12 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray1, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray14.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray17, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray22.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray25, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray30.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj33 = nativeArray25.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray30);
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int38 = nativeArray36.lastIndexOf((java.lang.Object) (short) 10);
        long long39 = nativeArray36.getLength();
        nativeArray36.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray30, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray45.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray48, (java.lang.Object) (-1));
        java.lang.Object[] objArray51 = nativeArray45.getAllIds();
        nativeArray45.delete("");
        java.lang.Object obj54 = nativeArray30.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray45);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray30, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable57 = nativeArray30.getPrototype();
        com.google.javascript.rhino.head.Context context58 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int62 = nativeArray60.lastIndexOf((java.lang.Object) (short) 10);
        long long63 = nativeArray60.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray60, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray68 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray71 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray68.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray71, (java.lang.Object) (-1));
        java.lang.Object[] objArray74 = nativeArray68.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable75 = nativeArray68.getParentScope();
        boolean boolean76 = nativeArray60.containsAll((java.util.Collection) nativeArray68);
        nativeArray30.defineOwnProperties(context58, (com.google.javascript.rhino.head.ScriptableObject) nativeArray60);
        nativeArray14.setAttributes(1, (com.google.javascript.rhino.head.Scriptable) nativeArray30, (int) (short) 10);
        java.lang.Object obj80 = nativeArray1.getAssociatedValue((java.lang.Object) nativeArray30);
        nativeArray30.delete((int) (short) 0);
        java.lang.Object obj84 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray30, (int) (short) 1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 1L + "'", long39 == 1L);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[length]");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNull(scriptable57);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 1L + "'", long63 == 1L);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[null]");
        org.junit.Assert.assertNull(scriptable75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertNotNull(obj84);
    }

    @Test
    public void test2308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2308");
        com.google.javascript.rhino.head.Scriptable scriptable0 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean2 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty(scriptable0, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2309");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        java.lang.reflect.Method method11 = null;
        java.lang.reflect.Method method12 = null;
        nativeArray1.defineProperty("hi!", (java.lang.Object) (-1L), method11, method12, (int) (byte) 10);
        boolean boolean16 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        nativeArray1.setAttributes("hi!", (int) (byte) 0);
        java.lang.Object[] objArray20 = nativeArray1.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray23.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray26, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray31.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray34, (java.lang.Object) (-1));
        nativeArray23.put((int) (byte) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray31, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 0, (java.lang.Object) nativeArray31);
        java.lang.Integer[] intArray40 = nativeArray31.getIndexIds();
        java.util.ListIterator listIterator41 = nativeArray31.listIterator();
        boolean boolean43 = nativeArray31.isConst("object");
        java.lang.Object[] objArray44 = nativeArray31.toArray();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[hi!, length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[hi!, length]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertNotNull(listIterator41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[null, null, null, null, null, null, null, null, null, null, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[null, null, null, null, null, null, null, null, null, null, 100]");
    }

    @Test
    public void test2310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2310");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray7 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray4.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray7, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj15 = nativeArray7.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray12);
        com.google.javascript.rhino.head.Callable callable18 = null;
        nativeArray7.setGetterOrSetter("hi!", 0, callable18, false);
        nativeArray1.setAttributes((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray7, (int) (short) 10);
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int27 = nativeArray25.lastIndexOf((java.lang.Object) (short) 10);
        long long28 = nativeArray25.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray25, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable32 = null;
        java.lang.Object[] objArray33 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable32);
        java.lang.Object[] objArray34 = nativeArray25.toArray(objArray33);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int39 = nativeArray37.lastIndexOf((java.lang.Object) (short) 10);
        long long40 = nativeArray37.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray37, "", true);
        boolean boolean44 = nativeArray37.hasPrototypeMap();
        int int45 = nativeArray37.size();
        boolean boolean46 = nativeArray37.isEmpty();
        boolean boolean48 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray37, "Array");
        java.lang.Object obj49 = nativeArray25.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        java.lang.Object obj50 = nativeArray1.get("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray25);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "object");
        boolean boolean53 = nativeArray1.isSealed();
        boolean boolean54 = nativeArray1.isExtensible();
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 1L + "'", long28 == 1L);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[null]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 1L + "'", long40 == 1L);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
    }

    @Test
    public void test2311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2311");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        java.lang.Object obj9 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 4);
        java.lang.Object[] objArray10 = nativeArray1.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int15 = nativeArray13.lastIndexOf((java.lang.Object) (short) 10);
        long long16 = nativeArray13.getLength();
        nativeArray13.delete((int) (byte) 1);
        java.lang.Integer[] intArray19 = nativeArray13.getIndexIds();
        java.lang.Object obj21 = null;
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "hi!", obj21);
        java.lang.Object obj24 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray13, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int28 = nativeArray26.lastIndexOf((java.lang.Object) (short) 10);
        long long29 = nativeArray26.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray26, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable33 = null;
        java.lang.Object[] objArray34 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable33);
        java.lang.Object[] objArray35 = nativeArray26.toArray(objArray34);
        com.google.javascript.rhino.head.Scriptable scriptable36 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean37 = nativeArray13.contains((java.lang.Object) nativeArray26);
        com.google.javascript.rhino.head.Scriptable scriptable38 = nativeArray13.getPrototype();
        com.google.javascript.rhino.head.Scriptable scriptable39 = nativeArray13.getParentScope();
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", (java.lang.Object) nativeArray13);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[null]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1L + "'", long16 == 1L);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 1L + "'", long29 == 1L);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[null]");
        org.junit.Assert.assertNotNull(scriptable36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(scriptable38);
        org.junit.Assert.assertNull(scriptable39);
    }

    @Test
    public void test2312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2312");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) (short) 100);
        java.lang.Object obj3 = nativeArray1.get((int) (short) 0);
        org.junit.Assert.assertNull(obj3);
    }

    @Test
    public void test2313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2313");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray20, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj28 = nativeArray20.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray25);
        boolean boolean29 = nativeArray20.hasPrototypeMap();
        java.lang.Object[] objArray30 = nativeArray20.getIds();
        int int31 = nativeArray20.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray34.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray37, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj45 = nativeArray37.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray42);
        boolean boolean46 = nativeArray37.hasPrototypeMap();
        java.lang.Object[] objArray47 = nativeArray37.getIds();
        int int48 = nativeArray37.size();
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int52 = nativeArray50.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray37.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray50);
        java.lang.Object obj54 = nativeArray20.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        boolean boolean55 = nativeArray4.containsAll((java.util.Collection) nativeArray37);
        int int57 = nativeArray37.getAttributes("hi!");
        java.lang.Integer[] intArray58 = nativeArray37.getIndexIds();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[hi!]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(intArray58);
    }

    @Test
    public void test2314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2314");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        java.lang.Object obj9 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 4);
        java.lang.Object[] objArray10 = nativeArray1.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray13.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray16, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray21.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj24 = nativeArray16.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        boolean boolean25 = nativeArray16.hasPrototypeMap();
        java.lang.Object[] objArray26 = nativeArray16.getIds();
        int int27 = nativeArray16.size();
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int31 = nativeArray29.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray16.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray29);
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable35 = nativeArray34.getParentScope();
        java.lang.Object[] objArray36 = nativeArray34.getIds();
        boolean boolean37 = nativeArray34.isEmpty();
        nativeArray1.put((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray16, (java.lang.Object) boolean37);
        java.lang.Object[] objArray39 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        java.util.ListIterator listIterator41 = nativeArray1.listIterator((int) (byte) 1);
        com.google.javascript.rhino.head.Scriptable scriptable42 = nativeArray1.getParentScope();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[null]");
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[hi!]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(scriptable35);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertNotNull(listIterator41);
        org.junit.Assert.assertNull(scriptable42);
    }

    @Test
    public void test2315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2315");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray20.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray23, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray28.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj31 = nativeArray23.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray28);
        com.google.javascript.rhino.head.Callable callable34 = null;
        nativeArray23.setGetterOrSetter("hi!", 0, callable34, false);
        nativeArray17.setAttributes((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray23, (int) (short) 10);
        java.lang.Object obj39 = null;
        int int40 = nativeArray17.lastIndexOf(obj39);
        boolean boolean41 = nativeArray4.has("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray17);
        com.google.javascript.rhino.head.Scriptable scriptable42 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray17);
        java.lang.Integer[] intArray43 = nativeArray17.getIndexIds();
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((java.lang.Object[]) intArray43);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(scriptable42);
        org.junit.Assert.assertNotNull(intArray43);
    }

    @Test
    public void test2316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2316");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 2);
        com.google.javascript.rhino.head.NativeArray nativeArray3 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray6 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int10 = nativeArray8.lastIndexOf((java.lang.Object) (short) 10);
        long long11 = nativeArray8.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray8, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray16.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray19, (java.lang.Object) (-1));
        java.lang.Object[] objArray22 = nativeArray16.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable23 = nativeArray16.getParentScope();
        boolean boolean24 = nativeArray8.containsAll((java.util.Collection) nativeArray16);
        com.google.javascript.rhino.head.Scriptable scriptable25 = nativeArray16.getParentScope();
        boolean boolean26 = nativeArray6.containsAll((java.util.Collection) nativeArray16);
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray28.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray31, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray36.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj39 = nativeArray31.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray36);
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int44 = nativeArray42.lastIndexOf((java.lang.Object) (short) 10);
        long long45 = nativeArray42.getLength();
        nativeArray42.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray36, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray54 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray51.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray54, (java.lang.Object) (-1));
        java.lang.Object[] objArray57 = nativeArray51.getAllIds();
        nativeArray51.delete("");
        java.lang.Object obj60 = nativeArray36.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray51);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray36, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable63 = nativeArray36.getPrototype();
        com.google.javascript.rhino.head.Context context64 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray66 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int68 = nativeArray66.lastIndexOf((java.lang.Object) (short) 10);
        long long69 = nativeArray66.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray66, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray74 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray77 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray74.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray77, (java.lang.Object) (-1));
        java.lang.Object[] objArray80 = nativeArray74.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable81 = nativeArray74.getParentScope();
        boolean boolean82 = nativeArray66.containsAll((java.util.Collection) nativeArray74);
        nativeArray36.defineOwnProperties(context64, (com.google.javascript.rhino.head.ScriptableObject) nativeArray66);
        java.lang.Object obj85 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray36, "");
        nativeArray3.put("", (com.google.javascript.rhino.head.Scriptable) nativeArray16, (java.lang.Object) nativeArray36);
        java.lang.Object obj87 = nativeArray1.get((java.lang.Object) "");
        com.google.javascript.rhino.head.IdFunctionObject idFunctionObject88 = null;
        // The following exception was thrown during execution in test generation
        try {
            nativeArray1.initPrototypeConstructor(idFunctionObject88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[null]");
        org.junit.Assert.assertNull(scriptable23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(scriptable25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 1L + "'", long45 == 1L);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[length]");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNull(scriptable63);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 1L + "'", long69 == 1L);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[null]");
        org.junit.Assert.assertNull(scriptable81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNull(obj87);
    }

    @Test
    public void test2317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2317");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray3 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int5 = nativeArray3.lastIndexOf((java.lang.Object) (short) 10);
        long long6 = nativeArray3.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray3, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray11.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray14, (java.lang.Object) (-1));
        java.lang.Object[] objArray17 = nativeArray11.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable18 = nativeArray11.getParentScope();
        boolean boolean19 = nativeArray3.containsAll((java.util.Collection) nativeArray11);
        com.google.javascript.rhino.head.Scriptable scriptable20 = nativeArray11.getParentScope();
        boolean boolean21 = nativeArray1.containsAll((java.util.Collection) nativeArray11);
        // The following exception was thrown during execution in test generation
        try {
            nativeArray1.setAttributes("", (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: 32");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[null]");
        org.junit.Assert.assertNull(scriptable18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(scriptable20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test2318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2318");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray15, (java.lang.Object) (-1));
        java.lang.Object[] objArray18 = nativeArray12.getAllIds();
        nativeArray12.delete("");
        long long21 = nativeArray12.getLength();
        boolean boolean22 = nativeArray1.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray12);
        java.lang.Object[] objArray23 = nativeArray12.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        com.google.javascript.rhino.head.Scriptable scriptable29 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray26);
        java.lang.String str30 = nativeArray26.getClassName();
        nativeArray12.defineConst("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj33 = nativeArray26.get((long) 2);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[length]");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1L + "'", long21 == 1L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[length]");
        org.junit.Assert.assertNull(scriptable29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Array" + "'", str30, "Array");
    }

    @Test
    public void test2319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2319");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        java.lang.Object obj9 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 4);
        java.lang.Object[] objArray10 = nativeArray1.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray13.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray16, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray21.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj24 = nativeArray16.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        boolean boolean25 = nativeArray16.hasPrototypeMap();
        java.lang.Object[] objArray26 = nativeArray16.getIds();
        int int27 = nativeArray16.size();
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int31 = nativeArray29.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray16.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray29);
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable35 = nativeArray34.getParentScope();
        java.lang.Object[] objArray36 = nativeArray34.getIds();
        boolean boolean37 = nativeArray34.isEmpty();
        nativeArray1.put((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray16, (java.lang.Object) boolean37);
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray41.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray44, (java.lang.Object) (-1));
        java.lang.Object[] objArray47 = nativeArray41.getAllIds();
        java.lang.String str48 = nativeArray41.getTypeOf();
        boolean boolean49 = nativeArray16.has("object", (com.google.javascript.rhino.head.Scriptable) nativeArray41);
        boolean boolean50 = nativeArray41.hasPrototypeMap();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List list53 = nativeArray41.subList((int) (byte) -1, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[null]");
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[hi!]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(scriptable35);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[length]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "object" + "'", str48, "object");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test2320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2320");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        java.lang.reflect.Method method11 = null;
        java.lang.reflect.Method method12 = null;
        nativeArray1.defineProperty("hi!", (java.lang.Object) (-1L), method11, method12, (int) (byte) 10);
        boolean boolean16 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        nativeArray1.setAttributes("hi!", (int) (byte) 0);
        java.lang.Object[] objArray20 = nativeArray1.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray23.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray26, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray31.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray34, (java.lang.Object) (-1));
        nativeArray23.put((int) (byte) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray31, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 0, (java.lang.Object) nativeArray31);
        com.google.javascript.rhino.head.Context context40 = null;
        com.google.javascript.rhino.head.ScriptableObject scriptableObject41 = null;
        // The following exception was thrown during execution in test generation
        try {
            nativeArray31.defineOwnProperties(context40, scriptableObject41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[hi!, length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[hi!, length]");
    }

    @Test
    public void test2321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2321");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        com.google.javascript.rhino.head.Scriptable scriptable11 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable15 = nativeArray1.getParentScope();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) (short) 10);
        java.lang.reflect.Method method19 = null;
        java.lang.reflect.Method method20 = null;
        nativeArray1.defineProperty("hi!", (java.lang.Object) nativeArray18, method19, method20, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int26 = nativeArray24.lastIndexOf((java.lang.Object) (short) 10);
        long long27 = nativeArray24.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray24, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable31 = null;
        java.lang.Object[] objArray32 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable31);
        java.lang.Object[] objArray33 = nativeArray24.toArray(objArray32);
        com.google.javascript.rhino.head.Scriptable scriptable34 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray24);
        boolean boolean35 = nativeArray1.contains((java.lang.Object) scriptable34);
        java.lang.Object obj37 = com.google.javascript.rhino.head.ScriptableObject.getProperty(scriptable34, (int) '4');
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(scriptable11);
        org.junit.Assert.assertNull(scriptable15);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 1L + "'", long27 == 1L);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[null]");
        org.junit.Assert.assertNotNull(scriptable34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(obj37);
    }

    @Test
    public void test2322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2322");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int22 = nativeArray20.lastIndexOf((java.lang.Object) (short) 10);
        long long23 = nativeArray20.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray20, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable27 = null;
        java.lang.Object[] objArray28 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable27);
        java.lang.Object[] objArray29 = nativeArray20.toArray(objArray28);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!", (java.lang.Object) objArray28);
        int int31 = nativeArray1.size();
        nativeArray1.activatePrototypeMap((int) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj35 = nativeArray1.get((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1L + "'", long23 == 1L);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[null]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
    }

    @Test
    public void test2323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2323");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray19.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray22, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray27.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj30 = nativeArray22.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray27);
        boolean boolean31 = nativeArray22.hasPrototypeMap();
        java.lang.Object[] objArray32 = nativeArray22.getIds();
        java.lang.Object[] objArray33 = nativeArray9.toArray(objArray32);
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray35.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray38, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray43.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj46 = nativeArray38.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray43);
        boolean boolean47 = nativeArray38.hasPrototypeMap();
        java.lang.Object[] objArray48 = nativeArray38.getIds();
        int int49 = nativeArray38.size();
        com.google.javascript.rhino.head.NativeArray nativeArray52 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray52.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray55, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray60.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj63 = nativeArray55.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray60);
        boolean boolean64 = nativeArray55.hasPrototypeMap();
        java.lang.Object[] objArray65 = nativeArray55.getIds();
        int int66 = nativeArray55.size();
        com.google.javascript.rhino.head.NativeArray nativeArray68 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int70 = nativeArray68.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray55.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray68);
        java.lang.Object obj72 = nativeArray38.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray55);
        java.lang.Object[] objArray73 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray55);
        int int74 = nativeArray9.indexOf((java.lang.Object) nativeArray55);
        com.google.javascript.rhino.head.Scriptable scriptable76 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray55, "");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[null]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[null]");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[hi!]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[hi!]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[hi!]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNull(scriptable76);
    }

    @Test
    public void test2324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2324");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj38 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        int int40 = nativeArray4.indexOf((java.lang.Object) 100.0f);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int45 = nativeArray43.lastIndexOf((java.lang.Object) (short) 10);
        long long46 = nativeArray43.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray43, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable50 = null;
        java.lang.Object[] objArray51 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable50);
        java.lang.Object[] objArray52 = nativeArray43.toArray(objArray51);
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int57 = nativeArray55.lastIndexOf((java.lang.Object) (short) 10);
        long long58 = nativeArray55.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray55, "", true);
        boolean boolean62 = nativeArray55.hasPrototypeMap();
        int int63 = nativeArray55.size();
        boolean boolean64 = nativeArray55.isEmpty();
        boolean boolean66 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray55, "Array");
        java.lang.Object obj67 = nativeArray43.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray55);
        nativeArray55.setAttributes("object", (int) (byte) 0);
        boolean boolean71 = nativeArray4.has((int) (byte) 0, (com.google.javascript.rhino.head.Scriptable) nativeArray55);
        boolean boolean73 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, (int) 'a');
        boolean boolean75 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "");
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 1L + "'", long46 == 1L);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[null]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 1L + "'", long58 == 1L);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test2325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2325");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        java.lang.Object obj9 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 4);
        java.lang.Object[] objArray10 = nativeArray1.toArray();
        boolean boolean11 = nativeArray1.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray13.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray16, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int23 = nativeArray21.lastIndexOf((java.lang.Object) (short) 10);
        long long24 = nativeArray21.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray21, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray32, (java.lang.Object) (-1));
        java.lang.Object[] objArray35 = nativeArray29.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable36 = nativeArray29.getParentScope();
        boolean boolean37 = nativeArray21.containsAll((java.util.Collection) nativeArray29);
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray39.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray42, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray47.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj50 = nativeArray42.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray47);
        boolean boolean51 = nativeArray42.hasPrototypeMap();
        java.lang.Object[] objArray52 = nativeArray42.getIds();
        java.lang.Object[] objArray53 = nativeArray29.toArray(objArray52);
        boolean boolean55 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray29, "Array");
        java.lang.Object obj56 = nativeArray16.get(2, (com.google.javascript.rhino.head.Scriptable) nativeArray29);
        boolean boolean57 = nativeArray16.isExtensible();
        boolean boolean58 = nativeArray16.isSealed();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean59 = nativeArray1.remove((java.lang.Object) boolean58);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[null]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 1L + "'", long24 == 1L);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[null]");
        org.junit.Assert.assertNull(scriptable36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[null]");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[null]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test2326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2326");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray8.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray11, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray16.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj19 = nativeArray11.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray16);
        com.google.javascript.rhino.head.Callable callable22 = null;
        nativeArray11.setGetterOrSetter("hi!", 0, callable22, false);
        java.lang.Integer[] intArray25 = nativeArray11.getIndexIds();
        nativeArray4.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray11);
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int31 = nativeArray29.lastIndexOf((java.lang.Object) (short) 10);
        long long32 = nativeArray29.getLength();
        nativeArray29.delete((int) (byte) 1);
        boolean boolean36 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray29, "");
        nativeArray11.setAttributes("", (com.google.javascript.rhino.head.Scriptable) nativeArray29, 13);
        com.google.javascript.rhino.head.Scriptable scriptable39 = nativeArray29.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable40 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray29);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int45 = nativeArray43.lastIndexOf((java.lang.Object) (short) 10);
        long long46 = nativeArray43.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray43, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable50 = null;
        java.lang.Object[] objArray51 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable50);
        java.lang.Object[] objArray52 = nativeArray43.toArray(objArray51);
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int57 = nativeArray55.lastIndexOf((java.lang.Object) (short) 10);
        long long58 = nativeArray55.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray55, "", true);
        boolean boolean62 = nativeArray55.hasPrototypeMap();
        int int63 = nativeArray55.size();
        boolean boolean64 = nativeArray55.isEmpty();
        boolean boolean66 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray55, "Array");
        java.lang.Object obj67 = nativeArray43.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray55);
        com.google.javascript.rhino.head.NativeArray nativeArray70 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int72 = nativeArray70.lastIndexOf((java.lang.Object) (short) 10);
        long long73 = nativeArray70.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray70, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray78 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray81 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray78.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray81, (java.lang.Object) (-1));
        java.lang.Object[] objArray84 = nativeArray78.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable85 = nativeArray78.getParentScope();
        boolean boolean86 = nativeArray70.containsAll((java.util.Collection) nativeArray78);
        java.lang.Object obj87 = nativeArray55.get((int) (byte) -1, (com.google.javascript.rhino.head.Scriptable) nativeArray78);
        nativeArray29.defineProperty("object", (java.lang.Object) nativeArray55, (int) (short) 0);
        java.lang.Integer[] intArray90 = nativeArray55.getIndexIds();
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1L + "'", long32 == 1L);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(scriptable39);
        org.junit.Assert.assertNotNull(scriptable40);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 1L + "'", long46 == 1L);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[null]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 1L + "'", long58 == 1L);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 1L + "'", long73 == 1L);
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[null]");
        org.junit.Assert.assertNull(scriptable85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(intArray90);
    }

    @Test
    public void test2327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2327");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.getAllIds();
        nativeArray24.delete("");
        java.lang.Object obj33 = nativeArray9.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable36 = nativeArray9.getPrototype();
        com.google.javascript.rhino.head.Context context37 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int41 = nativeArray39.lastIndexOf((java.lang.Object) (short) 10);
        long long42 = nativeArray39.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray39, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray47.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray50, (java.lang.Object) (-1));
        java.lang.Object[] objArray53 = nativeArray47.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable54 = nativeArray47.getParentScope();
        boolean boolean55 = nativeArray39.containsAll((java.util.Collection) nativeArray47);
        nativeArray9.defineOwnProperties(context37, (com.google.javascript.rhino.head.ScriptableObject) nativeArray39);
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int61 = nativeArray59.lastIndexOf((java.lang.Object) (short) 10);
        long long62 = nativeArray59.getLength();
        nativeArray59.delete((int) (byte) 1);
        boolean boolean65 = nativeArray59.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray68 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable69 = nativeArray68.getParentScope();
        java.lang.Object[] objArray70 = nativeArray68.getIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray59, "", (java.lang.Object) nativeArray68, 0);
        java.lang.Object[] objArray73 = nativeArray59.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray75 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray75.activatePrototypeMap((int) (short) 100);
        java.util.Iterator iterator78 = nativeArray75.iterator();
        nativeArray9.putConst("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray59, (java.lang.Object) iterator78);
        com.google.javascript.rhino.head.Scriptable scriptable80 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray9);
        nativeArray9.delete("object");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray83 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: 24");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNull(scriptable36);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 1L + "'", long42 == 1L);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[null]");
        org.junit.Assert.assertNull(scriptable54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 1L + "'", long62 == 1L);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(scriptable69);
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[]");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[null]");
        org.junit.Assert.assertNotNull(iterator78);
        org.junit.Assert.assertNull(scriptable80);
    }

    @Test
    public void test2328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2328");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.getAllIds();
        nativeArray1.delete("");
        long long10 = nativeArray1.getLength();
        java.util.ListIterator listIterator11 = nativeArray1.listIterator();
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray14.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray17, (java.lang.Object) (-1));
        java.lang.Object[] objArray20 = nativeArray14.getAllIds();
        nativeArray14.delete("");
        long long23 = nativeArray14.getLength();
        boolean boolean25 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray14, (int) (short) 10);
        nativeArray14.delete(2);
        com.google.javascript.rhino.head.Scriptable scriptable28 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray14);
        boolean boolean29 = nativeArray14.isExtensible();
        nativeArray14.delete((int) (short) 0);
        java.lang.Object[] objArray32 = nativeArray14.toArray();
        nativeArray14.delete("");
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray36.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray39, (java.lang.Object) (-1));
        java.lang.Object[] objArray42 = nativeArray36.getAllIds();
        nativeArray36.delete("");
        long long45 = nativeArray36.getLength();
        boolean boolean47 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray36, (int) (short) 10);
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray53 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray50.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray53, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray58.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj61 = nativeArray53.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray58);
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int66 = nativeArray64.lastIndexOf((java.lang.Object) (short) 10);
        long long67 = nativeArray64.getLength();
        nativeArray64.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray58, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray73 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray76 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray73.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray76, (java.lang.Object) (-1));
        java.lang.Object[] objArray79 = nativeArray73.getAllIds();
        nativeArray73.delete("");
        java.lang.Object obj82 = nativeArray58.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray73);
        java.lang.Integer[] intArray83 = nativeArray73.getIndexIds();
        nativeArray36.defineProperty("", (java.lang.Object) nativeArray73, 10);
        java.lang.Object[] objArray86 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray36);
        com.google.javascript.rhino.head.NativeArray nativeArray87 = new com.google.javascript.rhino.head.NativeArray(objArray86);
        java.lang.Object[] objArray88 = nativeArray14.toArray(objArray86);
        com.google.javascript.rhino.head.NativeArray nativeArray89 = new com.google.javascript.rhino.head.NativeArray(objArray88);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj90 = nativeArray1.set((int) '4', (java.lang.Object) objArray88);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[length]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertNotNull(listIterator11);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[length]");
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1L + "'", long23 == 1L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(scriptable28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[null]");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[length]");
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 1L + "'", long45 == 1L);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 1L + "'", long67 == 1L);
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[length]");
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertNotNull(objArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray86), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray86), "[]");
        org.junit.Assert.assertNotNull(objArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray88), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray88), "[null]");
    }

    @Test
    public void test2329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2329");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        nativeArray9.delete("Array");
        boolean boolean21 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, (int) 'a');
        int int22 = nativeArray9.size();
        long long23 = nativeArray9.getLength();
        java.lang.String str24 = nativeArray9.getClassName();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1L + "'", long23 == 1L);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Array" + "'", str24, "Array");
    }

    @Test
    public void test2330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2330");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray15, (java.lang.Object) (-1));
        java.lang.Object[] objArray18 = nativeArray12.getAllIds();
        nativeArray12.delete("");
        long long21 = nativeArray12.getLength();
        boolean boolean22 = nativeArray1.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray12);
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int27 = nativeArray25.lastIndexOf((java.lang.Object) (short) 10);
        long long28 = nativeArray25.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray25, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray33.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray36, (java.lang.Object) (-1));
        java.lang.Object[] objArray39 = nativeArray33.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable40 = nativeArray33.getParentScope();
        boolean boolean41 = nativeArray25.containsAll((java.util.Collection) nativeArray33);
        com.google.javascript.rhino.head.Scriptable scriptable42 = nativeArray33.getParentScope();
        boolean boolean43 = nativeArray33.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable47 = nativeArray46.getParentScope();
        java.lang.Object[] objArray48 = nativeArray46.getIds();
        boolean boolean49 = nativeArray33.has("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray46);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray12, "object", (java.lang.Object) nativeArray33);
        com.google.javascript.rhino.head.NativeArray nativeArray53 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int55 = nativeArray53.lastIndexOf((java.lang.Object) (short) 10);
        long long56 = nativeArray53.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray53, "", true);
        boolean boolean60 = nativeArray53.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray63 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable64 = nativeArray63.getParentScope();
        java.lang.Object[] objArray65 = nativeArray63.getIds();
        boolean boolean66 = nativeArray63.isEmpty();
        boolean boolean67 = nativeArray53.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray63);
        java.lang.Object[] objArray68 = nativeArray53.getIds();
        nativeArray12.defineConst("object", (com.google.javascript.rhino.head.Scriptable) nativeArray53);
        nativeArray53.activatePrototypeMap((int) '#');
        com.google.javascript.rhino.head.Scriptable scriptable72 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray53);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[length]");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1L + "'", long21 == 1L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 1L + "'", long28 == 1L);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[null]");
        org.junit.Assert.assertNull(scriptable40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(scriptable42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(scriptable47);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 1L + "'", long56 == 1L);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(scriptable64);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[]");
        org.junit.Assert.assertNull(scriptable72);
    }

    @Test
    public void test2331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2331");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.getAllIds();
        nativeArray24.delete("");
        java.lang.Object obj33 = nativeArray9.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        com.google.javascript.rhino.head.Scriptable scriptable34 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray24);
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray36.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray39, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray44.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj47 = nativeArray39.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray44);
        boolean boolean48 = nativeArray39.hasPrototypeMap();
        java.lang.Object[] objArray49 = nativeArray39.getIds();
        int int50 = nativeArray39.size();
        com.google.javascript.rhino.head.NativeArray nativeArray52 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int54 = nativeArray52.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray39.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray52);
        java.lang.Object[] objArray56 = nativeArray52.getAllIds();
        int int57 = nativeArray24.indexOf((java.lang.Object) objArray56);
        com.google.javascript.rhino.head.Scriptable scriptable58 = nativeArray24.getParentScope();
        java.util.Iterator iterator59 = nativeArray24.iterator();
        com.google.javascript.rhino.head.NativeArray nativeArray61 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable62 = nativeArray61.getParentScope();
        java.lang.Object[] objArray63 = nativeArray61.getIds();
        boolean boolean64 = nativeArray61.isEmpty();
        java.lang.Object obj66 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray61, 8);
        com.google.javascript.rhino.head.Scriptable scriptable67 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray61);
        boolean boolean69 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray61, "Array");
        int int70 = nativeArray24.indexOf((java.lang.Object) boolean69);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(scriptable34);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[hi!]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[length]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNull(scriptable58);
        org.junit.Assert.assertNotNull(iterator59);
        org.junit.Assert.assertNull(scriptable62);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNull(scriptable67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
    }

    @Test
    public void test2332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2332");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        com.google.javascript.rhino.head.Scriptable scriptable11 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.Context context15 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int19 = nativeArray17.lastIndexOf((java.lang.Object) (short) 10);
        long long20 = nativeArray17.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray17, "", true);
        boolean boolean24 = nativeArray17.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable28 = nativeArray27.getParentScope();
        java.lang.Object[] objArray29 = nativeArray27.getIds();
        boolean boolean30 = nativeArray27.isEmpty();
        boolean boolean31 = nativeArray17.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray27);
        boolean boolean33 = nativeArray27.isConst("object");
        nativeArray1.defineOwnProperties(context15, (com.google.javascript.rhino.head.ScriptableObject) nativeArray27);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray27, "hi!");
        nativeArray27.sealObject();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray27, "object", true);
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray45, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray50.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj53 = nativeArray45.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray50);
        boolean boolean54 = nativeArray45.hasPrototypeMap();
        java.lang.Object[] objArray55 = nativeArray45.getIds();
        int int56 = nativeArray45.size();
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray62 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray59.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray62, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray67 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray67.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj70 = nativeArray62.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray67);
        boolean boolean71 = nativeArray62.hasPrototypeMap();
        java.lang.Object[] objArray72 = nativeArray62.getIds();
        int int73 = nativeArray62.size();
        com.google.javascript.rhino.head.NativeArray nativeArray75 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int77 = nativeArray75.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray62.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray75);
        java.lang.Object obj79 = nativeArray45.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray62);
        java.lang.Object[] objArray80 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray62);
        java.lang.Object obj81 = nativeArray27.getAssociatedValue((java.lang.Object) nativeArray62);
        java.lang.Object[] objArray82 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray62);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(scriptable11);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 1L + "'", long20 == 1L);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(scriptable28);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[hi!]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[hi!]");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[hi!]");
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray82), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray82), "[hi!]");
    }

    @Test
    public void test2333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2333");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.getAllIds();
        nativeArray1.delete("");
        long long10 = nativeArray1.getLength();
        boolean boolean12 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, (int) (short) 10);
        nativeArray1.delete(2);
        com.google.javascript.rhino.head.Scriptable scriptable15 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        boolean boolean16 = nativeArray1.isExtensible();
        java.util.Iterator iterator17 = nativeArray1.iterator();
        com.google.javascript.rhino.head.Context context18 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray20.delete((-1));
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable31 = nativeArray24.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable32 = nativeArray24.getParentScope();
        boolean boolean33 = nativeArray24.isSealed();
        java.lang.Object obj35 = nativeArray24.get(0L);
        long long36 = nativeArray24.getLength();
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int41 = nativeArray39.lastIndexOf((java.lang.Object) (short) 10);
        long long42 = nativeArray39.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray39, "", true);
        boolean boolean46 = nativeArray39.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray49 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable50 = nativeArray49.getParentScope();
        java.lang.Object[] objArray51 = nativeArray49.getIds();
        boolean boolean52 = nativeArray49.isEmpty();
        boolean boolean53 = nativeArray39.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray49);
        boolean boolean55 = nativeArray49.isConst("object");
        java.lang.Object obj57 = nativeArray49.get((java.lang.Object) (byte) 10);
        nativeArray49.preventExtensions();
        boolean boolean59 = nativeArray24.has("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray49);
        int int60 = nativeArray20.lastIndexOf((java.lang.Object) nativeArray24);
        com.google.javascript.rhino.head.NativeArray nativeArray63 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray63.activatePrototypeMap((int) (short) 100);
        boolean boolean66 = nativeArray24.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray63);
        com.google.javascript.rhino.head.NativeArray nativeArray68 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int70 = nativeArray68.lastIndexOf((java.lang.Object) (short) 10);
        long long71 = nativeArray68.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray68, "", true);
        boolean boolean75 = nativeArray68.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray78 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable79 = nativeArray78.getParentScope();
        java.lang.Object[] objArray80 = nativeArray78.getIds();
        boolean boolean81 = nativeArray78.isEmpty();
        boolean boolean82 = nativeArray68.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray78);
        boolean boolean84 = nativeArray78.isConst("object");
        boolean boolean85 = nativeArray78.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray88 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        java.lang.Object obj90 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray88, "Array");
        boolean boolean91 = nativeArray88.isSealed();
        java.lang.Object obj92 = nativeArray78.get("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray88);
        int int93 = nativeArray78.size();
        // The following exception was thrown during execution in test generation
        try {
            nativeArray1.defineOwnProperty(context18, (java.lang.Object) nativeArray24, (com.google.javascript.rhino.head.ScriptableObject) nativeArray78);
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EcmaError; message: TypeError: Cannot find default value for object.");
        } catch (com.google.javascript.rhino.head.EcmaError e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[length]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(scriptable15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(iterator17);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[null]");
        org.junit.Assert.assertNull(scriptable31);
        org.junit.Assert.assertNull(scriptable32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 1L + "'", long36 == 1L);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 1L + "'", long42 == 1L);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(scriptable50);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 1L + "'", long71 == 1L);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNull(scriptable79);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 1 + "'", int93 == 1);
    }

    @Test
    public void test2334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2334");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray(100L);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int6 = nativeArray4.lastIndexOf((java.lang.Object) (short) 10);
        long long7 = nativeArray4.getLength();
        nativeArray4.delete((int) (byte) 1);
        boolean boolean10 = nativeArray4.isExtensible();
        java.lang.Object obj12 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, 4);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "hi!", (java.lang.Object) (short) 10);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj16 = nativeArray1.set((int) (short) -1, (java.lang.Object) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(obj12);
    }

    @Test
    public void test2335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2335");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj20 = nativeArray12.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray17);
        boolean boolean21 = nativeArray12.hasPrototypeMap();
        java.lang.Object[] objArray22 = nativeArray12.getIds();
        int int23 = nativeArray12.size();
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray28, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray33.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj36 = nativeArray28.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray33);
        boolean boolean37 = nativeArray28.hasPrototypeMap();
        java.lang.Object[] objArray38 = nativeArray28.getIds();
        int int39 = nativeArray28.size();
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray45, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray50.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj53 = nativeArray45.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray50);
        boolean boolean54 = nativeArray45.hasPrototypeMap();
        java.lang.Object[] objArray55 = nativeArray45.getIds();
        int int56 = nativeArray45.size();
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int60 = nativeArray58.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray45.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray58);
        java.lang.Object obj62 = nativeArray28.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray45);
        boolean boolean63 = nativeArray12.containsAll((java.util.Collection) nativeArray45);
        nativeArray1.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray12);
        java.util.ListIterator listIterator65 = nativeArray1.listIterator();
        java.lang.Object obj67 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable68 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray71 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int73 = nativeArray71.lastIndexOf((java.lang.Object) (short) 10);
        long long74 = nativeArray71.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray71, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable78 = null;
        java.lang.Object[] objArray79 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable78);
        java.lang.Object[] objArray80 = nativeArray71.toArray(objArray79);
        com.google.javascript.rhino.head.Scriptable scriptable81 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray71);
        java.lang.Object[] objArray82 = nativeArray71.getIds();
        java.lang.String str83 = nativeArray71.getClassName();
        com.google.javascript.rhino.head.NativeArray nativeArray85 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int87 = nativeArray85.lastIndexOf((java.lang.Object) (short) 10);
        long long88 = nativeArray85.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray85, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable92 = null;
        java.lang.Object[] objArray93 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable92);
        java.lang.Object[] objArray94 = nativeArray85.toArray(objArray93);
        java.lang.Object[] objArray95 = nativeArray71.toArray(objArray93);
        com.google.javascript.rhino.head.NativeArray nativeArray96 = new com.google.javascript.rhino.head.NativeArray(objArray95);
        boolean boolean97 = nativeArray96.avoidObjectDetection();
        java.lang.Object obj98 = nativeArray1.get(1, (com.google.javascript.rhino.head.Scriptable) nativeArray96);
        com.google.javascript.rhino.head.Scriptable scriptable99 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[hi!]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[hi!]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[hi!]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(listIterator65);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNull(scriptable68);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 1L + "'", long74 == 1L);
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[]");
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[null]");
        org.junit.Assert.assertNull(scriptable81);
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray82), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray82), "[]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "Array" + "'", str83, "Array");
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + 1L + "'", long88 == 1L);
        org.junit.Assert.assertNotNull(objArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray93), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray93), "[]");
        org.junit.Assert.assertNotNull(objArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray94), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray94), "[null]");
        org.junit.Assert.assertNotNull(objArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray95), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray95), "[null]");
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertNotNull(obj98);
        org.junit.Assert.assertNull(scriptable99);
    }

    @Test
    public void test2336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2336");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray15, (java.lang.Object) (-1));
        java.lang.Object[] objArray18 = nativeArray12.getAllIds();
        nativeArray12.delete("");
        long long21 = nativeArray12.getLength();
        boolean boolean22 = nativeArray1.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray12);
        com.google.javascript.rhino.head.Scriptable scriptable23 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int28 = nativeArray26.lastIndexOf((java.lang.Object) (short) 10);
        long long29 = nativeArray26.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray26, "", true);
        boolean boolean33 = nativeArray26.hasPrototypeMap();
        int int34 = nativeArray26.size();
        boolean boolean35 = nativeArray26.isEmpty();
        boolean boolean37 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray26, "Array");
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int42 = nativeArray40.lastIndexOf((java.lang.Object) (short) 10);
        long long43 = nativeArray40.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray40, "", true);
        boolean boolean47 = nativeArray40.hasPrototypeMap();
        java.util.ListIterator listIterator48 = nativeArray40.listIterator();
        boolean boolean49 = nativeArray26.has("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray40);
        boolean boolean50 = nativeArray26.hasPrototypeMap();
        java.lang.Object[] objArray51 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray26);
        nativeArray1.defineConst("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        com.google.javascript.rhino.head.Scriptable scriptable53 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[length]");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1L + "'", long21 == 1L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(scriptable23);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 1L + "'", long29 == 1L);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 1L + "'", long43 == 1L);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(listIterator48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertNull(scriptable53);
    }

    @Test
    public void test2337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2337");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) (short) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int6 = nativeArray4.lastIndexOf((java.lang.Object) (short) 10);
        long long7 = nativeArray4.getLength();
        nativeArray4.delete((int) (byte) 1);
        boolean boolean10 = nativeArray4.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray15, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray20.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj23 = nativeArray15.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray20);
        boolean boolean24 = nativeArray15.hasPrototypeMap();
        java.lang.Object[] objArray25 = nativeArray15.getIds();
        int int26 = nativeArray15.size();
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray28.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray31, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray36.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj39 = nativeArray31.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray36);
        boolean boolean40 = nativeArray31.hasPrototypeMap();
        java.lang.Object[] objArray41 = nativeArray31.getIds();
        int int42 = nativeArray31.size();
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray45.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray48, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray53 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray53.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj56 = nativeArray48.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray53);
        boolean boolean57 = nativeArray48.hasPrototypeMap();
        java.lang.Object[] objArray58 = nativeArray48.getIds();
        int int59 = nativeArray48.size();
        com.google.javascript.rhino.head.NativeArray nativeArray61 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int63 = nativeArray61.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray48.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray61);
        java.lang.Object obj65 = nativeArray31.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray48);
        boolean boolean66 = nativeArray15.containsAll((java.util.Collection) nativeArray48);
        nativeArray4.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray15);
        java.lang.Integer[] intArray68 = nativeArray4.getIndexIds();
        boolean boolean69 = nativeArray4.hasPrototypeMap();
        java.lang.Integer[] intArray70 = nativeArray4.getIndexIds();
        nativeArray1.defineProperty("object", (java.lang.Object) nativeArray4, 2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[hi!]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[hi!]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[hi!]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(intArray70);
    }

    @Test
    public void test2338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2338");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        nativeArray9.delete("Array");
        boolean boolean21 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, (int) 'a');
        boolean boolean22 = nativeArray9.hasPrototypeMap();
        boolean boolean23 = nativeArray9.isEmpty();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test2339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2339");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object obj10 = nativeArray4.getGetterOrSetter("object", (int) (short) 0, true);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int14 = nativeArray12.lastIndexOf((java.lang.Object) (short) 10);
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray16.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray19, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray23.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray26, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray31.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj34 = nativeArray26.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray31);
        com.google.javascript.rhino.head.Callable callable37 = null;
        nativeArray26.setGetterOrSetter("hi!", 0, callable37, false);
        java.lang.Integer[] intArray40 = nativeArray26.getIndexIds();
        nativeArray19.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray26);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int45 = nativeArray43.lastIndexOf((java.lang.Object) (short) 10);
        long long46 = nativeArray43.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray43, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray54 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray51.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray54, (java.lang.Object) (-1));
        java.lang.Object[] objArray57 = nativeArray51.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable58 = nativeArray51.getParentScope();
        boolean boolean59 = nativeArray43.containsAll((java.util.Collection) nativeArray51);
        nativeArray51.delete("Array");
        java.lang.Object obj62 = nativeArray19.getAssociatedValue((java.lang.Object) nativeArray51);
        boolean boolean63 = nativeArray12.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray19);
        com.google.javascript.rhino.head.Scriptable scriptable64 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray19);
        java.lang.String str65 = nativeArray19.getClassName();
        nativeArray4.setPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray19);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "", true);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 1L + "'", long46 == 1L);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[null]");
        org.junit.Assert.assertNull(scriptable58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(scriptable64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "Array" + "'", str65, "Array");
    }

    @Test
    public void test2340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2340");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        com.google.javascript.rhino.head.Scriptable scriptable18 = nativeArray9.getParentScope();
        boolean boolean19 = nativeArray9.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable23 = nativeArray22.getParentScope();
        java.lang.Object[] objArray24 = nativeArray22.getIds();
        boolean boolean25 = nativeArray9.has("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray22);
        java.util.Iterator iterator26 = nativeArray22.iterator();
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int31 = nativeArray29.lastIndexOf((java.lang.Object) (short) 10);
        long long32 = nativeArray29.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray29, "", true);
        boolean boolean36 = nativeArray29.hasPrototypeMap();
        boolean boolean37 = nativeArray29.isExtensible();
        boolean boolean38 = nativeArray22.has((int) (byte) 100, (com.google.javascript.rhino.head.Scriptable) nativeArray29);
        boolean boolean39 = nativeArray29.avoidObjectDetection();
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray41.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray44, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.Scriptable scriptable47 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray41);
        int int48 = nativeArray41.size();
        com.google.javascript.rhino.head.Scriptable scriptable49 = nativeArray41.getParentScope();
        java.lang.Object[] objArray50 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray41);
        int int51 = nativeArray29.lastIndexOf((java.lang.Object) objArray50);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(scriptable18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(scriptable23);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(iterator26);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1L + "'", long32 == 1L);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(scriptable47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertNull(scriptable49);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
    }

    @Test
    public void test2341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2341");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        java.lang.reflect.Method method11 = null;
        java.lang.reflect.Method method12 = null;
        nativeArray1.defineProperty("hi!", (java.lang.Object) (-1L), method11, method12, (int) (byte) 10);
        boolean boolean16 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        nativeArray1.sealObject();
        nativeArray1.preventExtensions();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj20 = nativeArray1.get((long) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test2342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2342");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int11 = nativeArray9.lastIndexOf((java.lang.Object) (short) 10);
        long long12 = nativeArray9.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray20, (java.lang.Object) (-1));
        java.lang.Object[] objArray23 = nativeArray17.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable24 = nativeArray17.getParentScope();
        boolean boolean25 = nativeArray9.containsAll((java.util.Collection) nativeArray17);
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int30 = nativeArray28.lastIndexOf((java.lang.Object) (short) 10);
        long long31 = nativeArray28.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray28, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable35 = null;
        java.lang.Object[] objArray36 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable35);
        java.lang.Object[] objArray37 = nativeArray28.toArray(objArray36);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) objArray36);
        nativeArray9.activatePrototypeMap((int) (byte) 10);
        boolean boolean41 = nativeArray1.has((int) (short) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int46 = nativeArray44.lastIndexOf((java.lang.Object) (short) 10);
        long long47 = nativeArray44.getLength();
        java.lang.Object[] objArray48 = nativeArray44.toArray();
        java.lang.Object obj49 = nativeArray1.get((int) (byte) 100, (com.google.javascript.rhino.head.Scriptable) nativeArray44);
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray54 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray51.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray54, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray59.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj62 = nativeArray54.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray59);
        boolean boolean63 = nativeArray54.hasPrototypeMap();
        java.lang.Object[] objArray64 = nativeArray54.getIds();
        int int65 = nativeArray54.size();
        java.util.Iterator iterator66 = nativeArray54.iterator();
        com.google.javascript.rhino.head.Scriptable scriptable67 = nativeArray54.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable68 = nativeArray54.getPrototype();
        java.lang.Object obj69 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray1, (java.lang.Object) scriptable68);
        boolean boolean70 = nativeArray1.avoidObjectDetection();
        boolean boolean72 = nativeArray1.isConst("hi!");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 1L + "'", long12 == 1L);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[null]");
        org.junit.Assert.assertNull(scriptable24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 1L + "'", long31 == 1L);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[null]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 1L + "'", long47 == 1L);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[null]");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[hi!]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertNotNull(iterator66);
        org.junit.Assert.assertNull(scriptable67);
        org.junit.Assert.assertNull(scriptable68);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test2343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2343");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj38 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        boolean boolean39 = nativeArray21.isSealed();
        boolean boolean40 = nativeArray21.hasPrototypeMap();
        java.lang.Object obj42 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray21, "object");
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable45 = nativeArray44.getParentScope();
        java.lang.Object[] objArray46 = nativeArray44.getIds();
        boolean boolean47 = nativeArray44.isEmpty();
        int int48 = nativeArray44.size();
        java.lang.Object[] objArray49 = nativeArray44.getIds();
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 8);
        java.lang.Object obj52 = nativeArray21.associateValue((java.lang.Object) nativeArray44, (java.lang.Object) 8);
        boolean boolean54 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray44, "object");
        java.lang.Class<?> wildcardClass55 = nativeArray44.getClass();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNull(scriptable45);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 8 + "'", obj52, 8);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test2344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2344");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.Scriptable scriptable7 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        int int8 = nativeArray1.size();
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray14.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray17, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray22.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj25 = nativeArray17.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray22);
        com.google.javascript.rhino.head.Callable callable28 = null;
        nativeArray17.setGetterOrSetter("hi!", 0, callable28, false);
        nativeArray11.setAttributes((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray17, (int) (short) 10);
        java.util.ListIterator listIterator33 = nativeArray17.listIterator();
        java.lang.Object obj34 = nativeArray1.get(0, (com.google.javascript.rhino.head.Scriptable) nativeArray17);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray37.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray40, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray45.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj48 = nativeArray40.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray45);
        boolean boolean49 = nativeArray40.hasPrototypeMap();
        java.lang.Object[] objArray50 = nativeArray40.getIds();
        int int51 = nativeArray40.size();
        com.google.javascript.rhino.head.NativeArray nativeArray54 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray57 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray54.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray57, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray62 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray62.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj65 = nativeArray57.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray62);
        boolean boolean66 = nativeArray57.hasPrototypeMap();
        java.lang.Object[] objArray67 = nativeArray57.getIds();
        int int68 = nativeArray57.size();
        com.google.javascript.rhino.head.NativeArray nativeArray70 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int72 = nativeArray70.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray57.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray70);
        java.lang.Object obj74 = nativeArray40.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray57);
        java.lang.Object[] objArray75 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray57);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray17, 0, (java.lang.Object) objArray75);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator listIterator78 = nativeArray17.listIterator(10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(scriptable7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(listIterator33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[hi!]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[hi!]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[hi!]");
    }

    @Test
    public void test2345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2345");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        com.google.javascript.rhino.head.Scriptable scriptable18 = nativeArray9.getParentScope();
        boolean boolean19 = nativeArray9.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int24 = nativeArray22.lastIndexOf((java.lang.Object) (short) 10);
        long long25 = nativeArray22.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray22, "", true);
        boolean boolean29 = nativeArray22.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable33 = nativeArray32.getParentScope();
        java.lang.Object[] objArray34 = nativeArray32.getIds();
        boolean boolean35 = nativeArray32.isEmpty();
        boolean boolean36 = nativeArray22.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray32);
        boolean boolean38 = nativeArray32.isConst("object");
        java.lang.Object obj40 = nativeArray32.get((java.lang.Object) (byte) 10);
        com.google.javascript.rhino.head.Scriptable scriptable41 = null;
        nativeArray32.setParentScope(scriptable41);
        nativeArray9.setAttributes((-1), (com.google.javascript.rhino.head.Scriptable) nativeArray32, 0);
        com.google.javascript.rhino.head.Scriptable scriptable46 = null;
        java.lang.Object obj47 = nativeArray9.get((int) (byte) 1, scriptable46);
        boolean boolean49 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "");
        boolean boolean51 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, 8);
        com.google.javascript.rhino.head.Context context52 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray54 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray57 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray54.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray57, (java.lang.Object) (-1));
        // The following exception was thrown during execution in test generation
        try {
            nativeArray9.defineOwnProperties(context52, (com.google.javascript.rhino.head.ScriptableObject) nativeArray57);
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EcmaError; message: TypeError: Expected argument of type object, but instead had type number");
        } catch (com.google.javascript.rhino.head.EcmaError e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(scriptable18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 1L + "'", long25 == 1L);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(scriptable33);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    }

    @Test
    public void test2346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2346");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable2 = nativeArray1.getParentScope();
        com.google.javascript.rhino.head.NativeArray nativeArray5 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray5.activatePrototypeMap((int) (short) 100);
        com.google.javascript.rhino.head.Scriptable scriptable9 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray5, "");
        boolean boolean10 = nativeArray1.has(100, scriptable9);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int14 = nativeArray12.lastIndexOf((java.lang.Object) (short) 10);
        long long15 = nativeArray12.getLength();
        nativeArray12.delete((int) (byte) 1);
        boolean boolean18 = nativeArray12.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable22 = nativeArray21.getParentScope();
        java.lang.Object[] objArray23 = nativeArray21.getIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray12, "", (java.lang.Object) nativeArray21, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray28.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray31, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray36.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj39 = nativeArray31.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray36);
        boolean boolean40 = nativeArray31.hasPrototypeMap();
        java.lang.Object[] objArray41 = nativeArray31.getIds();
        int int42 = nativeArray31.size();
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int46 = nativeArray44.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray31.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray44);
        java.lang.Object obj48 = nativeArray12.get((int) (short) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray44);
        com.google.javascript.rhino.head.Scriptable scriptable49 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray44);
        nativeArray1.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray44);
        long long51 = nativeArray44.getLength();
        nativeArray44.preventExtensions();
        boolean boolean53 = nativeArray44.hasPrototypeMap();
        org.junit.Assert.assertNull(scriptable2);
        org.junit.Assert.assertNull(scriptable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 1L + "'", long15 == 1L);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(scriptable22);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[hi!]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(scriptable49);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 1L + "'", long51 == 1L);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test2347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2347");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) (short) 10);
        java.lang.Object[] objArray2 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray3 = new com.google.javascript.rhino.head.NativeArray(objArray2);
        nativeArray3.delete(0);
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
    }

    @Test
    public void test2348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2348");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable8 = nativeArray1.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable9 = nativeArray1.getParentScope();
        boolean boolean10 = nativeArray1.isSealed();
        boolean boolean11 = nativeArray1.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray14.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray17, (java.lang.Object) (-1));
        java.lang.Object[] objArray20 = nativeArray14.getAllIds();
        java.lang.String str21 = nativeArray14.getTypeOf();
        int int22 = nativeArray14.size();
        java.lang.reflect.Method method23 = null;
        java.lang.reflect.Method method24 = null;
        nativeArray1.defineProperty("", (java.lang.Object) nativeArray14, method23, method24, (int) (byte) 10);
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray32, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray37.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj40 = nativeArray32.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        boolean boolean41 = nativeArray32.hasPrototypeMap();
        java.lang.Object[] objArray42 = nativeArray32.getIds();
        int int43 = nativeArray32.size();
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray45.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray48, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray53 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray53.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj56 = nativeArray48.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray53);
        boolean boolean57 = nativeArray48.hasPrototypeMap();
        java.lang.Object[] objArray58 = nativeArray48.getIds();
        int int59 = nativeArray48.size();
        com.google.javascript.rhino.head.NativeArray nativeArray62 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray65 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray62.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray65, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray70 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray70.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj73 = nativeArray65.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray70);
        boolean boolean74 = nativeArray65.hasPrototypeMap();
        java.lang.Object[] objArray75 = nativeArray65.getIds();
        int int76 = nativeArray65.size();
        com.google.javascript.rhino.head.NativeArray nativeArray78 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int80 = nativeArray78.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray65.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray78);
        java.lang.Object obj82 = nativeArray48.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray65);
        boolean boolean83 = nativeArray32.containsAll((java.util.Collection) nativeArray65);
        com.google.javascript.rhino.head.Scriptable scriptable84 = nativeArray32.getParentScope();
        boolean boolean86 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray32, (int) (byte) 100);
        boolean boolean87 = nativeArray1.has(1, (com.google.javascript.rhino.head.Scriptable) nativeArray32);
        long long88 = nativeArray1.jsGet_length();
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[null]");
        org.junit.Assert.assertNull(scriptable8);
        org.junit.Assert.assertNull(scriptable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[length]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "object" + "'", str21, "object");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[hi!]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[hi!]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[hi!]");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNull(scriptable84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + 1L + "'", long88 == 1L);
    }

    @Test
    public void test2349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2349");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int19 = nativeArray17.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray4.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray17);
        long long21 = nativeArray17.getLength();
        long long22 = nativeArray17.jsGet_length();
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray28, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int35 = nativeArray33.lastIndexOf((java.lang.Object) (short) 10);
        long long36 = nativeArray33.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray33, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray41.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray44, (java.lang.Object) (-1));
        java.lang.Object[] objArray47 = nativeArray41.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable48 = nativeArray41.getParentScope();
        boolean boolean49 = nativeArray33.containsAll((java.util.Collection) nativeArray41);
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray54 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray51.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray54, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray59.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj62 = nativeArray54.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray59);
        boolean boolean63 = nativeArray54.hasPrototypeMap();
        java.lang.Object[] objArray64 = nativeArray54.getIds();
        java.lang.Object[] objArray65 = nativeArray41.toArray(objArray64);
        boolean boolean67 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray41, "Array");
        java.lang.Object obj68 = nativeArray28.get(2, (com.google.javascript.rhino.head.Scriptable) nativeArray41);
        nativeArray28.delete((int) '#');
        boolean boolean71 = nativeArray17.has((int) (short) 100, (com.google.javascript.rhino.head.Scriptable) nativeArray28);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List list74 = nativeArray28.subList(4, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1L + "'", long21 == 1L);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1L + "'", long22 == 1L);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 1L + "'", long36 == 1L);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[null]");
        org.junit.Assert.assertNull(scriptable48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[null]");
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[null]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test2350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2350");
        com.google.javascript.rhino.head.Scriptable scriptable0 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray3 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray6 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray3.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray6, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray11.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj14 = nativeArray6.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray11);
        com.google.javascript.rhino.head.Callable callable17 = null;
        nativeArray6.setGetterOrSetter("hi!", 0, callable17, false);
        java.lang.Integer[] intArray20 = nativeArray6.getIndexIds();
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((java.lang.Object[]) intArray20);
        com.google.javascript.rhino.head.Scriptable scriptable22 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray21);
        java.lang.Object[] objArray23 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray21);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ScriptableObject.putProperty(scriptable0, (int) (short) 0, (java.lang.Object) objArray23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertNull(scriptable22);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
    }

    @Test
    public void test2351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2351");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj38 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        java.lang.Object[] objArray39 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray4);
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int44 = nativeArray42.lastIndexOf((java.lang.Object) (short) 10);
        long long45 = nativeArray42.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray42, "", true);
        boolean boolean49 = nativeArray42.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray54 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray51.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray54, (java.lang.Object) (-1));
        java.lang.Object[] objArray57 = nativeArray51.getAllIds();
        nativeArray51.delete("");
        boolean boolean60 = nativeArray42.contains((java.lang.Object) "");
        boolean boolean61 = nativeArray4.has("object", (com.google.javascript.rhino.head.Scriptable) nativeArray42);
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable65 = nativeArray64.getParentScope();
        java.lang.Object[] objArray66 = nativeArray64.getIds();
        boolean boolean67 = nativeArray64.isEmpty();
        nativeArray64.activatePrototypeMap(13);
        java.util.Iterator iterator70 = nativeArray64.iterator();
        nativeArray4.setAttributes((int) (short) 100, (com.google.javascript.rhino.head.Scriptable) nativeArray64, 0);
        com.google.javascript.rhino.head.Scriptable scriptable73 = nativeArray64.getPrototype();
        java.lang.Integer[] intArray74 = nativeArray64.getIndexIds();
        java.lang.Object obj75 = null;
        java.lang.Object obj76 = nativeArray64.getAssociatedValue(obj75);
        java.util.ListIterator listIterator77 = nativeArray64.listIterator();
        java.lang.Object[] objArray78 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray64);
        boolean boolean80 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray64, "object");
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[hi!]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 1L + "'", long45 == 1L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[length]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(scriptable65);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(iterator70);
        org.junit.Assert.assertNull(scriptable73);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNotNull(listIterator77);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test2352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2352");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int19 = nativeArray17.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray4.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray17);
        long long21 = nativeArray17.getLength();
        long long22 = nativeArray17.jsGet_length();
        java.lang.String str23 = nativeArray17.getTypeOf();
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        java.lang.Object obj28 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray26, "Array");
        nativeArray17.defineProperty("Array", (java.lang.Object) nativeArray26, 0);
        boolean boolean32 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray26, "object");
        long long33 = nativeArray26.getLength();
        // The following exception was thrown during execution in test generation
        try {
            int int35 = nativeArray26.getAttributes((-1));
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EvaluatorException; message: Property -1 not found.");
        } catch (com.google.javascript.rhino.head.EvaluatorException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1L + "'", long21 == 1L);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1L + "'", long22 == 1L);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "object" + "'", str23, "object");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 1L + "'", long33 == 1L);
    }

    @Test
    public void test2353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2353");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray3 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int5 = nativeArray3.lastIndexOf((java.lang.Object) (short) 10);
        long long6 = nativeArray3.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray3, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray11.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray14, (java.lang.Object) (-1));
        java.lang.Object[] objArray17 = nativeArray11.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable18 = nativeArray11.getParentScope();
        boolean boolean19 = nativeArray3.containsAll((java.util.Collection) nativeArray11);
        com.google.javascript.rhino.head.Scriptable scriptable20 = nativeArray11.getParentScope();
        boolean boolean21 = nativeArray1.containsAll((java.util.Collection) nativeArray11);
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int25 = nativeArray23.lastIndexOf((java.lang.Object) (short) 10);
        long long26 = nativeArray23.getLength();
        nativeArray23.delete((int) (byte) 1);
        boolean boolean30 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray23, "");
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int34 = nativeArray32.lastIndexOf((java.lang.Object) (short) 10);
        long long35 = nativeArray32.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray32, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray40.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray43, (java.lang.Object) (-1));
        java.lang.Object[] objArray46 = nativeArray40.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable47 = nativeArray40.getParentScope();
        boolean boolean48 = nativeArray32.containsAll((java.util.Collection) nativeArray40);
        boolean boolean49 = nativeArray23.containsAll((java.util.Collection) nativeArray32);
        com.google.javascript.rhino.head.NativeArray nativeArray52 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray52.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray55, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray60.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj63 = nativeArray55.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray60);
        boolean boolean64 = nativeArray55.hasPrototypeMap();
        java.lang.Object[] objArray65 = nativeArray55.getIds();
        int int66 = nativeArray55.size();
        com.google.javascript.rhino.head.NativeArray nativeArray69 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray72 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray69.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray72, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray77 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray77.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj80 = nativeArray72.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray77);
        boolean boolean81 = nativeArray72.hasPrototypeMap();
        java.lang.Object[] objArray82 = nativeArray72.getIds();
        int int83 = nativeArray72.size();
        com.google.javascript.rhino.head.NativeArray nativeArray85 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int87 = nativeArray85.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray72.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray85);
        java.lang.Object obj89 = nativeArray55.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray72);
        int int91 = nativeArray55.indexOf((java.lang.Object) 100.0f);
        java.lang.Object obj92 = nativeArray32.get((int) (byte) 100, (com.google.javascript.rhino.head.Scriptable) nativeArray55);
        nativeArray1.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray55);
        // The following exception was thrown during execution in test generation
        try {
            int int95 = nativeArray1.getAttributes("object");
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EvaluatorException; message: Property object not found.");
        } catch (com.google.javascript.rhino.head.EvaluatorException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[null]");
        org.junit.Assert.assertNull(scriptable18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(scriptable20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 1L + "'", long26 == 1L);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1L + "'", long35 == 1L);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[null]");
        org.junit.Assert.assertNull(scriptable47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[hi!]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray82), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray82), "[hi!]");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
        org.junit.Assert.assertNotNull(obj92);
    }

    @Test
    public void test2354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2354");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.activatePrototypeMap((int) (short) 100);
        java.util.Iterator iterator4 = nativeArray1.iterator();
        boolean boolean5 = nativeArray1.hasPrototypeMap();
        boolean boolean7 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array");
        boolean boolean9 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!");
        boolean boolean10 = nativeArray1.isExtensible();
        // The following exception was thrown during execution in test generation
        try {
            nativeArray1.activatePrototypeMap((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: null");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(iterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test2355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2355");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        boolean boolean12 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array");
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray15, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray23.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray26, (java.lang.Object) (-1));
        java.lang.Object[] objArray29 = nativeArray23.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable30 = nativeArray23.getParentScope();
        boolean boolean31 = nativeArray15.containsAll((java.util.Collection) nativeArray23);
        boolean boolean33 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray15, "object");
        nativeArray1.put(100, (com.google.javascript.rhino.head.Scriptable) nativeArray15, (java.lang.Object) ' ');
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int39 = nativeArray37.lastIndexOf((java.lang.Object) (short) 10);
        long long40 = nativeArray37.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray37, "", true);
        boolean boolean44 = nativeArray37.hasPrototypeMap();
        java.lang.reflect.Method method47 = null;
        java.lang.reflect.Method method48 = null;
        nativeArray37.defineProperty("hi!", (java.lang.Object) (-1L), method47, method48, (int) (byte) 10);
        boolean boolean52 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray37, "");
        nativeArray37.setAttributes("hi!", (int) (byte) 0);
        java.lang.Object[] objArray56 = nativeArray37.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray57 = new com.google.javascript.rhino.head.NativeArray(objArray56);
        java.lang.Object obj58 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray15, (java.lang.Object) objArray56);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[null]");
        org.junit.Assert.assertNull(scriptable30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 1L + "'", long40 == 1L);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[hi!, length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[hi!, length]");
        org.junit.Assert.assertNull(obj58);
    }

    @Test
    public void test2356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2356");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        java.lang.Integer[] intArray7 = nativeArray1.getIndexIds();
        java.lang.Object obj9 = null;
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!", obj9);
        java.lang.Object obj12 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray1, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int16 = nativeArray14.lastIndexOf((java.lang.Object) (short) 10);
        long long17 = nativeArray14.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray14, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable21 = null;
        java.lang.Object[] objArray22 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable21);
        java.lang.Object[] objArray23 = nativeArray14.toArray(objArray22);
        com.google.javascript.rhino.head.Scriptable scriptable24 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray14);
        boolean boolean25 = nativeArray1.contains((java.lang.Object) nativeArray14);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray27.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray30, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray35.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray38, (java.lang.Object) (-1));
        nativeArray27.put((int) (byte) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray35, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray45.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray48, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray53 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray53.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj56 = nativeArray48.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray53);
        boolean boolean57 = nativeArray48.hasPrototypeMap();
        java.lang.Object[] objArray58 = nativeArray48.getIds();
        int int59 = nativeArray48.size();
        boolean boolean60 = nativeArray27.has((int) (short) 100, (com.google.javascript.rhino.head.Scriptable) nativeArray48);
        boolean boolean61 = nativeArray48.avoidObjectDetection();
        java.util.Iterator iterator62 = nativeArray48.iterator();
        boolean boolean63 = nativeArray1.contains((java.lang.Object) iterator62);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        nativeArray1.delete((int) ' ');
        long long68 = nativeArray1.getLength();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj70 = nativeArray1.get((-1L));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 1L + "'", long17 == 1L);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[null]");
        org.junit.Assert.assertNotNull(scriptable24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[hi!]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(iterator62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 1L + "'", long68 == 1L);
    }

    @Test
    public void test2357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2357");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        java.lang.Integer[] intArray7 = nativeArray1.getIndexIds();
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((java.lang.Object[]) intArray7);
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray14.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray17, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray22.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj25 = nativeArray17.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray22);
        com.google.javascript.rhino.head.Callable callable28 = null;
        nativeArray17.setGetterOrSetter("hi!", 0, callable28, false);
        nativeArray11.setAttributes((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray17, (int) (short) 10);
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int37 = nativeArray35.lastIndexOf((java.lang.Object) (short) 10);
        long long38 = nativeArray35.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray35, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable42 = null;
        java.lang.Object[] objArray43 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable42);
        java.lang.Object[] objArray44 = nativeArray35.toArray(objArray43);
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int49 = nativeArray47.lastIndexOf((java.lang.Object) (short) 10);
        long long50 = nativeArray47.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray47, "", true);
        boolean boolean54 = nativeArray47.hasPrototypeMap();
        int int55 = nativeArray47.size();
        boolean boolean56 = nativeArray47.isEmpty();
        boolean boolean58 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray47, "Array");
        java.lang.Object obj59 = nativeArray35.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray47);
        java.lang.Object obj60 = nativeArray11.get("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray35);
        com.google.javascript.rhino.head.NativeArray nativeArray62 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable63 = nativeArray62.getParentScope();
        java.lang.Object[] objArray64 = nativeArray62.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray66 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray69 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray66.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray69, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray74 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray74.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj77 = nativeArray69.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray74);
        java.lang.Object obj78 = nativeArray62.getAssociatedValue((java.lang.Object) nativeArray69);
        java.lang.Object obj79 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray35, (java.lang.Object) nativeArray62);
        boolean boolean80 = nativeArray8.has((int) '#', (com.google.javascript.rhino.head.Scriptable) nativeArray62);
        boolean boolean81 = nativeArray62.isSealed();
        com.google.javascript.rhino.head.NativeArray nativeArray83 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int85 = nativeArray83.lastIndexOf((java.lang.Object) (short) 10);
        long long86 = nativeArray83.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray83, "", true);
        boolean boolean90 = nativeArray83.hasPrototypeMap();
        int int91 = nativeArray83.size();
        // The following exception was thrown during execution in test generation
        try {
            nativeArray62.initPrototypeMethod((java.lang.Object) nativeArray83, (-1), "Array", (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 1L + "'", long38 == 1L);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[]");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[null]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 1L + "'", long50 == 1L);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNull(scriptable63);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[length]");
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNull(obj78);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertTrue("'" + long86 + "' != '" + 1L + "'", long86 == 1L);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 1 + "'", int91 == 1);
    }

    @Test
    public void test2358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2358");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        java.lang.Object[] objArray4 = nativeArray1.getAllIds();
        java.lang.Object[] objArray5 = nativeArray1.toArray();
        java.lang.Integer[] intArray6 = nativeArray1.getIndexIds();
        boolean boolean8 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 100);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[length]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[null]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test2359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2359");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        java.lang.Integer[] intArray7 = nativeArray1.getIndexIds();
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((java.lang.Object[]) intArray7);
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray11.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray14, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray19.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray22, (java.lang.Object) (-1));
        nativeArray11.put((int) (byte) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray19, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray32, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray37.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj40 = nativeArray32.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        boolean boolean41 = nativeArray32.hasPrototypeMap();
        java.lang.Object[] objArray42 = nativeArray32.getIds();
        int int43 = nativeArray32.size();
        boolean boolean44 = nativeArray11.has((int) (short) 100, (com.google.javascript.rhino.head.Scriptable) nativeArray32);
        java.lang.Object obj45 = nativeArray8.get((int) '4', (com.google.javascript.rhino.head.Scriptable) nativeArray11);
        nativeArray8.delete("");
        nativeArray8.sealObject();
        boolean boolean50 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray8, "hi!");
        boolean boolean52 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray8, (int) (byte) 10);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[hi!]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test2360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2360");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable2 = nativeArray1.getParentScope();
        java.lang.Object[] objArray3 = nativeArray1.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray5 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray5.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray8, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray13.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj16 = nativeArray8.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray13);
        java.lang.Object obj17 = nativeArray1.getAssociatedValue((java.lang.Object) nativeArray8);
        nativeArray8.preventExtensions();
        boolean boolean20 = nativeArray8.isConst("hi!");
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray22.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray25, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray30.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj33 = nativeArray25.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray30);
        boolean boolean34 = nativeArray25.hasPrototypeMap();
        java.lang.Object[] objArray35 = nativeArray25.getIds();
        int int36 = nativeArray25.size();
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray38.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray41, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray46.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj49 = nativeArray41.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray46);
        boolean boolean50 = nativeArray41.hasPrototypeMap();
        java.lang.Object[] objArray51 = nativeArray41.getIds();
        int int52 = nativeArray41.size();
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray55.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray58, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray63 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray63.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj66 = nativeArray58.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray63);
        boolean boolean67 = nativeArray58.hasPrototypeMap();
        java.lang.Object[] objArray68 = nativeArray58.getIds();
        int int69 = nativeArray58.size();
        com.google.javascript.rhino.head.NativeArray nativeArray71 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int73 = nativeArray71.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray58.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray71);
        java.lang.Object obj75 = nativeArray41.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray58);
        boolean boolean76 = nativeArray25.containsAll((java.util.Collection) nativeArray58);
        java.lang.Object obj77 = null;
        java.lang.Object obj78 = nativeArray58.get(obj77);
        nativeArray58.sealObject();
        nativeArray8.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray58);
        com.google.javascript.rhino.head.Scriptable scriptable81 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray58);
        org.junit.Assert.assertNull(scriptable2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[length]");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[hi!]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[hi!]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[hi!]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNull(obj78);
        org.junit.Assert.assertNull(scriptable81);
    }

    @Test
    public void test2361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2361");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable2 = nativeArray1.getParentScope();
        com.google.javascript.rhino.head.NativeArray nativeArray5 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray5.activatePrototypeMap((int) (short) 100);
        com.google.javascript.rhino.head.Scriptable scriptable9 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray5, "");
        boolean boolean10 = nativeArray1.has(100, scriptable9);
        nativeArray1.setAttributes(4, (int) (byte) 0);
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int18 = nativeArray16.lastIndexOf((java.lang.Object) (short) 10);
        long long19 = nativeArray16.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray16, "", true);
        boolean boolean23 = nativeArray16.hasPrototypeMap();
        int int24 = nativeArray16.size();
        boolean boolean25 = nativeArray16.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray27.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray30, (java.lang.Object) (-1));
        java.lang.Object[] objArray33 = nativeArray27.getAllIds();
        nativeArray27.delete("");
        long long36 = nativeArray27.getLength();
        boolean boolean37 = nativeArray16.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray27);
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int42 = nativeArray40.lastIndexOf((java.lang.Object) (short) 10);
        long long43 = nativeArray40.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray40, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray48.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray51, (java.lang.Object) (-1));
        java.lang.Object[] objArray54 = nativeArray48.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable55 = nativeArray48.getParentScope();
        boolean boolean56 = nativeArray40.containsAll((java.util.Collection) nativeArray48);
        com.google.javascript.rhino.head.Scriptable scriptable57 = nativeArray48.getParentScope();
        boolean boolean58 = nativeArray48.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray61 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable62 = nativeArray61.getParentScope();
        java.lang.Object[] objArray63 = nativeArray61.getIds();
        boolean boolean64 = nativeArray48.has("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray61);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray27, "object", (java.lang.Object) nativeArray48);
        com.google.javascript.rhino.head.NativeArray nativeArray68 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int70 = nativeArray68.lastIndexOf((java.lang.Object) (short) 10);
        long long71 = nativeArray68.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray68, "", true);
        boolean boolean75 = nativeArray68.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray78 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable79 = nativeArray78.getParentScope();
        java.lang.Object[] objArray80 = nativeArray78.getIds();
        boolean boolean81 = nativeArray78.isEmpty();
        boolean boolean82 = nativeArray68.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray78);
        java.lang.Object[] objArray83 = nativeArray68.getIds();
        nativeArray27.defineConst("object", (com.google.javascript.rhino.head.Scriptable) nativeArray68);
        com.google.javascript.rhino.head.NativeArray nativeArray87 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        java.lang.Object obj89 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray87, "Array");
        com.google.javascript.rhino.head.Scriptable scriptable90 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray87);
        java.lang.String str91 = nativeArray87.getClassName();
        nativeArray87.setAttributes("", (int) (byte) 1);
        java.lang.Object[] objArray95 = nativeArray87.getAllIds();
        java.lang.Object obj96 = nativeArray27.get(100, (com.google.javascript.rhino.head.Scriptable) nativeArray87);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean97 = nativeArray1.addAll((int) (byte) 10, (java.util.Collection) nativeArray87);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(scriptable2);
        org.junit.Assert.assertNull(scriptable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 1L + "'", long19 == 1L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[length]");
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 1L + "'", long36 == 1L);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 1L + "'", long43 == 1L);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[null]");
        org.junit.Assert.assertNull(scriptable55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(scriptable57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(scriptable62);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 1L + "'", long71 == 1L);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNull(scriptable79);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray83), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray83), "[]");
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNull(scriptable90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "Array" + "'", str91, "Array");
        org.junit.Assert.assertNotNull(objArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray95), "[, length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray95), "[, length]");
        org.junit.Assert.assertNotNull(obj96);
    }

    @Test
    public void test2362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2362");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean8 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        boolean boolean9 = nativeArray1.hasPrototypeMap();
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "object");
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int16 = nativeArray14.lastIndexOf((java.lang.Object) (short) 10);
        long long17 = nativeArray14.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray14, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable21 = null;
        java.lang.Object[] objArray22 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable21);
        java.lang.Object[] objArray23 = nativeArray14.toArray(objArray22);
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int28 = nativeArray26.lastIndexOf((java.lang.Object) (short) 10);
        long long29 = nativeArray26.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray26, "", true);
        boolean boolean33 = nativeArray26.hasPrototypeMap();
        int int34 = nativeArray26.size();
        boolean boolean35 = nativeArray26.isEmpty();
        boolean boolean37 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray26, "Array");
        java.lang.Object obj38 = nativeArray14.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        nativeArray26.setAttributes("object", (int) (byte) 0);
        nativeArray26.preventExtensions();
        com.google.javascript.rhino.head.Scriptable scriptable43 = nativeArray26.getParentScope();
        java.lang.Object obj44 = nativeArray1.get("object", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean46 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray26, "object");
        boolean boolean47 = nativeArray26.avoidObjectDetection();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 1L + "'", long17 == 1L);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[null]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 1L + "'", long29 == 1L);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNull(scriptable43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test2363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2363");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj20 = nativeArray12.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray17);
        boolean boolean21 = nativeArray12.hasPrototypeMap();
        java.lang.Object[] objArray22 = nativeArray12.getIds();
        int int23 = nativeArray12.size();
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray28, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray33.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj36 = nativeArray28.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray33);
        boolean boolean37 = nativeArray28.hasPrototypeMap();
        java.lang.Object[] objArray38 = nativeArray28.getIds();
        int int39 = nativeArray28.size();
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray45, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray50.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj53 = nativeArray45.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray50);
        boolean boolean54 = nativeArray45.hasPrototypeMap();
        java.lang.Object[] objArray55 = nativeArray45.getIds();
        int int56 = nativeArray45.size();
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int60 = nativeArray58.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray45.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray58);
        java.lang.Object obj62 = nativeArray28.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray45);
        boolean boolean63 = nativeArray12.containsAll((java.util.Collection) nativeArray45);
        nativeArray1.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray12);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array", false);
        com.google.javascript.rhino.head.NativeArray nativeArray69 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable70 = nativeArray69.getParentScope();
        com.google.javascript.rhino.head.NativeArray nativeArray73 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray73.activatePrototypeMap((int) (short) 100);
        com.google.javascript.rhino.head.Scriptable scriptable77 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray73, "");
        boolean boolean78 = nativeArray69.has(100, scriptable77);
        java.lang.String str79 = nativeArray69.getClassName();
        nativeArray1.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray69);
        com.google.javascript.rhino.head.NativeArray nativeArray82 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int84 = nativeArray82.lastIndexOf((java.lang.Object) (short) 10);
        java.lang.Object[] objArray85 = nativeArray82.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray86 = new com.google.javascript.rhino.head.NativeArray(objArray85);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean87 = nativeArray1.remove((java.lang.Object) nativeArray86);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[hi!]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[hi!]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[hi!]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(scriptable70);
        org.junit.Assert.assertNull(scriptable77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "Array" + "'", str79, "Array");
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray85), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray85), "[length]");
    }

    @Test
    public void test2364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2364");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.getAllIds();
        java.lang.String str8 = nativeArray1.getTypeOf();
        java.lang.String str9 = nativeArray1.getTypeOf();
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray15.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray18, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray23.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj26 = nativeArray18.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray23);
        com.google.javascript.rhino.head.Callable callable29 = null;
        nativeArray18.setGetterOrSetter("hi!", 0, callable29, false);
        nativeArray12.setAttributes((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray18, (int) (short) 10);
        java.lang.Object obj34 = null;
        int int35 = nativeArray12.lastIndexOf(obj34);
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray38.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray41, (java.lang.Object) (-1));
        java.lang.Object[] objArray44 = nativeArray38.getAllIds();
        nativeArray38.delete("");
        long long47 = nativeArray38.getLength();
        boolean boolean49 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray38, (int) (short) 10);
        nativeArray38.delete(2);
        com.google.javascript.rhino.head.Scriptable scriptable52 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray38);
        java.lang.reflect.Method method53 = null;
        java.lang.reflect.Method method54 = null;
        nativeArray12.defineProperty("object", (java.lang.Object) scriptable52, method53, method54, (int) (short) 0);
        java.lang.Object[] objArray57 = nativeArray12.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int61 = nativeArray59.lastIndexOf((java.lang.Object) (short) 10);
        long long62 = nativeArray59.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray59, "", true);
        boolean boolean66 = nativeArray59.hasPrototypeMap();
        int int67 = nativeArray59.size();
        boolean boolean68 = nativeArray59.isEmpty();
        boolean boolean70 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray59, "Array");
        com.google.javascript.rhino.head.NativeArray nativeArray73 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int75 = nativeArray73.lastIndexOf((java.lang.Object) (short) 10);
        long long76 = nativeArray73.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray73, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray81 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray84 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray81.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray84, (java.lang.Object) (-1));
        java.lang.Object[] objArray87 = nativeArray81.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable88 = nativeArray81.getParentScope();
        boolean boolean89 = nativeArray73.containsAll((java.util.Collection) nativeArray81);
        boolean boolean91 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray73, "object");
        nativeArray59.put(100, (com.google.javascript.rhino.head.Scriptable) nativeArray73, (java.lang.Object) ' ');
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray59, "object", true);
        java.util.Iterator iterator97 = nativeArray59.iterator();
        nativeArray1.putConst("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) iterator97);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[length]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "object" + "'", str8, "object");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "object" + "'", str9, "object");
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[length]");
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 1L + "'", long47 == 1L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(scriptable52);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[object, 1, length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[object, 1, length]");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 1L + "'", long62 == 1L);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 1L + "'", long76 == 1L);
        org.junit.Assert.assertNotNull(objArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray87), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray87), "[null]");
        org.junit.Assert.assertNull(scriptable88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(iterator97);
    }

    @Test
    public void test2365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2365");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int11 = nativeArray9.lastIndexOf((java.lang.Object) (short) 10);
        long long12 = nativeArray9.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray20, (java.lang.Object) (-1));
        java.lang.Object[] objArray23 = nativeArray17.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable24 = nativeArray17.getParentScope();
        boolean boolean25 = nativeArray9.containsAll((java.util.Collection) nativeArray17);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray27.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray30, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray35.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj38 = nativeArray30.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray35);
        boolean boolean39 = nativeArray30.hasPrototypeMap();
        java.lang.Object[] objArray40 = nativeArray30.getIds();
        java.lang.Object[] objArray41 = nativeArray17.toArray(objArray40);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array", (java.lang.Object) nativeArray17);
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray48.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray51, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray56.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj59 = nativeArray51.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray56);
        com.google.javascript.rhino.head.Callable callable62 = null;
        nativeArray51.setGetterOrSetter("hi!", 0, callable62, false);
        nativeArray45.setAttributes((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray51, (int) (short) 10);
        boolean boolean68 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray51, 0);
        boolean boolean69 = nativeArray1.has(13, (com.google.javascript.rhino.head.Scriptable) nativeArray51);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray51, "", false);
        com.google.javascript.rhino.head.Scriptable scriptable73 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray51);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 1L + "'", long12 == 1L);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[null]");
        org.junit.Assert.assertNull(scriptable24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[null]");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[null]");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(scriptable73);
    }

    @Test
    public void test2366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2366");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.Scriptable scriptable7 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int11 = nativeArray9.lastIndexOf((java.lang.Object) (short) 10);
        long long12 = nativeArray9.getLength();
        nativeArray9.delete((int) (byte) 1);
        boolean boolean15 = nativeArray9.isExtensible();
        java.lang.Object obj17 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, 4);
        java.lang.Object[] objArray18 = nativeArray9.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray21.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray24, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj32 = nativeArray24.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray29);
        boolean boolean33 = nativeArray24.hasPrototypeMap();
        java.lang.Object[] objArray34 = nativeArray24.getIds();
        int int35 = nativeArray24.size();
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int39 = nativeArray37.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray24.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray37);
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable43 = nativeArray42.getParentScope();
        java.lang.Object[] objArray44 = nativeArray42.getIds();
        boolean boolean45 = nativeArray42.isEmpty();
        nativeArray9.put((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray24, (java.lang.Object) boolean45);
        boolean boolean47 = nativeArray1.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray24);
        nativeArray24.setAttributes("hi!", (int) (byte) 10);
        long long51 = nativeArray24.jsGet_length();
        org.junit.Assert.assertNull(scriptable7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 1L + "'", long12 == 1L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[null]");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[hi!]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNull(scriptable43);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 2L + "'", long51 == 2L);
    }

    @Test
    public void test2367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2367");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        java.lang.reflect.Method method11 = null;
        java.lang.reflect.Method method12 = null;
        nativeArray1.defineProperty("hi!", (java.lang.Object) (-1L), method11, method12, (int) (byte) 10);
        boolean boolean16 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        int int17 = nativeArray1.size();
        com.google.javascript.rhino.head.Scriptable scriptable19 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        nativeArray1.activatePrototypeMap((int) ' ');
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int25 = nativeArray23.lastIndexOf((java.lang.Object) (short) 10);
        long long26 = nativeArray23.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray23, "", true);
        boolean boolean30 = nativeArray23.hasPrototypeMap();
        com.google.javascript.rhino.head.Scriptable scriptable31 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray23);
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray34.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray37, (java.lang.Object) (-1));
        java.lang.Object[] objArray40 = nativeArray34.getAllIds();
        nativeArray34.delete("");
        long long43 = nativeArray34.getLength();
        boolean boolean45 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray34, (int) (short) 10);
        nativeArray34.delete(2);
        boolean boolean48 = nativeArray23.has(13, (com.google.javascript.rhino.head.Scriptable) nativeArray34);
        int int49 = nativeArray1.lastIndexOf((java.lang.Object) nativeArray34);
        com.google.javascript.rhino.head.Scriptable scriptable50 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNull(scriptable19);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 1L + "'", long26 == 1L);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(scriptable31);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[length]");
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 1L + "'", long43 == 1L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNull(scriptable50);
    }

    @Test
    public void test2368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2368");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable2 = nativeArray1.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable3 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray5 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int7 = nativeArray5.lastIndexOf((java.lang.Object) (short) 10);
        long long8 = nativeArray5.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray5, "", true);
        boolean boolean12 = nativeArray5.hasPrototypeMap();
        int int13 = nativeArray5.size();
        boolean boolean14 = nativeArray5.isEmpty();
        nativeArray1.setPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray5);
        // The following exception was thrown during execution in test generation
        try {
            nativeArray5.clear();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(scriptable2);
        org.junit.Assert.assertNull(scriptable3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 1L + "'", long8 == 1L);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test2369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2369");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable12 = nativeArray11.getParentScope();
        java.lang.Object[] objArray13 = nativeArray11.getIds();
        boolean boolean14 = nativeArray11.isEmpty();
        boolean boolean15 = nativeArray1.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray11);
        boolean boolean17 = nativeArray11.isConst("object");
        java.lang.Object obj19 = nativeArray11.get((java.lang.Object) (byte) 10);
        nativeArray11.preventExtensions();
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray28, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray33.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj36 = nativeArray28.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray33);
        com.google.javascript.rhino.head.Callable callable39 = null;
        nativeArray28.setGetterOrSetter("hi!", 0, callable39, false);
        nativeArray22.setAttributes((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray28, (int) (short) 10);
        boolean boolean45 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray22, "object");
        nativeArray11.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray22);
        java.lang.Object[] objArray47 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray22);
        com.google.javascript.rhino.head.Scriptable scriptable49 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray22, "");
        com.google.javascript.rhino.head.NativeArray nativeArray52 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray55.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray58, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray63 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray63.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj66 = nativeArray58.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray63);
        com.google.javascript.rhino.head.Callable callable69 = null;
        nativeArray58.setGetterOrSetter("hi!", 0, callable69, false);
        nativeArray52.setAttributes((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray58, (int) (short) 10);
        java.lang.Object obj74 = null;
        int int75 = nativeArray52.lastIndexOf(obj74);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray22, "object", obj74);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(scriptable12);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertNull(scriptable49);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
    }

    @Test
    public void test2370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2370");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        java.lang.Integer[] intArray7 = nativeArray1.getIndexIds();
        java.lang.Object obj9 = null;
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!", obj9);
        java.lang.Object obj12 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray1, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int16 = nativeArray14.lastIndexOf((java.lang.Object) (short) 10);
        long long17 = nativeArray14.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray14, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable21 = null;
        java.lang.Object[] objArray22 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable21);
        java.lang.Object[] objArray23 = nativeArray14.toArray(objArray22);
        com.google.javascript.rhino.head.Scriptable scriptable24 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray14);
        boolean boolean25 = nativeArray1.contains((java.lang.Object) nativeArray14);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray27.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray30, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray35.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray38, (java.lang.Object) (-1));
        nativeArray27.put((int) (byte) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray35, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray45.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray48, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray53 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray53.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj56 = nativeArray48.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray53);
        boolean boolean57 = nativeArray48.hasPrototypeMap();
        java.lang.Object[] objArray58 = nativeArray48.getIds();
        int int59 = nativeArray48.size();
        boolean boolean60 = nativeArray27.has((int) (short) 100, (com.google.javascript.rhino.head.Scriptable) nativeArray48);
        boolean boolean61 = nativeArray48.avoidObjectDetection();
        java.util.Iterator iterator62 = nativeArray48.iterator();
        boolean boolean63 = nativeArray1.contains((java.lang.Object) iterator62);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        nativeArray1.delete((int) ' ');
        com.google.javascript.rhino.head.Scriptable scriptable69 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array");
        nativeArray1.activatePrototypeMap((int) (byte) 1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 1L + "'", long17 == 1L);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[null]");
        org.junit.Assert.assertNotNull(scriptable24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[hi!]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(iterator62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(scriptable69);
    }

    @Test
    public void test2371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2371");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray7 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray4.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray7, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj15 = nativeArray7.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray12);
        com.google.javascript.rhino.head.Callable callable18 = null;
        nativeArray7.setGetterOrSetter("hi!", 0, callable18, false);
        nativeArray1.setAttributes((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray7, (int) (short) 10);
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int27 = nativeArray25.lastIndexOf((java.lang.Object) (short) 10);
        long long28 = nativeArray25.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray25, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable32 = null;
        java.lang.Object[] objArray33 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable32);
        java.lang.Object[] objArray34 = nativeArray25.toArray(objArray33);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int39 = nativeArray37.lastIndexOf((java.lang.Object) (short) 10);
        long long40 = nativeArray37.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray37, "", true);
        boolean boolean44 = nativeArray37.hasPrototypeMap();
        int int45 = nativeArray37.size();
        boolean boolean46 = nativeArray37.isEmpty();
        boolean boolean48 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray37, "Array");
        java.lang.Object obj49 = nativeArray25.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        java.lang.Object obj50 = nativeArray1.get("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray25);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "object");
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", false);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "object");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 1L + "'", long28 == 1L);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[null]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 1L + "'", long40 == 1L);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
    }

    @Test
    public void test2372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2372");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", (java.lang.Object) 100);
        java.util.ListIterator listIterator5 = nativeArray1.listIterator();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator listIterator7 = nativeArray1.listIterator(13);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 13");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(listIterator5);
    }

    @Test
    public void test2373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2373");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        java.lang.Object[] objArray2 = nativeArray1.getIds();
        java.lang.Object[] objArray3 = nativeArray1.getIds();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
    }

    @Test
    public void test2374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2374");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.Callable callable15 = null;
        nativeArray4.setGetterOrSetter("hi!", 0, callable15, false);
        java.lang.Integer[] intArray18 = nativeArray4.getIndexIds();
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((java.lang.Object[]) intArray18);
        com.google.javascript.rhino.head.Scriptable scriptable20 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray19);
        boolean boolean21 = nativeArray19.isSealed();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertNull(scriptable20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test2375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2375");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.Callable callable15 = null;
        nativeArray4.setGetterOrSetter("hi!", 0, callable15, false);
        java.lang.Integer[] intArray18 = nativeArray4.getIndexIds();
        java.lang.Object[] objArray19 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray4);
        com.google.javascript.rhino.head.Scriptable scriptable20 = nativeArray4.getPrototype();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[hi!]");
        org.junit.Assert.assertNull(scriptable20);
    }

    @Test
    public void test2376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2376");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray19.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray22, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray27.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj30 = nativeArray22.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray27);
        boolean boolean31 = nativeArray22.hasPrototypeMap();
        java.lang.Object[] objArray32 = nativeArray22.getIds();
        java.lang.Object[] objArray33 = nativeArray9.toArray(objArray32);
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray(objArray32);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray37.activatePrototypeMap((int) (short) 100);
        com.google.javascript.rhino.head.Scriptable scriptable40 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray37);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray37, "Array", false);
        boolean boolean44 = nativeArray34.has("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        boolean boolean46 = nativeArray34.isConst("hi!");
        java.lang.Object obj48 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray34, 5);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[null]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[null]");
        org.junit.Assert.assertNull(scriptable40);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(obj48);
    }

    @Test
    public void test2377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2377");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int19 = nativeArray17.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray4.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray17);
        java.lang.Object[] objArray21 = nativeArray17.getAllIds();
        com.google.javascript.rhino.head.Context context22 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable31 = nativeArray24.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable32 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray24);
        nativeArray17.defineOwnProperties(context22, (com.google.javascript.rhino.head.ScriptableObject) nativeArray24);
        com.google.javascript.rhino.head.Scriptable scriptable34 = nativeArray17.getPrototype();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[length]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[null]");
        org.junit.Assert.assertNull(scriptable31);
        org.junit.Assert.assertNull(scriptable32);
        org.junit.Assert.assertNull(scriptable34);
    }

    @Test
    public void test2378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2378");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable11 = nativeArray10.getParentScope();
        java.lang.Object[] objArray12 = nativeArray10.getIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", (java.lang.Object) nativeArray10, 0);
        java.lang.Object[] objArray15 = nativeArray1.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int28 = nativeArray26.lastIndexOf((java.lang.Object) (short) 10);
        long long29 = nativeArray26.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray26, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray34.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray37, (java.lang.Object) (-1));
        java.lang.Object[] objArray40 = nativeArray34.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable41 = nativeArray34.getParentScope();
        boolean boolean42 = nativeArray26.containsAll((java.util.Collection) nativeArray34);
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int47 = nativeArray45.lastIndexOf((java.lang.Object) (short) 10);
        long long48 = nativeArray45.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray45, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable52 = null;
        java.lang.Object[] objArray53 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable52);
        java.lang.Object[] objArray54 = nativeArray45.toArray(objArray53);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray26, "hi!", (java.lang.Object) objArray53);
        nativeArray26.activatePrototypeMap((int) (byte) 10);
        boolean boolean58 = nativeArray18.has((int) (short) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        com.google.javascript.rhino.head.IdFunctionObject idFunctionObject60 = nativeArray1.exportAsJSClass(8, (com.google.javascript.rhino.head.Scriptable) nativeArray18, false);
        com.google.javascript.rhino.head.NativeArray nativeArray62 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray65 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray62.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray65, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray70 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray70.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj73 = nativeArray65.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray70);
        boolean boolean74 = nativeArray65.hasPrototypeMap();
        java.lang.Object[] objArray75 = nativeArray65.getIds();
        int int76 = nativeArray65.size();
        boolean boolean77 = nativeArray18.contains((java.lang.Object) int76);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray18, "object");
        java.lang.String str80 = nativeArray18.getTypeOf();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(scriptable11);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 1L + "'", long29 == 1L);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[null]");
        org.junit.Assert.assertNull(scriptable41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 1L + "'", long48 == 1L);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[null]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(idFunctionObject60);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[hi!]");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "object" + "'", str80, "object");
    }

    @Test
    public void test2379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2379");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj20 = nativeArray12.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray17);
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int25 = nativeArray23.lastIndexOf((java.lang.Object) (short) 10);
        long long26 = nativeArray23.getLength();
        nativeArray23.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray17, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray32.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray35, (java.lang.Object) (-1));
        java.lang.Object[] objArray38 = nativeArray32.getAllIds();
        nativeArray32.delete("");
        java.lang.Object obj41 = nativeArray17.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray32);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray17, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable44 = nativeArray17.getPrototype();
        com.google.javascript.rhino.head.Context context45 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int49 = nativeArray47.lastIndexOf((java.lang.Object) (short) 10);
        long long50 = nativeArray47.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray47, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray55.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray58, (java.lang.Object) (-1));
        java.lang.Object[] objArray61 = nativeArray55.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable62 = nativeArray55.getParentScope();
        boolean boolean63 = nativeArray47.containsAll((java.util.Collection) nativeArray55);
        nativeArray17.defineOwnProperties(context45, (com.google.javascript.rhino.head.ScriptableObject) nativeArray47);
        nativeArray1.setAttributes(1, (com.google.javascript.rhino.head.Scriptable) nativeArray17, (int) (short) 10);
        boolean boolean68 = nativeArray1.isConst("");
        boolean boolean69 = nativeArray1.isExtensible();
        long long70 = nativeArray1.jsGet_length();
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 1L + "'", long26 == 1L);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[length]");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNull(scriptable44);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 1L + "'", long50 == 1L);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[null]");
        org.junit.Assert.assertNull(scriptable62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 1L + "'", long70 == 1L);
    }

    @Test
    public void test2380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2380");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.getAllIds();
        nativeArray1.delete("");
        java.lang.Object[] objArray10 = nativeArray1.getIds();
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int14 = nativeArray12.lastIndexOf((java.lang.Object) (short) 10);
        long long15 = nativeArray12.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray12, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray20.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray23, (java.lang.Object) (-1));
        java.lang.Object[] objArray26 = nativeArray20.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable27 = nativeArray20.getParentScope();
        boolean boolean28 = nativeArray12.containsAll((java.util.Collection) nativeArray20);
        com.google.javascript.rhino.head.Scriptable scriptable29 = nativeArray20.getParentScope();
        boolean boolean30 = nativeArray20.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable34 = nativeArray33.getParentScope();
        java.lang.Object[] objArray35 = nativeArray33.getIds();
        boolean boolean36 = nativeArray20.has("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray33);
        java.lang.Integer[] intArray37 = nativeArray20.getIndexIds();
        int int38 = nativeArray1.indexOf((java.lang.Object) nativeArray20);
        java.lang.Integer[] intArray39 = nativeArray20.getIndexIds();
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[length]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 1L + "'", long15 == 1L);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[null]");
        org.junit.Assert.assertNull(scriptable27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(scriptable29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(scriptable34);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(intArray39);
    }

    @Test
    public void test2381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2381");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj20 = nativeArray12.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray17);
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int25 = nativeArray23.lastIndexOf((java.lang.Object) (short) 10);
        long long26 = nativeArray23.getLength();
        nativeArray23.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray17, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray32.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray35, (java.lang.Object) (-1));
        java.lang.Object[] objArray38 = nativeArray32.getAllIds();
        nativeArray32.delete("");
        java.lang.Object obj41 = nativeArray17.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray32);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray17, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable44 = nativeArray17.getPrototype();
        com.google.javascript.rhino.head.Context context45 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int49 = nativeArray47.lastIndexOf((java.lang.Object) (short) 10);
        long long50 = nativeArray47.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray47, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray55.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray58, (java.lang.Object) (-1));
        java.lang.Object[] objArray61 = nativeArray55.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable62 = nativeArray55.getParentScope();
        boolean boolean63 = nativeArray47.containsAll((java.util.Collection) nativeArray55);
        nativeArray17.defineOwnProperties(context45, (com.google.javascript.rhino.head.ScriptableObject) nativeArray47);
        nativeArray1.setAttributes(1, (com.google.javascript.rhino.head.Scriptable) nativeArray17, (int) (short) 10);
        java.lang.String str67 = nativeArray1.getTypeOf();
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "object");
        java.lang.Object obj71 = null;
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "object", obj71);
        java.lang.Object obj76 = nativeArray1.getGetterOrSetter("object", 0, true);
        java.lang.Object[] objArray77 = nativeArray1.getIds();
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 1L + "'", long26 == 1L);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[length]");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNull(scriptable44);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 1L + "'", long50 == 1L);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[null]");
        org.junit.Assert.assertNull(scriptable62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "object" + "'", str67, "object");
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray77), "[object]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray77), "[object]");
    }

    @Test
    public void test2382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2382");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable8 = nativeArray1.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable9 = nativeArray1.getParentScope();
        boolean boolean10 = nativeArray1.isSealed();
        java.lang.Object obj12 = nativeArray1.get(0L);
        long long13 = nativeArray1.getLength();
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray15.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray18, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray23.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj26 = nativeArray18.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray23);
        boolean boolean27 = nativeArray18.hasPrototypeMap();
        java.lang.Object[] objArray28 = nativeArray18.getIds();
        int int29 = nativeArray18.size();
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray32.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray35, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray40.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj43 = nativeArray35.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray40);
        boolean boolean44 = nativeArray35.hasPrototypeMap();
        java.lang.Object[] objArray45 = nativeArray35.getIds();
        int int46 = nativeArray35.size();
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int50 = nativeArray48.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray35.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray48);
        java.lang.Object obj52 = nativeArray18.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray35);
        java.lang.Object[] objArray53 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray18);
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int58 = nativeArray56.lastIndexOf((java.lang.Object) (short) 10);
        long long59 = nativeArray56.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray56, "", true);
        boolean boolean63 = nativeArray56.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray65 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray68 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray65.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray68, (java.lang.Object) (-1));
        java.lang.Object[] objArray71 = nativeArray65.getAllIds();
        nativeArray65.delete("");
        boolean boolean74 = nativeArray56.contains((java.lang.Object) "");
        boolean boolean75 = nativeArray18.has("object", (com.google.javascript.rhino.head.Scriptable) nativeArray56);
        com.google.javascript.rhino.head.NativeArray nativeArray77 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int79 = nativeArray77.lastIndexOf((java.lang.Object) (short) 10);
        long long80 = nativeArray77.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray77, "", true);
        boolean boolean84 = nativeArray77.hasPrototypeMap();
        java.util.ListIterator listIterator85 = nativeArray77.listIterator();
        nativeArray18.setPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray77);
        boolean boolean87 = nativeArray77.isEmpty();
        java.lang.Object obj88 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray1, (java.lang.Object) nativeArray77);
        com.google.javascript.rhino.head.Scriptable scriptable89 = nativeArray1.getParentScope();
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[null]");
        org.junit.Assert.assertNull(scriptable8);
        org.junit.Assert.assertNull(scriptable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[hi!]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[hi!]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[hi!]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 1L + "'", long59 == 1L);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[length]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 1L + "'", long80 == 1L);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(listIterator85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNull(obj88);
        org.junit.Assert.assertNull(scriptable89);
    }

    @Test
    public void test2383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2383");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray20, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj28 = nativeArray20.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray25);
        boolean boolean29 = nativeArray20.hasPrototypeMap();
        java.lang.Object[] objArray30 = nativeArray20.getIds();
        int int31 = nativeArray20.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray34.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray37, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj45 = nativeArray37.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray42);
        boolean boolean46 = nativeArray37.hasPrototypeMap();
        java.lang.Object[] objArray47 = nativeArray37.getIds();
        int int48 = nativeArray37.size();
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int52 = nativeArray50.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray37.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray50);
        java.lang.Object obj54 = nativeArray20.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        boolean boolean55 = nativeArray4.containsAll((java.util.Collection) nativeArray37);
        com.google.javascript.rhino.head.Scriptable scriptable56 = nativeArray4.getParentScope();
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int61 = nativeArray59.lastIndexOf((java.lang.Object) (short) 10);
        long long62 = nativeArray59.getLength();
        nativeArray59.delete((int) (byte) 1);
        boolean boolean65 = nativeArray59.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray68 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable69 = nativeArray68.getParentScope();
        java.lang.Object[] objArray70 = nativeArray68.getIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray59, "", (java.lang.Object) nativeArray68, 0);
        java.lang.Object[] objArray73 = nativeArray59.toArray();
        nativeArray59.preventExtensions();
        boolean boolean75 = nativeArray59.isExtensible();
        int int76 = nativeArray4.getAttributes("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray59);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[hi!]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(scriptable56);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 1L + "'", long62 == 1L);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(scriptable69);
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[]");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[null]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
    }

    @Test
    public void test2384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2384");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.getAllIds();
        nativeArray24.delete("");
        java.lang.Object obj33 = nativeArray9.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int37 = nativeArray35.lastIndexOf((java.lang.Object) (short) 10);
        long long38 = nativeArray35.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray35, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable42 = null;
        java.lang.Object[] objArray43 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable42);
        java.lang.Object[] objArray44 = nativeArray35.toArray(objArray43);
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int49 = nativeArray47.lastIndexOf((java.lang.Object) (short) 10);
        long long50 = nativeArray47.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray47, "", true);
        boolean boolean54 = nativeArray47.hasPrototypeMap();
        int int55 = nativeArray47.size();
        boolean boolean56 = nativeArray47.isEmpty();
        boolean boolean58 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray47, "Array");
        java.lang.Object obj59 = nativeArray35.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray47);
        nativeArray35.setAttributes("Array", 1);
        int int63 = nativeArray35.size();
        boolean boolean65 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray35, 4);
        nativeArray35.setAttributes("", 2);
        java.lang.Object obj69 = null;
        java.lang.Object obj70 = nativeArray35.getAssociatedValue(obj69);
        int int71 = nativeArray24.indexOf(obj69);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 1L + "'", long38 == 1L);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[]");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[null]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 1L + "'", long50 == 1L);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
    }

    @Test
    public void test2385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2385");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean8 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int12 = nativeArray10.lastIndexOf((java.lang.Object) (short) 10);
        long long13 = nativeArray10.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray10, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        java.lang.Object[] objArray24 = nativeArray18.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable25 = nativeArray18.getParentScope();
        boolean boolean26 = nativeArray10.containsAll((java.util.Collection) nativeArray18);
        boolean boolean27 = nativeArray1.containsAll((java.util.Collection) nativeArray10);
        nativeArray1.setAttributes("", 8);
        nativeArray1.delete(100);
        java.lang.Object[] objArray33 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[null]");
        org.junit.Assert.assertNull(scriptable25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
    }

    @Test
    public void test2386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2386");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray20, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj28 = nativeArray20.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray25);
        boolean boolean29 = nativeArray20.hasPrototypeMap();
        java.lang.Object[] objArray30 = nativeArray20.getIds();
        int int31 = nativeArray20.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray34.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray37, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj45 = nativeArray37.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray42);
        boolean boolean46 = nativeArray37.hasPrototypeMap();
        java.lang.Object[] objArray47 = nativeArray37.getIds();
        int int48 = nativeArray37.size();
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int52 = nativeArray50.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray37.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray50);
        java.lang.Object obj54 = nativeArray20.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        boolean boolean55 = nativeArray4.containsAll((java.util.Collection) nativeArray37);
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable59 = nativeArray58.getParentScope();
        java.lang.Object[] objArray60 = nativeArray58.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray62 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray65 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray62.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray65, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray70 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray70.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj73 = nativeArray65.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray70);
        java.lang.Object obj74 = nativeArray58.getAssociatedValue((java.lang.Object) nativeArray65);
        com.google.javascript.rhino.head.Scriptable scriptable75 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray58);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray37, "hi!", (java.lang.Object) scriptable75);
        com.google.javascript.rhino.head.Scriptable scriptable77 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray37);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[hi!]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(scriptable59);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[length]");
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertNull(scriptable75);
        org.junit.Assert.assertNull(scriptable77);
    }

    @Test
    public void test2387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2387");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable12 = nativeArray11.getParentScope();
        java.lang.Object[] objArray13 = nativeArray11.getIds();
        boolean boolean14 = nativeArray11.isEmpty();
        boolean boolean15 = nativeArray1.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray11);
        boolean boolean17 = nativeArray11.isConst("object");
        boolean boolean18 = nativeArray11.avoidObjectDetection();
        com.google.javascript.rhino.head.Scriptable scriptable19 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray11);
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable23 = nativeArray22.getParentScope();
        java.lang.Object[] objArray24 = nativeArray22.getIds();
        boolean boolean25 = nativeArray22.isEmpty();
        nativeArray22.delete((int) 'a');
        nativeArray11.defineProperty("", (java.lang.Object) nativeArray22, (int) (short) 1);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray22, "", false);
        java.lang.String str33 = nativeArray22.getClassName();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(scriptable12);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(scriptable19);
        org.junit.Assert.assertNull(scriptable23);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Array" + "'", str33, "Array");
    }

    @Test
    public void test2388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2388");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        java.lang.Object obj3 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array");
        com.google.javascript.rhino.head.NativeArray nativeArray6 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int8 = nativeArray6.lastIndexOf((java.lang.Object) (short) 10);
        long long9 = nativeArray6.getLength();
        nativeArray6.delete((int) (byte) 1);
        boolean boolean13 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray6, "");
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray15, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray23.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray26, (java.lang.Object) (-1));
        java.lang.Object[] objArray29 = nativeArray23.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable30 = nativeArray23.getParentScope();
        boolean boolean31 = nativeArray15.containsAll((java.util.Collection) nativeArray23);
        boolean boolean32 = nativeArray6.containsAll((java.util.Collection) nativeArray15);
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        long long37 = nativeArray34.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray34, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray45, (java.lang.Object) (-1));
        java.lang.Object[] objArray48 = nativeArray42.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable49 = nativeArray42.getParentScope();
        boolean boolean50 = nativeArray34.containsAll((java.util.Collection) nativeArray42);
        com.google.javascript.rhino.head.NativeArray nativeArray52 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int54 = nativeArray52.lastIndexOf((java.lang.Object) (short) 10);
        long long55 = nativeArray52.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray52, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray63 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray60.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray63, (java.lang.Object) (-1));
        java.lang.Object[] objArray66 = nativeArray60.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable67 = nativeArray60.getParentScope();
        boolean boolean68 = nativeArray52.containsAll((java.util.Collection) nativeArray60);
        com.google.javascript.rhino.head.NativeArray nativeArray70 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray73 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray70.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray73, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray78 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray78.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj81 = nativeArray73.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray78);
        boolean boolean82 = nativeArray73.hasPrototypeMap();
        java.lang.Object[] objArray83 = nativeArray73.getIds();
        java.lang.Object[] objArray84 = nativeArray60.toArray(objArray83);
        java.lang.Object obj85 = nativeArray6.associateValue((java.lang.Object) boolean50, (java.lang.Object) nativeArray60);
        com.google.javascript.rhino.head.Scriptable scriptable86 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray60);
        boolean boolean87 = nativeArray1.has("hi!", scriptable86);
        boolean boolean88 = nativeArray1.avoidObjectDetection();
        boolean boolean89 = nativeArray1.isEmpty();
        nativeArray1.sealObject();
        com.google.javascript.rhino.head.Scriptable scriptable91 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj93 = nativeArray1.get((long) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 1L + "'", long9 == 1L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[null]");
        org.junit.Assert.assertNull(scriptable30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 1L + "'", long37 == 1L);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[null]");
        org.junit.Assert.assertNull(scriptable49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 1L + "'", long55 == 1L);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[null]");
        org.junit.Assert.assertNull(scriptable67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray83), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray83), "[null]");
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[null]");
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(scriptable86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNull(scriptable91);
    }

    @Test
    public void test2389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2389");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable8 = nativeArray1.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable9 = nativeArray1.getParentScope();
        boolean boolean10 = nativeArray1.isSealed();
        java.lang.Object obj12 = nativeArray1.get(0L);
        long long13 = nativeArray1.getLength();
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int18 = nativeArray16.lastIndexOf((java.lang.Object) (short) 10);
        long long19 = nativeArray16.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray16, "", true);
        boolean boolean23 = nativeArray16.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable27 = nativeArray26.getParentScope();
        java.lang.Object[] objArray28 = nativeArray26.getIds();
        boolean boolean29 = nativeArray26.isEmpty();
        boolean boolean30 = nativeArray16.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean32 = nativeArray26.isConst("object");
        java.lang.Object obj34 = nativeArray26.get((java.lang.Object) (byte) 10);
        nativeArray26.preventExtensions();
        boolean boolean36 = nativeArray1.has("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        java.lang.Object[] objArray37 = nativeArray1.getIds();
        boolean boolean38 = nativeArray1.hasPrototypeMap();
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[null]");
        org.junit.Assert.assertNull(scriptable8);
        org.junit.Assert.assertNull(scriptable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 1L + "'", long19 == 1L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(scriptable27);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test2390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2390");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable8 = nativeArray1.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable9 = nativeArray1.getParentScope();
        boolean boolean10 = nativeArray1.isSealed();
        java.lang.Object obj12 = nativeArray1.get(0L);
        com.google.javascript.rhino.head.Scriptable scriptable13 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        boolean boolean14 = nativeArray1.avoidObjectDetection();
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[null]");
        org.junit.Assert.assertNull(scriptable8);
        org.junit.Assert.assertNull(scriptable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(scriptable13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test2391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2391");
        com.google.javascript.rhino.head.Context context0 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray2 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int4 = nativeArray2.lastIndexOf((java.lang.Object) (short) 10);
        long long5 = nativeArray2.getLength();
        nativeArray2.delete((int) (byte) 1);
        java.lang.Integer[] intArray8 = nativeArray2.getIndexIds();
        java.lang.Object obj10 = null;
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray2, "hi!", obj10);
        java.lang.Object obj13 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray2, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray15, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable22 = null;
        java.lang.Object[] objArray23 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable22);
        java.lang.Object[] objArray24 = nativeArray15.toArray(objArray23);
        com.google.javascript.rhino.head.Scriptable scriptable25 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray15);
        boolean boolean26 = nativeArray2.contains((java.lang.Object) nativeArray15);
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int31 = nativeArray29.lastIndexOf((java.lang.Object) (short) 10);
        long long32 = nativeArray29.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray29, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray37.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray40, (java.lang.Object) (-1));
        java.lang.Object[] objArray43 = nativeArray37.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable44 = nativeArray37.getParentScope();
        boolean boolean45 = nativeArray29.containsAll((java.util.Collection) nativeArray37);
        nativeArray37.delete("Array");
        boolean boolean49 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray37, (int) 'a');
        java.lang.Object[] objArray50 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray37);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj51 = com.google.javascript.rhino.head.ScriptableObject.callMethod(context0, (com.google.javascript.rhino.head.Scriptable) nativeArray2, "hi!", objArray50);
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EcmaError; message: TypeError: hi! is not a function, it is object.");
        } catch (com.google.javascript.rhino.head.EcmaError e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1L + "'", long5 == 1L);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[null]");
        org.junit.Assert.assertNotNull(scriptable25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1L + "'", long32 == 1L);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[null]");
        org.junit.Assert.assertNull(scriptable44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
    }

    @Test
    public void test2392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2392");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable2 = nativeArray1.getParentScope();
        java.lang.Object[] objArray3 = nativeArray1.getIds();
        boolean boolean4 = nativeArray1.isEmpty();
        int int5 = nativeArray1.size();
        boolean boolean7 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!");
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.Scriptable scriptable15 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int19 = nativeArray17.lastIndexOf((java.lang.Object) (short) 10);
        long long20 = nativeArray17.getLength();
        nativeArray17.delete((int) (byte) 1);
        boolean boolean23 = nativeArray17.isExtensible();
        java.lang.Object obj25 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray17, 4);
        java.lang.Object[] objArray26 = nativeArray17.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray32, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray37.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj40 = nativeArray32.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        boolean boolean41 = nativeArray32.hasPrototypeMap();
        java.lang.Object[] objArray42 = nativeArray32.getIds();
        int int43 = nativeArray32.size();
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int47 = nativeArray45.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray32.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray45);
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable51 = nativeArray50.getParentScope();
        java.lang.Object[] objArray52 = nativeArray50.getIds();
        boolean boolean53 = nativeArray50.isEmpty();
        nativeArray17.put((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray32, (java.lang.Object) boolean53);
        boolean boolean55 = nativeArray9.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray32);
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int60 = nativeArray58.lastIndexOf((java.lang.Object) (short) 10);
        long long61 = nativeArray58.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray58, "", true);
        boolean boolean65 = nativeArray58.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray68 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable69 = nativeArray68.getParentScope();
        java.lang.Object[] objArray70 = nativeArray68.getIds();
        boolean boolean71 = nativeArray68.isEmpty();
        boolean boolean72 = nativeArray58.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray68);
        java.lang.Object obj74 = nativeArray58.get((long) (byte) 0);
        boolean boolean75 = nativeArray9.has("object", (com.google.javascript.rhino.head.Scriptable) nativeArray58);
        com.google.javascript.rhino.head.Scriptable scriptable76 = nativeArray58.getParentScope();
        nativeArray58.delete("");
        java.util.ListIterator listIterator79 = nativeArray58.listIterator();
        java.lang.Object obj80 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray1, (java.lang.Object) listIterator79);
        org.junit.Assert.assertNull(scriptable2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(scriptable15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 1L + "'", long20 == 1L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[null]");
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[hi!]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(scriptable51);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 1L + "'", long61 == 1L);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(scriptable69);
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNull(scriptable76);
        org.junit.Assert.assertNotNull(listIterator79);
        org.junit.Assert.assertNull(obj80);
    }

    @Test
    public void test2393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2393");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj38 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        java.lang.Object[] objArray39 = nativeArray4.getIds();
        java.lang.Integer[] intArray40 = nativeArray4.getIndexIds();
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray43.activatePrototypeMap((int) (short) 100);
        boolean boolean47 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray43, "hi!");
        long long48 = nativeArray43.jsGet_length();
        boolean boolean49 = nativeArray4.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray43);
        nativeArray4.setAttributes("hi!", 1);
        com.google.javascript.rhino.head.NativeArray nativeArray54 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray57 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray54.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray57, (java.lang.Object) (-1));
        java.lang.Object[] objArray60 = nativeArray54.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable61 = nativeArray54.getParentScope();
        com.google.javascript.rhino.head.Context context62 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray67 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray64.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray67, (java.lang.Object) (-1));
        java.lang.Object[] objArray70 = nativeArray64.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable71 = nativeArray64.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable72 = nativeArray64.getParentScope();
        java.util.ListIterator listIterator73 = nativeArray64.listIterator();
        nativeArray54.defineOwnProperties(context62, (com.google.javascript.rhino.head.ScriptableObject) nativeArray64);
        boolean boolean75 = nativeArray4.containsAll((java.util.Collection) nativeArray64);
        java.lang.String str76 = nativeArray64.getTypeOf();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[hi!]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 1L + "'", long48 == 1L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[null]");
        org.junit.Assert.assertNull(scriptable61);
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[null]");
        org.junit.Assert.assertNull(scriptable71);
        org.junit.Assert.assertNull(scriptable72);
        org.junit.Assert.assertNotNull(listIterator73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "object" + "'", str76, "object");
    }

    @Test
    public void test2394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2394");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.getAllIds();
        nativeArray24.delete("");
        java.lang.Object obj33 = nativeArray9.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        java.lang.Integer[] intArray34 = nativeArray24.getIndexIds();
        long long35 = nativeArray24.getLength();
        java.util.ListIterator listIterator36 = nativeArray24.listIterator();
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int41 = nativeArray39.lastIndexOf((java.lang.Object) (short) 10);
        long long42 = nativeArray39.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray39, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray47.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray50, (java.lang.Object) (-1));
        java.lang.Object[] objArray53 = nativeArray47.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable54 = nativeArray47.getParentScope();
        boolean boolean55 = nativeArray39.containsAll((java.util.Collection) nativeArray47);
        com.google.javascript.rhino.head.NativeArray nativeArray57 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray57.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray60, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray65 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray65.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj68 = nativeArray60.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray65);
        boolean boolean69 = nativeArray60.hasPrototypeMap();
        java.lang.Object[] objArray70 = nativeArray60.getIds();
        java.lang.Object[] objArray71 = nativeArray47.toArray(objArray70);
        com.google.javascript.rhino.head.NativeArray nativeArray74 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray74.activatePrototypeMap((int) (short) 100);
        boolean boolean78 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray74, "hi!");
        long long79 = nativeArray74.jsGet_length();
        nativeArray47.setAttributes("object", (com.google.javascript.rhino.head.Scriptable) nativeArray74, (int) (byte) 10);
        long long82 = nativeArray74.jsGet_length();
        java.lang.reflect.Method method83 = null;
        java.lang.reflect.Method method84 = null;
        nativeArray24.defineProperty("", (java.lang.Object) long82, method83, method84, (int) (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1L + "'", long35 == 1L);
        org.junit.Assert.assertNotNull(listIterator36);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 1L + "'", long42 == 1L);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[null]");
        org.junit.Assert.assertNull(scriptable54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[null]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[null]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 1L + "'", long79 == 1L);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + 1L + "'", long82 == 1L);
    }

    @Test
    public void test2395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2395");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int11 = nativeArray9.lastIndexOf((java.lang.Object) (short) 10);
        long long12 = nativeArray9.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray20, (java.lang.Object) (-1));
        java.lang.Object[] objArray23 = nativeArray17.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable24 = nativeArray17.getParentScope();
        boolean boolean25 = nativeArray9.containsAll((java.util.Collection) nativeArray17);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray27.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray30, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray35.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj38 = nativeArray30.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray35);
        boolean boolean39 = nativeArray30.hasPrototypeMap();
        java.lang.Object[] objArray40 = nativeArray30.getIds();
        java.lang.Object[] objArray41 = nativeArray17.toArray(objArray40);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array", (java.lang.Object) nativeArray17);
        boolean boolean44 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray17, "");
        java.lang.Object[] objArray45 = nativeArray17.toArray();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 1L + "'", long12 == 1L);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[null]");
        org.junit.Assert.assertNull(scriptable24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[null]");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[null]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[null]");
    }

    @Test
    public void test2396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2396");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        java.lang.Integer[] intArray7 = nativeArray1.getIndexIds();
        java.lang.Object obj9 = null;
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!", obj9);
        java.lang.Object obj12 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray1, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray15.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray18, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray23.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj26 = nativeArray18.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray23);
        boolean boolean27 = nativeArray18.hasPrototypeMap();
        java.lang.Object[] objArray28 = nativeArray18.getIds();
        int int29 = nativeArray18.size();
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray31.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray34, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray39.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj42 = nativeArray34.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray39);
        boolean boolean43 = nativeArray34.hasPrototypeMap();
        java.lang.Object[] objArray44 = nativeArray34.getIds();
        int int45 = nativeArray34.size();
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray48.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray51, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray56.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj59 = nativeArray51.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray56);
        boolean boolean60 = nativeArray51.hasPrototypeMap();
        java.lang.Object[] objArray61 = nativeArray51.getIds();
        int int62 = nativeArray51.size();
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int66 = nativeArray64.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray51.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray64);
        java.lang.Object obj68 = nativeArray34.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray51);
        boolean boolean69 = nativeArray18.containsAll((java.util.Collection) nativeArray51);
        com.google.javascript.rhino.head.NativeArray nativeArray72 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable73 = nativeArray72.getParentScope();
        java.lang.Object[] objArray74 = nativeArray72.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray76 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray79 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray76.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray79, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray84 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray84.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj87 = nativeArray79.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray84);
        java.lang.Object obj88 = nativeArray72.getAssociatedValue((java.lang.Object) nativeArray79);
        com.google.javascript.rhino.head.Scriptable scriptable89 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray72);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray51, "hi!", (java.lang.Object) scriptable89);
        boolean boolean91 = nativeArray51.avoidObjectDetection();
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "object", (java.lang.Object) boolean91);
        nativeArray1.setAttributes((int) '#', (int) (byte) 1);
        nativeArray1.setAttributes((int) (short) 100, 13);
        java.lang.String str99 = nativeArray1.getClassName();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[hi!]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[hi!]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[hi!]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNull(scriptable73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[length]");
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNull(obj88);
        org.junit.Assert.assertNull(scriptable89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "Array" + "'", str99, "Array");
    }

    @Test
    public void test2397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2397");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray(1L);
    }

    @Test
    public void test2398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2398");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        java.lang.Object obj9 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 4);
        java.lang.Object[] objArray10 = nativeArray1.toArray();
        boolean boolean11 = nativeArray1.hasPrototypeMap();
        nativeArray1.activatePrototypeMap((int) (byte) 1);
        com.google.javascript.rhino.head.Scriptable scriptable14 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        nativeArray1.setAttributes("object", (int) (short) 1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[null]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(scriptable14);
    }

    @Test
    public void test2399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2399");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        boolean boolean8 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "");
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray10.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray13, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj21 = nativeArray13.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray18);
        boolean boolean22 = nativeArray13.hasPrototypeMap();
        java.lang.Object[] objArray23 = nativeArray13.getIds();
        int int24 = nativeArray13.size();
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray27.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray30, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray35.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj38 = nativeArray30.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray35);
        boolean boolean39 = nativeArray30.hasPrototypeMap();
        java.lang.Object[] objArray40 = nativeArray30.getIds();
        int int41 = nativeArray30.size();
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int45 = nativeArray43.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray30.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray43);
        java.lang.Object obj47 = nativeArray13.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray30);
        java.lang.Object[] objArray48 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray13);
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int53 = nativeArray51.lastIndexOf((java.lang.Object) (short) 10);
        long long54 = nativeArray51.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray51, "", true);
        boolean boolean58 = nativeArray51.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray63 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray60.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray63, (java.lang.Object) (-1));
        java.lang.Object[] objArray66 = nativeArray60.getAllIds();
        nativeArray60.delete("");
        boolean boolean69 = nativeArray51.contains((java.lang.Object) "");
        boolean boolean70 = nativeArray13.has("object", (com.google.javascript.rhino.head.Scriptable) nativeArray51);
        com.google.javascript.rhino.head.Context context71 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray73 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int75 = nativeArray73.lastIndexOf((java.lang.Object) (short) 10);
        long long76 = nativeArray73.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray73, "", true);
        boolean boolean80 = nativeArray73.hasPrototypeMap();
        boolean boolean81 = nativeArray73.isExtensible();
        nativeArray13.defineOwnProperties(context71, (com.google.javascript.rhino.head.ScriptableObject) nativeArray73);
        java.lang.String str83 = nativeArray13.getTypeOf();
        nativeArray13.delete("");
        int int86 = nativeArray13.size();
        java.lang.Object obj87 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj88 = nativeArray4.associateValue((java.lang.Object) nativeArray13, obj87);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[hi!]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[hi!]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[hi!]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 1L + "'", long54 == 1L);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[length]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 1L + "'", long76 == 1L);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "object" + "'", str83, "object");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 1 + "'", int86 == 1);
    }

    @Test
    public void test2400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2400");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.Callable callable15 = null;
        nativeArray4.setGetterOrSetter("hi!", 0, callable15, false);
        long long18 = nativeArray4.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "", false);
        java.util.ListIterator listIterator22 = nativeArray4.listIterator();
        java.lang.String str23 = nativeArray4.getClassName();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(listIterator22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Array" + "'", str23, "Array");
    }

    @Test
    public void test2401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2401");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable8 = nativeArray1.getParentScope();
        com.google.javascript.rhino.head.Context context9 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray11.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray14, (java.lang.Object) (-1));
        java.lang.Object[] objArray17 = nativeArray11.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable18 = nativeArray11.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable19 = nativeArray11.getParentScope();
        java.util.ListIterator listIterator20 = nativeArray11.listIterator();
        nativeArray1.defineOwnProperties(context9, (com.google.javascript.rhino.head.ScriptableObject) nativeArray11);
        java.util.ListIterator listIterator22 = nativeArray1.listIterator();
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int26 = nativeArray24.lastIndexOf((java.lang.Object) (short) 10);
        long long27 = nativeArray24.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray24, "", true);
        boolean boolean31 = nativeArray24.hasPrototypeMap();
        int int32 = nativeArray24.size();
        boolean boolean33 = nativeArray24.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray35.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray38, (java.lang.Object) (-1));
        java.lang.Object[] objArray41 = nativeArray35.getAllIds();
        nativeArray35.delete("");
        long long44 = nativeArray35.getLength();
        boolean boolean45 = nativeArray24.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray35);
        nativeArray35.sealObject();
        boolean boolean47 = nativeArray1.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray35);
        java.lang.Object obj49 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray35, (int) '#');
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[null]");
        org.junit.Assert.assertNull(scriptable8);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[null]");
        org.junit.Assert.assertNull(scriptable18);
        org.junit.Assert.assertNull(scriptable19);
        org.junit.Assert.assertNotNull(listIterator20);
        org.junit.Assert.assertNotNull(listIterator22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 1L + "'", long27 == 1L);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[length]");
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 1L + "'", long44 == 1L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(obj49);
    }

    @Test
    public void test2402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2402");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        java.lang.Integer[] intArray7 = nativeArray1.getIndexIds();
        java.lang.Object obj9 = null;
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!", obj9);
        boolean boolean12 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 8);
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray14.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray17, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int24 = nativeArray22.lastIndexOf((java.lang.Object) (short) 10);
        long long25 = nativeArray22.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray22, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray30.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray33, (java.lang.Object) (-1));
        java.lang.Object[] objArray36 = nativeArray30.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable37 = nativeArray30.getParentScope();
        boolean boolean38 = nativeArray22.containsAll((java.util.Collection) nativeArray30);
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray40.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray43, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray48.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj51 = nativeArray43.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray48);
        boolean boolean52 = nativeArray43.hasPrototypeMap();
        java.lang.Object[] objArray53 = nativeArray43.getIds();
        java.lang.Object[] objArray54 = nativeArray30.toArray(objArray53);
        boolean boolean56 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray30, "Array");
        java.lang.Object obj57 = nativeArray17.get(2, (com.google.javascript.rhino.head.Scriptable) nativeArray30);
        java.lang.Object obj58 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray1, (java.lang.Object) nativeArray17);
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable61 = nativeArray60.getParentScope();
        java.lang.Object[] objArray62 = nativeArray60.getIds();
        boolean boolean63 = nativeArray60.avoidObjectDetection();
        java.lang.Object obj67 = nativeArray60.getGetterOrSetter("", 0, true);
        boolean boolean68 = nativeArray60.avoidObjectDetection();
        com.google.javascript.rhino.head.NativeArray nativeArray70 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable71 = nativeArray70.getParentScope();
        java.lang.Object[] objArray72 = nativeArray70.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray74 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray77 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray74.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray77, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray82 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray82.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj85 = nativeArray77.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray82);
        java.lang.Object obj86 = nativeArray70.getAssociatedValue((java.lang.Object) nativeArray77);
        com.google.javascript.rhino.head.Scriptable scriptable87 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray70);
        nativeArray70.delete(2);
        int int90 = nativeArray70.size();
        java.lang.String str91 = nativeArray70.getClassName();
        java.lang.Object obj92 = nativeArray17.associateValue((java.lang.Object) nativeArray60, (java.lang.Object) nativeArray70);
        com.google.javascript.rhino.head.NativeArray nativeArray95 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        java.lang.Object[] objArray96 = nativeArray95.toArray();
        // The following exception was thrown during execution in test generation
        try {
            nativeArray70.add(10, (java.lang.Object) nativeArray95);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 1L + "'", long25 == 1L);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[null]");
        org.junit.Assert.assertNull(scriptable37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[null]");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[null]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNull(scriptable61);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(scriptable71);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[length]");
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertNull(scriptable87);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 1 + "'", int90 == 1);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "Array" + "'", str91, "Array");
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(objArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray96), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray96), "[null]");
    }

    @Test
    public void test2403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2403");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        java.lang.reflect.Method method11 = null;
        java.lang.reflect.Method method12 = null;
        nativeArray1.defineProperty("hi!", (java.lang.Object) (-1L), method11, method12, (int) (byte) 10);
        boolean boolean16 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        nativeArray1.setAttributes("hi!", (int) (byte) 0);
        java.lang.Object[] objArray20 = nativeArray1.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray23.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray26, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray31.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray34, (java.lang.Object) (-1));
        nativeArray23.put((int) (byte) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray31, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 0, (java.lang.Object) nativeArray31);
        java.lang.Object[] objArray40 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.Scriptable scriptable41 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int46 = nativeArray44.lastIndexOf((java.lang.Object) (short) 10);
        long long47 = nativeArray44.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray44, "", true);
        boolean boolean51 = nativeArray44.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray54 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable55 = nativeArray54.getParentScope();
        java.lang.Object[] objArray56 = nativeArray54.getIds();
        boolean boolean57 = nativeArray54.isEmpty();
        boolean boolean58 = nativeArray44.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray54);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray54, "", true);
        // The following exception was thrown during execution in test generation
        try {
            nativeArray1.defineProperty("object", (java.lang.Object) "", (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: 100");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[hi!, length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[hi!, length]");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[0, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[0, hi!]");
        org.junit.Assert.assertNull(scriptable41);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 1L + "'", long47 == 1L);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(scriptable55);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test2404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2404");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.activatePrototypeMap((int) (short) 100);
        boolean boolean5 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!");
        boolean boolean6 = nativeArray1.isExtensible();
        java.lang.String str7 = nativeArray1.getTypeOf();
        com.google.javascript.rhino.head.Scriptable scriptable9 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1, "object");
        boolean boolean10 = nativeArray1.isSealed();
        boolean boolean12 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "object");
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        nativeArray15.sealObject();
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int25 = nativeArray23.lastIndexOf((java.lang.Object) (short) 10);
        long long26 = nativeArray23.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray23, "", true);
        boolean boolean30 = nativeArray23.hasPrototypeMap();
        java.lang.reflect.Method method33 = null;
        java.lang.reflect.Method method34 = null;
        nativeArray23.defineProperty("hi!", (java.lang.Object) (-1L), method33, method34, (int) (byte) 10);
        boolean boolean38 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray23, "");
        int int39 = nativeArray23.size();
        com.google.javascript.rhino.head.Scriptable scriptable41 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray23, "");
        java.lang.Object[] objArray42 = nativeArray23.getAllIds();
        boolean boolean43 = nativeArray15.contains((java.lang.Object) objArray42);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, (int) (byte) 100, (java.lang.Object) boolean43);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "object" + "'", str7, "object");
        org.junit.Assert.assertNull(scriptable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 1L + "'", long26 == 1L);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNull(scriptable41);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[hi!, length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[hi!, length]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test2405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2405");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        java.lang.reflect.Method method11 = null;
        java.lang.reflect.Method method12 = null;
        nativeArray1.defineProperty("hi!", (java.lang.Object) (-1L), method11, method12, (int) (byte) 10);
        boolean boolean16 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        nativeArray1.setAttributes("hi!", (int) (byte) 0);
        nativeArray1.delete((int) (short) -1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.activatePrototypeMap((int) (short) 100);
        java.util.Iterator iterator27 = nativeArray24.iterator();
        boolean boolean28 = nativeArray24.hasPrototypeMap();
        boolean boolean30 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray24, "Array");
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", (java.lang.Object) boolean30);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(iterator27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test2406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2406");
        com.google.javascript.rhino.head.Scriptable scriptable0 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray3 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray6 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray3.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray6, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray11.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj14 = nativeArray6.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray11);
        boolean boolean15 = nativeArray6.hasPrototypeMap();
        java.lang.Object[] objArray16 = nativeArray6.getIds();
        int int17 = nativeArray6.size();
        nativeArray6.sealObject();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray6, "Array", false);
        java.util.ListIterator listIterator22 = nativeArray6.listIterator();
        java.lang.Object[] objArray23 = nativeArray6.toArray();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ScriptableObject.putProperty(scriptable0, 4, (java.lang.Object) nativeArray6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[hi!]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(listIterator22);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[null]");
    }

    @Test
    public void test2407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2407");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int10 = nativeArray8.lastIndexOf((java.lang.Object) (short) 10);
        long long11 = nativeArray8.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray8, "", true);
        boolean boolean15 = nativeArray8.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable19 = nativeArray18.getParentScope();
        java.lang.Object[] objArray20 = nativeArray18.getIds();
        boolean boolean21 = nativeArray18.isEmpty();
        boolean boolean22 = nativeArray8.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray18);
        boolean boolean23 = nativeArray1.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray8);
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int28 = nativeArray26.lastIndexOf((java.lang.Object) (short) 10);
        long long29 = nativeArray26.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray26, "", true);
        boolean boolean33 = nativeArray26.hasPrototypeMap();
        int int34 = nativeArray26.size();
        boolean boolean35 = nativeArray26.isEmpty();
        boolean boolean37 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray26, "Array");
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int42 = nativeArray40.lastIndexOf((java.lang.Object) (short) 10);
        long long43 = nativeArray40.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray40, "", true);
        boolean boolean47 = nativeArray40.hasPrototypeMap();
        java.util.ListIterator listIterator48 = nativeArray40.listIterator();
        boolean boolean49 = nativeArray26.has("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray40);
        boolean boolean50 = nativeArray26.hasPrototypeMap();
        java.lang.Object[] objArray51 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray26);
        java.lang.reflect.Method method52 = null;
        java.lang.reflect.Method method53 = null;
        nativeArray8.defineProperty("hi!", (java.lang.Object) nativeArray26, method52, method53, (int) (short) 1);
        com.google.javascript.rhino.head.Scriptable scriptable56 = nativeArray26.getPrototype();
        java.lang.String str57 = nativeArray26.getTypeOf();
        long long58 = nativeArray26.getLength();
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(scriptable19);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 1L + "'", long29 == 1L);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 1L + "'", long43 == 1L);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(listIterator48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertNull(scriptable56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "object" + "'", str57, "object");
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 1L + "'", long58 == 1L);
    }

    @Test
    public void test2408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2408");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj38 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        java.lang.Object[] objArray39 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray4);
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int44 = nativeArray42.lastIndexOf((java.lang.Object) (short) 10);
        long long45 = nativeArray42.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray42, "", true);
        boolean boolean49 = nativeArray42.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray54 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray51.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray54, (java.lang.Object) (-1));
        java.lang.Object[] objArray57 = nativeArray51.getAllIds();
        nativeArray51.delete("");
        boolean boolean60 = nativeArray42.contains((java.lang.Object) "");
        boolean boolean61 = nativeArray4.has("object", (com.google.javascript.rhino.head.Scriptable) nativeArray42);
        com.google.javascript.rhino.head.Context context62 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int66 = nativeArray64.lastIndexOf((java.lang.Object) (short) 10);
        long long67 = nativeArray64.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray64, "", true);
        boolean boolean71 = nativeArray64.hasPrototypeMap();
        boolean boolean72 = nativeArray64.isExtensible();
        nativeArray4.defineOwnProperties(context62, (com.google.javascript.rhino.head.ScriptableObject) nativeArray64);
        java.lang.String str74 = nativeArray4.getTypeOf();
        com.google.javascript.rhino.head.NativeArray nativeArray77 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray80 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray77.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray80, (java.lang.Object) (-1));
        java.lang.Object[] objArray83 = nativeArray77.getAllIds();
        nativeArray77.delete("");
        long long86 = nativeArray77.getLength();
        boolean boolean88 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray77, (int) (short) 10);
        nativeArray77.delete(2);
        com.google.javascript.rhino.head.Scriptable scriptable91 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray77);
        java.util.ListIterator listIterator93 = nativeArray77.listIterator((int) (byte) 0);
        boolean boolean95 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray77, (-1));
        boolean boolean96 = nativeArray4.has((int) '#', (com.google.javascript.rhino.head.Scriptable) nativeArray77);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[hi!]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 1L + "'", long45 == 1L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[length]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 1L + "'", long67 == 1L);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "object" + "'", str74, "object");
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray83), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray83), "[length]");
        org.junit.Assert.assertTrue("'" + long86 + "' != '" + 1L + "'", long86 == 1L);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNull(scriptable91);
        org.junit.Assert.assertNotNull(listIterator93);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test2409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2409");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        nativeArray1.put((int) (byte) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray9, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray19.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray22, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray27.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj30 = nativeArray22.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray27);
        boolean boolean31 = nativeArray22.hasPrototypeMap();
        java.lang.Object[] objArray32 = nativeArray22.getIds();
        int int33 = nativeArray22.size();
        boolean boolean34 = nativeArray1.has((int) (short) 100, (com.google.javascript.rhino.head.Scriptable) nativeArray22);
        boolean boolean36 = nativeArray22.isConst("hi!");
        java.lang.String str37 = nativeArray22.getTypeOf();
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[hi!]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "object" + "'", str37, "object");
    }

    @Test
    public void test2410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2410");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean8 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int12 = nativeArray10.lastIndexOf((java.lang.Object) (short) 10);
        long long13 = nativeArray10.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray10, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        java.lang.Object[] objArray24 = nativeArray18.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable25 = nativeArray18.getParentScope();
        boolean boolean26 = nativeArray10.containsAll((java.util.Collection) nativeArray18);
        boolean boolean27 = nativeArray1.containsAll((java.util.Collection) nativeArray10);
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int31 = nativeArray29.lastIndexOf((java.lang.Object) (short) 10);
        long long32 = nativeArray29.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray29, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray37.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray40, (java.lang.Object) (-1));
        java.lang.Object[] objArray43 = nativeArray37.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable44 = nativeArray37.getParentScope();
        boolean boolean45 = nativeArray29.containsAll((java.util.Collection) nativeArray37);
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int49 = nativeArray47.lastIndexOf((java.lang.Object) (short) 10);
        long long50 = nativeArray47.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray47, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray55.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray58, (java.lang.Object) (-1));
        java.lang.Object[] objArray61 = nativeArray55.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable62 = nativeArray55.getParentScope();
        boolean boolean63 = nativeArray47.containsAll((java.util.Collection) nativeArray55);
        com.google.javascript.rhino.head.NativeArray nativeArray65 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray68 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray65.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray68, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray73 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray73.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj76 = nativeArray68.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray73);
        boolean boolean77 = nativeArray68.hasPrototypeMap();
        java.lang.Object[] objArray78 = nativeArray68.getIds();
        java.lang.Object[] objArray79 = nativeArray55.toArray(objArray78);
        java.lang.Object obj80 = nativeArray1.associateValue((java.lang.Object) boolean45, (java.lang.Object) nativeArray55);
        com.google.javascript.rhino.head.Scriptable scriptable81 = nativeArray55.getPrototype();
        nativeArray55.delete("hi!");
        boolean boolean85 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray55, "");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj87 = nativeArray55.get(1L);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[null]");
        org.junit.Assert.assertNull(scriptable25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1L + "'", long32 == 1L);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[null]");
        org.junit.Assert.assertNull(scriptable44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 1L + "'", long50 == 1L);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[null]");
        org.junit.Assert.assertNull(scriptable62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[null]");
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[null]");
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNull(scriptable81);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
    }

    @Test
    public void test2411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2411");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray7 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray4.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray7, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj15 = nativeArray7.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray12);
        com.google.javascript.rhino.head.Callable callable18 = null;
        nativeArray7.setGetterOrSetter("hi!", 0, callable18, false);
        nativeArray1.setAttributes((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray7, (int) (short) 10);
        boolean boolean24 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "object");
        boolean boolean26 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        com.google.javascript.rhino.head.Scriptable scriptable27 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        java.lang.Object obj28 = null;
        java.lang.Object obj29 = nativeArray1.getAssociatedValue(obj28);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(scriptable27);
        org.junit.Assert.assertNull(obj29);
    }

    @Test
    public void test2412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2412");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int19 = nativeArray17.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray4.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray17);
        java.lang.String str21 = nativeArray4.getClassName();
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray23.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray26, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray31.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj34 = nativeArray26.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray31);
        boolean boolean35 = nativeArray26.hasPrototypeMap();
        java.lang.Object[] objArray36 = nativeArray26.getIds();
        int int37 = nativeArray26.size();
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray39.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray42, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray47.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj50 = nativeArray42.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray47);
        boolean boolean51 = nativeArray42.hasPrototypeMap();
        java.lang.Object[] objArray52 = nativeArray42.getIds();
        int int53 = nativeArray42.size();
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray56.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray59, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray64.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj67 = nativeArray59.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray64);
        boolean boolean68 = nativeArray59.hasPrototypeMap();
        java.lang.Object[] objArray69 = nativeArray59.getIds();
        int int70 = nativeArray59.size();
        com.google.javascript.rhino.head.NativeArray nativeArray72 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int74 = nativeArray72.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray59.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray72);
        java.lang.Object obj76 = nativeArray42.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray59);
        boolean boolean77 = nativeArray26.containsAll((java.util.Collection) nativeArray59);
        com.google.javascript.rhino.head.Scriptable scriptable78 = nativeArray26.getParentScope();
        java.lang.Object[] objArray79 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray26);
        java.lang.Object[] objArray80 = nativeArray4.toArray(objArray79);
        com.google.javascript.rhino.head.NativeArray nativeArray82 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int84 = nativeArray82.lastIndexOf((java.lang.Object) (short) 10);
        long long85 = nativeArray82.getLength();
        nativeArray82.delete((int) (byte) 1);
        boolean boolean88 = nativeArray82.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray91 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable92 = nativeArray91.getParentScope();
        java.lang.Object[] objArray93 = nativeArray91.getIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray82, "", (java.lang.Object) nativeArray91, 0);
        java.lang.Integer[] intArray96 = nativeArray82.getIndexIds();
        int int97 = nativeArray4.indexOf((java.lang.Object) nativeArray82);
        java.lang.String str98 = nativeArray82.getClassName();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Array" + "'", str21, "Array");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[hi!]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[hi!]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNull(scriptable78);
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[null]");
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[null]");
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 1L + "'", long85 == 1L);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNull(scriptable92);
        org.junit.Assert.assertNotNull(objArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray93), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray93), "[]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + (-1) + "'", int97 == (-1));
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "Array" + "'", str98, "Array");
    }

    @Test
    public void test2413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2413");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable11 = nativeArray10.getParentScope();
        java.lang.Object[] objArray12 = nativeArray10.getIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", (java.lang.Object) nativeArray10, 0);
        java.lang.Object[] objArray15 = nativeArray1.toArray();
        nativeArray1.preventExtensions();
        com.google.javascript.rhino.head.Context context17 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int21 = nativeArray19.lastIndexOf((java.lang.Object) (short) 10);
        long long22 = nativeArray19.getLength();
        nativeArray19.delete((int) (byte) 1);
        boolean boolean25 = nativeArray19.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray27.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray30, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray35.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj38 = nativeArray30.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray35);
        boolean boolean39 = nativeArray30.hasPrototypeMap();
        java.lang.Object[] objArray40 = nativeArray30.getIds();
        int int41 = nativeArray30.size();
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray43.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray46, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray51.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj54 = nativeArray46.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray51);
        boolean boolean55 = nativeArray46.hasPrototypeMap();
        java.lang.Object[] objArray56 = nativeArray46.getIds();
        int int57 = nativeArray46.size();
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray63 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray60.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray63, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray68 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray68.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj71 = nativeArray63.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray68);
        boolean boolean72 = nativeArray63.hasPrototypeMap();
        java.lang.Object[] objArray73 = nativeArray63.getIds();
        int int74 = nativeArray63.size();
        com.google.javascript.rhino.head.NativeArray nativeArray76 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int78 = nativeArray76.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray63.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray76);
        java.lang.Object obj80 = nativeArray46.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray63);
        boolean boolean81 = nativeArray30.containsAll((java.util.Collection) nativeArray63);
        nativeArray19.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray30);
        java.lang.Integer[] intArray83 = nativeArray19.getIndexIds();
        nativeArray1.defineOwnProperties(context17, (com.google.javascript.rhino.head.ScriptableObject) nativeArray19);
        java.lang.Object obj86 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 2);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj88 = nativeArray1.remove((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(scriptable11);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1L + "'", long22 == 1L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[hi!]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[hi!]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[hi!]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertNotNull(obj86);
    }

    @Test
    public void test2414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2414");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        java.lang.Object[] objArray4 = nativeArray1.getAllIds();
        java.lang.Object[] objArray5 = nativeArray1.toArray();
        java.lang.Integer[] intArray6 = nativeArray1.getIndexIds();
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray8.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray11, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray16.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj19 = nativeArray11.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray16);
        boolean boolean20 = nativeArray11.hasPrototypeMap();
        java.lang.Object[] objArray21 = nativeArray11.getIds();
        int int22 = nativeArray11.size();
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray32.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj35 = nativeArray27.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray32);
        boolean boolean36 = nativeArray27.hasPrototypeMap();
        java.lang.Object[] objArray37 = nativeArray27.getIds();
        int int38 = nativeArray27.size();
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray41.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray44, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray49 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray49.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj52 = nativeArray44.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray49);
        boolean boolean53 = nativeArray44.hasPrototypeMap();
        java.lang.Object[] objArray54 = nativeArray44.getIds();
        int int55 = nativeArray44.size();
        com.google.javascript.rhino.head.NativeArray nativeArray57 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int59 = nativeArray57.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray44.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray57);
        java.lang.Object obj61 = nativeArray27.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray44);
        boolean boolean62 = nativeArray11.containsAll((java.util.Collection) nativeArray44);
        com.google.javascript.rhino.head.NativeArray nativeArray65 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable66 = nativeArray65.getParentScope();
        java.lang.Object[] objArray67 = nativeArray65.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray69 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray72 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray69.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray72, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray77 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray77.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj80 = nativeArray72.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray77);
        java.lang.Object obj81 = nativeArray65.getAssociatedValue((java.lang.Object) nativeArray72);
        com.google.javascript.rhino.head.Scriptable scriptable82 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray65);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray44, "hi!", (java.lang.Object) scriptable82);
        boolean boolean84 = nativeArray44.avoidObjectDetection();
        java.util.ListIterator listIterator85 = nativeArray44.listIterator();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean86 = nativeArray1.remove((java.lang.Object) nativeArray44);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[length]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[null]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[hi!]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[hi!]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[hi!]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(scriptable66);
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[length]");
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertNull(scriptable82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(listIterator85);
    }

    @Test
    public void test2415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2415");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        java.lang.Integer[] intArray7 = nativeArray1.getIndexIds();
        java.lang.Object obj9 = null;
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!", obj9);
        java.lang.Object obj12 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray1, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int16 = nativeArray14.lastIndexOf((java.lang.Object) (short) 10);
        long long17 = nativeArray14.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray14, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable21 = null;
        java.lang.Object[] objArray22 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable21);
        java.lang.Object[] objArray23 = nativeArray14.toArray(objArray22);
        com.google.javascript.rhino.head.Scriptable scriptable24 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray14);
        boolean boolean25 = nativeArray1.contains((java.lang.Object) nativeArray14);
        java.lang.String str26 = nativeArray14.getClassName();
        nativeArray14.preventExtensions();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 1L + "'", long17 == 1L);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[null]");
        org.junit.Assert.assertNotNull(scriptable24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Array" + "'", str26, "Array");
    }

    @Test
    public void test2416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2416");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray7 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray4.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray7, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj15 = nativeArray7.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray12);
        com.google.javascript.rhino.head.Callable callable18 = null;
        nativeArray7.setGetterOrSetter("hi!", 0, callable18, false);
        nativeArray1.setAttributes((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray7, (int) (short) 10);
        boolean boolean24 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray7, "object");
        boolean boolean25 = nativeArray7.isExtensible();
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test2417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2417");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.getAllIds();
        java.lang.String str8 = nativeArray1.getTypeOf();
        nativeArray1.delete("hi!");
        java.lang.Object[] objArray11 = nativeArray1.toArray();
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[length]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "object" + "'", str8, "object");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[null]");
    }

    @Test
    public void test2418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2418");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int11 = nativeArray9.lastIndexOf((java.lang.Object) (short) 10);
        long long12 = nativeArray9.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray20, (java.lang.Object) (-1));
        java.lang.Object[] objArray23 = nativeArray17.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable24 = nativeArray17.getParentScope();
        boolean boolean25 = nativeArray9.containsAll((java.util.Collection) nativeArray17);
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int30 = nativeArray28.lastIndexOf((java.lang.Object) (short) 10);
        long long31 = nativeArray28.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray28, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable35 = null;
        java.lang.Object[] objArray36 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable35);
        java.lang.Object[] objArray37 = nativeArray28.toArray(objArray36);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) objArray36);
        nativeArray9.activatePrototypeMap((int) (byte) 10);
        boolean boolean41 = nativeArray1.has((int) (short) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        nativeArray1.setAttributes((int) (byte) 1, 10);
        java.util.ListIterator listIterator45 = nativeArray1.listIterator();
        com.google.javascript.rhino.head.Scriptable scriptable46 = nativeArray1.getPrototype();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 1L + "'", long12 == 1L);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[null]");
        org.junit.Assert.assertNull(scriptable24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 1L + "'", long31 == 1L);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[null]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(listIterator45);
        org.junit.Assert.assertNull(scriptable46);
    }

    @Test
    public void test2419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2419");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.getAllIds();
        nativeArray1.delete("");
        long long10 = nativeArray1.getLength();
        boolean boolean12 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, (int) (short) 10);
        nativeArray1.delete(2);
        com.google.javascript.rhino.head.Scriptable scriptable15 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        boolean boolean16 = nativeArray1.isExtensible();
        nativeArray1.delete((int) (short) 0);
        java.lang.Object[] objArray19 = nativeArray1.toArray();
        nativeArray1.delete("");
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray23.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray26, (java.lang.Object) (-1));
        java.lang.Object[] objArray29 = nativeArray23.getAllIds();
        nativeArray23.delete("");
        long long32 = nativeArray23.getLength();
        boolean boolean34 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray23, (int) (short) 10);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray37.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray40, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray45.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj48 = nativeArray40.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray45);
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int53 = nativeArray51.lastIndexOf((java.lang.Object) (short) 10);
        long long54 = nativeArray51.getLength();
        nativeArray51.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray45, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray63 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray60.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray63, (java.lang.Object) (-1));
        java.lang.Object[] objArray66 = nativeArray60.getAllIds();
        nativeArray60.delete("");
        java.lang.Object obj69 = nativeArray45.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray60);
        java.lang.Integer[] intArray70 = nativeArray60.getIndexIds();
        nativeArray23.defineProperty("", (java.lang.Object) nativeArray60, 10);
        java.lang.Object[] objArray73 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray23);
        com.google.javascript.rhino.head.NativeArray nativeArray74 = new com.google.javascript.rhino.head.NativeArray(objArray73);
        java.lang.Object[] objArray75 = nativeArray1.toArray(objArray73);
        boolean boolean77 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 0);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[length]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(scriptable15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[null]");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[length]");
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1L + "'", long32 == 1L);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 1L + "'", long54 == 1L);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[length]");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[]");
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[null]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
    }

    @Test
    public void test2420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2420");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj38 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        java.lang.Object[] objArray39 = nativeArray4.getIds();
        java.lang.String str40 = nativeArray4.getClassName();
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int44 = nativeArray42.lastIndexOf((java.lang.Object) (short) 10);
        long long45 = nativeArray42.getLength();
        nativeArray42.setAttributes((int) (byte) 100, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int53 = nativeArray51.lastIndexOf((java.lang.Object) (short) 10);
        long long54 = nativeArray51.getLength();
        nativeArray51.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray42, (int) (byte) -1, (java.lang.Object) nativeArray51);
        java.util.Iterator iterator58 = nativeArray42.iterator();
        java.lang.Object[] objArray59 = nativeArray42.toArray();
        boolean boolean60 = nativeArray4.containsAll((java.util.Collection) nativeArray42);
        boolean boolean61 = nativeArray42.isExtensible();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[hi!]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Array" + "'", str40, "Array");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 1L + "'", long45 == 1L);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 1L + "'", long54 == 1L);
        org.junit.Assert.assertNotNull(iterator58);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[null]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
    }

    @Test
    public void test2421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2421");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int22 = nativeArray20.lastIndexOf((java.lang.Object) (short) 10);
        long long23 = nativeArray20.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray20, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable27 = null;
        java.lang.Object[] objArray28 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable27);
        java.lang.Object[] objArray29 = nativeArray20.toArray(objArray28);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!", (java.lang.Object) objArray28);
        int int31 = nativeArray1.size();
        nativeArray1.activatePrototypeMap((int) (byte) 10);
        java.lang.Object obj35 = null;
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array", obj35, 8);
        boolean boolean39 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 10);
        nativeArray1.delete((int) (short) 10);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1L + "'", long23 == 1L);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[null]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test2422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2422");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray20, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj28 = nativeArray20.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray25);
        boolean boolean29 = nativeArray20.hasPrototypeMap();
        java.lang.Object[] objArray30 = nativeArray20.getIds();
        int int31 = nativeArray20.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray34.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray37, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj45 = nativeArray37.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray42);
        boolean boolean46 = nativeArray37.hasPrototypeMap();
        java.lang.Object[] objArray47 = nativeArray37.getIds();
        int int48 = nativeArray37.size();
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int52 = nativeArray50.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray37.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray50);
        java.lang.Object obj54 = nativeArray20.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        boolean boolean55 = nativeArray4.containsAll((java.util.Collection) nativeArray37);
        java.util.ListIterator listIterator56 = nativeArray37.listIterator();
        com.google.javascript.rhino.head.Context context57 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray62 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray59.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray62, (java.lang.Object) (-1));
        java.lang.Object[] objArray65 = nativeArray59.getAllIds();
        java.lang.String str66 = nativeArray59.getTypeOf();
        int int67 = nativeArray59.size();
        nativeArray37.defineOwnProperties(context57, (com.google.javascript.rhino.head.ScriptableObject) nativeArray59);
        java.lang.Object[] objArray69 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray59);
        java.lang.Object[] objArray70 = nativeArray59.toArray();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[hi!]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(listIterator56);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[length]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "object" + "'", str66, "object");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[]");
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[null]");
    }

    @Test
    public void test2423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2423");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        java.util.ListIterator listIterator9 = nativeArray1.listIterator();
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray15, (java.lang.Object) (-1));
        boolean boolean19 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray15, "");
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray25, "", (java.lang.Object) 100);
        java.lang.Object obj29 = nativeArray22.associateValue((java.lang.Object) ' ', (java.lang.Object) nativeArray25);
        java.lang.Object[] objArray30 = nativeArray25.toArray();
        nativeArray15.setAttributes((int) (byte) 100, (com.google.javascript.rhino.head.Scriptable) nativeArray25, (int) (short) 0);
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray35.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray38, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray43.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj46 = nativeArray38.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray43);
        boolean boolean47 = nativeArray38.hasPrototypeMap();
        java.lang.Object[] objArray48 = nativeArray38.getIds();
        int int49 = nativeArray38.size();
        com.google.javascript.rhino.head.NativeArray nativeArray52 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray52.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray55, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray60.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj63 = nativeArray55.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray60);
        boolean boolean64 = nativeArray55.hasPrototypeMap();
        java.lang.Object[] objArray65 = nativeArray55.getIds();
        int int66 = nativeArray55.size();
        com.google.javascript.rhino.head.NativeArray nativeArray68 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int70 = nativeArray68.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray55.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray68);
        java.lang.Object obj72 = nativeArray38.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray55);
        java.lang.Object[] objArray73 = nativeArray38.getIds();
        java.lang.Integer[] intArray74 = nativeArray38.getIndexIds();
        com.google.javascript.rhino.head.NativeArray nativeArray77 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray77.activatePrototypeMap((int) (short) 100);
        boolean boolean81 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray77, "hi!");
        long long82 = nativeArray77.jsGet_length();
        boolean boolean83 = nativeArray38.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray77);
        nativeArray38.setAttributes("hi!", 1);
        com.google.javascript.rhino.head.Scriptable scriptable88 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray38, "hi!");
        boolean boolean89 = nativeArray15.has((int) (byte) -1, (com.google.javascript.rhino.head.Scriptable) nativeArray38);
        java.lang.reflect.Method method90 = null;
        java.lang.reflect.Method method91 = null;
        nativeArray1.defineProperty("Array", (java.lang.Object) nativeArray15, method90, method91, 4);
        com.google.javascript.rhino.head.Scriptable scriptable94 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        boolean boolean95 = nativeArray1.hasPrototypeMap();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(listIterator9);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[null]");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[hi!]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[hi!]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[hi!]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + 1L + "'", long82 == 1L);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNull(scriptable88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNull(scriptable94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test2424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2424");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable2 = nativeArray1.getParentScope();
        com.google.javascript.rhino.head.NativeArray nativeArray5 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray5.activatePrototypeMap((int) (short) 100);
        com.google.javascript.rhino.head.Scriptable scriptable9 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray5, "");
        boolean boolean10 = nativeArray1.has(100, scriptable9);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int14 = nativeArray12.lastIndexOf((java.lang.Object) (short) 10);
        long long15 = nativeArray12.getLength();
        nativeArray12.setAttributes((int) (byte) 100, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray21.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray24, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray32, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray37.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj40 = nativeArray32.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int45 = nativeArray43.lastIndexOf((java.lang.Object) (short) 10);
        long long46 = nativeArray43.getLength();
        nativeArray43.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray37, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray52 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray52.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray55, (java.lang.Object) (-1));
        java.lang.Object[] objArray58 = nativeArray52.getAllIds();
        nativeArray52.delete("");
        java.lang.Object obj61 = nativeArray37.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray52);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray37, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable64 = nativeArray37.getPrototype();
        com.google.javascript.rhino.head.Context context65 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray67 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int69 = nativeArray67.lastIndexOf((java.lang.Object) (short) 10);
        long long70 = nativeArray67.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray67, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray75 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray78 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray75.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray78, (java.lang.Object) (-1));
        java.lang.Object[] objArray81 = nativeArray75.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable82 = nativeArray75.getParentScope();
        boolean boolean83 = nativeArray67.containsAll((java.util.Collection) nativeArray75);
        nativeArray37.defineOwnProperties(context65, (com.google.javascript.rhino.head.ScriptableObject) nativeArray67);
        nativeArray21.setAttributes(1, (com.google.javascript.rhino.head.Scriptable) nativeArray37, (int) (short) 10);
        com.google.javascript.rhino.head.IdFunctionObject idFunctionObject88 = nativeArray12.exportAsJSClass((int) (short) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray37, true);
        boolean boolean89 = idFunctionObject88.isExtensible();
        com.google.javascript.rhino.head.Scriptable scriptable90 = idFunctionObject88.getPrototype();
        // The following exception was thrown during execution in test generation
        try {
            nativeArray1.initPrototypeConstructor(idFunctionObject88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(scriptable2);
        org.junit.Assert.assertNull(scriptable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 1L + "'", long15 == 1L);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 1L + "'", long46 == 1L);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[length]");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNull(scriptable64);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 1L + "'", long70 == 1L);
        org.junit.Assert.assertNotNull(objArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[null]");
        org.junit.Assert.assertNull(scriptable82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(idFunctionObject88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNull(scriptable90);
    }

    @Test
    public void test2425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2425");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj38 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        java.lang.Object[] objArray39 = nativeArray4.getIds();
        java.lang.Integer[] intArray40 = nativeArray4.getIndexIds();
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray43.activatePrototypeMap((int) (short) 100);
        boolean boolean47 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray43, "hi!");
        long long48 = nativeArray43.jsGet_length();
        boolean boolean49 = nativeArray4.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray43);
        nativeArray4.setAttributes("hi!", 1);
        com.google.javascript.rhino.head.Context context53 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int57 = nativeArray55.lastIndexOf((java.lang.Object) (short) 10);
        long long58 = nativeArray55.getLength();
        nativeArray55.delete((int) (byte) 1);
        boolean boolean62 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray55, "");
        java.lang.String str63 = nativeArray55.getClassName();
        nativeArray4.defineOwnProperties(context53, (com.google.javascript.rhino.head.ScriptableObject) nativeArray55);
        com.google.javascript.rhino.head.Context context65 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray67 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int69 = nativeArray67.lastIndexOf((java.lang.Object) (short) 10);
        long long70 = nativeArray67.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray67, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray75 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray78 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray75.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray78, (java.lang.Object) (-1));
        java.lang.Object[] objArray81 = nativeArray75.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable82 = nativeArray75.getParentScope();
        boolean boolean83 = nativeArray67.containsAll((java.util.Collection) nativeArray75);
        nativeArray75.delete("Array");
        boolean boolean87 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray75, (int) 'a');
        boolean boolean88 = nativeArray75.hasPrototypeMap();
        boolean boolean89 = nativeArray75.isExtensible();
        java.util.Iterator iterator90 = nativeArray75.iterator();
        nativeArray4.defineOwnProperties(context65, (com.google.javascript.rhino.head.ScriptableObject) nativeArray75);
        com.google.javascript.rhino.head.Scriptable scriptable92 = null;
        nativeArray75.setPrototype(scriptable92);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[hi!]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 1L + "'", long48 == 1L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 1L + "'", long58 == 1L);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "Array" + "'", str63, "Array");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 1L + "'", long70 == 1L);
        org.junit.Assert.assertNotNull(objArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[null]");
        org.junit.Assert.assertNull(scriptable82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(iterator90);
    }

    @Test
    public void test2426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2426");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        com.google.javascript.rhino.head.Scriptable scriptable18 = nativeArray9.getParentScope();
        boolean boolean19 = nativeArray9.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable23 = nativeArray22.getParentScope();
        java.lang.Object[] objArray24 = nativeArray22.getIds();
        boolean boolean25 = nativeArray9.has("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray22);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int29 = nativeArray27.lastIndexOf((java.lang.Object) (short) 10);
        long long30 = nativeArray27.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray27, "", true);
        boolean boolean34 = nativeArray27.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable38 = nativeArray37.getParentScope();
        java.lang.Object[] objArray39 = nativeArray37.getIds();
        boolean boolean40 = nativeArray37.isEmpty();
        boolean boolean41 = nativeArray27.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        java.lang.Object[] objArray42 = nativeArray27.getIds();
        java.lang.Object[] objArray43 = nativeArray27.getAllIds();
        int int45 = nativeArray27.indexOf((java.lang.Object) (short) 100);
        boolean boolean46 = nativeArray9.contains((java.lang.Object) int45);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(scriptable18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(scriptable23);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1L + "'", long30 == 1L);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(scriptable38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[length]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test2427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2427");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        nativeArray9.delete("Array");
        boolean boolean21 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, (int) 'a');
        java.lang.Object[] objArray22 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray9);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj26 = nativeArray9.getGetterOrSetter("", (int) '4', false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
    }

    @Test
    public void test2428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2428");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        java.lang.Integer[] intArray7 = nativeArray1.getIndexIds();
        java.lang.Object obj9 = null;
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!", obj9);
        java.lang.Object obj12 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray1, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int16 = nativeArray14.lastIndexOf((java.lang.Object) (short) 10);
        long long17 = nativeArray14.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray14, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable21 = null;
        java.lang.Object[] objArray22 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable21);
        java.lang.Object[] objArray23 = nativeArray14.toArray(objArray22);
        com.google.javascript.rhino.head.Scriptable scriptable24 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray14);
        boolean boolean25 = nativeArray1.contains((java.lang.Object) nativeArray14);
        com.google.javascript.rhino.head.Scriptable scriptable26 = nativeArray1.getPrototype();
        java.lang.Object[] objArray27 = nativeArray1.toArray();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 1L + "'", long17 == 1L);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[null]");
        org.junit.Assert.assertNotNull(scriptable24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(scriptable26);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[null]");
    }

    @Test
    public void test2429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2429");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.getAllIds();
        nativeArray24.delete("");
        java.lang.Object obj33 = nativeArray9.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!");
        com.google.javascript.rhino.head.Context context36 = null;
        com.google.javascript.rhino.head.Scriptable scriptable37 = null;
        java.lang.Object[] objArray38 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable37);
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray40.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray43, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray48.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj51 = nativeArray43.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray48);
        com.google.javascript.rhino.head.Callable callable54 = null;
        nativeArray43.setGetterOrSetter("hi!", 0, callable54, false);
        com.google.javascript.rhino.head.Scriptable scriptable57 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray43);
        nativeArray9.defineOwnProperty(context36, (java.lang.Object) scriptable37, (com.google.javascript.rhino.head.ScriptableObject) nativeArray43);
        boolean boolean60 = nativeArray9.isConst("object");
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "Array", false);
        boolean boolean64 = nativeArray9.isSealed();
        boolean boolean65 = nativeArray9.hasPrototypeMap();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNull(scriptable57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
    }

    @Test
    public void test2430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2430");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int19 = nativeArray17.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray4.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray17);
        long long21 = nativeArray17.getLength();
        long long22 = nativeArray17.jsGet_length();
        java.lang.String str23 = nativeArray17.getTypeOf();
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        java.lang.Object obj28 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray26, "Array");
        nativeArray17.defineProperty("Array", (java.lang.Object) nativeArray26, 0);
        boolean boolean32 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray26, "object");
        boolean boolean33 = nativeArray26.isSealed();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1L + "'", long21 == 1L);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1L + "'", long22 == 1L);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "object" + "'", str23, "object");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test2431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2431");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        com.google.javascript.rhino.head.Scriptable scriptable2 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        java.util.ListIterator listIterator3 = nativeArray1.listIterator();
        org.junit.Assert.assertNull(scriptable2);
        org.junit.Assert.assertNotNull(listIterator3);
    }

    @Test
    public void test2432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2432");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 2);
        boolean boolean3 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, (int) (short) 0);
        com.google.javascript.rhino.head.NativeArray nativeArray6 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj20 = nativeArray12.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray17);
        com.google.javascript.rhino.head.Callable callable23 = null;
        nativeArray12.setGetterOrSetter("hi!", 0, callable23, false);
        nativeArray6.setAttributes((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray12, (int) (short) 10);
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int32 = nativeArray30.lastIndexOf((java.lang.Object) (short) 10);
        long long33 = nativeArray30.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray30, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable37 = null;
        java.lang.Object[] objArray38 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable37);
        java.lang.Object[] objArray39 = nativeArray30.toArray(objArray38);
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int44 = nativeArray42.lastIndexOf((java.lang.Object) (short) 10);
        long long45 = nativeArray42.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray42, "", true);
        boolean boolean49 = nativeArray42.hasPrototypeMap();
        int int50 = nativeArray42.size();
        boolean boolean51 = nativeArray42.isEmpty();
        boolean boolean53 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray42, "Array");
        java.lang.Object obj54 = nativeArray30.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray42);
        java.lang.Object obj55 = nativeArray6.get("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray30);
        com.google.javascript.rhino.head.NativeArray nativeArray57 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable58 = nativeArray57.getParentScope();
        java.lang.Object[] objArray59 = nativeArray57.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray61 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray61.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray64, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray69 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray69.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj72 = nativeArray64.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray69);
        java.lang.Object obj73 = nativeArray57.getAssociatedValue((java.lang.Object) nativeArray64);
        java.lang.Object obj74 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray30, (java.lang.Object) nativeArray57);
        nativeArray30.preventExtensions();
        java.lang.Object obj76 = nativeArray1.get(0, (com.google.javascript.rhino.head.Scriptable) nativeArray30);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 1L + "'", long33 == 1L);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[null]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 1L + "'", long45 == 1L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNull(scriptable58);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[length]");
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertNotNull(obj76);
    }

    @Test
    public void test2433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2433");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.activatePrototypeMap((int) (short) 100);
        java.util.Iterator iterator4 = nativeArray1.iterator();
        boolean boolean5 = nativeArray1.hasPrototypeMap();
        boolean boolean7 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray15, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray20.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj23 = nativeArray15.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray20);
        boolean boolean24 = nativeArray15.hasPrototypeMap();
        java.lang.Object[] objArray25 = nativeArray15.getIds();
        int int26 = nativeArray15.size();
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray32, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray37.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj40 = nativeArray32.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        boolean boolean41 = nativeArray32.hasPrototypeMap();
        java.lang.Object[] objArray42 = nativeArray32.getIds();
        int int43 = nativeArray32.size();
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int47 = nativeArray45.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray32.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray45);
        java.lang.Object obj49 = nativeArray15.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray32);
        java.lang.Object[] objArray50 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray15);
        boolean boolean52 = nativeArray15.isConst("hi!");
        nativeArray10.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray15);
        java.lang.Object obj54 = nativeArray1.get((int) (short) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray15);
        com.google.javascript.rhino.head.NativeArray nativeArray57 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray57.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray60, (java.lang.Object) (-1));
        java.lang.Object[] objArray63 = nativeArray57.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray(objArray63);
        java.lang.Object obj65 = nativeArray1.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray64);
        com.google.javascript.rhino.head.Scriptable scriptable66 = nativeArray64.getPrototype();
        org.junit.Assert.assertNotNull(iterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[hi!]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[hi!]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[null]");
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNull(scriptable66);
    }

    @Test
    public void test2434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2434");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        java.lang.Integer[] intArray7 = nativeArray1.getIndexIds();
        java.lang.Object obj9 = null;
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!", obj9);
        java.lang.Object obj12 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray1, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int16 = nativeArray14.lastIndexOf((java.lang.Object) (short) 10);
        long long17 = nativeArray14.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray14, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable21 = null;
        java.lang.Object[] objArray22 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable21);
        java.lang.Object[] objArray23 = nativeArray14.toArray(objArray22);
        com.google.javascript.rhino.head.Scriptable scriptable24 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray14);
        boolean boolean25 = nativeArray1.contains((java.lang.Object) nativeArray14);
        java.lang.String str26 = nativeArray14.getClassName();
        java.lang.Object obj27 = null;
        boolean boolean28 = nativeArray14.contains(obj27);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 1L + "'", long17 == 1L);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[null]");
        org.junit.Assert.assertNotNull(scriptable24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Array" + "'", str26, "Array");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test2435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2435");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        nativeArray9.delete("Array");
        java.lang.Object[] objArray20 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray(objArray20);
        java.util.ListIterator listIterator22 = nativeArray21.listIterator();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertNotNull(listIterator22);
    }

    @Test
    public void test2436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2436");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable2 = nativeArray1.getParentScope();
        java.lang.Object[] objArray3 = nativeArray1.getIds();
        boolean boolean4 = nativeArray1.isEmpty();
        nativeArray1.activatePrototypeMap(13);
        java.util.Iterator iterator7 = nativeArray1.iterator();
        nativeArray1.delete((int) (byte) 100);
        com.google.javascript.rhino.head.Scriptable scriptable10 = nativeArray1.getPrototype();
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "object");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj14 = nativeArray1.remove(8);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(scriptable2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(iterator7);
        org.junit.Assert.assertNull(scriptable10);
    }

    @Test
    public void test2437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2437");
        com.google.javascript.rhino.head.Context context0 = null;
        com.google.javascript.rhino.head.Scriptable scriptable1 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray7 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray4.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray7, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj15 = nativeArray7.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray12);
        boolean boolean16 = nativeArray7.hasPrototypeMap();
        java.lang.Object[] objArray17 = nativeArray7.getIds();
        int int18 = nativeArray7.size();
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int22 = nativeArray20.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray7.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray20);
        boolean boolean24 = nativeArray7.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable27 = nativeArray26.getParentScope();
        java.lang.Object[] objArray28 = nativeArray26.getAllIds();
        java.lang.Object[] objArray29 = nativeArray7.toArray(objArray28);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj30 = com.google.javascript.rhino.head.ScriptableObject.callMethod(context0, scriptable1, "", objArray28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[hi!]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(scriptable27);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[null]");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[null]");
    }

    @Test
    public void test2438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2438");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int19 = nativeArray17.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray4.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray17);
        java.lang.Object[] objArray21 = nativeArray17.getAllIds();
        java.lang.Object obj23 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray17, "");
        boolean boolean24 = nativeArray17.avoidObjectDetection();
        java.lang.Integer[] intArray25 = nativeArray17.getIndexIds();
        java.lang.Object obj27 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray17, "", obj27, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: 100");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[length]");
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(intArray25);
    }

    @Test
    public void test2439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2439");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        com.google.javascript.rhino.head.Scriptable scriptable8 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable12 = nativeArray11.getParentScope();
        java.lang.Object[] objArray13 = nativeArray11.getAllIds();
        java.lang.reflect.Method method14 = null;
        java.lang.reflect.Method method15 = null;
        // The following exception was thrown during execution in test generation
        try {
            nativeArray1.defineProperty("object", (java.lang.Object) objArray13, method14, method15, 101);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: 101");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(scriptable8);
        org.junit.Assert.assertNull(scriptable12);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[length]");
    }

    @Test
    public void test2440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2440");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        java.lang.Object obj3 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array");
        boolean boolean5 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!");
        nativeArray1.activatePrototypeMap((int) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable11 = nativeArray10.getParentScope();
        java.lang.Object[] objArray12 = nativeArray10.getIds();
        boolean boolean13 = nativeArray10.isEmpty();
        nativeArray10.delete((int) 'a');
        java.lang.Object obj16 = nativeArray1.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray10);
        java.util.ListIterator listIterator18 = nativeArray1.listIterator((int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            nativeArray1.clear();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(scriptable11);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(listIterator18);
    }

    @Test
    public void test2441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2441");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable2 = nativeArray1.getParentScope();
        java.lang.Object[] objArray3 = nativeArray1.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray5 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray5.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray8, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray13.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj16 = nativeArray8.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray13);
        java.lang.Object obj17 = nativeArray1.getAssociatedValue((java.lang.Object) nativeArray8);
        com.google.javascript.rhino.head.Scriptable scriptable18 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        boolean boolean19 = nativeArray1.avoidObjectDetection();
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int24 = nativeArray22.lastIndexOf((java.lang.Object) (short) 10);
        long long25 = nativeArray22.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray22, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable29 = null;
        java.lang.Object[] objArray30 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable29);
        java.lang.Object[] objArray31 = nativeArray22.toArray(objArray30);
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        long long37 = nativeArray34.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray34, "", true);
        boolean boolean41 = nativeArray34.hasPrototypeMap();
        int int42 = nativeArray34.size();
        boolean boolean43 = nativeArray34.isEmpty();
        boolean boolean45 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray34, "Array");
        java.lang.Object obj46 = nativeArray22.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray34);
        com.google.javascript.rhino.head.NativeArray nativeArray49 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int51 = nativeArray49.lastIndexOf((java.lang.Object) (short) 10);
        long long52 = nativeArray49.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray49, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray57 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray57.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray60, (java.lang.Object) (-1));
        java.lang.Object[] objArray63 = nativeArray57.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable64 = nativeArray57.getParentScope();
        boolean boolean65 = nativeArray49.containsAll((java.util.Collection) nativeArray57);
        java.lang.Object obj66 = nativeArray34.get((int) (byte) -1, (com.google.javascript.rhino.head.Scriptable) nativeArray57);
        com.google.javascript.rhino.head.NativeArray nativeArray68 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int70 = nativeArray68.lastIndexOf((java.lang.Object) (short) 10);
        long long71 = nativeArray68.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray68, "", true);
        boolean boolean75 = nativeArray68.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray78 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable79 = nativeArray78.getParentScope();
        java.lang.Object[] objArray80 = nativeArray78.getIds();
        boolean boolean81 = nativeArray78.isEmpty();
        boolean boolean82 = nativeArray68.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray78);
        boolean boolean84 = nativeArray78.isConst("object");
        nativeArray57.setPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray78);
        java.lang.Object[] objArray86 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray57);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray57, "Array", true);
        com.google.javascript.rhino.head.Scriptable scriptable90 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray57);
        nativeArray57.delete((int) (byte) 100);
        nativeArray1.setAttributes("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray57, (int) (byte) 0);
        java.lang.Integer[] intArray95 = nativeArray1.getIndexIds();
        org.junit.Assert.assertNull(scriptable2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[length]");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(scriptable18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 1L + "'", long25 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[null]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 1L + "'", long37 == 1L);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 1L + "'", long52 == 1L);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[null]");
        org.junit.Assert.assertNull(scriptable64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 1L + "'", long71 == 1L);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNull(scriptable79);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(objArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray86), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray86), "[]");
        org.junit.Assert.assertNull(scriptable90);
        org.junit.Assert.assertNotNull(intArray95);
    }

    @Test
    public void test2442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2442");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.Scriptable scriptable7 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray10.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray13, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        nativeArray10.put((int) (byte) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray18, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray28.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray31, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray36.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj39 = nativeArray31.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray36);
        boolean boolean40 = nativeArray31.hasPrototypeMap();
        java.lang.Object[] objArray41 = nativeArray31.getIds();
        int int42 = nativeArray31.size();
        boolean boolean43 = nativeArray10.has((int) (short) 100, (com.google.javascript.rhino.head.Scriptable) nativeArray31);
        com.google.javascript.rhino.head.IdFunctionObject idFunctionObject45 = nativeArray1.exportAsJSClass(10, (com.google.javascript.rhino.head.Scriptable) nativeArray31, false);
        nativeArray31.sealObject();
        org.junit.Assert.assertNull(scriptable7);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[hi!]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(idFunctionObject45);
    }

    @Test
    public void test2443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2443");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean8 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int12 = nativeArray10.lastIndexOf((java.lang.Object) (short) 10);
        long long13 = nativeArray10.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray10, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        java.lang.Object[] objArray24 = nativeArray18.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable25 = nativeArray18.getParentScope();
        boolean boolean26 = nativeArray10.containsAll((java.util.Collection) nativeArray18);
        boolean boolean27 = nativeArray1.containsAll((java.util.Collection) nativeArray10);
        nativeArray1.setAttributes("", 8);
        long long31 = nativeArray1.jsGet_length();
        java.lang.Object[] objArray32 = nativeArray1.getIds();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[null]");
        org.junit.Assert.assertNull(scriptable25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 1L + "'", long31 == 1L);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
    }

    @Test
    public void test2444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2444");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj20 = nativeArray12.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray17);
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int25 = nativeArray23.lastIndexOf((java.lang.Object) (short) 10);
        long long26 = nativeArray23.getLength();
        nativeArray23.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray17, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray32.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray35, (java.lang.Object) (-1));
        java.lang.Object[] objArray38 = nativeArray32.getAllIds();
        nativeArray32.delete("");
        java.lang.Object obj41 = nativeArray17.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray32);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray17, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable44 = nativeArray17.getPrototype();
        com.google.javascript.rhino.head.Context context45 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int49 = nativeArray47.lastIndexOf((java.lang.Object) (short) 10);
        long long50 = nativeArray47.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray47, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray55.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray58, (java.lang.Object) (-1));
        java.lang.Object[] objArray61 = nativeArray55.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable62 = nativeArray55.getParentScope();
        boolean boolean63 = nativeArray47.containsAll((java.util.Collection) nativeArray55);
        nativeArray17.defineOwnProperties(context45, (com.google.javascript.rhino.head.ScriptableObject) nativeArray47);
        nativeArray1.setAttributes(1, (com.google.javascript.rhino.head.Scriptable) nativeArray17, (int) (short) 10);
        boolean boolean68 = nativeArray1.isConst("");
        nativeArray1.sealObject();
        java.lang.Object obj71 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array");
        nativeArray1.activatePrototypeMap(4);
        com.google.javascript.rhino.head.NativeArray nativeArray75 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable76 = nativeArray75.getParentScope();
        java.lang.Object[] objArray77 = nativeArray75.getIds();
        boolean boolean78 = nativeArray75.isEmpty();
        nativeArray75.activatePrototypeMap(13);
        java.util.Iterator iterator81 = nativeArray75.iterator();
        nativeArray75.delete((int) (byte) 100);
        com.google.javascript.rhino.head.Scriptable scriptable84 = nativeArray75.getPrototype();
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray75, "object");
        boolean boolean87 = nativeArray1.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray75);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 1L + "'", long26 == 1L);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[length]");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNull(scriptable44);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 1L + "'", long50 == 1L);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[null]");
        org.junit.Assert.assertNull(scriptable62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNull(scriptable76);
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray77), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray77), "[]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(iterator81);
        org.junit.Assert.assertNull(scriptable84);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test2445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2445");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int19 = nativeArray17.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray4.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray17);
        long long21 = nativeArray17.getLength();
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable24 = nativeArray23.getParentScope();
        java.lang.Object[] objArray25 = nativeArray23.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray27.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray30, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray35.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj38 = nativeArray30.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray35);
        java.lang.Object obj39 = nativeArray23.getAssociatedValue((java.lang.Object) nativeArray30);
        com.google.javascript.rhino.head.Scriptable scriptable40 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray23);
        nativeArray23.delete(2);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray23, "Array");
        nativeArray23.sealObject();
        boolean boolean46 = nativeArray17.containsAll((java.util.Collection) nativeArray23);
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int50 = nativeArray48.lastIndexOf((java.lang.Object) (short) 10);
        long long51 = nativeArray48.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray48, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray56.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray59, (java.lang.Object) (-1));
        java.lang.Object[] objArray62 = nativeArray56.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable63 = nativeArray56.getParentScope();
        boolean boolean64 = nativeArray48.containsAll((java.util.Collection) nativeArray56);
        com.google.javascript.rhino.head.NativeArray nativeArray66 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray69 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray66.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray69, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray74 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray74.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj77 = nativeArray69.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray74);
        boolean boolean78 = nativeArray69.hasPrototypeMap();
        java.lang.Object[] objArray79 = nativeArray69.getIds();
        java.lang.Object[] objArray80 = nativeArray56.toArray(objArray79);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray56, "hi!", false);
        boolean boolean84 = nativeArray23.contains((java.lang.Object) false);
        com.google.javascript.rhino.head.Scriptable scriptable85 = nativeArray23.getParentScope();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1L + "'", long21 == 1L);
        org.junit.Assert.assertNull(scriptable24);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[length]");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNull(scriptable40);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 1L + "'", long51 == 1L);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[null]");
        org.junit.Assert.assertNull(scriptable63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[null]");
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[null]");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNull(scriptable85);
    }

    @Test
    public void test2446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2446");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray7 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray4.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray7, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj15 = nativeArray7.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray12);
        com.google.javascript.rhino.head.Callable callable18 = null;
        nativeArray7.setGetterOrSetter("hi!", 0, callable18, false);
        nativeArray1.setAttributes((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray7, (int) (short) 10);
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int27 = nativeArray25.lastIndexOf((java.lang.Object) (short) 10);
        long long28 = nativeArray25.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray25, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable32 = null;
        java.lang.Object[] objArray33 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable32);
        java.lang.Object[] objArray34 = nativeArray25.toArray(objArray33);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int39 = nativeArray37.lastIndexOf((java.lang.Object) (short) 10);
        long long40 = nativeArray37.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray37, "", true);
        boolean boolean44 = nativeArray37.hasPrototypeMap();
        int int45 = nativeArray37.size();
        boolean boolean46 = nativeArray37.isEmpty();
        boolean boolean48 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray37, "Array");
        java.lang.Object obj49 = nativeArray25.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        java.lang.Object obj50 = nativeArray1.get("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray25);
        com.google.javascript.rhino.head.NativeArray nativeArray52 = new com.google.javascript.rhino.head.NativeArray((long) 2);
        java.lang.Object obj53 = nativeArray1.get((java.lang.Object) nativeArray52);
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int58 = nativeArray56.lastIndexOf((java.lang.Object) (short) 10);
        long long59 = nativeArray56.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray56, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray67 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray64.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray67, (java.lang.Object) (-1));
        java.lang.Object[] objArray70 = nativeArray64.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable71 = nativeArray64.getParentScope();
        boolean boolean72 = nativeArray56.containsAll((java.util.Collection) nativeArray64);
        com.google.javascript.rhino.head.Scriptable scriptable73 = nativeArray64.getParentScope();
        boolean boolean74 = nativeArray64.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray77 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable78 = nativeArray77.getParentScope();
        java.lang.Object[] objArray79 = nativeArray77.getIds();
        boolean boolean80 = nativeArray64.has("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray77);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "object", (java.lang.Object) nativeArray77);
        com.google.javascript.rhino.head.Scriptable scriptable82 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray77);
        java.lang.Object[] objArray83 = nativeArray77.toArray();
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 1L + "'", long28 == 1L);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[null]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 1L + "'", long40 == 1L);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 1L + "'", long59 == 1L);
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[null]");
        org.junit.Assert.assertNull(scriptable71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNull(scriptable73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNull(scriptable78);
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNull(scriptable82);
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray83), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray83), "[null]");
    }

    @Test
    public void test2447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2447");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        java.lang.Object[] objArray4 = nativeArray1.getAllIds();
        java.lang.Object[] objArray5 = nativeArray1.toArray();
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[length]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[null]");
    }

    @Test
    public void test2448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2448");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable2 = nativeArray1.getParentScope();
        java.lang.Object[] objArray3 = nativeArray1.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray5 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray5.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray8, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray13.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj16 = nativeArray8.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray13);
        java.lang.Object obj17 = nativeArray1.getAssociatedValue((java.lang.Object) nativeArray8);
        int int18 = nativeArray1.size();
        com.google.javascript.rhino.head.IdFunctionObject idFunctionObject19 = null;
        // The following exception was thrown during execution in test generation
        try {
            nativeArray1.initPrototypeConstructor(idFunctionObject19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(scriptable2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[length]");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
    }

    @Test
    public void test2449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2449");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray19.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray22, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray27.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj30 = nativeArray22.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray27);
        boolean boolean31 = nativeArray22.hasPrototypeMap();
        java.lang.Object[] objArray32 = nativeArray22.getIds();
        java.lang.Object[] objArray33 = nativeArray9.toArray(objArray32);
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", false);
        boolean boolean38 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, (int) (byte) 10);
        int int39 = nativeArray9.size();
        boolean boolean40 = nativeArray9.isEmpty();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[null]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[null]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    }

    @Test
    public void test2450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2450");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj38 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        boolean boolean40 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray21, (int) (byte) 1);
        boolean boolean41 = nativeArray21.isExtensible();
        boolean boolean43 = nativeArray21.isConst("");
        long long44 = nativeArray21.jsGet_length();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 1L + "'", long44 == 1L);
    }

    @Test
    public void test2451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2451");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable8 = null;
        java.lang.Object[] objArray9 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable8);
        java.lang.Object[] objArray10 = nativeArray1.toArray(objArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int15 = nativeArray13.lastIndexOf((java.lang.Object) (short) 10);
        long long16 = nativeArray13.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "", true);
        boolean boolean20 = nativeArray13.hasPrototypeMap();
        int int21 = nativeArray13.size();
        boolean boolean22 = nativeArray13.isEmpty();
        boolean boolean24 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "Array");
        java.lang.Object obj25 = nativeArray1.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray13);
        nativeArray13.setAttributes("object", (int) (byte) 0);
        nativeArray13.preventExtensions();
        boolean boolean30 = nativeArray13.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int34 = nativeArray32.lastIndexOf((java.lang.Object) (short) 10);
        long long35 = nativeArray32.getLength();
        nativeArray32.delete((int) (byte) 1);
        boolean boolean38 = nativeArray32.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable42 = nativeArray41.getParentScope();
        java.lang.Object[] objArray43 = nativeArray41.getIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray32, "", (java.lang.Object) nativeArray41, 0);
        java.lang.Integer[] intArray46 = nativeArray32.getIndexIds();
        com.google.javascript.rhino.head.NativeArray nativeArray49 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int51 = nativeArray49.lastIndexOf((java.lang.Object) (short) 10);
        long long52 = nativeArray49.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray49, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable56 = null;
        java.lang.Object[] objArray57 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable56);
        java.lang.Object[] objArray58 = nativeArray49.toArray(objArray57);
        com.google.javascript.rhino.head.NativeArray nativeArray61 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int63 = nativeArray61.lastIndexOf((java.lang.Object) (short) 10);
        long long64 = nativeArray61.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray61, "", true);
        boolean boolean68 = nativeArray61.hasPrototypeMap();
        int int69 = nativeArray61.size();
        boolean boolean70 = nativeArray61.isEmpty();
        boolean boolean72 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray61, "Array");
        java.lang.Object obj73 = nativeArray49.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray61);
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray32, "object", (java.lang.Object) nativeArray49, (int) (short) 10);
        java.lang.Integer[] intArray76 = nativeArray49.getIndexIds();
        com.google.javascript.rhino.head.NativeArray nativeArray77 = new com.google.javascript.rhino.head.NativeArray((java.lang.Object[]) intArray76);
        java.lang.Object[] objArray78 = nativeArray13.toArray((java.lang.Object[]) intArray76);
        java.lang.Object obj80 = null;
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, (int) '4', obj80);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[null]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1L + "'", long16 == 1L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1L + "'", long35 == 1L);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(scriptable42);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 1L + "'", long52 == 1L);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[]");
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[null]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 1L + "'", long64 == 1L);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[null]");
    }

    @Test
    public void test2452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2452");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.toArray();
        com.google.javascript.rhino.head.Context context8 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int12 = nativeArray10.lastIndexOf((java.lang.Object) (short) 10);
        long long13 = nativeArray10.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray10, "", true);
        boolean boolean17 = nativeArray10.hasPrototypeMap();
        int int18 = nativeArray10.size();
        boolean boolean19 = nativeArray10.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray21.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray24, (java.lang.Object) (-1));
        java.lang.Object[] objArray27 = nativeArray21.getAllIds();
        nativeArray21.delete("");
        long long30 = nativeArray21.getLength();
        boolean boolean31 = nativeArray10.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray21);
        nativeArray21.sealObject();
        nativeArray1.defineOwnProperties(context8, (com.google.javascript.rhino.head.ScriptableObject) nativeArray21);
        java.util.ListIterator listIterator34 = nativeArray21.listIterator();
        com.google.javascript.rhino.head.Scriptable scriptable36 = null;
        boolean boolean37 = nativeArray21.has((int) (short) 10, scriptable36);
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int42 = nativeArray40.lastIndexOf((java.lang.Object) (short) 10);
        long long43 = nativeArray40.getLength();
        nativeArray40.delete((int) (byte) 1);
        boolean boolean47 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray40, "");
        boolean boolean48 = nativeArray40.hasPrototypeMap();
        java.lang.Object obj49 = nativeArray21.get("object", (com.google.javascript.rhino.head.Scriptable) nativeArray40);
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int53 = nativeArray51.lastIndexOf((java.lang.Object) (short) 10);
        long long54 = nativeArray51.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray51, "", true);
        boolean boolean58 = nativeArray51.hasPrototypeMap();
        java.lang.reflect.Method method61 = null;
        java.lang.reflect.Method method62 = null;
        nativeArray51.defineProperty("hi!", (java.lang.Object) (-1L), method61, method62, (int) (byte) 10);
        boolean boolean66 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray51, "");
        nativeArray51.setAttributes("hi!", (int) (byte) 0);
        java.lang.Object[] objArray70 = nativeArray51.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray73 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray76 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray73.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray76, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray81 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray84 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray81.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray84, (java.lang.Object) (-1));
        nativeArray73.put((int) (byte) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray81, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray51, 0, (java.lang.Object) nativeArray81);
        java.lang.Integer[] intArray90 = nativeArray81.getIndexIds();
        boolean boolean91 = nativeArray40.contains((java.lang.Object) intArray90);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[null]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[length]");
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1L + "'", long30 == 1L);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(listIterator34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 1L + "'", long43 == 1L);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 1L + "'", long54 == 1L);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[hi!, length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[hi!, length]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test2453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2453");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable2 = nativeArray1.getParentScope();
        java.lang.Object[] objArray3 = nativeArray1.getIds();
        boolean boolean4 = nativeArray1.avoidObjectDetection();
        java.lang.Object obj8 = nativeArray1.getGetterOrSetter("", 0, true);
        com.google.javascript.rhino.head.Scriptable scriptable9 = nativeArray1.getParentScope();
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray15, (java.lang.Object) (-1));
        java.lang.Object[] objArray18 = nativeArray12.getAllIds();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray12, "Array", true);
        java.lang.Object[] objArray22 = nativeArray12.getIds();
        nativeArray12.delete(5);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean25 = nativeArray1.addAll(101, (java.util.Collection) nativeArray12);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(scriptable2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(scriptable9);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[length]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
    }

    @Test
    public void test2454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2454");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object obj10 = nativeArray4.getGetterOrSetter("object", (int) (short) 0, true);
        nativeArray4.setAttributes(1, (int) (short) 1);
        com.google.javascript.rhino.head.Scriptable scriptable14 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray4);
        int int15 = nativeArray4.size();
        boolean boolean17 = nativeArray4.isConst("object");
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(scriptable14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test2455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2455");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray12.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray15, (java.lang.Object) (-1));
        java.lang.Object[] objArray18 = nativeArray12.getAllIds();
        nativeArray12.delete("");
        long long21 = nativeArray12.getLength();
        boolean boolean22 = nativeArray1.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray12);
        nativeArray1.delete((int) '#');
        java.lang.Object obj28 = nativeArray1.getGetterOrSetter("hi!", (int) (byte) 0, true);
        java.lang.Object obj30 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray1, (java.lang.Object) 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[length]");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1L + "'", long21 == 1L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(obj30);
    }

    @Test
    public void test2456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2456");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.getAllIds();
        nativeArray1.delete("");
        long long10 = nativeArray1.getLength();
        boolean boolean12 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, (int) (short) 10);
        nativeArray1.delete(2);
        com.google.javascript.rhino.head.Scriptable scriptable15 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        boolean boolean16 = nativeArray1.isExtensible();
        nativeArray1.delete((int) (short) 0);
        java.lang.Object[] objArray19 = nativeArray1.toArray();
        nativeArray1.delete("");
        com.google.javascript.rhino.head.Scriptable scriptable22 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        java.lang.Object[] objArray23 = nativeArray1.getAllIds();
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "hi!");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[length]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(scriptable15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[null]");
        org.junit.Assert.assertNull(scriptable22);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[length]");
    }

    @Test
    public void test2457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2457");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        java.lang.reflect.Method method11 = null;
        java.lang.reflect.Method method12 = null;
        nativeArray1.defineProperty("hi!", (java.lang.Object) (-1L), method11, method12, (int) (byte) 10);
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray20, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj28 = nativeArray20.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray25);
        boolean boolean29 = nativeArray20.hasPrototypeMap();
        java.lang.Object[] objArray30 = nativeArray20.getIds();
        int int31 = nativeArray20.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray34.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray37, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj45 = nativeArray37.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray42);
        boolean boolean46 = nativeArray37.hasPrototypeMap();
        java.lang.Object[] objArray47 = nativeArray37.getIds();
        int int48 = nativeArray37.size();
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int52 = nativeArray50.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray37.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray50);
        java.lang.Object obj54 = nativeArray20.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray37);
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray56.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray59, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray64.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj67 = nativeArray59.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray64);
        boolean boolean68 = nativeArray59.hasPrototypeMap();
        java.lang.Object[] objArray69 = nativeArray59.getIds();
        int int70 = nativeArray59.size();
        com.google.javascript.rhino.head.NativeArray nativeArray73 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray76 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray73.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray76, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray81 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray81.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj84 = nativeArray76.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray81);
        boolean boolean85 = nativeArray76.hasPrototypeMap();
        java.lang.Object[] objArray86 = nativeArray76.getIds();
        int int87 = nativeArray76.size();
        com.google.javascript.rhino.head.NativeArray nativeArray89 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int91 = nativeArray89.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray76.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray89);
        java.lang.Object obj93 = nativeArray59.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray76);
        java.lang.Object[] objArray94 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray59);
        nativeArray1.put(2, (com.google.javascript.rhino.head.Scriptable) nativeArray37, (java.lang.Object) objArray94);
        java.lang.String str96 = nativeArray37.getTypeOf();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[hi!]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(objArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray86), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray86), "[hi!]");
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(objArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray94), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray94), "[hi!]");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "object" + "'", str96, "object");
    }

    @Test
    public void test2458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2458");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.activatePrototypeMap((int) (short) 100);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "object");
        com.google.javascript.rhino.head.NativeArray nativeArray7 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray7.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray10, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray15.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj18 = nativeArray10.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray15);
        com.google.javascript.rhino.head.Callable callable21 = null;
        nativeArray10.setGetterOrSetter("hi!", 0, callable21, false);
        java.lang.Integer[] intArray24 = nativeArray10.getIndexIds();
        boolean boolean25 = nativeArray1.containsAll((java.util.Collection) nativeArray10);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test2459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2459");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable8 = null;
        java.lang.Object[] objArray9 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable8);
        java.lang.Object[] objArray10 = nativeArray1.toArray(objArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int15 = nativeArray13.lastIndexOf((java.lang.Object) (short) 10);
        long long16 = nativeArray13.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "", true);
        boolean boolean20 = nativeArray13.hasPrototypeMap();
        int int21 = nativeArray13.size();
        boolean boolean22 = nativeArray13.isEmpty();
        boolean boolean24 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "Array");
        java.lang.Object obj25 = nativeArray1.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray13);
        nativeArray1.setAttributes("Array", 1);
        int int29 = nativeArray1.size();
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable32 = nativeArray31.getParentScope();
        com.google.javascript.rhino.head.NativeArray nativeArray35 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray35.activatePrototypeMap((int) (short) 100);
        com.google.javascript.rhino.head.Scriptable scriptable39 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray35, "");
        boolean boolean40 = nativeArray31.has(100, scriptable39);
        java.lang.String str41 = nativeArray31.getClassName();
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray46, "", (java.lang.Object) 100);
        java.lang.Object obj50 = nativeArray43.associateValue((java.lang.Object) ' ', (java.lang.Object) nativeArray46);
        java.lang.Object obj51 = nativeArray31.getAssociatedValue(obj50);
        int int52 = nativeArray1.lastIndexOf((java.lang.Object) nativeArray31);
        java.lang.Object obj54 = nativeArray1.get((java.lang.Object) '#');
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int58 = nativeArray56.lastIndexOf((java.lang.Object) (short) 10);
        long long59 = nativeArray56.getLength();
        java.lang.Object[] objArray60 = nativeArray56.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable62 = null;
        com.google.javascript.rhino.head.IdFunctionObject idFunctionObject64 = nativeArray56.exportAsJSClass(2, scriptable62, false);
        // The following exception was thrown during execution in test generation
        try {
            nativeArray1.initPrototypeConstructor(idFunctionObject64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[null]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1L + "'", long16 == 1L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNull(scriptable32);
        org.junit.Assert.assertNull(scriptable39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Array" + "'", str41, "Array");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 1L + "'", long59 == 1L);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[null]");
        org.junit.Assert.assertNotNull(idFunctionObject64);
    }

    @Test
    public void test2460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2460");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj38 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        java.lang.Object[] objArray39 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray4);
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int44 = nativeArray42.lastIndexOf((java.lang.Object) (short) 10);
        long long45 = nativeArray42.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray42, "", true);
        boolean boolean49 = nativeArray42.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray54 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray51.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray54, (java.lang.Object) (-1));
        java.lang.Object[] objArray57 = nativeArray51.getAllIds();
        nativeArray51.delete("");
        boolean boolean60 = nativeArray42.contains((java.lang.Object) "");
        boolean boolean61 = nativeArray4.has("object", (com.google.javascript.rhino.head.Scriptable) nativeArray42);
        com.google.javascript.rhino.head.NativeArray nativeArray63 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int65 = nativeArray63.lastIndexOf((java.lang.Object) (short) 10);
        long long66 = nativeArray63.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray63, "", true);
        boolean boolean70 = nativeArray63.hasPrototypeMap();
        java.util.ListIterator listIterator71 = nativeArray63.listIterator();
        nativeArray4.setPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray63);
        java.lang.Object[] objArray73 = nativeArray4.getIds();
        com.google.javascript.rhino.head.NativeArray nativeArray75 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int77 = nativeArray75.lastIndexOf((java.lang.Object) (short) 10);
        long long78 = nativeArray75.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray75, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray83 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray86 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray83.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray86, (java.lang.Object) (-1));
        java.lang.Object[] objArray89 = nativeArray83.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable90 = nativeArray83.getParentScope();
        boolean boolean91 = nativeArray75.containsAll((java.util.Collection) nativeArray83);
        boolean boolean93 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray83, 0);
        com.google.javascript.rhino.head.Scriptable scriptable94 = nativeArray83.getPrototype();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean95 = nativeArray4.remove((java.lang.Object) nativeArray83);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[hi!]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 1L + "'", long45 == 1L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[length]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 1L + "'", long66 == 1L);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(listIterator71);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[hi!]");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 1L + "'", long78 == 1L);
        org.junit.Assert.assertNotNull(objArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray89), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray89), "[null]");
        org.junit.Assert.assertNull(scriptable90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNull(scriptable94);
    }

    @Test
    public void test2461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2461");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj20 = nativeArray12.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray17);
        boolean boolean21 = nativeArray12.hasPrototypeMap();
        java.lang.Object[] objArray22 = nativeArray12.getIds();
        int int23 = nativeArray12.size();
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray28, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray33.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj36 = nativeArray28.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray33);
        boolean boolean37 = nativeArray28.hasPrototypeMap();
        java.lang.Object[] objArray38 = nativeArray28.getIds();
        int int39 = nativeArray28.size();
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray45, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray50.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj53 = nativeArray45.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray50);
        boolean boolean54 = nativeArray45.hasPrototypeMap();
        java.lang.Object[] objArray55 = nativeArray45.getIds();
        int int56 = nativeArray45.size();
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int60 = nativeArray58.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray45.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray58);
        java.lang.Object obj62 = nativeArray28.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray45);
        boolean boolean63 = nativeArray12.containsAll((java.util.Collection) nativeArray45);
        nativeArray1.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray12);
        java.util.Iterator iterator65 = nativeArray1.iterator();
        boolean boolean66 = nativeArray1.isEmpty();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[hi!]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[hi!]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[hi!]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(iterator65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
    }

    @Test
    public void test2462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2462");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        java.lang.Integer[] intArray7 = nativeArray1.getIndexIds();
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((java.lang.Object[]) intArray7);
        java.lang.Object obj10 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray8, "Array");
        com.google.javascript.rhino.head.Scriptable scriptable11 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray8);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNull(scriptable11);
    }

    @Test
    public void test2463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2463");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) (short) 0);
    }

    @Test
    public void test2464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2464");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable8 = nativeArray1.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable9 = nativeArray1.getParentScope();
        boolean boolean10 = nativeArray1.isSealed();
        com.google.javascript.rhino.head.Scriptable scriptable11 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj13 = nativeArray1.get((long) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[null]");
        org.junit.Assert.assertNull(scriptable8);
        org.junit.Assert.assertNull(scriptable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(scriptable11);
    }

    @Test
    public void test2465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2465");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        java.lang.Object obj9 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 4);
        java.lang.Object[] objArray10 = nativeArray1.toArray();
        boolean boolean11 = nativeArray1.hasPrototypeMap();
        nativeArray1.activatePrototypeMap((int) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        com.google.javascript.rhino.head.Callable callable32 = null;
        nativeArray21.setGetterOrSetter("hi!", 0, callable32, false);
        nativeArray15.setAttributes((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray21, (int) (short) 10);
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int41 = nativeArray39.lastIndexOf((java.lang.Object) (short) 10);
        long long42 = nativeArray39.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray39, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable46 = null;
        java.lang.Object[] objArray47 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable46);
        java.lang.Object[] objArray48 = nativeArray39.toArray(objArray47);
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int53 = nativeArray51.lastIndexOf((java.lang.Object) (short) 10);
        long long54 = nativeArray51.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray51, "", true);
        boolean boolean58 = nativeArray51.hasPrototypeMap();
        int int59 = nativeArray51.size();
        boolean boolean60 = nativeArray51.isEmpty();
        boolean boolean62 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray51, "Array");
        java.lang.Object obj63 = nativeArray39.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray51);
        java.lang.Object obj64 = nativeArray15.get("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray39);
        com.google.javascript.rhino.head.NativeArray nativeArray66 = new com.google.javascript.rhino.head.NativeArray((long) 2);
        java.lang.Object obj67 = nativeArray15.get((java.lang.Object) nativeArray66);
        com.google.javascript.rhino.head.NativeArray nativeArray70 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int72 = nativeArray70.lastIndexOf((java.lang.Object) (short) 10);
        long long73 = nativeArray70.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray70, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray78 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray81 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray78.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray81, (java.lang.Object) (-1));
        java.lang.Object[] objArray84 = nativeArray78.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable85 = nativeArray78.getParentScope();
        boolean boolean86 = nativeArray70.containsAll((java.util.Collection) nativeArray78);
        com.google.javascript.rhino.head.Scriptable scriptable87 = nativeArray78.getParentScope();
        boolean boolean88 = nativeArray78.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray91 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable92 = nativeArray91.getParentScope();
        java.lang.Object[] objArray93 = nativeArray91.getIds();
        boolean boolean94 = nativeArray78.has("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray91);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray15, "object", (java.lang.Object) nativeArray91);
        java.lang.Object[] objArray96 = nativeArray15.getIds();
        java.lang.Object[] objArray97 = nativeArray1.toArray(objArray96);
        java.lang.Class<?> wildcardClass98 = objArray96.getClass();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[null]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 1L + "'", long42 == 1L);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[null]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 1L + "'", long54 == 1L);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 1L + "'", long73 == 1L);
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[null]");
        org.junit.Assert.assertNull(scriptable85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNull(scriptable87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNull(scriptable92);
        org.junit.Assert.assertNotNull(objArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray93), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray93), "[]");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(objArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray96), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray96), "[null]");
        org.junit.Assert.assertNotNull(objArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray97), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray97), "[null]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test2466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2466");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable2 = nativeArray1.getParentScope();
        java.lang.Object[] objArray3 = nativeArray1.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray5 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray5.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray8, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray13.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj16 = nativeArray8.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray13);
        java.lang.Object obj17 = nativeArray1.getAssociatedValue((java.lang.Object) nativeArray8);
        nativeArray8.preventExtensions();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray8, "Array", false);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray32.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj35 = nativeArray27.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray32);
        boolean boolean36 = nativeArray27.hasPrototypeMap();
        java.lang.Object[] objArray37 = nativeArray27.getIds();
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray43.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray46, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray51.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj54 = nativeArray46.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray51);
        com.google.javascript.rhino.head.Callable callable57 = null;
        nativeArray46.setGetterOrSetter("hi!", 0, callable57, false);
        nativeArray40.setAttributes((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray46, (int) (short) 10);
        java.lang.Object obj62 = null;
        int int63 = nativeArray40.lastIndexOf(obj62);
        boolean boolean64 = nativeArray27.has("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray40);
        nativeArray27.preventExtensions();
        java.lang.Object[] objArray66 = nativeArray27.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray69 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable70 = nativeArray69.getParentScope();
        java.lang.Object[] objArray71 = nativeArray69.getIds();
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray27, 0, (java.lang.Object) objArray71);
        java.lang.String str73 = nativeArray27.getClassName();
        boolean boolean74 = nativeArray8.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray27);
        nativeArray8.preventExtensions();
        java.lang.Object[] objArray76 = nativeArray8.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray77 = new com.google.javascript.rhino.head.NativeArray(objArray76);
        org.junit.Assert.assertNull(scriptable2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[length]");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[hi!]");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[null]");
        org.junit.Assert.assertNull(scriptable70);
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "Array" + "'", str73, "Array");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(objArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray76), "[hi!, length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray76), "[hi!, length]");
    }

    @Test
    public void test2467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2467");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        java.lang.reflect.Method method11 = null;
        java.lang.reflect.Method method12 = null;
        nativeArray1.defineProperty("hi!", (java.lang.Object) (-1L), method11, method12, (int) (byte) 10);
        boolean boolean16 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        int int17 = nativeArray1.size();
        com.google.javascript.rhino.head.Scriptable scriptable19 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        nativeArray1.activatePrototypeMap((int) ' ');
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int25 = nativeArray23.lastIndexOf((java.lang.Object) (short) 10);
        long long26 = nativeArray23.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray23, "", true);
        boolean boolean30 = nativeArray23.hasPrototypeMap();
        com.google.javascript.rhino.head.Scriptable scriptable31 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray23);
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray34.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray37, (java.lang.Object) (-1));
        java.lang.Object[] objArray40 = nativeArray34.getAllIds();
        nativeArray34.delete("");
        long long43 = nativeArray34.getLength();
        boolean boolean45 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray34, (int) (short) 10);
        nativeArray34.delete(2);
        boolean boolean48 = nativeArray23.has(13, (com.google.javascript.rhino.head.Scriptable) nativeArray34);
        int int49 = nativeArray1.lastIndexOf((java.lang.Object) nativeArray34);
        com.google.javascript.rhino.head.Scriptable scriptable50 = nativeArray1.getPrototype();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNull(scriptable19);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 1L + "'", long26 == 1L);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(scriptable31);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[length]");
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 1L + "'", long43 == 1L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNull(scriptable50);
    }

    @Test
    public void test2468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2468");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.getAllIds();
        nativeArray24.delete("");
        java.lang.Object obj33 = nativeArray9.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        java.lang.Integer[] intArray34 = nativeArray24.getIndexIds();
        long long35 = nativeArray24.getLength();
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray38.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray41, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray46.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj49 = nativeArray41.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray46);
        boolean boolean50 = nativeArray41.hasPrototypeMap();
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray24, (-1), (java.lang.Object) nativeArray41);
        int int52 = nativeArray41.size();
        java.lang.Object obj54 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray41, (int) (byte) 10);
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int58 = nativeArray56.lastIndexOf((java.lang.Object) (short) 10);
        long long59 = nativeArray56.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray56, "", true);
        boolean boolean63 = nativeArray56.hasPrototypeMap();
        com.google.javascript.rhino.head.Scriptable scriptable64 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray56);
        com.google.javascript.rhino.head.NativeArray nativeArray67 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray70 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray67.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray70, (java.lang.Object) (-1));
        java.lang.Object[] objArray73 = nativeArray67.getAllIds();
        nativeArray67.delete("");
        long long76 = nativeArray67.getLength();
        boolean boolean78 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray67, (int) (short) 10);
        nativeArray67.delete(2);
        boolean boolean81 = nativeArray56.has(13, (com.google.javascript.rhino.head.Scriptable) nativeArray67);
        boolean boolean82 = nativeArray41.hasInstance((com.google.javascript.rhino.head.Scriptable) nativeArray56);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1L + "'", long35 == 1L);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 1L + "'", long59 == 1L);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(scriptable64);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[length]");
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 1L + "'", long76 == 1L);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test2469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2469");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.getAllIds();
        nativeArray1.delete("");
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "object");
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray14.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray17, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray22.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj25 = nativeArray17.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray22);
        boolean boolean26 = nativeArray17.hasPrototypeMap();
        java.lang.Object[] objArray27 = nativeArray17.getIds();
        int int28 = nativeArray17.size();
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray31.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray34, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray39.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj42 = nativeArray34.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray39);
        boolean boolean43 = nativeArray34.hasPrototypeMap();
        java.lang.Object[] objArray44 = nativeArray34.getIds();
        int int45 = nativeArray34.size();
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int49 = nativeArray47.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray34.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray47);
        java.lang.Object obj51 = nativeArray17.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object[] objArray52 = nativeArray17.getIds();
        java.lang.String str53 = nativeArray17.getClassName();
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int57 = nativeArray55.lastIndexOf((java.lang.Object) (short) 10);
        long long58 = nativeArray55.getLength();
        nativeArray55.setAttributes((int) (byte) 100, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int66 = nativeArray64.lastIndexOf((java.lang.Object) (short) 10);
        long long67 = nativeArray64.getLength();
        nativeArray64.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray55, (int) (byte) -1, (java.lang.Object) nativeArray64);
        java.util.Iterator iterator71 = nativeArray55.iterator();
        java.lang.Object[] objArray72 = nativeArray55.toArray();
        boolean boolean73 = nativeArray17.containsAll((java.util.Collection) nativeArray55);
        java.lang.Object obj74 = nativeArray1.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray55);
        boolean boolean76 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array");
        java.lang.Object obj78 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, (int) '#');
        java.lang.Object obj80 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 0);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[length]");
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[hi!]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[hi!]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[hi!]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Array" + "'", str53, "Array");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 1L + "'", long58 == 1L);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 1L + "'", long67 == 1L);
        org.junit.Assert.assertNotNull(iterator71);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[null]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(obj80);
    }

    @Test
    public void test2470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2470");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable2 = nativeArray1.getParentScope();
        com.google.javascript.rhino.head.NativeArray nativeArray5 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray5.activatePrototypeMap((int) (short) 100);
        com.google.javascript.rhino.head.Scriptable scriptable9 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray5, "");
        boolean boolean10 = nativeArray1.has(100, scriptable9);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int14 = nativeArray12.lastIndexOf((java.lang.Object) (short) 10);
        long long15 = nativeArray12.getLength();
        nativeArray12.delete((int) (byte) 1);
        boolean boolean18 = nativeArray12.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable22 = nativeArray21.getParentScope();
        java.lang.Object[] objArray23 = nativeArray21.getIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray12, "", (java.lang.Object) nativeArray21, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray31 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray28.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray31, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray36.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj39 = nativeArray31.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray36);
        boolean boolean40 = nativeArray31.hasPrototypeMap();
        java.lang.Object[] objArray41 = nativeArray31.getIds();
        int int42 = nativeArray31.size();
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int46 = nativeArray44.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray31.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray44);
        java.lang.Object obj48 = nativeArray12.get((int) (short) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray44);
        com.google.javascript.rhino.head.Scriptable scriptable49 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray44);
        nativeArray1.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray44);
        nativeArray44.sealObject();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj53 = nativeArray44.get((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(scriptable2);
        org.junit.Assert.assertNull(scriptable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 1L + "'", long15 == 1L);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(scriptable22);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[hi!]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(scriptable49);
    }

    @Test
    public void test2471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2471");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray(objArray7);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj10 = nativeArray8.get(101);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[null]");
    }

    @Test
    public void test2472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2472");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        nativeArray9.delete("Array");
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray21.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray24, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray29.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj32 = nativeArray24.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray29);
        boolean boolean33 = nativeArray24.hasPrototypeMap();
        java.lang.Object[] objArray34 = nativeArray24.getIds();
        int int35 = nativeArray24.size();
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray38.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray41, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray46.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj49 = nativeArray41.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray46);
        boolean boolean50 = nativeArray41.hasPrototypeMap();
        java.lang.Object[] objArray51 = nativeArray41.getIds();
        int int52 = nativeArray41.size();
        com.google.javascript.rhino.head.NativeArray nativeArray54 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int56 = nativeArray54.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray41.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray54);
        java.lang.Object obj58 = nativeArray24.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray41);
        java.lang.Object[] objArray59 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray24);
        boolean boolean61 = nativeArray24.isConst("hi!");
        com.google.javascript.rhino.head.NativeArray nativeArray64 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int66 = nativeArray64.lastIndexOf((java.lang.Object) (short) 10);
        long long67 = nativeArray64.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray64, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable71 = null;
        java.lang.Object[] objArray72 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable71);
        java.lang.Object[] objArray73 = nativeArray64.toArray(objArray72);
        com.google.javascript.rhino.head.NativeArray nativeArray76 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int78 = nativeArray76.lastIndexOf((java.lang.Object) (short) 10);
        long long79 = nativeArray76.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray76, "", true);
        boolean boolean83 = nativeArray76.hasPrototypeMap();
        int int84 = nativeArray76.size();
        boolean boolean85 = nativeArray76.isEmpty();
        boolean boolean87 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray76, "Array");
        java.lang.Object obj88 = nativeArray64.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray76);
        java.lang.Object obj89 = nativeArray24.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray76);
        boolean boolean90 = nativeArray9.contains((java.lang.Object) "");
        boolean boolean91 = nativeArray9.hasPrototypeMap();
        java.util.Iterator iterator92 = nativeArray9.iterator();
        boolean boolean93 = nativeArray9.isExtensible();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[hi!]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[hi!]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 1L + "'", long67 == 1L);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[]");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[null]");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 1L + "'", long79 == 1L);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 1 + "'", int84 == 1);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(iterator92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
    }

    @Test
    public void test2473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2473");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable8 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable12 = nativeArray11.getParentScope();
        java.lang.Object[] objArray13 = nativeArray11.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray15.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray18, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray23.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj26 = nativeArray18.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray23);
        java.lang.Object obj27 = nativeArray11.getAssociatedValue((java.lang.Object) nativeArray18);
        nativeArray18.preventExtensions();
        nativeArray1.defineConst("", (com.google.javascript.rhino.head.Scriptable) nativeArray18);
        com.google.javascript.rhino.head.Scriptable scriptable30 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int34 = nativeArray32.lastIndexOf((java.lang.Object) (short) 10);
        long long35 = nativeArray32.getLength();
        nativeArray32.delete((int) (byte) 1);
        boolean boolean38 = nativeArray32.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable42 = nativeArray41.getParentScope();
        java.lang.Object[] objArray43 = nativeArray41.getIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray32, "", (java.lang.Object) nativeArray41, 0);
        com.google.javascript.rhino.head.NativeArray nativeArray48 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray48.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray51, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray56 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray56.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj59 = nativeArray51.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray56);
        boolean boolean60 = nativeArray51.hasPrototypeMap();
        java.lang.Object[] objArray61 = nativeArray51.getIds();
        int int62 = nativeArray51.size();
        com.google.javascript.rhino.head.NativeArray nativeArray65 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray68 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray65.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray68, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray73 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray73.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj76 = nativeArray68.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray73);
        boolean boolean77 = nativeArray68.hasPrototypeMap();
        java.lang.Object[] objArray78 = nativeArray68.getIds();
        int int79 = nativeArray68.size();
        com.google.javascript.rhino.head.NativeArray nativeArray81 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int83 = nativeArray81.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray68.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray81);
        java.lang.Object obj85 = nativeArray51.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray68);
        boolean boolean87 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray68, (int) (byte) 1);
        boolean boolean88 = nativeArray68.isExtensible();
        java.lang.Object obj89 = nativeArray41.get("object", (com.google.javascript.rhino.head.Scriptable) nativeArray68);
        java.lang.Object obj90 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue(scriptable30, (java.lang.Object) nativeArray68);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[null]");
        org.junit.Assert.assertNull(scriptable8);
        org.junit.Assert.assertNull(scriptable12);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[length]");
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(scriptable30);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1L + "'", long35 == 1L);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(scriptable42);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[]");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[hi!]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[hi!]");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1 + "'", int79 == 1);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNull(obj90);
    }

    @Test
    public void test2474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2474");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj38 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        java.lang.Object[] objArray39 = nativeArray4.getIds();
        java.lang.Integer[] intArray40 = nativeArray4.getIndexIds();
        java.lang.Object[] objArray41 = nativeArray4.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable42 = nativeArray4.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable43 = nativeArray4.getParentScope();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[hi!]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[null]");
        org.junit.Assert.assertNull(scriptable42);
        org.junit.Assert.assertNull(scriptable43);
    }

    @Test
    public void test2475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2475");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable8 = null;
        java.lang.Object[] objArray9 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable8);
        java.lang.Object[] objArray10 = nativeArray1.toArray(objArray9);
        com.google.javascript.rhino.head.Scriptable scriptable11 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        java.lang.Object obj13 = nativeArray1.get((int) (byte) 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[null]");
        org.junit.Assert.assertNull(scriptable11);
        org.junit.Assert.assertNull(obj13);
    }

    @Test
    public void test2476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2476");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.activatePrototypeMap((int) (short) 100);
        long long4 = nativeArray1.jsGet_length();
        // The following exception was thrown during execution in test generation
        try {
            nativeArray1.setAttributes(8, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: -1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
    }

    @Test
    public void test2477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2477");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        java.lang.Object obj3 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "Array");
        com.google.javascript.rhino.head.NativeArray nativeArray6 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int8 = nativeArray6.lastIndexOf((java.lang.Object) (short) 10);
        long long9 = nativeArray6.getLength();
        nativeArray6.delete((int) (byte) 1);
        boolean boolean13 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray6, "");
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray15, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray23.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray26, (java.lang.Object) (-1));
        java.lang.Object[] objArray29 = nativeArray23.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable30 = nativeArray23.getParentScope();
        boolean boolean31 = nativeArray15.containsAll((java.util.Collection) nativeArray23);
        boolean boolean32 = nativeArray6.containsAll((java.util.Collection) nativeArray15);
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        long long37 = nativeArray34.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray34, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray45, (java.lang.Object) (-1));
        java.lang.Object[] objArray48 = nativeArray42.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable49 = nativeArray42.getParentScope();
        boolean boolean50 = nativeArray34.containsAll((java.util.Collection) nativeArray42);
        com.google.javascript.rhino.head.NativeArray nativeArray52 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int54 = nativeArray52.lastIndexOf((java.lang.Object) (short) 10);
        long long55 = nativeArray52.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray52, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray63 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray60.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray63, (java.lang.Object) (-1));
        java.lang.Object[] objArray66 = nativeArray60.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable67 = nativeArray60.getParentScope();
        boolean boolean68 = nativeArray52.containsAll((java.util.Collection) nativeArray60);
        com.google.javascript.rhino.head.NativeArray nativeArray70 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray73 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray70.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray73, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray78 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray78.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj81 = nativeArray73.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray78);
        boolean boolean82 = nativeArray73.hasPrototypeMap();
        java.lang.Object[] objArray83 = nativeArray73.getIds();
        java.lang.Object[] objArray84 = nativeArray60.toArray(objArray83);
        java.lang.Object obj85 = nativeArray6.associateValue((java.lang.Object) boolean50, (java.lang.Object) nativeArray60);
        com.google.javascript.rhino.head.Scriptable scriptable86 = com.google.javascript.rhino.head.ScriptableObject.getTopLevelScope((com.google.javascript.rhino.head.Scriptable) nativeArray60);
        boolean boolean87 = nativeArray1.has("hi!", scriptable86);
        boolean boolean88 = nativeArray1.avoidObjectDetection();
        java.lang.String str89 = nativeArray1.getClassName();
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 1L + "'", long9 == 1L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[null]");
        org.junit.Assert.assertNull(scriptable30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 1L + "'", long37 == 1L);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[null]");
        org.junit.Assert.assertNull(scriptable49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 1L + "'", long55 == 1L);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[null]");
        org.junit.Assert.assertNull(scriptable67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray83), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray83), "[null]");
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[null]");
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(scriptable86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "Array" + "'", str89, "Array");
    }

    @Test
    public void test2478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2478");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object obj10 = nativeArray4.getGetterOrSetter("object", (int) (short) 0, true);
        java.util.ListIterator listIterator11 = nativeArray4.listIterator();
        nativeArray4.activatePrototypeMap(8);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(listIterator11);
    }

    @Test
    public void test2479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2479");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        java.lang.reflect.Method method11 = null;
        java.lang.reflect.Method method12 = null;
        nativeArray1.defineProperty("hi!", (java.lang.Object) (-1L), method11, method12, (int) (byte) 10);
        boolean boolean16 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "");
        nativeArray1.setAttributes("hi!", (int) (byte) 0);
        java.lang.Object obj21 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, 13);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(obj21);
    }

    @Test
    public void test2480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2480");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        int int9 = nativeArray1.size();
        boolean boolean10 = nativeArray1.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray13.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray16, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray21.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj24 = nativeArray16.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int29 = nativeArray27.lastIndexOf((java.lang.Object) (short) 10);
        long long30 = nativeArray27.getLength();
        nativeArray27.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray21, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray36 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray36.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray39, (java.lang.Object) (-1));
        java.lang.Object[] objArray42 = nativeArray36.getAllIds();
        nativeArray36.delete("");
        java.lang.Object obj45 = nativeArray21.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray36);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray21, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable48 = nativeArray21.getPrototype();
        com.google.javascript.rhino.head.Context context49 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int53 = nativeArray51.lastIndexOf((java.lang.Object) (short) 10);
        long long54 = nativeArray51.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray51, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray62 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray59.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray62, (java.lang.Object) (-1));
        java.lang.Object[] objArray65 = nativeArray59.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable66 = nativeArray59.getParentScope();
        boolean boolean67 = nativeArray51.containsAll((java.util.Collection) nativeArray59);
        nativeArray21.defineOwnProperties(context49, (com.google.javascript.rhino.head.ScriptableObject) nativeArray51);
        java.lang.Object obj69 = nativeArray1.get((int) ' ', (com.google.javascript.rhino.head.Scriptable) nativeArray51);
        com.google.javascript.rhino.head.Scriptable scriptable70 = com.google.javascript.rhino.head.ScriptableObject.getArrayPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray51);
        nativeArray51.preventExtensions();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj73 = nativeArray51.get((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1L + "'", long30 == 1L);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[length]");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNull(scriptable48);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 1L + "'", long54 == 1L);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[null]");
        org.junit.Assert.assertNull(scriptable66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNull(scriptable70);
    }

    @Test
    public void test2481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2481");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable12 = nativeArray11.getParentScope();
        java.lang.Object[] objArray13 = nativeArray11.getIds();
        boolean boolean14 = nativeArray11.isEmpty();
        boolean boolean15 = nativeArray1.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray11);
        boolean boolean17 = nativeArray11.isConst("object");
        boolean boolean18 = nativeArray11.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        java.lang.Object obj23 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray21, "Array");
        boolean boolean24 = nativeArray21.isSealed();
        java.lang.Object obj25 = nativeArray11.get("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        java.lang.Object[] objArray26 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray21);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(scriptable12);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
    }

    @Test
    public void test2482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2482");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        boolean boolean8 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "");
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int13 = nativeArray11.lastIndexOf((java.lang.Object) (short) 10);
        long long14 = nativeArray11.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray11, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray19.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray22, (java.lang.Object) (-1));
        java.lang.Object[] objArray25 = nativeArray19.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable26 = nativeArray19.getParentScope();
        boolean boolean27 = nativeArray11.containsAll((java.util.Collection) nativeArray19);
        com.google.javascript.rhino.head.Scriptable scriptable28 = nativeArray19.getParentScope();
        boolean boolean29 = nativeArray19.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable33 = nativeArray32.getParentScope();
        java.lang.Object[] objArray34 = nativeArray32.getIds();
        boolean boolean35 = nativeArray19.has("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray32);
        java.lang.reflect.Method method36 = null;
        java.lang.reflect.Method method37 = null;
        nativeArray4.defineProperty("hi!", (java.lang.Object) nativeArray19, method36, method37, 8);
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int44 = nativeArray42.lastIndexOf((java.lang.Object) (short) 10);
        long long45 = nativeArray42.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray42, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray53 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray50.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray53, (java.lang.Object) (-1));
        java.lang.Object[] objArray56 = nativeArray50.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable57 = nativeArray50.getParentScope();
        boolean boolean58 = nativeArray42.containsAll((java.util.Collection) nativeArray50);
        com.google.javascript.rhino.head.Scriptable scriptable59 = nativeArray50.getParentScope();
        boolean boolean60 = nativeArray50.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray63 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable64 = nativeArray63.getParentScope();
        java.lang.Object[] objArray65 = nativeArray63.getIds();
        boolean boolean66 = nativeArray50.has("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray63);
        boolean boolean67 = nativeArray4.has((int) (byte) 0, (com.google.javascript.rhino.head.Scriptable) nativeArray63);
        java.lang.Object[] objArray68 = nativeArray4.getAllIds();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[null]");
        org.junit.Assert.assertNull(scriptable26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(scriptable28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(scriptable33);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 1L + "'", long45 == 1L);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[null]");
        org.junit.Assert.assertNull(scriptable57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(scriptable59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(scriptable64);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[hi!, length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[hi!, length]");
    }

    @Test
    public void test2483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2483");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        java.lang.Object[] objArray15 = nativeArray9.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable16 = nativeArray9.getParentScope();
        boolean boolean17 = nativeArray1.containsAll((java.util.Collection) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray19.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray22, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray27.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj30 = nativeArray22.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray27);
        boolean boolean31 = nativeArray22.hasPrototypeMap();
        java.lang.Object[] objArray32 = nativeArray22.getIds();
        java.lang.Object[] objArray33 = nativeArray9.toArray(objArray32);
        boolean boolean35 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "Array");
        java.lang.String str36 = nativeArray9.getClassName();
        java.lang.Integer[] intArray37 = nativeArray9.getIndexIds();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[null]");
        org.junit.Assert.assertNull(scriptable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[null]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[null]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Array" + "'", str36, "Array");
        org.junit.Assert.assertNotNull(intArray37);
    }

    @Test
    public void test2484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2484");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray10 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable11 = nativeArray10.getParentScope();
        java.lang.Object[] objArray12 = nativeArray10.getIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", (java.lang.Object) nativeArray10, 0);
        java.lang.Object[] objArray15 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray10);
        java.lang.String str16 = nativeArray10.getClassName();
        // The following exception was thrown during execution in test generation
        try {
            nativeArray10.setAttributes("object", 101);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: 101");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(scriptable11);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Array" + "'", str16, "Array");
    }

    @Test
    public void test2485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2485");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable2 = nativeArray1.getParentScope();
        java.lang.Object[] objArray3 = nativeArray1.getAllIds();
        com.google.javascript.rhino.head.NativeArray nativeArray5 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray8 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray5.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray8, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray13.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj16 = nativeArray8.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray13);
        java.lang.Object obj17 = nativeArray1.getAssociatedValue((java.lang.Object) nativeArray8);
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable20 = nativeArray19.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable21 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray19);
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int25 = nativeArray23.lastIndexOf((java.lang.Object) (short) 10);
        long long26 = nativeArray23.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray23, "", true);
        boolean boolean30 = nativeArray23.hasPrototypeMap();
        int int31 = nativeArray23.size();
        boolean boolean32 = nativeArray23.isEmpty();
        nativeArray19.setPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray23);
        java.lang.Object obj34 = com.google.javascript.rhino.head.ScriptableObject.getTopScopeValue((com.google.javascript.rhino.head.Scriptable) nativeArray8, (java.lang.Object) nativeArray19);
        // The following exception was thrown during execution in test generation
        try {
            int int36 = nativeArray19.getAttributes(4);
            org.junit.Assert.fail("Expected exception of type com.google.javascript.rhino.head.EvaluatorException; message: Property 4 not found.");
        } catch (com.google.javascript.rhino.head.EvaluatorException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(scriptable2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[length]");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(scriptable20);
        org.junit.Assert.assertNull(scriptable21);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 1L + "'", long26 == 1L);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(obj34);
    }

    @Test
    public void test2486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2486");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        com.google.javascript.rhino.head.Scriptable scriptable10 = null;
        java.lang.Object obj11 = nativeArray1.get((int) '#', scriptable10);
        nativeArray1.preventExtensions();
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        java.lang.Object[] objArray19 = nativeArray15.toArray();
        java.lang.reflect.Method method20 = null;
        java.lang.reflect.Method method21 = null;
        nativeArray1.defineProperty("Array", (java.lang.Object) nativeArray15, method20, method21, 13);
        java.lang.Object obj25 = null;
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray15, "hi!", obj25);
        com.google.javascript.rhino.head.NativeArray nativeArray29 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int31 = nativeArray29.lastIndexOf((java.lang.Object) (short) 10);
        long long32 = nativeArray29.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray29, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray37 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray37.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray40, (java.lang.Object) (-1));
        java.lang.Object[] objArray43 = nativeArray37.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable44 = nativeArray37.getParentScope();
        boolean boolean45 = nativeArray29.containsAll((java.util.Collection) nativeArray37);
        boolean boolean46 = nativeArray29.hasPrototypeMap();
        java.lang.Object obj48 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray29, 10);
        boolean boolean49 = nativeArray15.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray29);
        com.google.javascript.rhino.head.Scriptable scriptable50 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray15);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[null]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1L + "'", long32 == 1L);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[null]");
        org.junit.Assert.assertNull(scriptable44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(scriptable50);
    }

    @Test
    public void test2487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2487");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable12 = nativeArray11.getParentScope();
        java.lang.Object[] objArray13 = nativeArray11.getIds();
        boolean boolean14 = nativeArray11.isEmpty();
        boolean boolean15 = nativeArray1.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray11);
        boolean boolean17 = nativeArray11.isConst("object");
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int22 = nativeArray20.lastIndexOf((java.lang.Object) (short) 10);
        long long23 = nativeArray20.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray20, "", true);
        boolean boolean27 = nativeArray20.hasPrototypeMap();
        java.lang.reflect.Method method30 = null;
        java.lang.reflect.Method method31 = null;
        nativeArray20.defineProperty("hi!", (java.lang.Object) (-1L), method30, method31, (int) (byte) 10);
        boolean boolean35 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray20, "");
        nativeArray20.sealObject();
        boolean boolean37 = nativeArray20.isSealed();
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray42, "", (java.lang.Object) 100);
        java.lang.Object obj46 = nativeArray39.associateValue((java.lang.Object) ' ', (java.lang.Object) nativeArray42);
        java.lang.Object[] objArray47 = nativeArray42.toArray();
        java.lang.Object[] objArray48 = nativeArray20.toArray(objArray47);
        java.lang.Integer[] intArray49 = nativeArray20.getIndexIds();
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((java.lang.Object[]) intArray49);
        boolean boolean51 = nativeArray50.isExtensible();
        boolean boolean52 = nativeArray50.avoidObjectDetection();
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray11, "object", (java.lang.Object) nativeArray50);
        com.google.javascript.rhino.head.Scriptable scriptable54 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray50);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(scriptable12);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1L + "'", long23 == 1L);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[null]");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[null]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(scriptable54);
    }

    @Test
    public void test2488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2488");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj20 = nativeArray12.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray17);
        boolean boolean21 = nativeArray12.hasPrototypeMap();
        java.lang.Object[] objArray22 = nativeArray12.getIds();
        int int23 = nativeArray12.size();
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray28, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray33.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj36 = nativeArray28.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray33);
        boolean boolean37 = nativeArray28.hasPrototypeMap();
        java.lang.Object[] objArray38 = nativeArray28.getIds();
        int int39 = nativeArray28.size();
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray45, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray50.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj53 = nativeArray45.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray50);
        boolean boolean54 = nativeArray45.hasPrototypeMap();
        java.lang.Object[] objArray55 = nativeArray45.getIds();
        int int56 = nativeArray45.size();
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int60 = nativeArray58.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray45.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray58);
        java.lang.Object obj62 = nativeArray28.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray45);
        boolean boolean63 = nativeArray12.containsAll((java.util.Collection) nativeArray45);
        nativeArray1.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray12);
        boolean boolean65 = nativeArray12.isEmpty();
        boolean boolean66 = nativeArray12.isEmpty();
        int int67 = nativeArray12.size();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[hi!]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[hi!]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[hi!]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
    }

    @Test
    public void test2489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2489");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        boolean boolean8 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray4, "");
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray14, "", (java.lang.Object) 100);
        java.lang.Object obj18 = nativeArray11.associateValue((java.lang.Object) ' ', (java.lang.Object) nativeArray14);
        java.lang.Object[] objArray19 = nativeArray14.toArray();
        nativeArray4.setAttributes((int) (byte) 100, (com.google.javascript.rhino.head.Scriptable) nativeArray14, (int) (short) 0);
        boolean boolean22 = nativeArray14.isEmpty();
        nativeArray14.activatePrototypeMap(10);
        com.google.javascript.rhino.head.Scriptable scriptable26 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray14, "object");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[null]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(scriptable26);
    }

    @Test
    public void test2490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2490");
        com.google.javascript.rhino.head.Scriptable scriptable0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj2 = com.google.javascript.rhino.head.ScriptableObject.getProperty(scriptable0, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2491");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        nativeArray1.delete((int) (byte) 1);
        boolean boolean7 = nativeArray1.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray17.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj20 = nativeArray12.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray17);
        boolean boolean21 = nativeArray12.hasPrototypeMap();
        java.lang.Object[] objArray22 = nativeArray12.getIds();
        int int23 = nativeArray12.size();
        com.google.javascript.rhino.head.NativeArray nativeArray25 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray25.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray28, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray33 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray33.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj36 = nativeArray28.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray33);
        boolean boolean37 = nativeArray28.hasPrototypeMap();
        java.lang.Object[] objArray38 = nativeArray28.getIds();
        int int39 = nativeArray28.size();
        com.google.javascript.rhino.head.NativeArray nativeArray42 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray45 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray42.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray45, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray50.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj53 = nativeArray45.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray50);
        boolean boolean54 = nativeArray45.hasPrototypeMap();
        java.lang.Object[] objArray55 = nativeArray45.getIds();
        int int56 = nativeArray45.size();
        com.google.javascript.rhino.head.NativeArray nativeArray58 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int60 = nativeArray58.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray45.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray58);
        java.lang.Object obj62 = nativeArray28.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray45);
        boolean boolean63 = nativeArray12.containsAll((java.util.Collection) nativeArray45);
        nativeArray1.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray12);
        boolean boolean65 = nativeArray12.isSealed();
        com.google.javascript.rhino.head.Scriptable scriptable66 = nativeArray12.getParentScope();
        boolean boolean68 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray12, (int) (short) 10);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[hi!]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[hi!]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[hi!]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(scriptable66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test2492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2492");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.getAllIds();
        nativeArray24.delete("");
        java.lang.Object obj33 = nativeArray9.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!");
        com.google.javascript.rhino.head.Scriptable scriptable36 = nativeArray9.getPrototype();
        com.google.javascript.rhino.head.Context context37 = null;
        com.google.javascript.rhino.head.NativeArray nativeArray39 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int41 = nativeArray39.lastIndexOf((java.lang.Object) (short) 10);
        long long42 = nativeArray39.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray39, "", true);
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray50 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray47.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray50, (java.lang.Object) (-1));
        java.lang.Object[] objArray53 = nativeArray47.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable54 = nativeArray47.getParentScope();
        boolean boolean55 = nativeArray39.containsAll((java.util.Collection) nativeArray47);
        nativeArray9.defineOwnProperties(context37, (com.google.javascript.rhino.head.ScriptableObject) nativeArray39);
        com.google.javascript.rhino.head.NativeArray nativeArray59 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int61 = nativeArray59.lastIndexOf((java.lang.Object) (short) 10);
        long long62 = nativeArray59.getLength();
        nativeArray59.delete((int) (byte) 1);
        boolean boolean65 = nativeArray59.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray68 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable69 = nativeArray68.getParentScope();
        java.lang.Object[] objArray70 = nativeArray68.getIds();
        com.google.javascript.rhino.head.ScriptableObject.defineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray59, "", (java.lang.Object) nativeArray68, 0);
        java.lang.Object[] objArray73 = nativeArray59.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray75 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray75.activatePrototypeMap((int) (short) 100);
        java.util.Iterator iterator78 = nativeArray75.iterator();
        nativeArray9.putConst("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray59, (java.lang.Object) iterator78);
        com.google.javascript.rhino.head.Scriptable scriptable80 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray9);
        nativeArray9.delete("object");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray83 = nativeArray9.getIds();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: 24");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNull(scriptable36);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 1L + "'", long42 == 1L);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[null]");
        org.junit.Assert.assertNull(scriptable54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 1L + "'", long62 == 1L);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(scriptable69);
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[]");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[null]");
        org.junit.Assert.assertNotNull(iterator78);
        org.junit.Assert.assertNull(scriptable80);
    }

    @Test
    public void test2493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2493");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.Scriptable scriptable7 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        int int8 = nativeArray1.size();
        com.google.javascript.rhino.head.Scriptable scriptable9 = nativeArray1.getParentScope();
        java.lang.Object[] objArray10 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds((com.google.javascript.rhino.head.Scriptable) nativeArray1);
        boolean boolean11 = nativeArray1.isSealed();
        com.google.javascript.rhino.head.NativeArray nativeArray14 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray17 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray14.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray17, (java.lang.Object) (-1));
        java.lang.Object[] objArray20 = nativeArray14.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable21 = nativeArray14.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable22 = nativeArray14.getParentScope();
        java.util.ListIterator listIterator23 = nativeArray14.listIterator();
        com.google.javascript.rhino.head.Scriptable scriptable25 = com.google.javascript.rhino.head.ScriptableObject.getClassPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray14, "object");
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int29 = nativeArray27.lastIndexOf((java.lang.Object) (short) 10);
        long long30 = nativeArray27.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray27, "", true);
        boolean boolean34 = nativeArray27.hasPrototypeMap();
        java.lang.reflect.Method method37 = null;
        java.lang.reflect.Method method38 = null;
        nativeArray27.defineProperty("hi!", (java.lang.Object) (-1L), method37, method38, (int) (byte) 10);
        boolean boolean42 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray27, "");
        nativeArray27.sealObject();
        boolean boolean44 = nativeArray27.isSealed();
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray49 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray49, "", (java.lang.Object) 100);
        java.lang.Object obj53 = nativeArray46.associateValue((java.lang.Object) ' ', (java.lang.Object) nativeArray49);
        java.lang.Object[] objArray54 = nativeArray49.toArray();
        java.lang.Object[] objArray55 = nativeArray27.toArray(objArray54);
        java.lang.Integer[] intArray56 = nativeArray27.getIndexIds();
        com.google.javascript.rhino.head.NativeArray nativeArray57 = new com.google.javascript.rhino.head.NativeArray((java.lang.Object[]) intArray56);
        boolean boolean58 = nativeArray57.isExtensible();
        boolean boolean59 = nativeArray57.avoidObjectDetection();
        // The following exception was thrown during execution in test generation
        try {
            nativeArray1.put("", scriptable25, (java.lang.Object) boolean59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(scriptable7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNull(scriptable9);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[null]");
        org.junit.Assert.assertNull(scriptable21);
        org.junit.Assert.assertNull(scriptable22);
        org.junit.Assert.assertNotNull(listIterator23);
        org.junit.Assert.assertNull(scriptable25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1L + "'", long30 == 1L);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[null]");
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[null]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test2494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2494");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        com.google.javascript.rhino.head.Scriptable scriptable8 = null;
        java.lang.Object[] objArray9 = com.google.javascript.rhino.head.ScriptableObject.getPropertyIds(scriptable8);
        java.lang.Object[] objArray10 = nativeArray1.toArray(objArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int15 = nativeArray13.lastIndexOf((java.lang.Object) (short) 10);
        long long16 = nativeArray13.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "", true);
        boolean boolean20 = nativeArray13.hasPrototypeMap();
        int int21 = nativeArray13.size();
        boolean boolean22 = nativeArray13.isEmpty();
        boolean boolean24 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "Array");
        java.lang.Object obj25 = nativeArray1.get("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray13);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 100);
        com.google.javascript.rhino.head.NativeArray nativeArray30 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray30, "", (java.lang.Object) 100);
        java.lang.Object obj34 = nativeArray27.associateValue((java.lang.Object) ' ', (java.lang.Object) nativeArray30);
        int int35 = nativeArray13.indexOf(obj34);
        com.google.javascript.rhino.head.NativeArray nativeArray38 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray41 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray38.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray41, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray46.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj49 = nativeArray41.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray46);
        com.google.javascript.rhino.head.Callable callable52 = null;
        nativeArray41.setGetterOrSetter("hi!", 0, callable52, false);
        com.google.javascript.rhino.head.Scriptable scriptable55 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray41);
        nativeArray13.defineProperty("hi!", (java.lang.Object) scriptable55, 8);
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "");
        java.lang.Object obj61 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "Array");
        com.google.javascript.rhino.head.Scriptable scriptable62 = nativeArray13.getParentScope();
        java.lang.Object obj64 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "object");
        java.lang.Object obj66 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray13, "Array");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[null]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1L + "'", long16 == 1L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNull(scriptable55);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNull(scriptable62);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj66);
    }

    @Test
    public void test2495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2495");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int3 = nativeArray1.lastIndexOf((java.lang.Object) (short) 10);
        long long4 = nativeArray1.getLength();
        com.google.javascript.rhino.head.ScriptableObject.redefineProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "", true);
        boolean boolean8 = nativeArray1.hasPrototypeMap();
        com.google.javascript.rhino.head.NativeArray nativeArray11 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable12 = nativeArray11.getParentScope();
        java.lang.Object[] objArray13 = nativeArray11.getIds();
        boolean boolean14 = nativeArray11.isEmpty();
        boolean boolean15 = nativeArray1.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray11);
        boolean boolean17 = nativeArray11.isConst("object");
        nativeArray11.activatePrototypeMap(8);
        nativeArray11.delete(8);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray32 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray32.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj35 = nativeArray27.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray32);
        boolean boolean36 = nativeArray27.hasPrototypeMap();
        java.lang.Object[] objArray37 = nativeArray27.getIds();
        com.google.javascript.rhino.head.NativeArray nativeArray40 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray46 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray43.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray46, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray51.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj54 = nativeArray46.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray51);
        com.google.javascript.rhino.head.Callable callable57 = null;
        nativeArray46.setGetterOrSetter("hi!", 0, callable57, false);
        nativeArray40.setAttributes((int) (byte) 1, (com.google.javascript.rhino.head.Scriptable) nativeArray46, (int) (short) 10);
        java.lang.Object obj62 = null;
        int int63 = nativeArray40.lastIndexOf(obj62);
        boolean boolean64 = nativeArray27.has("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray40);
        nativeArray27.preventExtensions();
        java.lang.Object[] objArray66 = nativeArray27.toArray();
        com.google.javascript.rhino.head.NativeArray nativeArray69 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable70 = nativeArray69.getParentScope();
        java.lang.Object[] objArray71 = nativeArray69.getIds();
        com.google.javascript.rhino.head.ScriptableObject.putProperty((com.google.javascript.rhino.head.Scriptable) nativeArray27, 0, (java.lang.Object) objArray71);
        java.lang.String str73 = nativeArray27.getClassName();
        com.google.javascript.rhino.head.NativeArray nativeArray76 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable77 = nativeArray76.getParentScope();
        java.lang.Object[] objArray78 = nativeArray76.getIds();
        boolean boolean79 = nativeArray76.isEmpty();
        java.lang.Object obj81 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray76, 8);
        com.google.javascript.rhino.head.Scriptable scriptable82 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray76);
        java.lang.Object obj83 = nativeArray27.get(4, scriptable82);
        boolean boolean84 = nativeArray27.isExtensible();
        nativeArray11.defineConst("Array", (com.google.javascript.rhino.head.Scriptable) nativeArray27);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(scriptable12);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[hi!]");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[null]");
        org.junit.Assert.assertNull(scriptable70);
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "Array" + "'", str73, "Array");
        org.junit.Assert.assertNull(scriptable77);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNull(scriptable82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test2496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2496");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        java.lang.Object[] objArray7 = nativeArray1.toArray();
        com.google.javascript.rhino.head.Scriptable scriptable8 = nativeArray1.getParentScope();
        com.google.javascript.rhino.head.Scriptable scriptable9 = nativeArray1.getParentScope();
        boolean boolean10 = nativeArray1.isSealed();
        boolean boolean11 = nativeArray1.isEmpty();
        com.google.javascript.rhino.head.NativeArray nativeArray13 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray16 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray13.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray16, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray20 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray23 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray20.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray23, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray28 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray28.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj31 = nativeArray23.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray28);
        com.google.javascript.rhino.head.Callable callable34 = null;
        nativeArray23.setGetterOrSetter("hi!", 0, callable34, false);
        java.lang.Integer[] intArray37 = nativeArray23.getIndexIds();
        nativeArray16.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray23);
        java.lang.Object obj39 = nativeArray1.get((java.lang.Object) nativeArray23);
        java.lang.Object[] objArray40 = nativeArray1.toArray();
        com.google.javascript.rhino.head.ScriptableObject.defineConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray1, "object");
        nativeArray1.delete(10);
        boolean boolean45 = nativeArray1.isExtensible();
        com.google.javascript.rhino.head.NativeArray nativeArray47 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable48 = nativeArray47.getParentScope();
        java.lang.Object[] objArray49 = nativeArray47.getIds();
        boolean boolean50 = nativeArray47.isEmpty();
        boolean boolean51 = nativeArray1.containsAll((java.util.Collection) nativeArray47);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[null]");
        org.junit.Assert.assertNull(scriptable8);
        org.junit.Assert.assertNull(scriptable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[null]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(scriptable48);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    }

    @Test
    public void test2497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2497");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj38 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        boolean boolean39 = nativeArray21.isSealed();
        boolean boolean40 = nativeArray21.hasPrototypeMap();
        java.lang.Object obj42 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray21, "object");
        com.google.javascript.rhino.head.NativeArray nativeArray44 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.Scriptable scriptable45 = nativeArray44.getParentScope();
        java.lang.Object[] objArray46 = nativeArray44.getIds();
        boolean boolean47 = nativeArray44.isEmpty();
        int int48 = nativeArray44.size();
        java.lang.Object[] objArray49 = nativeArray44.getIds();
        com.google.javascript.rhino.head.NativeArray nativeArray51 = new com.google.javascript.rhino.head.NativeArray((long) 8);
        java.lang.Object obj52 = nativeArray21.associateValue((java.lang.Object) nativeArray44, (java.lang.Object) 8);
        boolean boolean54 = com.google.javascript.rhino.head.ScriptableObject.deleteProperty((com.google.javascript.rhino.head.Scriptable) nativeArray44, "object");
        java.lang.String str55 = nativeArray44.getClassName();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNull(scriptable45);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 8 + "'", obj52, 8);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Array" + "'", str55, "Array");
    }

    @Test
    public void test2498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2498");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray12 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray12, (java.lang.Object) (-1));
        nativeArray1.put((int) (byte) 10, (com.google.javascript.rhino.head.Scriptable) nativeArray9, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.NativeArray nativeArray19 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray22 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray19.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray22, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray27.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj30 = nativeArray22.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray27);
        boolean boolean31 = nativeArray22.hasPrototypeMap();
        java.lang.Object[] objArray32 = nativeArray22.getIds();
        int int33 = nativeArray22.size();
        boolean boolean34 = nativeArray1.has((int) (short) 100, (com.google.javascript.rhino.head.Scriptable) nativeArray22);
        boolean boolean36 = nativeArray22.isConst("hi!");
        nativeArray22.delete("Array");
        int int39 = nativeArray22.size();
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[hi!]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
    }

    @Test
    public void test2499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2499");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        com.google.javascript.rhino.head.NativeArray nativeArray15 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int17 = nativeArray15.lastIndexOf((java.lang.Object) (short) 10);
        long long18 = nativeArray15.getLength();
        nativeArray15.delete((int) (byte) 1);
        com.google.javascript.rhino.head.ScriptableObject.putConstProperty((com.google.javascript.rhino.head.Scriptable) nativeArray9, "hi!", (java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray24 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray27 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray24.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray27, (java.lang.Object) (-1));
        java.lang.Object[] objArray30 = nativeArray24.getAllIds();
        nativeArray24.delete("");
        java.lang.Object obj33 = nativeArray9.get(10, (com.google.javascript.rhino.head.Scriptable) nativeArray24);
        java.lang.Integer[] intArray34 = nativeArray24.getIndexIds();
        java.lang.Object obj36 = null;
        nativeArray24.defineProperty("", obj36, 10);
        com.google.javascript.rhino.head.Scriptable scriptable39 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray24);
        java.lang.Object[] objArray40 = nativeArray24.toArray();
        java.lang.Integer[] intArray41 = nativeArray24.getIndexIds();
        com.google.javascript.rhino.head.Scriptable scriptable42 = com.google.javascript.rhino.head.ScriptableObject.getObjectPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray24);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[length]");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertNull(scriptable39);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[null]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertNull(scriptable42);
    }

    @Test
    public void test2500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2500");
        com.google.javascript.rhino.head.NativeArray nativeArray1 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray4 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray1.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray4, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray9 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray9.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj12 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray9);
        boolean boolean13 = nativeArray4.hasPrototypeMap();
        java.lang.Object[] objArray14 = nativeArray4.getIds();
        int int15 = nativeArray4.size();
        com.google.javascript.rhino.head.NativeArray nativeArray18 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray21 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray18.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray21, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.NativeArray nativeArray26 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray26.activatePrototypeMap((int) (short) 100);
        java.lang.Object obj29 = nativeArray21.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray26);
        boolean boolean30 = nativeArray21.hasPrototypeMap();
        java.lang.Object[] objArray31 = nativeArray21.getIds();
        int int32 = nativeArray21.size();
        com.google.javascript.rhino.head.NativeArray nativeArray34 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        int int36 = nativeArray34.lastIndexOf((java.lang.Object) (short) 10);
        nativeArray21.setParentScope((com.google.javascript.rhino.head.Scriptable) nativeArray34);
        java.lang.Object obj38 = nativeArray4.get("", (com.google.javascript.rhino.head.Scriptable) nativeArray21);
        java.lang.Object[] objArray39 = nativeArray4.getIds();
        java.lang.Integer[] intArray40 = nativeArray4.getIndexIds();
        com.google.javascript.rhino.head.NativeArray nativeArray43 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray43.activatePrototypeMap((int) (short) 100);
        boolean boolean47 = com.google.javascript.rhino.head.ScriptableObject.hasProperty((com.google.javascript.rhino.head.Scriptable) nativeArray43, "hi!");
        long long48 = nativeArray43.jsGet_length();
        boolean boolean49 = nativeArray4.has("", (com.google.javascript.rhino.head.Scriptable) nativeArray43);
        com.google.javascript.rhino.head.NativeArray nativeArray52 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray55 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray52.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray55, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.Scriptable scriptable58 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray52);
        com.google.javascript.rhino.head.NativeArray nativeArray60 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray63 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray60.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray63, (java.lang.Object) (-1));
        com.google.javascript.rhino.head.Scriptable scriptable66 = com.google.javascript.rhino.head.ScriptableObject.getFunctionPrototype((com.google.javascript.rhino.head.Scriptable) nativeArray60);
        nativeArray52.setPrototype(scriptable66);
        int int68 = nativeArray52.size();
        java.lang.Object obj70 = com.google.javascript.rhino.head.ScriptableObject.getProperty((com.google.javascript.rhino.head.Scriptable) nativeArray52, "hi!");
        nativeArray43.defineConst("object", (com.google.javascript.rhino.head.Scriptable) nativeArray52);
        long long72 = nativeArray43.getLength();
        com.google.javascript.rhino.head.NativeArray nativeArray74 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        com.google.javascript.rhino.head.NativeArray nativeArray77 = new com.google.javascript.rhino.head.NativeArray((long) 1);
        nativeArray74.put("hi!", (com.google.javascript.rhino.head.Scriptable) nativeArray77, (java.lang.Object) (-1));
        java.lang.Object[] objArray80 = nativeArray74.getAllIds();
        java.lang.String str81 = nativeArray74.getTypeOf();
        int int82 = nativeArray74.size();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean83 = nativeArray43.addAll((java.util.Collection) nativeArray74);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[hi!]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 1L + "'", long48 == 1L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(scriptable58);
        org.junit.Assert.assertNull(scriptable66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 1L + "'", long72 == 1L);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[length]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[length]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "object" + "'", str81, "object");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 1 + "'", int82 == 1);
    }
}

