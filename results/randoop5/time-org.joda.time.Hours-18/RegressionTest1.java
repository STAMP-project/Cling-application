import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest1 {

    public static boolean debug = false;

    @Test
    public void test0501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0501");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.multipliedBy(1);
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours11 = hours8.minus(hours10);
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = hours8.get(durationFieldType12);
        org.joda.time.Hours hours15 = hours8.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Hours hours17 = org.joda.time.Hours.hoursIn(readableInterval16);
        int int18 = hours15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours17);
        org.joda.time.Hours hours19 = hours0.minus(hours15);
        org.joda.time.Hours hours20 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod21 = hours20.toMutablePeriod();
        org.joda.time.Hours hours22 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours23 = hours20.minus(hours22);
        org.joda.time.DurationFieldType durationFieldType24 = null;
        int int25 = hours20.get(durationFieldType24);
        org.joda.time.Hours hours27 = hours20.minus((int) (short) 0);
        org.joda.time.Hours hours28 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType29 = null;
        int int30 = hours28.get(durationFieldType29);
        org.joda.time.DurationFieldType durationFieldType31 = hours28.getFieldType();
        int int32 = hours27.get(durationFieldType31);
        org.joda.time.Hours hours33 = org.joda.time.Hours.ONE;
        int int34 = hours33.getHours();
        org.joda.time.Hours hours36 = hours33.plus(10);
        org.joda.time.Hours hours37 = hours27.minus(hours36);
        org.joda.time.Hours hours38 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours37);
        boolean boolean39 = hours0.isLessThan(hours37);
        java.lang.Class<?> wildcardClass40 = hours37.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 7 + "'", int32 == 7);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test0502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0502");
        org.joda.time.Hours hours0 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours2 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours6 = hours3.minus(hours5);
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = hours3.get(durationFieldType7);
        org.joda.time.Hours hours10 = hours3.minus((int) (short) 0);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod12 = hours11.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours14 = hours11.minus(hours13);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = hours13.isSupported(durationFieldType15);
        org.joda.time.Hours hours17 = hours10.minus(hours13);
        org.joda.time.Hours hours18 = hours2.plus(hours17);
        int int19 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours17);
        org.joda.time.MutablePeriod mutablePeriod20 = hours17.toMutablePeriod();
        org.joda.time.Duration duration21 = hours17.toStandardDuration();
        org.joda.time.Hours hours23 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod25 = hours24.toMutablePeriod();
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours27 = hours24.minus(hours26);
        org.joda.time.DurationFieldType durationFieldType28 = null;
        int int29 = hours24.get(durationFieldType28);
        org.joda.time.Hours hours31 = hours24.minus((int) (short) 0);
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod33 = hours32.toMutablePeriod();
        org.joda.time.Hours hours34 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours35 = hours32.minus(hours34);
        org.joda.time.DurationFieldType durationFieldType36 = null;
        boolean boolean37 = hours34.isSupported(durationFieldType36);
        org.joda.time.Hours hours38 = hours31.minus(hours34);
        org.joda.time.Hours hours39 = hours23.plus(hours38);
        org.joda.time.Hours hours40 = hours17.plus(hours23);
        org.joda.time.Hours hours41 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod42 = hours41.toMutablePeriod();
        org.joda.time.Hours hours43 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours44 = hours41.minus(hours43);
        org.joda.time.DurationFieldType durationFieldType45 = null;
        int int46 = hours41.get(durationFieldType45);
        org.joda.time.Hours hours48 = hours41.minus((int) (short) 0);
        org.joda.time.Hours hours49 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType50 = null;
        int int51 = hours49.get(durationFieldType50);
        org.joda.time.DurationFieldType durationFieldType52 = hours49.getFieldType();
        int int53 = hours48.get(durationFieldType52);
        org.joda.time.PeriodType periodType54 = hours48.getPeriodType();
        org.joda.time.Hours hours56 = hours48.multipliedBy(8);
        org.joda.time.Hours hours58 = hours48.dividedBy((-25));
        int int59 = hours17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours48);
        org.joda.time.Hours hours61 = hours17.multipliedBy(16);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 7 + "'", int53 == 7);
        org.junit.Assert.assertNotNull(periodType54);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(hours61);
    }

    @Test
    public void test0503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0503");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = hours0.get(durationFieldType1);
        org.joda.time.Hours hours4 = hours0.dividedBy(100);
        org.joda.time.MutablePeriod mutablePeriod5 = hours4.toMutablePeriod();
        int int6 = hours4.getHours();
        org.joda.time.Hours hours8 = hours4.plus(92);
        org.joda.time.MutablePeriod mutablePeriod9 = hours4.toMutablePeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
    }

    @Test
    public void test0504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0504");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        int int4 = hours2.getValue((int) (short) 0);
        org.joda.time.Hours hours5 = hours1.minus(hours2);
        org.joda.time.Hours hours6 = hours0.minus(hours1);
        java.lang.String str7 = hours1.toString();
        org.joda.time.Hours hours9 = hours1.plus(8);
        org.joda.time.Hours hours10 = null;
        boolean boolean11 = hours9.isGreaterThan(hours10);
        int int12 = hours9.size();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 8 + "'", int4 == 8);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT7H" + "'", str7, "PT7H");
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
    }

    @Test
    public void test0505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0505");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours12 = hours6.minus(10);
        org.joda.time.Hours hours13 = hours6.negated();
        org.joda.time.Hours hours15 = hours13.plus((int) (byte) 0);
        org.joda.time.Hours hours17 = hours15.minus(0);
        org.joda.time.DurationFieldType durationFieldType19 = hours15.getFieldType(0);
        org.joda.time.Hours hours21 = hours15.multipliedBy((int) (byte) 1);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertNotNull(hours21);
    }

    @Test
    public void test0506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0506");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        int int23 = hours18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours21);
        org.joda.time.Hours hours24 = hours1.plus(hours21);
        org.joda.time.Hours hours25 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period26 = hours25.toPeriod();
        org.joda.time.Hours hours28 = hours25.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod29 = hours28.toMutablePeriod();
        org.joda.time.Hours hours30 = org.joda.time.Hours.THREE;
        org.joda.time.Period period31 = hours30.toPeriod();
        org.joda.time.Hours hours33 = hours30.plus((int) (byte) -1);
        org.joda.time.Hours hours34 = hours28.minus(hours30);
        org.joda.time.DurationFieldType durationFieldType35 = hours34.getFieldType();
        org.joda.time.Hours hours36 = hours24.plus(hours34);
        org.joda.time.Hours hours38 = hours36.multipliedBy((int) (byte) -1);
        org.joda.time.Hours hours40 = hours36.plus(6);
        org.joda.time.Hours hours42 = hours40.multipliedBy((int) ' ');
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours42);
    }

    @Test
    public void test0507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0507");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(0);
        org.joda.time.Hours hours3 = hours1.multipliedBy((int) (short) 0);
        org.joda.time.Hours hours5 = hours1.dividedBy((int) 'a');
        java.lang.Class<?> wildcardClass6 = hours1.getClass();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0508");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod12 = hours11.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours14 = hours11.minus(hours13);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = hours11.get(durationFieldType15);
        int int17 = hours11.getHours();
        org.joda.time.MutablePeriod mutablePeriod18 = hours11.toMutablePeriod();
        boolean boolean19 = hours0.isGreaterThan(hours11);
        java.lang.Class<?> wildcardClass20 = hours0.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 7 + "'", int17 == 7);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0509");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((int) '4');
        org.joda.time.DurationFieldType durationFieldType2 = hours1.getFieldType();
        org.joda.time.Period period3 = hours1.toPeriod();
        org.joda.time.Period period4 = hours1.toPeriod();
        org.joda.time.Hours hours6 = hours1.plus(0);
        org.joda.time.Hours hours8 = hours1.minus((int) (short) 0);
        org.joda.time.Hours hours9 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = hours9.get(durationFieldType10);
        org.joda.time.Hours hours13 = hours9.dividedBy(100);
        boolean boolean14 = hours1.isLessThan(hours13);
        int int15 = hours1.size();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
    }

    @Test
    public void test0510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0510");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.PeriodType periodType10 = hours0.getPeriodType();
        int int11 = hours0.getHours();
        int int12 = hours0.size();
        org.joda.time.Hours hours14 = hours0.plus(5);
        int int15 = hours14.getHours();
        java.lang.String str16 = hours14.toString();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 7 + "'", int11 == 7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 12 + "'", int15 == 12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT12H" + "'", str16, "PT12H");
    }

    @Test
    public void test0511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0511");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.Hours hours10 = hours9.negated();
        org.joda.time.Duration duration11 = hours10.toStandardDuration();
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod14 = hours13.toMutablePeriod();
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours16 = hours13.minus(hours15);
        int int17 = hours12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours15);
        org.joda.time.Hours hours18 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours12);
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        org.joda.time.Hours hours24 = hours21.plus(8);
        org.joda.time.Hours hours25 = hours12.minus(hours24);
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod28 = hours27.toMutablePeriod();
        org.joda.time.Hours hours29 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours30 = hours27.minus(hours29);
        int int31 = hours26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours29);
        org.joda.time.DurationFieldType durationFieldType32 = null;
        boolean boolean33 = hours26.isSupported(durationFieldType32);
        org.joda.time.Hours hours35 = hours26.minus((int) (short) -1);
        org.joda.time.Hours hours36 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod37 = hours36.toMutablePeriod();
        org.joda.time.Hours hours38 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours39 = hours36.minus(hours38);
        org.joda.time.Hours hours41 = hours38.plus(8);
        org.joda.time.Hours hours42 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType43 = null;
        int int44 = hours42.get(durationFieldType43);
        org.joda.time.DurationFieldType durationFieldType45 = hours42.getFieldType();
        boolean boolean46 = hours41.isSupported(durationFieldType45);
        int int47 = hours35.get(durationFieldType45);
        int int48 = hours24.get(durationFieldType45);
        int int49 = hours10.get(durationFieldType45);
        org.joda.time.DurationFieldType durationFieldType50 = hours10.getFieldType();
        org.joda.time.Hours hours51 = org.joda.time.Hours.ONE;
        int int52 = hours51.getHours();
        org.joda.time.Hours hours54 = hours51.plus(10);
        org.joda.time.Hours hours55 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod56 = hours55.toMutablePeriod();
        org.joda.time.Hours hours57 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours58 = hours55.minus(hours57);
        org.joda.time.Duration duration59 = hours55.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod60 = hours55.toMutablePeriod();
        org.joda.time.Hours hours61 = org.joda.time.Hours.EIGHT;
        int int63 = hours61.getValue((int) (short) 0);
        java.lang.String str64 = hours61.toString();
        boolean boolean65 = hours55.isGreaterThan(hours61);
        org.joda.time.Hours hours67 = hours61.minus(10);
        org.joda.time.Hours hours68 = hours61.negated();
        org.joda.time.Hours hours70 = hours68.plus((int) (byte) 0);
        org.joda.time.DurationFieldType durationFieldType72 = hours68.getFieldType(0);
        boolean boolean73 = hours51.equals((java.lang.Object) durationFieldType72);
        boolean boolean74 = hours10.isLessThan(hours51);
        org.joda.time.Hours hours76 = org.joda.time.Hours.hours(0);
        org.joda.time.Hours hours78 = hours76.minus((int) ' ');
        org.joda.time.Hours hours80 = hours78.dividedBy((int) (short) -1);
        org.joda.time.Hours hours81 = hours10.plus(hours80);
        org.joda.time.DurationFieldType durationFieldType82 = hours10.getFieldType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 8 + "'", int47 == 8);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-8) + "'", int49 == (-8));
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(mutablePeriod56);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertNotNull(mutablePeriod60);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 8 + "'", int63 == 8);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "PT8H" + "'", str64, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertNotNull(hours70);
        org.junit.Assert.assertNotNull(durationFieldType72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(hours76);
        org.junit.Assert.assertNotNull(hours78);
        org.junit.Assert.assertNotNull(hours80);
        org.junit.Assert.assertNotNull(hours81);
        org.junit.Assert.assertNotNull(durationFieldType82);
    }

    @Test
    public void test0512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0512");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours6 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        org.joda.time.Hours hours7 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod8 = hours7.toMutablePeriod();
        org.joda.time.Hours hours9 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours10 = hours7.minus(hours9);
        org.joda.time.Hours hours12 = hours9.plus(8);
        org.joda.time.Hours hours13 = hours0.minus(hours12);
        org.joda.time.Hours hours14 = hours13.negated();
        org.joda.time.Duration duration15 = hours13.toStandardDuration();
        org.joda.time.PeriodType periodType16 = hours13.getPeriodType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(periodType16);
    }

    @Test
    public void test0513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0513");
        org.joda.time.Hours hours0 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours2 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours6 = hours3.minus(hours5);
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = hours3.get(durationFieldType7);
        org.joda.time.Hours hours10 = hours3.minus((int) (short) 0);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod12 = hours11.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours14 = hours11.minus(hours13);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = hours13.isSupported(durationFieldType15);
        org.joda.time.Hours hours17 = hours10.minus(hours13);
        org.joda.time.Hours hours18 = hours2.plus(hours17);
        int int19 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours17);
        org.joda.time.MutablePeriod mutablePeriod20 = hours17.toMutablePeriod();
        org.joda.time.Duration duration21 = hours17.toStandardDuration();
        org.joda.time.Hours hours23 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod25 = hours24.toMutablePeriod();
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours27 = hours24.minus(hours26);
        org.joda.time.DurationFieldType durationFieldType28 = null;
        int int29 = hours24.get(durationFieldType28);
        org.joda.time.Hours hours31 = hours24.minus((int) (short) 0);
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod33 = hours32.toMutablePeriod();
        org.joda.time.Hours hours34 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours35 = hours32.minus(hours34);
        org.joda.time.DurationFieldType durationFieldType36 = null;
        boolean boolean37 = hours34.isSupported(durationFieldType36);
        org.joda.time.Hours hours38 = hours31.minus(hours34);
        org.joda.time.Hours hours39 = hours23.plus(hours38);
        org.joda.time.Hours hours40 = hours17.plus(hours23);
        org.joda.time.Hours hours41 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod42 = hours41.toMutablePeriod();
        org.joda.time.Hours hours43 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours44 = hours41.minus(hours43);
        org.joda.time.DurationFieldType durationFieldType45 = null;
        int int46 = hours41.get(durationFieldType45);
        org.joda.time.Hours hours48 = hours41.minus((int) (short) 0);
        org.joda.time.Hours hours49 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType50 = null;
        int int51 = hours49.get(durationFieldType50);
        org.joda.time.DurationFieldType durationFieldType52 = hours49.getFieldType();
        int int53 = hours48.get(durationFieldType52);
        org.joda.time.Hours hours54 = org.joda.time.Hours.ONE;
        int int55 = hours54.getHours();
        org.joda.time.Hours hours57 = hours54.plus(10);
        org.joda.time.Hours hours58 = hours48.minus(hours57);
        int int59 = hours17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours48);
        java.lang.Class<?> wildcardClass60 = hours48.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 7 + "'", int53 == 7);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test0514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0514");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.PeriodType periodType10 = hours0.getPeriodType();
        org.joda.time.Hours hours11 = org.joda.time.Hours.EIGHT;
        int int13 = hours11.getValue((int) (short) 0);
        org.joda.time.Hours hours14 = hours0.minus(hours11);
        org.joda.time.Hours hours16 = hours0.plus(7);
        org.joda.time.Hours hours17 = hours0.negated();
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        int int23 = hours18.get(durationFieldType22);
        org.joda.time.Hours hours25 = hours18.minus((int) (short) 0);
        org.joda.time.Hours hours26 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = hours26.get(durationFieldType27);
        org.joda.time.DurationFieldType durationFieldType29 = hours26.getFieldType();
        int int30 = hours25.get(durationFieldType29);
        int int31 = hours0.get(durationFieldType29);
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours33 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod34 = hours33.toMutablePeriod();
        org.joda.time.Hours hours35 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours36 = hours33.minus(hours35);
        int int37 = hours32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours35);
        org.joda.time.Hours hours38 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours32);
        org.joda.time.DurationFieldType durationFieldType39 = null;
        int int40 = hours32.get(durationFieldType39);
        org.joda.time.DurationFieldType durationFieldType41 = null;
        int int42 = hours32.get(durationFieldType41);
        org.joda.time.Hours hours44 = hours32.minus(0);
        org.joda.time.DurationFieldType durationFieldType45 = hours44.getFieldType();
        boolean boolean46 = hours0.isSupported(durationFieldType45);
        org.joda.time.Period period47 = hours0.toPeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 8 + "'", int13 == 8);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 7 + "'", int30 == 7);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 7 + "'", int31 == 7);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(period47);
    }

    @Test
    public void test0515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0515");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.PeriodType periodType10 = hours0.getPeriodType();
        int int11 = hours0.getHours();
        int int12 = hours0.size();
        org.joda.time.Hours hours14 = hours0.plus(5);
        org.joda.time.Hours hours16 = hours0.minus(16);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType18 = hours0.getFieldType((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 7 + "'", int11 == 7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours16);
    }

    @Test
    public void test0516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0516");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours12 = hours6.minus(10);
        org.joda.time.Hours hours13 = hours6.negated();
        org.joda.time.Hours hours15 = hours13.plus((int) (byte) 0);
        java.lang.String str16 = hours13.toString();
        org.joda.time.Hours hours17 = hours13.negated();
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        int int23 = hours18.get(durationFieldType22);
        org.joda.time.Hours hours25 = hours18.minus((int) (short) 0);
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod27 = hours26.toMutablePeriod();
        org.joda.time.Hours hours28 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours29 = hours26.minus(hours28);
        org.joda.time.DurationFieldType durationFieldType30 = null;
        boolean boolean31 = hours28.isSupported(durationFieldType30);
        org.joda.time.Hours hours32 = hours25.minus(hours28);
        org.joda.time.Hours hours33 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours34 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod35 = hours34.toMutablePeriod();
        org.joda.time.Hours hours36 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours37 = hours34.minus(hours36);
        int int38 = hours33.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours36);
        org.joda.time.DurationFieldType durationFieldType39 = null;
        boolean boolean40 = hours33.isSupported(durationFieldType39);
        org.joda.time.Hours hours42 = hours33.minus((int) (short) -1);
        org.joda.time.PeriodType periodType43 = hours33.getPeriodType();
        org.joda.time.Hours hours44 = org.joda.time.Hours.EIGHT;
        int int46 = hours44.getValue((int) (short) 0);
        org.joda.time.Hours hours47 = hours33.minus(hours44);
        org.joda.time.Hours hours49 = hours33.plus(7);
        org.joda.time.Hours hours50 = hours32.minus(hours49);
        org.joda.time.Hours hours52 = org.joda.time.Hours.hours((int) '4');
        org.joda.time.DurationFieldType durationFieldType53 = hours52.getFieldType();
        org.joda.time.Period period54 = hours52.toPeriod();
        org.joda.time.Period period55 = hours52.toPeriod();
        org.joda.time.Hours hours56 = hours50.plus(hours52);
        boolean boolean57 = hours13.isGreaterThan(hours50);
        org.joda.time.Hours hours59 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours61 = hours59.multipliedBy((int) (byte) 100);
        boolean boolean62 = hours13.isLessThan(hours61);
        org.joda.time.Period period63 = hours13.toPeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT-8H" + "'", str16, "PT-8H");
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 8 + "'", int46 == 8);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(durationFieldType53);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(period63);
    }

    @Test
    public void test0517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0517");
        org.joda.time.Hours hours0 = org.joda.time.Hours.TWO;
        org.joda.time.Hours hours2 = hours0.plus(0);
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours6 = hours3.minus(hours5);
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = hours3.get(durationFieldType7);
        org.joda.time.Hours hours10 = hours3.multipliedBy(1);
        org.joda.time.Hours hours11 = org.joda.time.Hours.ONE;
        int int12 = hours10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours11);
        org.joda.time.Hours hours13 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = hours13.get(durationFieldType14);
        org.joda.time.Hours hours17 = hours13.dividedBy(100);
        org.joda.time.Hours hours19 = hours17.plus((int) (byte) 10);
        org.joda.time.Hours hours20 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours21 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod22 = hours21.toMutablePeriod();
        org.joda.time.Hours hours23 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours24 = hours21.minus(hours23);
        int int25 = hours20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours23);
        org.joda.time.DurationFieldType durationFieldType26 = null;
        boolean boolean27 = hours20.isSupported(durationFieldType26);
        org.joda.time.Hours hours29 = hours20.minus((int) (short) -1);
        org.joda.time.Hours hours30 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod31 = hours30.toMutablePeriod();
        org.joda.time.Hours hours32 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours33 = hours30.minus(hours32);
        org.joda.time.Hours hours35 = hours32.plus(8);
        org.joda.time.Hours hours36 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType37 = null;
        int int38 = hours36.get(durationFieldType37);
        org.joda.time.DurationFieldType durationFieldType39 = hours36.getFieldType();
        boolean boolean40 = hours35.isSupported(durationFieldType39);
        int int41 = hours29.get(durationFieldType39);
        boolean boolean42 = hours19.isSupported(durationFieldType39);
        org.joda.time.Hours hours43 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod44 = hours43.toMutablePeriod();
        org.joda.time.Hours hours45 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours46 = hours43.minus(hours45);
        org.joda.time.DurationFieldType durationFieldType47 = null;
        int int48 = hours43.get(durationFieldType47);
        org.joda.time.Hours hours50 = hours43.minus((int) (short) 0);
        org.joda.time.Hours hours51 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours43);
        boolean boolean52 = hours19.equals((java.lang.Object) hours51);
        org.joda.time.Hours hours54 = hours19.plus((-1));
        org.joda.time.Hours hours55 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours56 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType57 = null;
        int int58 = hours56.get(durationFieldType57);
        boolean boolean59 = hours55.equals((java.lang.Object) durationFieldType57);
        org.joda.time.Hours hours60 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours61 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod62 = hours61.toMutablePeriod();
        org.joda.time.Hours hours63 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours64 = hours61.minus(hours63);
        int int65 = hours60.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours63);
        org.joda.time.Hours hours67 = hours63.multipliedBy(0);
        org.joda.time.Hours hours68 = hours55.plus(hours67);
        org.joda.time.DurationFieldType durationFieldType69 = hours68.getFieldType();
        boolean boolean70 = hours19.equals((java.lang.Object) durationFieldType69);
        int int71 = hours11.get(durationFieldType69);
        boolean boolean72 = hours2.isSupported(durationFieldType69);
        org.joda.time.Hours hours73 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours2);
        org.joda.time.Hours hours75 = hours2.multipliedBy((int) '4');
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(durationFieldType39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 8 + "'", int41 == 8);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(mutablePeriod44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(mutablePeriod62);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertNotNull(durationFieldType69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(hours73);
        org.junit.Assert.assertNotNull(hours75);
    }

    @Test
    public void test0518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0518");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours12 = hours0.multipliedBy((int) '4');
        org.joda.time.Period period13 = hours0.toPeriod();
        org.joda.time.PeriodType periodType14 = hours0.getPeriodType();
        org.joda.time.Hours hours15 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod17 = hours16.toMutablePeriod();
        org.joda.time.Hours hours18 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours19 = hours16.minus(hours18);
        int int20 = hours15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours18);
        org.joda.time.DurationFieldType durationFieldType21 = null;
        boolean boolean22 = hours15.isSupported(durationFieldType21);
        org.joda.time.Hours hours24 = hours15.minus((int) (short) -1);
        org.joda.time.PeriodType periodType25 = hours15.getPeriodType();
        int int26 = hours15.getHours();
        org.joda.time.DurationFieldType durationFieldType28 = hours15.getFieldType((int) (short) 0);
        int int29 = hours15.size();
        int int30 = hours15.size();
        org.joda.time.DurationFieldType durationFieldType31 = hours15.getFieldType();
        boolean boolean32 = hours0.equals((java.lang.Object) hours15);
        org.joda.time.Hours hours33 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours34 = hours33.negated();
        org.joda.time.Hours hours35 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours36 = org.joda.time.Hours.EIGHT;
        int int38 = hours36.getValue((int) (short) 0);
        org.joda.time.Hours hours39 = hours35.minus(hours36);
        org.joda.time.Hours hours40 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType41 = null;
        int int42 = hours40.get(durationFieldType41);
        org.joda.time.DurationFieldType durationFieldType43 = hours40.getFieldType();
        int int44 = hours35.get(durationFieldType43);
        boolean boolean45 = hours33.isSupported(durationFieldType43);
        int int46 = hours33.getHours();
        org.joda.time.Hours hours48 = hours33.dividedBy((int) ' ');
        org.joda.time.Hours hours49 = hours0.minus(hours48);
        org.joda.time.Hours hours50 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours52 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours53 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod54 = hours53.toMutablePeriod();
        org.joda.time.Hours hours55 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours56 = hours53.minus(hours55);
        org.joda.time.DurationFieldType durationFieldType57 = null;
        int int58 = hours53.get(durationFieldType57);
        org.joda.time.Hours hours60 = hours53.minus((int) (short) 0);
        org.joda.time.Hours hours61 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod62 = hours61.toMutablePeriod();
        org.joda.time.Hours hours63 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours64 = hours61.minus(hours63);
        org.joda.time.DurationFieldType durationFieldType65 = null;
        boolean boolean66 = hours63.isSupported(durationFieldType65);
        org.joda.time.Hours hours67 = hours60.minus(hours63);
        org.joda.time.Hours hours68 = hours52.plus(hours67);
        int int69 = hours50.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours67);
        org.joda.time.MutablePeriod mutablePeriod70 = hours50.toMutablePeriod();
        org.joda.time.Hours hours72 = hours50.minus(9);
        org.joda.time.Hours hours73 = hours0.plus(hours72);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 7 + "'", int26 == 7);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 8 + "'", int38 == 8);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(durationFieldType43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 7 + "'", int44 == 7);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 3 + "'", int46 == 3);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(mutablePeriod54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(mutablePeriod62);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod70);
        org.junit.Assert.assertNotNull(hours72);
        org.junit.Assert.assertNotNull(hours73);
    }

    @Test
    public void test0519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0519");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours6 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = hours0.get(durationFieldType7);
        org.joda.time.Hours hours9 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod10 = hours9.toMutablePeriod();
        org.joda.time.Hours hours11 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours12 = hours9.minus(hours11);
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = hours9.get(durationFieldType13);
        org.joda.time.Hours hours16 = hours9.minus((int) (short) 0);
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod18 = hours17.toMutablePeriod();
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours20 = hours17.minus(hours19);
        org.joda.time.DurationFieldType durationFieldType21 = null;
        boolean boolean22 = hours19.isSupported(durationFieldType21);
        org.joda.time.Hours hours23 = hours16.minus(hours19);
        org.joda.time.Period period24 = hours16.toPeriod();
        org.joda.time.Hours hours25 = hours0.plus(hours16);
        org.joda.time.PeriodType periodType26 = hours25.getPeriodType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(periodType26);
    }

    @Test
    public void test0520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0520");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        int int9 = hours7.getValue((int) (short) 0);
        org.joda.time.Hours hours10 = hours6.minus(hours7);
        org.joda.time.Hours hours11 = hours5.minus(hours6);
        int int12 = hours5.size();
        org.joda.time.Duration duration13 = hours5.toStandardDuration();
        boolean boolean14 = hours1.isGreaterThan(hours5);
        org.joda.time.Hours hours15 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours17 = org.joda.time.Hours.EIGHT;
        int int19 = hours17.getValue((int) (short) 0);
        org.joda.time.Hours hours20 = hours16.minus(hours17);
        org.joda.time.Hours hours21 = hours15.minus(hours16);
        boolean boolean22 = hours1.equals((java.lang.Object) hours16);
        org.joda.time.Hours hours24 = hours16.multipliedBy(5);
        java.lang.Class<?> wildcardClass25 = hours16.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8 + "'", int9 == 8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 8 + "'", int19 == 8);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0521");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.multipliedBy(1);
        int int8 = hours7.getHours();
        org.joda.time.Hours hours10 = hours7.minus((int) ' ');
        org.joda.time.DurationFieldType durationFieldType11 = hours7.getFieldType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 7 + "'", int8 == 7);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(durationFieldType11);
    }

    @Test
    public void test0522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0522");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours11 = hours8.minus(hours10);
        org.joda.time.DurationFieldType durationFieldType12 = null;
        boolean boolean13 = hours10.isSupported(durationFieldType12);
        org.joda.time.Hours hours14 = hours7.minus(hours10);
        org.joda.time.Hours hours15 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod16 = hours15.toMutablePeriod();
        org.joda.time.Hours hours17 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours18 = hours15.minus(hours17);
        org.joda.time.Hours hours20 = hours17.plus(8);
        org.joda.time.Hours hours21 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType22 = null;
        int int23 = hours21.get(durationFieldType22);
        org.joda.time.DurationFieldType durationFieldType24 = hours21.getFieldType();
        boolean boolean25 = hours20.isSupported(durationFieldType24);
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod28 = hours27.toMutablePeriod();
        org.joda.time.Hours hours29 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours30 = hours27.minus(hours29);
        int int31 = hours26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours29);
        org.joda.time.DurationFieldType durationFieldType32 = null;
        boolean boolean33 = hours26.isSupported(durationFieldType32);
        org.joda.time.Hours hours35 = hours26.minus((int) (short) -1);
        org.joda.time.PeriodType periodType36 = hours26.getPeriodType();
        org.joda.time.Hours hours37 = org.joda.time.Hours.EIGHT;
        int int39 = hours37.getValue((int) (short) 0);
        org.joda.time.Hours hours40 = hours26.minus(hours37);
        org.joda.time.Hours hours41 = hours20.minus(hours40);
        org.joda.time.Hours hours43 = org.joda.time.Hours.parseHours("PT8H");
        boolean boolean44 = hours41.isLessThan(hours43);
        boolean boolean45 = hours14.isLessThan(hours43);
        org.joda.time.Hours hours47 = hours43.dividedBy(100);
        org.joda.time.Hours hours49 = hours47.multipliedBy((int) '#');
        // The following exception was thrown during execution in test generation
        try {
            int int51 = hours49.getValue(12);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 12");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 8 + "'", int39 == 8);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours49);
    }

    @Test
    public void test0523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0523");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(0);
        org.joda.time.Hours hours3 = hours1.multipliedBy((int) (short) 0);
        org.joda.time.Period period4 = hours3.toPeriod();
        int int5 = hours3.getHours();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test0524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0524");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours12 = hours6.minus(10);
        org.joda.time.Hours hours13 = hours6.negated();
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod15 = hours14.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours17 = hours14.minus(hours16);
        org.joda.time.DurationFieldType durationFieldType18 = null;
        int int19 = hours14.get(durationFieldType18);
        org.joda.time.Hours hours21 = hours14.multipliedBy(1);
        org.joda.time.Hours hours22 = org.joda.time.Hours.ONE;
        int int23 = hours21.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours22);
        int int24 = hours6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours21);
        java.lang.String str25 = hours21.toString();
        org.joda.time.Period period26 = hours21.toPeriod();
        org.joda.time.Hours hours28 = hours21.dividedBy(5);
        org.joda.time.Hours hours29 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod30 = hours29.toMutablePeriod();
        org.joda.time.Hours hours31 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours32 = hours29.minus(hours31);
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = hours29.get(durationFieldType33);
        org.joda.time.Hours hours36 = hours29.minus((int) (short) 0);
        org.joda.time.Hours hours37 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType38 = null;
        int int39 = hours37.get(durationFieldType38);
        org.joda.time.DurationFieldType durationFieldType40 = hours37.getFieldType();
        int int41 = hours36.get(durationFieldType40);
        org.joda.time.PeriodType periodType42 = hours36.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType43 = hours36.getFieldType();
        int int44 = hours21.get(durationFieldType43);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "PT7H" + "'", str25, "PT7H");
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(durationFieldType40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 7 + "'", int41 == 7);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(durationFieldType43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 7 + "'", int44 == 7);
    }

    @Test
    public void test0525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0525");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        int int1 = hours0.getHours();
        org.joda.time.Hours hours3 = hours0.plus(10);
        org.joda.time.Hours hours4 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod5 = hours4.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours7 = hours4.minus(hours6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = hours4.get(durationFieldType8);
        org.joda.time.Hours hours11 = hours4.multipliedBy(1);
        boolean boolean12 = hours0.isGreaterThan(hours4);
        java.lang.String str13 = hours4.toString();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "PT7H" + "'", str13, "PT7H");
    }

    @Test
    public void test0526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0526");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        int int9 = hours7.getValue((int) (short) 0);
        org.joda.time.Hours hours10 = hours6.minus(hours7);
        org.joda.time.Hours hours11 = hours5.minus(hours6);
        int int12 = hours5.size();
        org.joda.time.Duration duration13 = hours5.toStandardDuration();
        boolean boolean14 = hours1.isGreaterThan(hours5);
        org.joda.time.MutablePeriod mutablePeriod15 = hours5.toMutablePeriod();
        org.joda.time.Period period16 = hours5.toPeriod();
        java.lang.Class<?> wildcardClass17 = period16.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8 + "'", int9 == 8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0527");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = hours0.get(durationFieldType1);
        org.joda.time.Hours hours4 = hours0.dividedBy(100);
        org.joda.time.Hours hours6 = hours4.plus((int) (byte) 10);
        org.joda.time.Hours hours8 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours10 = hours8.minus(8);
        org.joda.time.DurationFieldType durationFieldType11 = hours10.getFieldType();
        boolean boolean12 = hours6.isGreaterThan(hours10);
        org.joda.time.Hours hours14 = hours6.multipliedBy((int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Hours hours16 = hours14.plus(2147483647);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: 10 + 2147483647");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(hours14);
    }

    @Test
    public void test0528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0528");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        org.joda.time.DurationFieldType durationFieldType5 = null;
        int int6 = hours1.get(durationFieldType5);
        org.joda.time.Hours hours8 = hours1.minus((int) (short) 0);
        org.joda.time.Hours hours9 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours1);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod12 = hours11.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours14 = hours11.minus(hours13);
        int int15 = hours10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours13);
        org.joda.time.DurationFieldType durationFieldType16 = null;
        boolean boolean17 = hours10.isSupported(durationFieldType16);
        org.joda.time.Hours hours19 = hours10.minus((int) (short) -1);
        org.joda.time.Hours hours20 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod21 = hours20.toMutablePeriod();
        org.joda.time.Hours hours22 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours23 = hours20.minus(hours22);
        org.joda.time.Hours hours25 = hours22.plus(8);
        org.joda.time.Hours hours26 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = hours26.get(durationFieldType27);
        org.joda.time.DurationFieldType durationFieldType29 = hours26.getFieldType();
        boolean boolean30 = hours25.isSupported(durationFieldType29);
        int int31 = hours19.get(durationFieldType29);
        org.joda.time.Hours hours32 = hours1.plus(hours19);
        org.joda.time.Hours hours33 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours34 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod35 = hours34.toMutablePeriod();
        org.joda.time.Hours hours36 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours37 = hours34.minus(hours36);
        int int38 = hours33.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours36);
        org.joda.time.DurationFieldType durationFieldType39 = null;
        boolean boolean40 = hours33.isSupported(durationFieldType39);
        org.joda.time.Hours hours42 = hours33.multipliedBy((int) (short) 10);
        org.joda.time.Hours hours43 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours44 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType45 = null;
        int int46 = hours44.get(durationFieldType45);
        boolean boolean47 = hours43.equals((java.lang.Object) durationFieldType45);
        org.joda.time.Hours hours48 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours49 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod50 = hours49.toMutablePeriod();
        org.joda.time.Hours hours51 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours52 = hours49.minus(hours51);
        int int53 = hours48.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours51);
        org.joda.time.Hours hours55 = hours51.multipliedBy(0);
        org.joda.time.Hours hours56 = hours43.plus(hours55);
        org.joda.time.DurationFieldType durationFieldType57 = hours56.getFieldType();
        boolean boolean58 = hours33.equals((java.lang.Object) durationFieldType57);
        int int59 = hours19.get(durationFieldType57);
        boolean boolean60 = hours0.isSupported(durationFieldType57);
        int int61 = hours0.size();
        org.joda.time.Period period62 = hours0.toPeriod();
        java.lang.Class<?> wildcardClass63 = period62.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 8 + "'", int31 == 8);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(mutablePeriod50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertNotNull(durationFieldType57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 8 + "'", int59 == 8);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0529");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = hours0.get(durationFieldType1);
        org.joda.time.Hours hours4 = hours0.dividedBy(100);
        org.joda.time.Hours hours6 = hours4.plus((int) (byte) 10);
        org.joda.time.Hours hours8 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours10 = hours8.minus(8);
        org.joda.time.DurationFieldType durationFieldType11 = hours10.getFieldType();
        boolean boolean12 = hours6.isGreaterThan(hours10);
        org.joda.time.Hours hours14 = hours6.multipliedBy((int) (byte) 1);
        org.joda.time.Period period15 = hours6.toPeriod();
        org.joda.time.PeriodType periodType16 = hours6.getPeriodType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(periodType16);
    }

    @Test
    public void test0530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0530");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours7 = hours0.minus((int) 'a');
        org.joda.time.Hours hours8 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        org.joda.time.Hours hours10 = hours0.minus((-6));
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours10);
    }

    @Test
    public void test0531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0531");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.MutablePeriod mutablePeriod6 = hours0.toMutablePeriod();
        java.lang.Class<?> wildcardClass7 = mutablePeriod6.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0532");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Hours hours9 = org.joda.time.Hours.hoursIn(readableInterval8);
        int int10 = hours7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours9);
        org.joda.time.DurationFieldType durationFieldType11 = null;
        int int12 = hours7.get(durationFieldType11);
        org.joda.time.Hours hours13 = hours7.negated();
        org.joda.time.Hours hours15 = hours13.plus((int) (short) -1);
        // The following exception was thrown during execution in test generation
        try {
            int int17 = hours15.getValue(700);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 700");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours15);
    }

    @Test
    public void test0533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0533");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Hours hours5 = hours2.plus(8);
        int int6 = hours5.getHours();
        int int7 = hours5.size();
        org.joda.time.Hours hours9 = hours5.dividedBy((int) (byte) 100);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = hours10.get(durationFieldType14);
        org.joda.time.Hours hours17 = hours10.minus((int) (short) 0);
        org.joda.time.Hours hours18 = org.joda.time.Hours.ONE;
        org.joda.time.Hours hours20 = hours18.plus(1);
        org.joda.time.Hours hours22 = hours18.dividedBy((-2));
        org.joda.time.Hours hours23 = hours17.plus(hours18);
        org.joda.time.Hours hours24 = hours9.minus(hours18);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 16 + "'", int6 == 16);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
    }

    @Test
    public void test0534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0534");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        int int23 = hours18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours21);
        org.joda.time.Hours hours24 = hours1.plus(hours21);
        org.joda.time.Hours hours25 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod26 = hours25.toMutablePeriod();
        org.joda.time.Hours hours27 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours28 = hours25.minus(hours27);
        org.joda.time.DurationFieldType durationFieldType29 = null;
        int int30 = hours25.get(durationFieldType29);
        org.joda.time.Hours hours32 = hours25.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval33 = null;
        org.joda.time.Hours hours34 = org.joda.time.Hours.hoursIn(readableInterval33);
        int int35 = hours32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours34);
        boolean boolean36 = hours21.isGreaterThan(hours32);
        org.joda.time.Hours hours38 = hours21.multipliedBy(16);
        org.joda.time.MutablePeriod mutablePeriod39 = hours38.toMutablePeriod();
        java.lang.String str40 = hours38.toString();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(mutablePeriod39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "PT128H" + "'", str40, "PT128H");
    }

    @Test
    public void test0535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0535");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours6 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        org.joda.time.Hours hours8 = hours6.multipliedBy((int) (byte) 10);
        org.joda.time.Hours hours9 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod10 = hours9.toMutablePeriod();
        org.joda.time.Hours hours11 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours12 = hours9.minus(hours11);
        org.joda.time.Hours hours14 = hours11.plus(8);
        org.joda.time.Hours hours15 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = hours15.get(durationFieldType16);
        org.joda.time.DurationFieldType durationFieldType18 = hours15.getFieldType();
        boolean boolean19 = hours14.isSupported(durationFieldType18);
        int int20 = hours6.get(durationFieldType18);
        org.joda.time.DurationFieldType durationFieldType21 = hours6.getFieldType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 7 + "'", int20 == 7);
        org.junit.Assert.assertNotNull(durationFieldType21);
    }

    @Test
    public void test0536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0536");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours11 = hours8.minus(hours10);
        org.joda.time.DurationFieldType durationFieldType12 = null;
        boolean boolean13 = hours10.isSupported(durationFieldType12);
        org.joda.time.Hours hours14 = hours7.minus(hours10);
        org.joda.time.Period period15 = hours7.toPeriod();
        org.joda.time.Duration duration16 = hours7.toStandardDuration();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(duration16);
    }

    @Test
    public void test0537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0537");
        org.joda.time.Hours hours0 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours1 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = hours1.get(durationFieldType2);
        boolean boolean4 = hours0.equals((java.lang.Object) durationFieldType2);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod7 = hours6.toMutablePeriod();
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours9 = hours6.minus(hours8);
        int int10 = hours5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours8);
        org.joda.time.Hours hours12 = hours8.multipliedBy(0);
        org.joda.time.Hours hours13 = hours0.plus(hours12);
        org.joda.time.Hours hours15 = hours12.plus(15);
        org.joda.time.Hours hours17 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours19 = hours17.multipliedBy((int) (byte) 100);
        org.joda.time.Hours hours20 = hours17.negated();
        org.joda.time.Hours hours21 = hours12.minus(hours17);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
    }

    @Test
    public void test0538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0538");
        org.joda.time.Hours hours0 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours1 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = hours1.get(durationFieldType2);
        boolean boolean4 = hours0.equals((java.lang.Object) durationFieldType2);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod7 = hours6.toMutablePeriod();
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours9 = hours6.minus(hours8);
        int int10 = hours5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours8);
        org.joda.time.Hours hours12 = hours8.multipliedBy(0);
        org.joda.time.Hours hours13 = hours0.plus(hours12);
        org.joda.time.Hours hours15 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod17 = hours16.toMutablePeriod();
        org.joda.time.Hours hours18 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours19 = hours16.minus(hours18);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = hours16.get(durationFieldType20);
        org.joda.time.Hours hours23 = hours16.minus((int) (short) 0);
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod25 = hours24.toMutablePeriod();
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours27 = hours24.minus(hours26);
        org.joda.time.DurationFieldType durationFieldType28 = null;
        boolean boolean29 = hours26.isSupported(durationFieldType28);
        org.joda.time.Hours hours30 = hours23.minus(hours26);
        org.joda.time.Hours hours31 = hours15.plus(hours30);
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod33 = hours32.toMutablePeriod();
        org.joda.time.Hours hours34 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours35 = hours32.minus(hours34);
        boolean boolean36 = hours30.isGreaterThan(hours34);
        org.joda.time.Hours hours37 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours30);
        int int38 = hours12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours30);
        org.joda.time.Hours hours39 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod40 = hours39.toMutablePeriod();
        org.joda.time.Hours hours41 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours42 = hours39.minus(hours41);
        org.joda.time.DurationFieldType durationFieldType43 = null;
        int int44 = hours39.get(durationFieldType43);
        org.joda.time.Hours hours46 = hours39.multipliedBy(1);
        int int47 = hours46.getHours();
        org.joda.time.DurationFieldType durationFieldType48 = hours46.getFieldType();
        org.joda.time.Hours hours49 = hours30.plus(hours46);
        org.joda.time.Hours hours51 = hours46.dividedBy((int) (short) -1);
        org.joda.time.Period period52 = hours51.toPeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(mutablePeriod40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 7 + "'", int47 == 7);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(period52);
    }

    @Test
    public void test0539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0539");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(100);
        org.joda.time.Period period2 = hours1.toPeriod();
        java.lang.Class<?> wildcardClass3 = period2.getClass();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0540");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        int int10 = hours0.size();
        java.lang.Class<?> wildcardClass11 = hours0.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0541");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.multipliedBy(1);
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours11 = hours8.minus(hours10);
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = hours8.get(durationFieldType12);
        org.joda.time.Hours hours15 = hours8.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Hours hours17 = org.joda.time.Hours.hoursIn(readableInterval16);
        int int18 = hours15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours17);
        org.joda.time.Hours hours19 = hours0.minus(hours15);
        org.joda.time.Hours hours20 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours21 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod22 = hours21.toMutablePeriod();
        org.joda.time.Hours hours23 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours24 = hours21.minus(hours23);
        int int25 = hours20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours23);
        org.joda.time.DurationFieldType durationFieldType26 = null;
        boolean boolean27 = hours20.isSupported(durationFieldType26);
        org.joda.time.Hours hours29 = hours20.minus((int) (short) -1);
        boolean boolean30 = hours19.isLessThan(hours20);
        org.joda.time.MutablePeriod mutablePeriod31 = hours19.toMutablePeriod();
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours33 = org.joda.time.Hours.EIGHT;
        int int35 = hours33.getValue((int) (short) 0);
        org.joda.time.Hours hours36 = hours32.minus(hours33);
        org.joda.time.Hours hours37 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod38 = hours37.toMutablePeriod();
        org.joda.time.Hours hours39 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours40 = hours37.minus(hours39);
        org.joda.time.Hours hours42 = hours39.plus(8);
        org.joda.time.Hours hours43 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType44 = null;
        int int45 = hours43.get(durationFieldType44);
        org.joda.time.DurationFieldType durationFieldType46 = hours43.getFieldType();
        boolean boolean47 = hours42.isSupported(durationFieldType46);
        boolean boolean48 = hours32.isSupported(durationFieldType46);
        org.joda.time.Hours hours49 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period50 = hours49.toPeriod();
        org.joda.time.Hours hours52 = hours49.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod53 = hours52.toMutablePeriod();
        org.joda.time.Hours hours54 = org.joda.time.Hours.THREE;
        org.joda.time.Period period55 = hours54.toPeriod();
        org.joda.time.Hours hours57 = hours54.plus((int) (byte) -1);
        org.joda.time.Hours hours58 = hours52.minus(hours54);
        org.joda.time.Hours hours59 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod60 = hours59.toMutablePeriod();
        org.joda.time.Hours hours61 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours62 = hours59.minus(hours61);
        org.joda.time.DurationFieldType durationFieldType63 = null;
        int int64 = hours59.get(durationFieldType63);
        org.joda.time.Hours hours66 = hours59.minus((int) (short) 0);
        org.joda.time.Hours hours67 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType68 = null;
        int int69 = hours67.get(durationFieldType68);
        org.joda.time.DurationFieldType durationFieldType70 = hours67.getFieldType();
        int int71 = hours66.get(durationFieldType70);
        int int72 = hours54.get(durationFieldType70);
        boolean boolean73 = hours32.equals((java.lang.Object) hours54);
        boolean boolean74 = hours19.isLessThan(hours54);
        org.joda.time.Hours hours76 = hours54.multipliedBy((int) (short) -1);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 8 + "'", int35 == 8);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(durationFieldType46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(mutablePeriod53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(mutablePeriod60);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(durationFieldType70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 7 + "'", int71 == 7);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 3 + "'", int72 == 3);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(hours76);
    }

    @Test
    public void test0542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0542");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours6 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = hours0.get(durationFieldType7);
        org.joda.time.Hours hours9 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod10 = hours9.toMutablePeriod();
        org.joda.time.Hours hours11 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours12 = hours9.minus(hours11);
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = hours9.get(durationFieldType13);
        org.joda.time.Hours hours16 = hours9.minus((int) (short) 0);
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod18 = hours17.toMutablePeriod();
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours20 = hours17.minus(hours19);
        org.joda.time.DurationFieldType durationFieldType21 = null;
        boolean boolean22 = hours19.isSupported(durationFieldType21);
        org.joda.time.Hours hours23 = hours16.minus(hours19);
        org.joda.time.Period period24 = hours16.toPeriod();
        org.joda.time.Hours hours25 = hours0.plus(hours16);
        org.joda.time.Hours hours27 = hours16.minus((-8));
        int int29 = hours16.getValue(0);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 7 + "'", int29 == 7);
    }

    @Test
    public void test0543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0543");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(0);
        org.joda.time.Hours hours3 = hours1.minus((int) ' ');
        org.joda.time.Period period4 = hours3.toPeriod();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(period4);
    }

    @Test
    public void test0544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0544");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.PeriodType periodType6 = hours0.getPeriodType();
        org.joda.time.Hours hours8 = org.joda.time.Hours.parseHours("PT7H");
        boolean boolean9 = hours0.isLessThan(hours8);
        org.joda.time.Hours hours10 = org.joda.time.Hours.ZERO;
        boolean boolean11 = hours8.isGreaterThan(hours10);
        org.joda.time.Hours hours12 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours13 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = hours13.get(durationFieldType14);
        boolean boolean16 = hours12.equals((java.lang.Object) durationFieldType14);
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        int int22 = hours17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours20);
        org.joda.time.Hours hours24 = hours20.multipliedBy(0);
        org.joda.time.Hours hours25 = hours12.plus(hours24);
        org.joda.time.DurationFieldType durationFieldType26 = hours25.getFieldType();
        int int27 = hours8.get(durationFieldType26);
        int int28 = hours8.getHours();
        org.joda.time.Hours hours29 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours30 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod31 = hours30.toMutablePeriod();
        org.joda.time.Hours hours32 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours33 = hours30.minus(hours32);
        int int34 = hours29.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours32);
        org.joda.time.DurationFieldType durationFieldType35 = null;
        boolean boolean36 = hours29.isSupported(durationFieldType35);
        org.joda.time.Hours hours38 = hours29.minus((int) (short) -1);
        org.joda.time.Hours hours39 = hours38.negated();
        org.joda.time.Hours hours41 = hours39.plus(16);
        org.joda.time.DurationFieldType durationFieldType42 = hours39.getFieldType();
        boolean boolean43 = hours8.isSupported(durationFieldType42);
        org.joda.time.Hours hours45 = hours8.multipliedBy((int) (short) -1);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 7 + "'", int27 == 7);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 7 + "'", int28 == 7);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(hours45);
    }

    @Test
    public void test0545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0545");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(100);
        org.joda.time.Period period2 = hours1.toPeriod();
        org.joda.time.Hours hours4 = hours1.minus(8);
        org.joda.time.Hours hours5 = org.joda.time.Hours.THREE;
        org.joda.time.Period period6 = hours5.toPeriod();
        org.joda.time.Hours hours8 = hours5.plus((int) (byte) -1);
        org.joda.time.Hours hours10 = hours8.minus((int) (byte) 100);
        boolean boolean11 = hours1.equals((java.lang.Object) hours10);
        org.joda.time.MutablePeriod mutablePeriod12 = hours1.toMutablePeriod();
        org.joda.time.Hours hours14 = org.joda.time.Hours.parseHours("PT16H");
        org.joda.time.Hours hours15 = hours1.minus(hours14);
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod17 = hours16.toMutablePeriod();
        org.joda.time.Hours hours18 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours19 = hours16.minus(hours18);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = hours16.get(durationFieldType20);
        org.joda.time.Hours hours23 = hours16.minus((int) (short) 0);
        org.joda.time.Hours hours24 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType25 = null;
        int int26 = hours24.get(durationFieldType25);
        org.joda.time.DurationFieldType durationFieldType27 = hours24.getFieldType();
        int int28 = hours23.get(durationFieldType27);
        org.joda.time.Hours hours29 = hours23.negated();
        org.joda.time.PeriodType periodType30 = hours29.getPeriodType();
        org.joda.time.Hours hours31 = hours15.minus(hours29);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 7 + "'", int28 == 7);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(hours31);
    }

    @Test
    public void test0546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0546");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.PeriodType periodType10 = hours0.getPeriodType();
        org.joda.time.Hours hours11 = org.joda.time.Hours.EIGHT;
        int int13 = hours11.getValue((int) (short) 0);
        org.joda.time.Hours hours14 = hours0.minus(hours11);
        org.joda.time.Hours hours16 = hours0.plus(7);
        org.joda.time.Hours hours17 = hours16.negated();
        org.joda.time.Hours hours19 = hours17.multipliedBy(12);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 8 + "'", int13 == 8);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours19);
    }

    @Test
    public void test0547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0547");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        int int4 = hours2.getValue((int) (short) 0);
        org.joda.time.Hours hours5 = hours1.minus(hours2);
        org.joda.time.Hours hours6 = hours0.minus(hours1);
        java.lang.String str7 = hours1.toString();
        org.joda.time.Hours hours9 = hours1.plus(8);
        int int10 = hours9.getHours();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 8 + "'", int4 == 8);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT7H" + "'", str7, "PT7H");
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 15 + "'", int10 == 15);
    }

    @Test
    public void test0548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0548");
        org.joda.time.Hours hours0 = org.joda.time.Hours.TWO;
        org.joda.time.Hours hours1 = org.joda.time.Hours.MAX_VALUE;
        int int2 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours1);
        org.joda.time.Hours hours3 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours3.get(durationFieldType4);
        org.joda.time.DurationFieldType durationFieldType6 = hours3.getFieldType();
        org.joda.time.DurationFieldType durationFieldType7 = hours3.getFieldType();
        boolean boolean8 = hours1.isSupported(durationFieldType7);
        org.joda.time.Period period9 = hours1.toPeriod();
        org.joda.time.Period period10 = hours1.toPeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period10);
    }

    @Test
    public void test0549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0549");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((-1));
        org.joda.time.Hours hours2 = hours1.negated();
        org.joda.time.MutablePeriod mutablePeriod3 = hours1.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        int int7 = hours5.getValue((int) (short) 0);
        org.joda.time.Hours hours8 = hours4.minus(hours5);
        boolean boolean10 = hours5.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours11 = null;
        org.joda.time.Hours hours12 = hours5.minus(hours11);
        org.joda.time.Hours hours13 = hours12.negated();
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod15 = hours14.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours17 = hours14.minus(hours16);
        org.joda.time.Duration duration18 = hours14.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod19 = hours14.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        int int22 = hours20.getValue((int) (short) 0);
        java.lang.String str23 = hours20.toString();
        boolean boolean24 = hours14.isGreaterThan(hours20);
        org.joda.time.Hours hours26 = hours20.minus(10);
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours28 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod29 = hours28.toMutablePeriod();
        org.joda.time.Hours hours30 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours31 = hours28.minus(hours30);
        int int32 = hours27.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours30);
        org.joda.time.Hours hours33 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours27);
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = hours27.get(durationFieldType34);
        boolean boolean36 = hours26.equals((java.lang.Object) hours27);
        java.lang.String str37 = hours26.toString();
        org.joda.time.DurationFieldType durationFieldType39 = hours26.getFieldType(0);
        boolean boolean40 = hours12.isGreaterThan(hours26);
        int int41 = hours12.getHours();
        org.joda.time.Hours hours42 = hours1.plus(hours12);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 8 + "'", int7 == 8);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 8 + "'", int22 == 8);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "PT8H" + "'", str23, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "PT-2H" + "'", str37, "PT-2H");
        org.junit.Assert.assertNotNull(durationFieldType39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 8 + "'", int41 == 8);
        org.junit.Assert.assertNotNull(hours42);
    }

    @Test
    public void test0550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0550");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        java.lang.String str5 = hours0.toString();
        org.joda.time.Hours hours7 = hours0.minus((-6));
        org.joda.time.Hours hours9 = hours0.multipliedBy(7);
        org.joda.time.Hours hours11 = hours9.minus(2147483647);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds12 = hours11.toStandardSeconds();
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: -2147483598 * 3600");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "PT7H" + "'", str5, "PT7H");
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours11);
    }

    @Test
    public void test0551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0551");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours7 = hours3.multipliedBy(0);
        org.joda.time.Duration duration8 = hours3.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod9 = hours3.toMutablePeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
    }

    @Test
    public void test0552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0552");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        boolean boolean6 = hours1.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours7 = null;
        org.joda.time.Hours hours8 = hours1.minus(hours7);
        org.joda.time.Hours hours9 = hours8.negated();
        java.lang.String str10 = hours9.toString();
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        int int14 = hours12.getValue((int) (short) 0);
        org.joda.time.Hours hours15 = hours11.minus(hours12);
        boolean boolean17 = hours12.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours18 = null;
        org.joda.time.Hours hours19 = hours12.minus(hours18);
        org.joda.time.Hours hours20 = hours19.negated();
        org.joda.time.Hours hours21 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours19);
        org.joda.time.Hours hours22 = hours9.minus(hours21);
        org.joda.time.ReadableInterval readableInterval23 = null;
        org.joda.time.Hours hours24 = org.joda.time.Hours.hoursIn(readableInterval23);
        org.joda.time.DurationFieldType durationFieldType25 = hours24.getFieldType();
        org.joda.time.Hours hours27 = hours24.dividedBy((int) (byte) 10);
        org.joda.time.Hours hours29 = hours24.plus((int) (byte) 1);
        org.joda.time.Hours hours31 = hours24.dividedBy(100);
        org.joda.time.Hours hours32 = hours22.plus(hours24);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT-8H" + "'", str10, "PT-8H");
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 8 + "'", int14 == 8);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
    }

    @Test
    public void test0553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0553");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((int) (short) 0);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.multipliedBy(1);
        org.joda.time.Hours hours10 = org.joda.time.Hours.ONE;
        int int11 = hours9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours10);
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        boolean boolean13 = hours9.equals((java.lang.Object) hours12);
        org.joda.time.Hours hours14 = hours1.minus(hours9);
        int int15 = hours14.size();
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod18 = hours17.toMutablePeriod();
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours20 = hours17.minus(hours19);
        int int21 = hours16.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours19);
        org.joda.time.Hours hours23 = hours16.minus((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod24 = hours16.toMutablePeriod();
        int int25 = hours16.getHours();
        org.joda.time.Hours hours26 = hours14.plus(hours16);
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours28 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod29 = hours28.toMutablePeriod();
        org.joda.time.Hours hours30 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours31 = hours28.minus(hours30);
        int int32 = hours27.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours30);
        org.joda.time.Hours hours34 = hours27.minus((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod35 = hours27.toMutablePeriod();
        org.joda.time.Hours hours36 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours37 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod38 = hours37.toMutablePeriod();
        org.joda.time.Hours hours39 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours40 = hours37.minus(hours39);
        int int41 = hours36.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours39);
        org.joda.time.DurationFieldType durationFieldType42 = null;
        boolean boolean43 = hours36.isSupported(durationFieldType42);
        org.joda.time.Hours hours45 = hours36.minus((int) (short) -1);
        org.joda.time.Hours hours46 = hours45.negated();
        org.joda.time.Period period47 = hours45.toPeriod();
        boolean boolean48 = hours27.equals((java.lang.Object) hours45);
        org.joda.time.Hours hours49 = hours14.plus(hours27);
        org.joda.time.DurationFieldType durationFieldType50 = hours27.getFieldType();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 7 + "'", int25 == 7);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(durationFieldType50);
    }

    @Test
    public void test0554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0554");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        boolean boolean5 = hours2.isSupported(durationFieldType4);
        org.joda.time.Period period6 = hours2.toPeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(period6);
    }

    @Test
    public void test0555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0555");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period1 = hours0.toPeriod();
        org.joda.time.Hours hours3 = hours0.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.THREE;
        org.joda.time.Period period6 = hours5.toPeriod();
        org.joda.time.Hours hours8 = hours5.plus((int) (byte) -1);
        org.joda.time.Hours hours9 = hours3.minus(hours5);
        org.joda.time.Hours hours11 = org.joda.time.Hours.hours((int) '4');
        org.joda.time.DurationFieldType durationFieldType12 = hours11.getFieldType();
        org.joda.time.PeriodType periodType13 = hours11.getPeriodType();
        org.joda.time.Hours hours14 = hours9.plus(hours11);
        org.joda.time.DurationFieldType durationFieldType15 = hours14.getFieldType();
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod18 = hours17.toMutablePeriod();
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours20 = hours17.minus(hours19);
        int int21 = hours16.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours19);
        org.joda.time.Hours hours22 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours16);
        org.joda.time.Hours hours23 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod24 = hours23.toMutablePeriod();
        org.joda.time.Hours hours25 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours26 = hours23.minus(hours25);
        org.joda.time.Hours hours28 = hours25.plus(8);
        org.joda.time.Hours hours29 = hours16.minus(hours28);
        boolean boolean30 = hours14.equals((java.lang.Object) hours28);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test0556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0556");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(100);
        org.joda.time.Period period2 = hours1.toPeriod();
        org.joda.time.Hours hours4 = hours1.minus(8);
        org.joda.time.Hours hours5 = org.joda.time.Hours.THREE;
        org.joda.time.Period period6 = hours5.toPeriod();
        org.joda.time.Hours hours8 = hours5.plus((int) (byte) -1);
        org.joda.time.Hours hours10 = hours8.minus((int) (byte) 100);
        boolean boolean11 = hours1.equals((java.lang.Object) hours10);
        org.joda.time.MutablePeriod mutablePeriod12 = hours1.toMutablePeriod();
        org.joda.time.Hours hours14 = org.joda.time.Hours.parseHours("PT16H");
        org.joda.time.Hours hours15 = hours1.minus(hours14);
        org.joda.time.Duration duration16 = hours15.toStandardDuration();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(duration16);
    }

    @Test
    public void test0557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0557");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours7 = hours3.multipliedBy(0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours7);
        org.joda.time.Duration duration9 = hours8.toStandardDuration();
        org.joda.time.Hours hours10 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours8);
        org.joda.time.Hours hours12 = hours8.multipliedBy(700);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        int int17 = hours15.getValue((int) (short) 0);
        org.joda.time.Hours hours18 = hours14.minus(hours15);
        org.joda.time.Hours hours19 = hours13.minus(hours14);
        org.joda.time.Hours hours21 = hours14.multipliedBy((int) (byte) 10);
        org.joda.time.MutablePeriod mutablePeriod22 = hours21.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType23 = hours21.getFieldType();
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours25 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod26 = hours25.toMutablePeriod();
        org.joda.time.Hours hours27 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours28 = hours25.minus(hours27);
        int int29 = hours24.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours27);
        org.joda.time.MutablePeriod mutablePeriod30 = hours24.toMutablePeriod();
        org.joda.time.Hours hours32 = hours24.multipliedBy((int) (byte) 100);
        int int33 = hours21.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours24);
        boolean boolean34 = hours12.isLessThan(hours21);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 8 + "'", int17 == 8);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    }

    @Test
    public void test0558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0558");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.Hours hours10 = hours9.negated();
        org.joda.time.Duration duration11 = hours10.toStandardDuration();
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod14 = hours13.toMutablePeriod();
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours16 = hours13.minus(hours15);
        int int17 = hours12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours15);
        org.joda.time.Hours hours18 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours12);
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        org.joda.time.Hours hours24 = hours21.plus(8);
        org.joda.time.Hours hours25 = hours12.minus(hours24);
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod28 = hours27.toMutablePeriod();
        org.joda.time.Hours hours29 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours30 = hours27.minus(hours29);
        int int31 = hours26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours29);
        org.joda.time.DurationFieldType durationFieldType32 = null;
        boolean boolean33 = hours26.isSupported(durationFieldType32);
        org.joda.time.Hours hours35 = hours26.minus((int) (short) -1);
        org.joda.time.Hours hours36 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod37 = hours36.toMutablePeriod();
        org.joda.time.Hours hours38 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours39 = hours36.minus(hours38);
        org.joda.time.Hours hours41 = hours38.plus(8);
        org.joda.time.Hours hours42 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType43 = null;
        int int44 = hours42.get(durationFieldType43);
        org.joda.time.DurationFieldType durationFieldType45 = hours42.getFieldType();
        boolean boolean46 = hours41.isSupported(durationFieldType45);
        int int47 = hours35.get(durationFieldType45);
        int int48 = hours24.get(durationFieldType45);
        int int49 = hours10.get(durationFieldType45);
        org.joda.time.DurationFieldType durationFieldType50 = hours10.getFieldType();
        org.joda.time.Hours hours51 = org.joda.time.Hours.ONE;
        int int52 = hours51.getHours();
        org.joda.time.Hours hours54 = hours51.plus(10);
        org.joda.time.Hours hours55 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod56 = hours55.toMutablePeriod();
        org.joda.time.Hours hours57 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours58 = hours55.minus(hours57);
        org.joda.time.Duration duration59 = hours55.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod60 = hours55.toMutablePeriod();
        org.joda.time.Hours hours61 = org.joda.time.Hours.EIGHT;
        int int63 = hours61.getValue((int) (short) 0);
        java.lang.String str64 = hours61.toString();
        boolean boolean65 = hours55.isGreaterThan(hours61);
        org.joda.time.Hours hours67 = hours61.minus(10);
        org.joda.time.Hours hours68 = hours61.negated();
        org.joda.time.Hours hours70 = hours68.plus((int) (byte) 0);
        org.joda.time.DurationFieldType durationFieldType72 = hours68.getFieldType(0);
        boolean boolean73 = hours51.equals((java.lang.Object) durationFieldType72);
        boolean boolean74 = hours10.isLessThan(hours51);
        org.joda.time.Hours hours76 = org.joda.time.Hours.hours(0);
        org.joda.time.Hours hours78 = hours76.minus((int) ' ');
        org.joda.time.Hours hours80 = hours78.dividedBy((int) (short) -1);
        org.joda.time.Hours hours81 = hours10.plus(hours80);
        java.lang.Object obj82 = null;
        boolean boolean83 = hours80.equals(obj82);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 8 + "'", int47 == 8);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-8) + "'", int49 == (-8));
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(mutablePeriod56);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertNotNull(mutablePeriod60);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 8 + "'", int63 == 8);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "PT8H" + "'", str64, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertNotNull(hours70);
        org.junit.Assert.assertNotNull(durationFieldType72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(hours76);
        org.junit.Assert.assertNotNull(hours78);
        org.junit.Assert.assertNotNull(hours80);
        org.junit.Assert.assertNotNull(hours81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test0559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0559");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours3 = hours1.multipliedBy((int) (byte) 100);
        org.joda.time.Hours hours4 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod6 = hours5.toMutablePeriod();
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours8 = hours5.minus(hours7);
        int int9 = hours4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours7);
        org.joda.time.DurationFieldType durationFieldType10 = null;
        boolean boolean11 = hours4.isSupported(durationFieldType10);
        org.joda.time.Hours hours13 = hours4.minus((int) (short) -1);
        org.joda.time.PeriodType periodType14 = hours4.getPeriodType();
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        int int17 = hours15.getValue((int) (short) 0);
        org.joda.time.Hours hours18 = hours4.minus(hours15);
        org.joda.time.Hours hours19 = hours1.plus(hours18);
        org.joda.time.Period period20 = hours1.toPeriod();
        java.lang.Class<?> wildcardClass21 = period20.getClass();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 8 + "'", int17 == 8);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0560");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours12 = hours6.minus(10);
        java.lang.String str13 = hours12.toString();
        org.joda.time.Hours hours15 = hours12.plus(12);
        java.lang.String str16 = hours15.toString();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "PT-2H" + "'", str13, "PT-2H");
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT10H" + "'", str16, "PT10H");
    }

    @Test
    public void test0561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0561");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((int) (short) 0);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.multipliedBy(1);
        org.joda.time.Hours hours10 = org.joda.time.Hours.ONE;
        int int11 = hours9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours10);
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        boolean boolean13 = hours9.equals((java.lang.Object) hours12);
        org.joda.time.Hours hours14 = hours1.minus(hours9);
        java.lang.String str15 = hours14.toString();
        int int16 = hours14.getHours();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "PT-7H" + "'", str15, "PT-7H");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-7) + "'", int16 == (-7));
    }

    @Test
    public void test0562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0562");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours12 = hours6.minus(10);
        org.joda.time.Hours hours13 = hours6.negated();
        org.joda.time.Hours hours15 = hours13.plus((int) (byte) 0);
        java.lang.String str16 = hours13.toString();
        org.joda.time.Hours hours17 = hours13.negated();
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        int int23 = hours18.get(durationFieldType22);
        org.joda.time.Hours hours25 = hours18.minus((int) (short) 0);
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod27 = hours26.toMutablePeriod();
        org.joda.time.Hours hours28 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours29 = hours26.minus(hours28);
        org.joda.time.DurationFieldType durationFieldType30 = null;
        boolean boolean31 = hours28.isSupported(durationFieldType30);
        org.joda.time.Hours hours32 = hours25.minus(hours28);
        org.joda.time.Hours hours33 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours34 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod35 = hours34.toMutablePeriod();
        org.joda.time.Hours hours36 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours37 = hours34.minus(hours36);
        int int38 = hours33.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours36);
        org.joda.time.DurationFieldType durationFieldType39 = null;
        boolean boolean40 = hours33.isSupported(durationFieldType39);
        org.joda.time.Hours hours42 = hours33.minus((int) (short) -1);
        org.joda.time.PeriodType periodType43 = hours33.getPeriodType();
        org.joda.time.Hours hours44 = org.joda.time.Hours.EIGHT;
        int int46 = hours44.getValue((int) (short) 0);
        org.joda.time.Hours hours47 = hours33.minus(hours44);
        org.joda.time.Hours hours49 = hours33.plus(7);
        org.joda.time.Hours hours50 = hours32.minus(hours49);
        org.joda.time.Hours hours52 = org.joda.time.Hours.hours((int) '4');
        org.joda.time.DurationFieldType durationFieldType53 = hours52.getFieldType();
        org.joda.time.Period period54 = hours52.toPeriod();
        org.joda.time.Period period55 = hours52.toPeriod();
        org.joda.time.Hours hours56 = hours50.plus(hours52);
        boolean boolean57 = hours13.isGreaterThan(hours50);
        org.joda.time.Hours hours59 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours61 = hours59.multipliedBy((int) (byte) 100);
        boolean boolean62 = hours13.isLessThan(hours61);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType64 = hours61.getFieldType((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT-8H" + "'", str16, "PT-8H");
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 8 + "'", int46 == 8);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(durationFieldType53);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
    }

    @Test
    public void test0563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0563");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = hours0.get(durationFieldType1);
        org.joda.time.Hours hours4 = hours0.dividedBy(100);
        int int5 = hours0.size();
        org.joda.time.Duration duration6 = hours0.toStandardDuration();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(duration6);
    }

    @Test
    public void test0564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0564");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours7 = hours0.minus((int) 'a');
        org.joda.time.Hours hours8 = org.joda.time.Hours.ZERO;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        boolean boolean10 = hours7.equals((java.lang.Object) hours8);
        org.joda.time.Hours hours12 = hours8.multipliedBy((int) (short) 100);
        org.joda.time.Duration duration13 = hours12.toStandardDuration();
        int int14 = hours12.size();
        // The following exception was thrown during execution in test generation
        try {
            int int16 = hours12.getValue(2);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
    }

    @Test
    public void test0565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0565");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours7 = hours3.multipliedBy(0);
        org.joda.time.Hours hours9 = org.joda.time.Hours.hours(0);
        org.joda.time.Duration duration10 = hours9.toStandardDuration();
        org.joda.time.Hours hours12 = hours9.multipliedBy((int) (short) 1);
        java.lang.String str13 = hours9.toString();
        int int14 = hours3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours9);
        org.joda.time.Hours hours16 = hours9.minus((int) (short) 0);
        java.lang.Class<?> wildcardClass17 = hours9.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "PT0H" + "'", str13, "PT0H");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0566");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((int) (short) 0);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.multipliedBy(1);
        org.joda.time.Hours hours10 = org.joda.time.Hours.ONE;
        int int11 = hours9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours10);
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        boolean boolean13 = hours9.equals((java.lang.Object) hours12);
        org.joda.time.Hours hours14 = hours1.minus(hours9);
        int int15 = hours14.size();
        // The following exception was thrown during execution in test generation
        try {
            int int17 = hours14.getValue(10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
    }

    @Test
    public void test0567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0567");
        org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT16H");
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours6 = hours3.minus(hours5);
        int int7 = hours2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours5);
        org.joda.time.MutablePeriod mutablePeriod8 = hours2.toMutablePeriod();
        org.joda.time.Hours hours9 = hours1.minus(hours2);
        org.joda.time.Hours hours10 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours12 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod14 = hours13.toMutablePeriod();
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours16 = hours13.minus(hours15);
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = hours13.get(durationFieldType17);
        org.joda.time.Hours hours20 = hours13.minus((int) (short) 0);
        org.joda.time.Hours hours21 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod22 = hours21.toMutablePeriod();
        org.joda.time.Hours hours23 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours24 = hours21.minus(hours23);
        org.joda.time.DurationFieldType durationFieldType25 = null;
        boolean boolean26 = hours23.isSupported(durationFieldType25);
        org.joda.time.Hours hours27 = hours20.minus(hours23);
        org.joda.time.Hours hours28 = hours12.plus(hours27);
        int int29 = hours10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours27);
        org.joda.time.Hours hours31 = hours27.plus((int) ' ');
        org.joda.time.PeriodType periodType32 = hours27.getPeriodType();
        org.joda.time.Hours hours34 = org.joda.time.Hours.hours((int) ' ');
        int int35 = hours27.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours34);
        boolean boolean36 = hours1.equals((java.lang.Object) int35);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test0568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0568");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Hours hours4 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        int int7 = hours5.getValue((int) (short) 0);
        org.joda.time.Hours hours8 = hours4.minus(hours5);
        org.joda.time.Hours hours9 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = hours9.get(durationFieldType10);
        org.joda.time.DurationFieldType durationFieldType12 = hours9.getFieldType();
        int int13 = hours4.get(durationFieldType12);
        boolean boolean14 = hours3.isSupported(durationFieldType12);
        org.joda.time.Hours hours15 = hours3.negated();
        int int16 = hours3.size();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 8 + "'", int7 == 8);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 7 + "'", int13 == 7);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
    }

    @Test
    public void test0569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0569");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(100);
        org.joda.time.Period period2 = hours1.toPeriod();
        org.joda.time.Hours hours4 = hours1.minus(8);
        org.joda.time.Hours hours5 = org.joda.time.Hours.THREE;
        org.joda.time.Period period6 = hours5.toPeriod();
        org.joda.time.Hours hours8 = hours5.plus((int) (byte) -1);
        org.joda.time.Hours hours10 = hours8.minus((int) (byte) 100);
        boolean boolean11 = hours1.equals((java.lang.Object) hours10);
        org.joda.time.MutablePeriod mutablePeriod12 = hours1.toMutablePeriod();
        org.joda.time.Hours hours14 = org.joda.time.Hours.parseHours("PT16H");
        org.joda.time.Hours hours15 = hours1.minus(hours14);
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod18 = hours17.toMutablePeriod();
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours20 = hours17.minus(hours19);
        int int21 = hours16.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours19);
        org.joda.time.MutablePeriod mutablePeriod22 = hours16.toMutablePeriod();
        org.joda.time.Hours hours24 = hours16.minus(7);
        org.joda.time.Hours hours26 = hours16.minus(700);
        org.joda.time.Hours hours27 = hours15.plus(hours26);
        // The following exception was thrown during execution in test generation
        try {
            int int29 = hours26.getValue((-8));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -8");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
    }

    @Test
    public void test0570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0570");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        boolean boolean6 = hours1.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours7 = null;
        org.joda.time.Hours hours8 = hours1.minus(hours7);
        org.joda.time.Hours hours9 = hours8.negated();
        org.joda.time.Hours hours10 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours8);
        int int11 = hours10.getHours();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 8 + "'", int11 == 8);
    }

    @Test
    public void test0571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0571");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = hours0.getFieldType();
        org.joda.time.Hours hours5 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        // The following exception was thrown during execution in test generation
        try {
            int int7 = hours5.getValue(700);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 700");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(hours5);
    }

    @Test
    public void test0572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0572");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.Hours hours10 = hours9.negated();
        org.joda.time.Duration duration11 = hours10.toStandardDuration();
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod14 = hours13.toMutablePeriod();
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours16 = hours13.minus(hours15);
        int int17 = hours12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours15);
        org.joda.time.Hours hours18 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours12);
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        org.joda.time.Hours hours24 = hours21.plus(8);
        org.joda.time.Hours hours25 = hours12.minus(hours24);
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod28 = hours27.toMutablePeriod();
        org.joda.time.Hours hours29 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours30 = hours27.minus(hours29);
        int int31 = hours26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours29);
        org.joda.time.DurationFieldType durationFieldType32 = null;
        boolean boolean33 = hours26.isSupported(durationFieldType32);
        org.joda.time.Hours hours35 = hours26.minus((int) (short) -1);
        org.joda.time.Hours hours36 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod37 = hours36.toMutablePeriod();
        org.joda.time.Hours hours38 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours39 = hours36.minus(hours38);
        org.joda.time.Hours hours41 = hours38.plus(8);
        org.joda.time.Hours hours42 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType43 = null;
        int int44 = hours42.get(durationFieldType43);
        org.joda.time.DurationFieldType durationFieldType45 = hours42.getFieldType();
        boolean boolean46 = hours41.isSupported(durationFieldType45);
        int int47 = hours35.get(durationFieldType45);
        int int48 = hours24.get(durationFieldType45);
        int int49 = hours10.get(durationFieldType45);
        org.joda.time.DurationFieldType durationFieldType50 = hours10.getFieldType();
        org.joda.time.Hours hours51 = org.joda.time.Hours.ONE;
        int int52 = hours51.getHours();
        org.joda.time.Hours hours54 = hours51.plus(10);
        org.joda.time.Hours hours55 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod56 = hours55.toMutablePeriod();
        org.joda.time.Hours hours57 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours58 = hours55.minus(hours57);
        org.joda.time.Duration duration59 = hours55.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod60 = hours55.toMutablePeriod();
        org.joda.time.Hours hours61 = org.joda.time.Hours.EIGHT;
        int int63 = hours61.getValue((int) (short) 0);
        java.lang.String str64 = hours61.toString();
        boolean boolean65 = hours55.isGreaterThan(hours61);
        org.joda.time.Hours hours67 = hours61.minus(10);
        org.joda.time.Hours hours68 = hours61.negated();
        org.joda.time.Hours hours70 = hours68.plus((int) (byte) 0);
        org.joda.time.DurationFieldType durationFieldType72 = hours68.getFieldType(0);
        boolean boolean73 = hours51.equals((java.lang.Object) durationFieldType72);
        boolean boolean74 = hours10.isLessThan(hours51);
        org.joda.time.Hours hours76 = org.joda.time.Hours.hours(0);
        org.joda.time.Hours hours78 = hours76.minus((int) ' ');
        org.joda.time.Hours hours80 = hours78.dividedBy((int) (short) -1);
        org.joda.time.Hours hours81 = hours10.plus(hours80);
        int int82 = hours80.getHours();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 8 + "'", int47 == 8);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-8) + "'", int49 == (-8));
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(mutablePeriod56);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertNotNull(mutablePeriod60);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 8 + "'", int63 == 8);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "PT8H" + "'", str64, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertNotNull(hours70);
        org.junit.Assert.assertNotNull(durationFieldType72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(hours76);
        org.junit.Assert.assertNotNull(hours78);
        org.junit.Assert.assertNotNull(hours80);
        org.junit.Assert.assertNotNull(hours81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 32 + "'", int82 == 32);
    }

    @Test
    public void test0573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0573");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours6 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        org.joda.time.Hours hours7 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod8 = hours7.toMutablePeriod();
        org.joda.time.Hours hours9 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours10 = hours7.minus(hours9);
        org.joda.time.Hours hours12 = hours9.plus(8);
        org.joda.time.Hours hours13 = hours0.minus(hours12);
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours15 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod16 = hours15.toMutablePeriod();
        org.joda.time.Hours hours17 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours18 = hours15.minus(hours17);
        int int19 = hours14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours17);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        boolean boolean21 = hours14.isSupported(durationFieldType20);
        org.joda.time.Hours hours23 = hours14.minus((int) (short) -1);
        org.joda.time.PeriodType periodType24 = hours14.getPeriodType();
        int int25 = hours14.getHours();
        org.joda.time.DurationFieldType durationFieldType27 = hours14.getFieldType((int) (short) 0);
        int int28 = hours12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours14);
        org.joda.time.Hours hours30 = hours14.multipliedBy((int) (byte) 1);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 7 + "'", int25 == 7);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(hours30);
    }

    @Test
    public void test0574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0574");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        boolean boolean22 = hours16.isGreaterThan(hours20);
        org.joda.time.Hours hours23 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours20);
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours25 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod26 = hours25.toMutablePeriod();
        org.joda.time.Hours hours27 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours28 = hours25.minus(hours27);
        int int29 = hours24.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours27);
        org.joda.time.MutablePeriod mutablePeriod30 = hours24.toMutablePeriod();
        org.joda.time.Hours hours32 = hours24.minus(7);
        boolean boolean33 = hours20.isLessThan(hours32);
        org.joda.time.Hours hours34 = hours20.negated();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(hours34);
    }

    @Test
    public void test0575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0575");
        org.joda.time.Hours hours0 = org.joda.time.Hours.TWO;
        org.joda.time.Hours hours1 = org.joda.time.Hours.MAX_VALUE;
        int int2 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours1);
        org.joda.time.Hours hours3 = hours0.negated();
        org.joda.time.Period period4 = hours0.toPeriod();
        org.joda.time.Hours hours5 = hours0.negated();
        int int6 = hours0.getHours();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
    }

    @Test
    public void test0576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0576");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(100);
        org.joda.time.Period period2 = hours1.toPeriod();
        org.joda.time.Hours hours4 = hours1.minus(8);
        org.joda.time.Hours hours5 = org.joda.time.Hours.THREE;
        org.joda.time.Period period6 = hours5.toPeriod();
        org.joda.time.Hours hours8 = hours5.plus((int) (byte) -1);
        org.joda.time.Hours hours10 = hours8.minus((int) (byte) 100);
        boolean boolean11 = hours1.equals((java.lang.Object) hours10);
        org.joda.time.MutablePeriod mutablePeriod12 = hours1.toMutablePeriod();
        org.joda.time.Hours hours14 = org.joda.time.Hours.parseHours("PT16H");
        org.joda.time.Hours hours15 = hours1.minus(hours14);
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod18 = hours17.toMutablePeriod();
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours20 = hours17.minus(hours19);
        int int21 = hours16.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours19);
        org.joda.time.MutablePeriod mutablePeriod22 = hours16.toMutablePeriod();
        org.joda.time.Hours hours24 = hours16.minus(7);
        org.joda.time.Hours hours26 = hours16.minus(700);
        org.joda.time.Hours hours27 = hours15.plus(hours26);
        org.joda.time.Period period28 = hours15.toPeriod();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(period28);
    }

    @Test
    public void test0577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0577");
        org.joda.time.Hours hours0 = org.joda.time.Hours.FIVE;
        java.lang.String str1 = hours0.toString();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "PT5H" + "'", str1, "PT5H");
    }

    @Test
    public void test0578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0578");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours7 = hours3.multipliedBy(0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours7);
        org.joda.time.Duration duration9 = hours8.toStandardDuration();
        org.joda.time.Hours hours10 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours8);
        org.joda.time.Hours hours12 = hours8.plus((int) (short) -1);
        org.joda.time.Hours hours13 = org.joda.time.Hours.TWO;
        org.joda.time.Hours hours14 = org.joda.time.Hours.MAX_VALUE;
        int int15 = hours13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours14);
        org.joda.time.Hours hours16 = hours13.negated();
        org.joda.time.Period period17 = hours13.toPeriod();
        org.joda.time.Hours hours18 = hours13.negated();
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours20 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod21 = hours20.toMutablePeriod();
        org.joda.time.Hours hours22 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours23 = hours20.minus(hours22);
        int int24 = hours19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours22);
        org.joda.time.Hours hours25 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours19);
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod27 = hours26.toMutablePeriod();
        org.joda.time.Hours hours28 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours29 = hours26.minus(hours28);
        org.joda.time.Hours hours31 = hours28.plus(8);
        org.joda.time.Hours hours32 = hours19.minus(hours31);
        org.joda.time.Hours hours33 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours34 = org.joda.time.Hours.EIGHT;
        int int36 = hours34.getValue((int) (short) 0);
        org.joda.time.Hours hours37 = hours33.minus(hours34);
        org.joda.time.Hours hours38 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod39 = hours38.toMutablePeriod();
        org.joda.time.Hours hours40 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours41 = hours38.minus(hours40);
        org.joda.time.Hours hours43 = hours40.plus(8);
        org.joda.time.Hours hours44 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType45 = null;
        int int46 = hours44.get(durationFieldType45);
        org.joda.time.DurationFieldType durationFieldType47 = hours44.getFieldType();
        boolean boolean48 = hours43.isSupported(durationFieldType47);
        boolean boolean49 = hours33.isSupported(durationFieldType47);
        org.joda.time.Hours hours50 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period51 = hours50.toPeriod();
        org.joda.time.Hours hours53 = hours50.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod54 = hours53.toMutablePeriod();
        org.joda.time.Hours hours55 = org.joda.time.Hours.THREE;
        org.joda.time.Period period56 = hours55.toPeriod();
        org.joda.time.Hours hours58 = hours55.plus((int) (byte) -1);
        org.joda.time.Hours hours59 = hours53.minus(hours55);
        org.joda.time.Hours hours60 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod61 = hours60.toMutablePeriod();
        org.joda.time.Hours hours62 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours63 = hours60.minus(hours62);
        org.joda.time.DurationFieldType durationFieldType64 = null;
        int int65 = hours60.get(durationFieldType64);
        org.joda.time.Hours hours67 = hours60.minus((int) (short) 0);
        org.joda.time.Hours hours68 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType69 = null;
        int int70 = hours68.get(durationFieldType69);
        org.joda.time.DurationFieldType durationFieldType71 = hours68.getFieldType();
        int int72 = hours67.get(durationFieldType71);
        int int73 = hours55.get(durationFieldType71);
        boolean boolean74 = hours33.equals((java.lang.Object) hours55);
        boolean boolean75 = hours31.equals((java.lang.Object) hours55);
        org.joda.time.Hours hours77 = hours55.plus(16);
        org.joda.time.Hours hours78 = hours18.plus(hours55);
        org.joda.time.Hours hours79 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours80 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours81 = org.joda.time.Hours.EIGHT;
        int int83 = hours81.getValue((int) (short) 0);
        org.joda.time.Hours hours84 = hours80.minus(hours81);
        org.joda.time.Hours hours85 = hours79.minus(hours80);
        java.lang.String str86 = hours80.toString();
        org.joda.time.DurationFieldType durationFieldType87 = hours80.getFieldType();
        boolean boolean88 = hours55.isSupported(durationFieldType87);
        int int89 = hours8.get(durationFieldType87);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 8 + "'", int36 == 8);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(mutablePeriod39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(mutablePeriod54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertNotNull(mutablePeriod61);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(durationFieldType71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 7 + "'", int72 == 7);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 3 + "'", int73 == 3);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(hours77);
        org.junit.Assert.assertNotNull(hours78);
        org.junit.Assert.assertNotNull(hours79);
        org.junit.Assert.assertNotNull(hours80);
        org.junit.Assert.assertNotNull(hours81);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 8 + "'", int83 == 8);
        org.junit.Assert.assertNotNull(hours84);
        org.junit.Assert.assertNotNull(hours85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "PT7H" + "'", str86, "PT7H");
        org.junit.Assert.assertNotNull(durationFieldType87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
    }

    @Test
    public void test0579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0579");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        boolean boolean6 = hours1.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours7 = null;
        org.joda.time.Hours hours8 = hours1.minus(hours7);
        java.lang.String str9 = hours8.toString();
        org.joda.time.Hours hours10 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours8);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod12 = hours11.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours14 = hours11.minus(hours13);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = hours11.get(durationFieldType15);
        org.joda.time.Hours hours18 = hours11.minus((int) (short) 0);
        int int19 = hours8.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours11);
        org.joda.time.Hours hours20 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours22 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours23 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod24 = hours23.toMutablePeriod();
        org.joda.time.Hours hours25 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours26 = hours23.minus(hours25);
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = hours23.get(durationFieldType27);
        org.joda.time.Hours hours30 = hours23.minus((int) (short) 0);
        org.joda.time.Hours hours31 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod32 = hours31.toMutablePeriod();
        org.joda.time.Hours hours33 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours34 = hours31.minus(hours33);
        org.joda.time.DurationFieldType durationFieldType35 = null;
        boolean boolean36 = hours33.isSupported(durationFieldType35);
        org.joda.time.Hours hours37 = hours30.minus(hours33);
        org.joda.time.Hours hours38 = hours22.plus(hours37);
        int int39 = hours20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours37);
        org.joda.time.MutablePeriod mutablePeriod40 = hours37.toMutablePeriod();
        org.joda.time.Duration duration41 = hours37.toStandardDuration();
        org.joda.time.Hours hours43 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours44 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod45 = hours44.toMutablePeriod();
        org.joda.time.Hours hours46 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours47 = hours44.minus(hours46);
        org.joda.time.DurationFieldType durationFieldType48 = null;
        int int49 = hours44.get(durationFieldType48);
        org.joda.time.Hours hours51 = hours44.minus((int) (short) 0);
        org.joda.time.Hours hours52 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod53 = hours52.toMutablePeriod();
        org.joda.time.Hours hours54 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours55 = hours52.minus(hours54);
        org.joda.time.DurationFieldType durationFieldType56 = null;
        boolean boolean57 = hours54.isSupported(durationFieldType56);
        org.joda.time.Hours hours58 = hours51.minus(hours54);
        org.joda.time.Hours hours59 = hours43.plus(hours58);
        org.joda.time.Hours hours60 = hours37.plus(hours43);
        org.joda.time.Hours hours62 = hours37.multipliedBy(9);
        org.joda.time.Hours hours63 = hours8.minus(hours62);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod40);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(mutablePeriod45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(mutablePeriod53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertNotNull(hours63);
    }

    @Test
    public void test0580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0580");
        org.joda.time.Hours hours0 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours1 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = hours1.get(durationFieldType2);
        boolean boolean4 = hours0.equals((java.lang.Object) durationFieldType2);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod7 = hours6.toMutablePeriod();
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours9 = hours6.minus(hours8);
        int int10 = hours5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours8);
        org.joda.time.Hours hours12 = hours8.multipliedBy(0);
        org.joda.time.Hours hours13 = hours0.plus(hours12);
        java.lang.String str14 = hours12.toString();
        int int16 = hours12.getValue(0);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "PT0H" + "'", str14, "PT0H");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }

    @Test
    public void test0581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0581");
        org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT5H");
        org.junit.Assert.assertNotNull(hours1);
    }

    @Test
    public void test0582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0582");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        int int9 = hours7.getValue((int) (short) 0);
        org.joda.time.Hours hours10 = hours6.minus(hours7);
        org.joda.time.Hours hours11 = hours5.minus(hours6);
        int int12 = hours5.size();
        org.joda.time.Duration duration13 = hours5.toStandardDuration();
        boolean boolean14 = hours1.isGreaterThan(hours5);
        org.joda.time.Hours hours15 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours17 = org.joda.time.Hours.EIGHT;
        int int19 = hours17.getValue((int) (short) 0);
        org.joda.time.Hours hours20 = hours16.minus(hours17);
        org.joda.time.Hours hours21 = hours15.minus(hours16);
        boolean boolean22 = hours1.equals((java.lang.Object) hours16);
        org.joda.time.Hours hours24 = org.joda.time.Hours.parseHours("PT-1H");
        org.joda.time.Hours hours26 = hours24.dividedBy(16);
        boolean boolean27 = hours16.isLessThan(hours24);
        org.joda.time.Hours hours28 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours29 = org.joda.time.Hours.EIGHT;
        int int31 = hours29.getValue((int) (short) 0);
        org.joda.time.Hours hours32 = hours28.minus(hours29);
        org.joda.time.Hours hours33 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours34 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours35 = org.joda.time.Hours.EIGHT;
        int int37 = hours35.getValue((int) (short) 0);
        org.joda.time.Hours hours38 = hours34.minus(hours35);
        org.joda.time.Hours hours39 = hours33.minus(hours34);
        int int40 = hours33.size();
        org.joda.time.Duration duration41 = hours33.toStandardDuration();
        boolean boolean42 = hours29.isGreaterThan(hours33);
        org.joda.time.Hours hours43 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours44 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours45 = org.joda.time.Hours.EIGHT;
        int int47 = hours45.getValue((int) (short) 0);
        org.joda.time.Hours hours48 = hours44.minus(hours45);
        org.joda.time.Hours hours49 = hours43.minus(hours44);
        boolean boolean50 = hours29.equals((java.lang.Object) hours44);
        org.joda.time.Hours hours51 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod52 = hours51.toMutablePeriod();
        org.joda.time.Hours hours53 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours54 = hours51.minus(hours53);
        org.joda.time.DurationFieldType durationFieldType55 = null;
        int int56 = hours51.get(durationFieldType55);
        org.joda.time.Hours hours58 = hours51.minus((int) (short) 0);
        org.joda.time.Hours hours59 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType60 = null;
        int int61 = hours59.get(durationFieldType60);
        org.joda.time.DurationFieldType durationFieldType62 = hours59.getFieldType();
        int int63 = hours58.get(durationFieldType62);
        org.joda.time.Hours hours64 = hours58.negated();
        boolean boolean65 = hours29.isGreaterThan(hours58);
        org.joda.time.Hours hours66 = hours16.plus(hours29);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8 + "'", int9 == 8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 8 + "'", int19 == 8);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 8 + "'", int31 == 8);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 8 + "'", int37 == 8);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 8 + "'", int47 == 8);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(mutablePeriod52);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(durationFieldType62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 7 + "'", int63 == 7);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(hours66);
    }

    @Test
    public void test0583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0583");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((-2));
        org.junit.Assert.assertNotNull(hours1);
    }

    @Test
    public void test0584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0584");
        org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT16H");
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours6 = hours3.minus(hours5);
        int int7 = hours2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours5);
        org.joda.time.MutablePeriod mutablePeriod8 = hours2.toMutablePeriod();
        org.joda.time.Hours hours9 = hours1.minus(hours2);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod12 = hours11.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours14 = hours11.minus(hours13);
        int int15 = hours10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours13);
        org.joda.time.Hours hours16 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours10);
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = hours10.get(durationFieldType17);
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        org.joda.time.DurationFieldType durationFieldType23 = null;
        int int24 = hours19.get(durationFieldType23);
        org.joda.time.Hours hours26 = hours19.minus((int) (short) 0);
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod28 = hours27.toMutablePeriod();
        org.joda.time.Hours hours29 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours30 = hours27.minus(hours29);
        org.joda.time.DurationFieldType durationFieldType31 = null;
        boolean boolean32 = hours29.isSupported(durationFieldType31);
        org.joda.time.Hours hours33 = hours26.minus(hours29);
        org.joda.time.Period period34 = hours26.toPeriod();
        org.joda.time.Hours hours35 = hours10.plus(hours26);
        int int36 = hours35.size();
        boolean boolean37 = hours9.isGreaterThan(hours35);
        org.joda.time.Period period38 = hours35.toPeriod();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(period38);
    }

    @Test
    public void test0585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0585");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(12);
        org.junit.Assert.assertNotNull(hours1);
    }

    @Test
    public void test0586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0586");
        org.joda.time.Hours hours0 = org.joda.time.Hours.EIGHT;
        int int1 = hours0.size();
        org.joda.time.Hours hours3 = hours0.dividedBy(100);
        org.joda.time.Hours hours4 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        int int7 = hours5.getValue((int) (short) 0);
        org.joda.time.Hours hours8 = hours4.minus(hours5);
        org.joda.time.Hours hours9 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours11 = org.joda.time.Hours.EIGHT;
        int int13 = hours11.getValue((int) (short) 0);
        org.joda.time.Hours hours14 = hours10.minus(hours11);
        org.joda.time.Hours hours15 = hours9.minus(hours10);
        int int16 = hours9.size();
        org.joda.time.Duration duration17 = hours9.toStandardDuration();
        boolean boolean18 = hours5.isGreaterThan(hours9);
        org.joda.time.MutablePeriod mutablePeriod19 = hours9.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType20 = hours9.getFieldType();
        org.joda.time.Hours hours21 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period22 = hours21.toPeriod();
        org.joda.time.Hours hours24 = hours21.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod25 = hours24.toMutablePeriod();
        org.joda.time.Hours hours26 = org.joda.time.Hours.THREE;
        org.joda.time.Period period27 = hours26.toPeriod();
        org.joda.time.Hours hours29 = hours26.plus((int) (byte) -1);
        org.joda.time.Hours hours30 = hours24.minus(hours26);
        org.joda.time.Hours hours31 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod32 = hours31.toMutablePeriod();
        org.joda.time.Hours hours33 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours34 = hours31.minus(hours33);
        org.joda.time.DurationFieldType durationFieldType35 = null;
        int int36 = hours31.get(durationFieldType35);
        org.joda.time.Hours hours38 = hours31.minus((int) (short) 0);
        org.joda.time.Hours hours39 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType40 = null;
        int int41 = hours39.get(durationFieldType40);
        org.joda.time.DurationFieldType durationFieldType42 = hours39.getFieldType();
        int int43 = hours38.get(durationFieldType42);
        int int44 = hours26.get(durationFieldType42);
        int int45 = hours9.get(durationFieldType42);
        boolean boolean46 = hours0.isLessThan(hours9);
        org.joda.time.Hours hours47 = org.joda.time.Hours.ONE;
        org.joda.time.Hours hours49 = hours47.plus(1);
        org.joda.time.Hours hours51 = hours47.dividedBy((-2));
        org.joda.time.Hours hours53 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours54 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod55 = hours54.toMutablePeriod();
        org.joda.time.Hours hours56 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours57 = hours54.minus(hours56);
        org.joda.time.DurationFieldType durationFieldType58 = null;
        int int59 = hours54.get(durationFieldType58);
        org.joda.time.Hours hours61 = hours54.minus((int) (short) 0);
        org.joda.time.Hours hours62 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod63 = hours62.toMutablePeriod();
        org.joda.time.Hours hours64 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours65 = hours62.minus(hours64);
        org.joda.time.DurationFieldType durationFieldType66 = null;
        boolean boolean67 = hours64.isSupported(durationFieldType66);
        org.joda.time.Hours hours68 = hours61.minus(hours64);
        org.joda.time.Hours hours69 = hours53.plus(hours68);
        org.joda.time.Hours hours70 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod71 = hours70.toMutablePeriod();
        org.joda.time.Hours hours72 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours73 = hours70.minus(hours72);
        boolean boolean74 = hours68.isGreaterThan(hours72);
        org.joda.time.Hours hours75 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours76 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours77 = org.joda.time.Hours.EIGHT;
        int int79 = hours77.getValue((int) (short) 0);
        org.joda.time.Hours hours80 = hours76.minus(hours77);
        org.joda.time.Hours hours81 = hours75.minus(hours76);
        org.joda.time.Hours hours83 = hours76.dividedBy(1);
        org.joda.time.Duration duration84 = hours76.toStandardDuration();
        boolean boolean85 = hours72.isGreaterThan(hours76);
        org.joda.time.Hours hours86 = hours72.negated();
        org.joda.time.Hours hours87 = hours86.negated();
        boolean boolean88 = hours47.isLessThan(hours86);
        org.joda.time.Hours hours90 = hours47.dividedBy(3);
        boolean boolean91 = hours9.isLessThan(hours47);
        org.joda.time.PeriodType periodType92 = hours9.getPeriodType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 8 + "'", int7 == 8);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 8 + "'", int13 == 8);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 7 + "'", int43 == 7);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 3 + "'", int44 == 3);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 6 + "'", int45 == 6);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(mutablePeriod55);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertNotNull(mutablePeriod63);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertNotNull(hours69);
        org.junit.Assert.assertNotNull(hours70);
        org.junit.Assert.assertNotNull(mutablePeriod71);
        org.junit.Assert.assertNotNull(hours72);
        org.junit.Assert.assertNotNull(hours73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(hours75);
        org.junit.Assert.assertNotNull(hours76);
        org.junit.Assert.assertNotNull(hours77);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 8 + "'", int79 == 8);
        org.junit.Assert.assertNotNull(hours80);
        org.junit.Assert.assertNotNull(hours81);
        org.junit.Assert.assertNotNull(hours83);
        org.junit.Assert.assertNotNull(duration84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(hours86);
        org.junit.Assert.assertNotNull(hours87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(hours90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(periodType92);
    }

    @Test
    public void test0587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0587");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours12 = hours6.minus(10);
        org.joda.time.Hours hours13 = hours6.negated();
        org.joda.time.Period period14 = hours6.toPeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(period14);
    }

    @Test
    public void test0588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0588");
        org.joda.time.Hours hours0 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours1 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = hours1.get(durationFieldType2);
        boolean boolean4 = hours0.equals((java.lang.Object) durationFieldType2);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod7 = hours6.toMutablePeriod();
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours9 = hours6.minus(hours8);
        int int10 = hours5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours8);
        org.joda.time.Hours hours12 = hours8.multipliedBy(0);
        org.joda.time.Hours hours13 = hours0.plus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = hours13.getFieldType();
        org.joda.time.Hours hours15 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod16 = hours15.toMutablePeriod();
        org.joda.time.Hours hours17 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours18 = hours15.minus(hours17);
        org.joda.time.Duration duration19 = hours15.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod20 = hours15.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        int int23 = hours21.getValue((int) (short) 0);
        java.lang.String str24 = hours21.toString();
        boolean boolean25 = hours15.isGreaterThan(hours21);
        org.joda.time.Hours hours27 = hours21.minus(10);
        org.joda.time.Hours hours28 = hours21.negated();
        org.joda.time.Hours hours30 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours31 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod32 = hours31.toMutablePeriod();
        org.joda.time.Hours hours33 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours34 = hours31.minus(hours33);
        org.joda.time.DurationFieldType durationFieldType35 = null;
        int int36 = hours31.get(durationFieldType35);
        org.joda.time.Hours hours38 = hours31.minus((int) (short) 0);
        org.joda.time.Hours hours39 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod40 = hours39.toMutablePeriod();
        org.joda.time.Hours hours41 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours42 = hours39.minus(hours41);
        org.joda.time.DurationFieldType durationFieldType43 = null;
        boolean boolean44 = hours41.isSupported(durationFieldType43);
        org.joda.time.Hours hours45 = hours38.minus(hours41);
        org.joda.time.Hours hours46 = hours30.plus(hours45);
        org.joda.time.Hours hours47 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod48 = hours47.toMutablePeriod();
        org.joda.time.Hours hours49 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours50 = hours47.minus(hours49);
        boolean boolean51 = hours45.isGreaterThan(hours49);
        java.lang.String str52 = hours45.toString();
        org.joda.time.Hours hours53 = hours21.plus(hours45);
        boolean boolean54 = hours13.isGreaterThan(hours21);
        java.lang.Class<?> wildcardClass55 = hours13.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 8 + "'", int23 == 8);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "PT8H" + "'", str24, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(mutablePeriod40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(mutablePeriod48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "PT-1H" + "'", str52, "PT-1H");
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test0589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0589");
        org.joda.time.Hours hours0 = org.joda.time.Hours.EIGHT;
        int int1 = hours0.size();
        org.joda.time.Hours hours3 = hours0.dividedBy(100);
        org.joda.time.Hours hours4 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        int int7 = hours5.getValue((int) (short) 0);
        org.joda.time.Hours hours8 = hours4.minus(hours5);
        org.joda.time.Hours hours9 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours11 = org.joda.time.Hours.EIGHT;
        int int13 = hours11.getValue((int) (short) 0);
        org.joda.time.Hours hours14 = hours10.minus(hours11);
        org.joda.time.Hours hours15 = hours9.minus(hours10);
        int int16 = hours9.size();
        org.joda.time.Duration duration17 = hours9.toStandardDuration();
        boolean boolean18 = hours5.isGreaterThan(hours9);
        org.joda.time.MutablePeriod mutablePeriod19 = hours9.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType20 = hours9.getFieldType();
        org.joda.time.Hours hours21 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period22 = hours21.toPeriod();
        org.joda.time.Hours hours24 = hours21.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod25 = hours24.toMutablePeriod();
        org.joda.time.Hours hours26 = org.joda.time.Hours.THREE;
        org.joda.time.Period period27 = hours26.toPeriod();
        org.joda.time.Hours hours29 = hours26.plus((int) (byte) -1);
        org.joda.time.Hours hours30 = hours24.minus(hours26);
        org.joda.time.Hours hours31 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod32 = hours31.toMutablePeriod();
        org.joda.time.Hours hours33 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours34 = hours31.minus(hours33);
        org.joda.time.DurationFieldType durationFieldType35 = null;
        int int36 = hours31.get(durationFieldType35);
        org.joda.time.Hours hours38 = hours31.minus((int) (short) 0);
        org.joda.time.Hours hours39 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType40 = null;
        int int41 = hours39.get(durationFieldType40);
        org.joda.time.DurationFieldType durationFieldType42 = hours39.getFieldType();
        int int43 = hours38.get(durationFieldType42);
        int int44 = hours26.get(durationFieldType42);
        int int45 = hours9.get(durationFieldType42);
        boolean boolean46 = hours0.isLessThan(hours9);
        org.joda.time.Hours hours48 = hours9.dividedBy((int) (short) 1);
        org.joda.time.Duration duration49 = hours9.toStandardDuration();
        org.joda.time.Hours hours51 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours52 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod53 = hours52.toMutablePeriod();
        org.joda.time.Hours hours54 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours55 = hours52.minus(hours54);
        org.joda.time.DurationFieldType durationFieldType56 = null;
        int int57 = hours52.get(durationFieldType56);
        org.joda.time.Hours hours59 = hours52.minus((int) (short) 0);
        org.joda.time.Hours hours60 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod61 = hours60.toMutablePeriod();
        org.joda.time.Hours hours62 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours63 = hours60.minus(hours62);
        org.joda.time.DurationFieldType durationFieldType64 = null;
        boolean boolean65 = hours62.isSupported(durationFieldType64);
        org.joda.time.Hours hours66 = hours59.minus(hours62);
        org.joda.time.Hours hours67 = hours51.plus(hours66);
        org.joda.time.Hours hours68 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours69 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod70 = hours69.toMutablePeriod();
        org.joda.time.Hours hours71 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours72 = hours69.minus(hours71);
        int int73 = hours68.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours71);
        org.joda.time.Hours hours74 = hours51.plus(hours71);
        org.joda.time.Hours hours75 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period76 = hours75.toPeriod();
        org.joda.time.Hours hours78 = hours75.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod79 = hours78.toMutablePeriod();
        org.joda.time.Hours hours80 = org.joda.time.Hours.THREE;
        org.joda.time.Period period81 = hours80.toPeriod();
        org.joda.time.Hours hours83 = hours80.plus((int) (byte) -1);
        org.joda.time.Hours hours84 = hours78.minus(hours80);
        org.joda.time.DurationFieldType durationFieldType85 = hours84.getFieldType();
        org.joda.time.Hours hours86 = hours74.plus(hours84);
        org.joda.time.Hours hours88 = hours86.multipliedBy((int) (byte) -1);
        org.joda.time.Hours hours90 = hours86.plus(6);
        org.joda.time.Hours hours91 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours90);
        org.joda.time.Hours hours92 = hours9.minus(hours91);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 8 + "'", int7 == 8);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 8 + "'", int13 == 8);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 7 + "'", int43 == 7);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 3 + "'", int44 == 3);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 6 + "'", int45 == 6);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(mutablePeriod53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertNotNull(mutablePeriod61);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertNotNull(hours69);
        org.junit.Assert.assertNotNull(mutablePeriod70);
        org.junit.Assert.assertNotNull(hours71);
        org.junit.Assert.assertNotNull(hours72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(hours74);
        org.junit.Assert.assertNotNull(hours75);
        org.junit.Assert.assertNotNull(period76);
        org.junit.Assert.assertNotNull(hours78);
        org.junit.Assert.assertNotNull(mutablePeriod79);
        org.junit.Assert.assertNotNull(hours80);
        org.junit.Assert.assertNotNull(period81);
        org.junit.Assert.assertNotNull(hours83);
        org.junit.Assert.assertNotNull(hours84);
        org.junit.Assert.assertNotNull(durationFieldType85);
        org.junit.Assert.assertNotNull(hours86);
        org.junit.Assert.assertNotNull(hours88);
        org.junit.Assert.assertNotNull(hours90);
        org.junit.Assert.assertNotNull(hours91);
        org.junit.Assert.assertNotNull(hours92);
    }

    @Test
    public void test0590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0590");
        org.joda.time.Hours hours0 = org.joda.time.Hours.TWO;
        org.joda.time.Hours hours1 = org.joda.time.Hours.MAX_VALUE;
        int int2 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours1);
        org.joda.time.Hours hours3 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours3.get(durationFieldType4);
        org.joda.time.DurationFieldType durationFieldType6 = hours3.getFieldType();
        org.joda.time.DurationFieldType durationFieldType7 = hours3.getFieldType();
        boolean boolean8 = hours1.isSupported(durationFieldType7);
        org.joda.time.Hours hours9 = hours1.negated();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes10 = hours9.toStandardMinutes();
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: -2147483647 * 60");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(hours9);
    }

    @Test
    public void test0591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0591");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.Hours hours10 = hours9.negated();
        org.joda.time.Hours hours12 = hours10.plus(16);
        org.joda.time.Hours hours14 = hours10.minus((int) (byte) 0);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours14);
    }

    @Test
    public void test0592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0592");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.Hours hours15 = hours12.plus(8);
        org.joda.time.Hours hours16 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = hours16.get(durationFieldType17);
        org.joda.time.DurationFieldType durationFieldType19 = hours16.getFieldType();
        boolean boolean20 = hours15.isSupported(durationFieldType19);
        int int21 = hours9.get(durationFieldType19);
        org.joda.time.Hours hours22 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours23 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod24 = hours23.toMutablePeriod();
        org.joda.time.Hours hours25 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours26 = hours23.minus(hours25);
        int int27 = hours22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours25);
        org.joda.time.DurationFieldType durationFieldType28 = null;
        boolean boolean29 = hours22.isSupported(durationFieldType28);
        org.joda.time.Hours hours31 = hours22.multipliedBy((int) (short) 10);
        org.joda.time.Hours hours32 = hours9.plus(hours22);
        org.joda.time.Hours hours34 = hours9.plus(0);
        org.joda.time.Hours hours35 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours36 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod37 = hours36.toMutablePeriod();
        org.joda.time.Hours hours38 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours39 = hours36.minus(hours38);
        int int40 = hours35.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours38);
        org.joda.time.DurationFieldType durationFieldType41 = null;
        boolean boolean42 = hours35.isSupported(durationFieldType41);
        org.joda.time.Hours hours44 = hours35.minus((int) (short) -1);
        org.joda.time.PeriodType periodType45 = hours35.getPeriodType();
        int int46 = hours35.getHours();
        org.joda.time.DurationFieldType durationFieldType48 = hours35.getFieldType((int) (short) 0);
        int int49 = hours35.size();
        int int50 = hours35.size();
        org.joda.time.Period period51 = hours35.toPeriod();
        org.joda.time.Hours hours52 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod53 = hours52.toMutablePeriod();
        org.joda.time.Hours hours54 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours55 = hours52.minus(hours54);
        boolean boolean56 = hours35.isGreaterThan(hours54);
        boolean boolean57 = hours9.isGreaterThan(hours35);
        org.joda.time.Hours hours59 = hours35.multipliedBy(0);
        org.joda.time.Hours hours61 = hours35.dividedBy(2147483647);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 8 + "'", int21 == 8);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 7 + "'", int46 == 7);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(mutablePeriod53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(hours61);
    }

    @Test
    public void test0593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0593");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = hours8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = hours8.getFieldType();
        int int12 = hours7.get(durationFieldType11);
        org.joda.time.PeriodType periodType13 = hours7.getPeriodType();
        org.joda.time.Hours hours15 = hours7.multipliedBy(8);
        org.joda.time.Hours hours17 = hours7.dividedBy((-25));
        org.joda.time.Hours hours18 = null;
        org.joda.time.Hours hours19 = hours7.minus(hours18);
        org.joda.time.Hours hours20 = org.joda.time.Hours.THREE;
        org.joda.time.Period period21 = hours20.toPeriod();
        org.joda.time.Hours hours22 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours20);
        org.joda.time.Hours hours24 = hours22.multipliedBy(9);
        boolean boolean25 = hours19.isGreaterThan(hours24);
        org.joda.time.DurationFieldType durationFieldType27 = hours24.getFieldType(0);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 7 + "'", int12 == 7);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(durationFieldType27);
    }

    @Test
    public void test0594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0594");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = hours0.get(durationFieldType1);
        org.joda.time.Hours hours4 = hours0.dividedBy(100);
        org.joda.time.Hours hours6 = hours4.plus((int) (byte) 10);
        org.joda.time.Hours hours8 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours10 = hours8.minus(8);
        org.joda.time.DurationFieldType durationFieldType11 = hours10.getFieldType();
        boolean boolean12 = hours6.isGreaterThan(hours10);
        org.joda.time.Hours hours14 = hours6.multipliedBy((int) (byte) 1);
        org.joda.time.Hours hours15 = hours14.negated();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
    }

    @Test
    public void test0595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0595");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours7 = hours3.multipliedBy(0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours9 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod10 = hours9.toMutablePeriod();
        org.joda.time.Hours hours11 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours12 = hours9.minus(hours11);
        int int13 = hours8.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours11);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours8.isSupported(durationFieldType14);
        org.joda.time.Hours hours17 = hours8.minus((int) (short) -1);
        org.joda.time.PeriodType periodType18 = hours8.getPeriodType();
        int int19 = hours8.getHours();
        boolean boolean20 = hours3.equals((java.lang.Object) int19);
        org.joda.time.Period period21 = hours3.toPeriod();
        org.joda.time.Hours hours23 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod25 = hours24.toMutablePeriod();
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours27 = hours24.minus(hours26);
        org.joda.time.DurationFieldType durationFieldType28 = null;
        int int29 = hours24.get(durationFieldType28);
        org.joda.time.Hours hours31 = hours24.minus((int) (short) 0);
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod33 = hours32.toMutablePeriod();
        org.joda.time.Hours hours34 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours35 = hours32.minus(hours34);
        org.joda.time.DurationFieldType durationFieldType36 = null;
        boolean boolean37 = hours34.isSupported(durationFieldType36);
        org.joda.time.Hours hours38 = hours31.minus(hours34);
        org.joda.time.Hours hours39 = hours23.plus(hours38);
        org.joda.time.Hours hours40 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours41 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod42 = hours41.toMutablePeriod();
        org.joda.time.Hours hours43 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours44 = hours41.minus(hours43);
        int int45 = hours40.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours43);
        org.joda.time.Hours hours46 = hours23.plus(hours43);
        org.joda.time.Hours hours47 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod48 = hours47.toMutablePeriod();
        org.joda.time.Hours hours49 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours50 = hours47.minus(hours49);
        org.joda.time.DurationFieldType durationFieldType51 = null;
        int int52 = hours47.get(durationFieldType51);
        org.joda.time.Hours hours54 = hours47.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval55 = null;
        org.joda.time.Hours hours56 = org.joda.time.Hours.hoursIn(readableInterval55);
        int int57 = hours54.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours56);
        boolean boolean58 = hours43.isGreaterThan(hours54);
        org.joda.time.Hours hours60 = hours43.multipliedBy(16);
        org.joda.time.Hours hours62 = hours43.multipliedBy((int) (short) 0);
        org.joda.time.Period period63 = hours62.toPeriod();
        org.joda.time.Hours hours64 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours65 = org.joda.time.Hours.EIGHT;
        int int67 = hours65.getValue((int) (short) 0);
        org.joda.time.Hours hours68 = hours64.minus(hours65);
        org.joda.time.Hours hours69 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType70 = null;
        int int71 = hours69.get(durationFieldType70);
        org.joda.time.DurationFieldType durationFieldType72 = hours69.getFieldType();
        int int73 = hours64.get(durationFieldType72);
        boolean boolean74 = hours62.isSupported(durationFieldType72);
        boolean boolean75 = hours3.isSupported(durationFieldType72);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 7 + "'", int19 == 7);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(mutablePeriod48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 8 + "'", int67 == 8);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertNotNull(hours69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(durationFieldType72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 7 + "'", int73 == 7);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
    }

    @Test
    public void test0596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0596");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.multipliedBy(1);
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours11 = hours8.minus(hours10);
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = hours8.get(durationFieldType12);
        org.joda.time.Hours hours15 = hours8.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Hours hours17 = org.joda.time.Hours.hoursIn(readableInterval16);
        int int18 = hours15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours17);
        org.joda.time.Hours hours19 = hours0.minus(hours15);
        org.joda.time.Hours hours20 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours21 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod22 = hours21.toMutablePeriod();
        org.joda.time.Hours hours23 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours24 = hours21.minus(hours23);
        int int25 = hours20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours23);
        org.joda.time.DurationFieldType durationFieldType26 = null;
        boolean boolean27 = hours20.isSupported(durationFieldType26);
        org.joda.time.Hours hours29 = hours20.minus((int) (short) -1);
        boolean boolean30 = hours19.isLessThan(hours20);
        org.joda.time.MutablePeriod mutablePeriod31 = hours19.toMutablePeriod();
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours33 = org.joda.time.Hours.EIGHT;
        int int35 = hours33.getValue((int) (short) 0);
        org.joda.time.Hours hours36 = hours32.minus(hours33);
        org.joda.time.Hours hours37 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod38 = hours37.toMutablePeriod();
        org.joda.time.Hours hours39 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours40 = hours37.minus(hours39);
        org.joda.time.Hours hours42 = hours39.plus(8);
        org.joda.time.Hours hours43 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType44 = null;
        int int45 = hours43.get(durationFieldType44);
        org.joda.time.DurationFieldType durationFieldType46 = hours43.getFieldType();
        boolean boolean47 = hours42.isSupported(durationFieldType46);
        boolean boolean48 = hours32.isSupported(durationFieldType46);
        org.joda.time.Hours hours49 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period50 = hours49.toPeriod();
        org.joda.time.Hours hours52 = hours49.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod53 = hours52.toMutablePeriod();
        org.joda.time.Hours hours54 = org.joda.time.Hours.THREE;
        org.joda.time.Period period55 = hours54.toPeriod();
        org.joda.time.Hours hours57 = hours54.plus((int) (byte) -1);
        org.joda.time.Hours hours58 = hours52.minus(hours54);
        org.joda.time.Hours hours59 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod60 = hours59.toMutablePeriod();
        org.joda.time.Hours hours61 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours62 = hours59.minus(hours61);
        org.joda.time.DurationFieldType durationFieldType63 = null;
        int int64 = hours59.get(durationFieldType63);
        org.joda.time.Hours hours66 = hours59.minus((int) (short) 0);
        org.joda.time.Hours hours67 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType68 = null;
        int int69 = hours67.get(durationFieldType68);
        org.joda.time.DurationFieldType durationFieldType70 = hours67.getFieldType();
        int int71 = hours66.get(durationFieldType70);
        int int72 = hours54.get(durationFieldType70);
        boolean boolean73 = hours32.equals((java.lang.Object) hours54);
        boolean boolean74 = hours19.isLessThan(hours54);
        // The following exception was thrown during execution in test generation
        try {
            int int76 = hours19.getValue((-2147483648));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -2147483648");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 8 + "'", int35 == 8);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(durationFieldType46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(mutablePeriod53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(mutablePeriod60);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(durationFieldType70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 7 + "'", int71 == 7);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 3 + "'", int72 == 3);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
    }

    @Test
    public void test0597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0597");
        org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT2147483647H");
        org.junit.Assert.assertNotNull(hours1);
    }

    @Test
    public void test0598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0598");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        boolean boolean6 = hours1.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours7 = null;
        org.joda.time.Hours hours8 = hours1.minus(hours7);
        org.joda.time.Hours hours9 = hours8.negated();
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.Duration duration14 = hours10.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod15 = hours10.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        int int18 = hours16.getValue((int) (short) 0);
        java.lang.String str19 = hours16.toString();
        boolean boolean20 = hours10.isGreaterThan(hours16);
        org.joda.time.Hours hours22 = hours16.minus(10);
        org.joda.time.Hours hours23 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod25 = hours24.toMutablePeriod();
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours27 = hours24.minus(hours26);
        int int28 = hours23.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours26);
        org.joda.time.Hours hours29 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours23);
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = hours23.get(durationFieldType30);
        boolean boolean32 = hours22.equals((java.lang.Object) hours23);
        java.lang.String str33 = hours22.toString();
        org.joda.time.DurationFieldType durationFieldType35 = hours22.getFieldType(0);
        boolean boolean36 = hours8.isGreaterThan(hours22);
        org.joda.time.Hours hours37 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours22);
        org.joda.time.Hours hours38 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours37);
        org.joda.time.Hours hours39 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod40 = hours39.toMutablePeriod();
        org.joda.time.Hours hours41 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours42 = hours39.minus(hours41);
        org.joda.time.DurationFieldType durationFieldType43 = null;
        int int44 = hours39.get(durationFieldType43);
        org.joda.time.Hours hours46 = hours39.minus((int) (short) 0);
        org.joda.time.Hours hours47 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType48 = null;
        int int49 = hours47.get(durationFieldType48);
        org.joda.time.DurationFieldType durationFieldType50 = hours47.getFieldType();
        int int51 = hours46.get(durationFieldType50);
        org.joda.time.PeriodType periodType52 = hours46.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType53 = hours46.getFieldType();
        int int54 = hours37.get(durationFieldType53);
        org.joda.time.Hours hours56 = org.joda.time.Hours.hours(100);
        org.joda.time.Period period57 = hours56.toPeriod();
        org.joda.time.Hours hours59 = hours56.minus(8);
        org.joda.time.Hours hours60 = org.joda.time.Hours.THREE;
        org.joda.time.Period period61 = hours60.toPeriod();
        org.joda.time.Hours hours63 = hours60.plus((int) (byte) -1);
        org.joda.time.Hours hours65 = hours63.minus((int) (byte) 100);
        boolean boolean66 = hours56.equals((java.lang.Object) hours65);
        org.joda.time.MutablePeriod mutablePeriod67 = hours56.toMutablePeriod();
        org.joda.time.Hours hours69 = org.joda.time.Hours.parseHours("PT16H");
        org.joda.time.Hours hours70 = hours56.minus(hours69);
        org.joda.time.Hours hours71 = hours37.minus(hours56);
        org.joda.time.Hours hours73 = hours37.multipliedBy(15);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 8 + "'", int18 == 8);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "PT8H" + "'", str19, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "PT-2H" + "'", str33, "PT-2H");
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(mutablePeriod40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 7 + "'", int51 == 7);
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertNotNull(durationFieldType53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-2) + "'", int54 == (-2));
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(mutablePeriod67);
        org.junit.Assert.assertNotNull(hours69);
        org.junit.Assert.assertNotNull(hours70);
        org.junit.Assert.assertNotNull(hours71);
        org.junit.Assert.assertNotNull(hours73);
    }

    @Test
    public void test0599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0599");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(0);
        org.joda.time.Duration duration2 = hours1.toStandardDuration();
        org.joda.time.Days days3 = hours1.toStandardDays();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(days3);
    }

    @Test
    public void test0600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0600");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours6 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        org.joda.time.PeriodType periodType7 = hours0.getPeriodType();
        org.joda.time.Hours hours9 = hours0.dividedBy(5);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(hours9);
    }

    @Test
    public void test0601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0601");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours6 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        org.joda.time.Hours hours8 = hours6.multipliedBy((int) (byte) 10);
        org.joda.time.Hours hours10 = hours6.plus((-2));
        org.joda.time.Hours hours11 = org.joda.time.Hours.THREE;
        org.joda.time.Period period12 = hours11.toPeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours11);
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours15 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod16 = hours15.toMutablePeriod();
        org.joda.time.Hours hours17 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours18 = hours15.minus(hours17);
        int int19 = hours14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours17);
        org.joda.time.MutablePeriod mutablePeriod20 = hours14.toMutablePeriod();
        org.joda.time.Hours hours22 = hours14.multipliedBy((int) (byte) 100);
        java.lang.Object obj23 = new java.lang.Object();
        boolean boolean24 = hours14.equals(obj23);
        org.joda.time.Hours hours25 = hours13.minus(hours14);
        org.joda.time.Duration duration26 = hours14.toStandardDuration();
        org.joda.time.Hours hours27 = hours10.minus(hours14);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(hours27);
    }

    @Test
    public void test0602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0602");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(100);
        org.joda.time.Period period2 = hours1.toPeriod();
        org.joda.time.Hours hours4 = hours1.minus(8);
        org.joda.time.Hours hours6 = hours4.minus((-1));
        org.joda.time.Hours hours7 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod8 = hours7.toMutablePeriod();
        org.joda.time.Hours hours9 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours10 = hours7.minus(hours9);
        org.joda.time.DurationFieldType durationFieldType11 = null;
        int int12 = hours7.get(durationFieldType11);
        org.joda.time.Hours hours14 = hours7.minus((int) (short) 0);
        org.joda.time.Hours hours15 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours7);
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod18 = hours17.toMutablePeriod();
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours20 = hours17.minus(hours19);
        int int21 = hours16.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours19);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        boolean boolean23 = hours16.isSupported(durationFieldType22);
        org.joda.time.Hours hours25 = hours16.minus((int) (short) -1);
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod27 = hours26.toMutablePeriod();
        org.joda.time.Hours hours28 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours29 = hours26.minus(hours28);
        org.joda.time.Hours hours31 = hours28.plus(8);
        org.joda.time.Hours hours32 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = hours32.get(durationFieldType33);
        org.joda.time.DurationFieldType durationFieldType35 = hours32.getFieldType();
        boolean boolean36 = hours31.isSupported(durationFieldType35);
        int int37 = hours25.get(durationFieldType35);
        org.joda.time.Hours hours38 = hours7.plus(hours25);
        org.joda.time.Hours hours39 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours40 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod41 = hours40.toMutablePeriod();
        org.joda.time.Hours hours42 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours43 = hours40.minus(hours42);
        int int44 = hours39.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours42);
        org.joda.time.DurationFieldType durationFieldType45 = null;
        boolean boolean46 = hours39.isSupported(durationFieldType45);
        org.joda.time.Hours hours48 = hours39.multipliedBy((int) (short) 10);
        org.joda.time.Hours hours49 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours50 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType51 = null;
        int int52 = hours50.get(durationFieldType51);
        boolean boolean53 = hours49.equals((java.lang.Object) durationFieldType51);
        org.joda.time.Hours hours54 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours55 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod56 = hours55.toMutablePeriod();
        org.joda.time.Hours hours57 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours58 = hours55.minus(hours57);
        int int59 = hours54.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours57);
        org.joda.time.Hours hours61 = hours57.multipliedBy(0);
        org.joda.time.Hours hours62 = hours49.plus(hours61);
        org.joda.time.DurationFieldType durationFieldType63 = hours62.getFieldType();
        boolean boolean64 = hours39.equals((java.lang.Object) durationFieldType63);
        int int65 = hours25.get(durationFieldType63);
        int int66 = hours4.get(durationFieldType63);
        org.joda.time.Hours hours68 = hours4.plus((-25));
        org.joda.time.Period period69 = hours4.toPeriod();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 8 + "'", int37 == 8);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(mutablePeriod41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(mutablePeriod56);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertNotNull(durationFieldType63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 8 + "'", int65 == 8);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 92 + "'", int66 == 92);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertNotNull(period69);
    }

    @Test
    public void test0603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0603");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Hours hours1 = org.joda.time.Hours.hoursIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = hours1.getFieldType();
        org.joda.time.Hours hours4 = hours1.dividedBy((int) (byte) 10);
        org.joda.time.Hours hours6 = hours1.plus((int) (byte) 1);
        org.joda.time.Hours hours8 = hours1.dividedBy(100);
        // The following exception was thrown during execution in test generation
        try {
            int int10 = hours8.getValue((-91));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -91");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours8);
    }

    @Test
    public void test0604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0604");
        org.joda.time.Hours hours0 = org.joda.time.Hours.TWO;
        org.joda.time.Hours hours1 = org.joda.time.Hours.MAX_VALUE;
        int int2 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours1);
        org.joda.time.Hours hours3 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours3.get(durationFieldType4);
        org.joda.time.DurationFieldType durationFieldType6 = hours3.getFieldType();
        org.joda.time.DurationFieldType durationFieldType7 = hours3.getFieldType();
        boolean boolean8 = hours1.isSupported(durationFieldType7);
        org.joda.time.Period period9 = hours1.toPeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) period9);
        org.joda.time.Hours hours11 = null;
        boolean boolean12 = hours10.isGreaterThan(hours11);
        org.joda.time.Hours hours13 = org.joda.time.Hours.TWO;
        org.joda.time.Hours hours14 = org.joda.time.Hours.MAX_VALUE;
        int int15 = hours13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours14);
        int int16 = hours14.size();
        org.joda.time.Hours hours17 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours14);
        boolean boolean18 = hours10.isLessThan(hours14);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test0605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0605");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        boolean boolean22 = hours16.isGreaterThan(hours20);
        org.joda.time.Hours hours23 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours20);
        org.joda.time.PeriodType periodType24 = hours20.getPeriodType();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(periodType24);
    }

    @Test
    public void test0606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0606");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours6 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        org.joda.time.Hours hours7 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod8 = hours7.toMutablePeriod();
        org.joda.time.Hours hours9 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours10 = hours7.minus(hours9);
        org.joda.time.Hours hours12 = hours9.plus(8);
        org.joda.time.Hours hours13 = hours0.minus(hours12);
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        int int17 = hours15.getValue((int) (short) 0);
        org.joda.time.Hours hours18 = hours14.minus(hours15);
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        org.joda.time.Hours hours24 = hours21.plus(8);
        org.joda.time.Hours hours25 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType26 = null;
        int int27 = hours25.get(durationFieldType26);
        org.joda.time.DurationFieldType durationFieldType28 = hours25.getFieldType();
        boolean boolean29 = hours24.isSupported(durationFieldType28);
        boolean boolean30 = hours14.isSupported(durationFieldType28);
        org.joda.time.Hours hours31 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period32 = hours31.toPeriod();
        org.joda.time.Hours hours34 = hours31.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod35 = hours34.toMutablePeriod();
        org.joda.time.Hours hours36 = org.joda.time.Hours.THREE;
        org.joda.time.Period period37 = hours36.toPeriod();
        org.joda.time.Hours hours39 = hours36.plus((int) (byte) -1);
        org.joda.time.Hours hours40 = hours34.minus(hours36);
        org.joda.time.Hours hours41 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod42 = hours41.toMutablePeriod();
        org.joda.time.Hours hours43 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours44 = hours41.minus(hours43);
        org.joda.time.DurationFieldType durationFieldType45 = null;
        int int46 = hours41.get(durationFieldType45);
        org.joda.time.Hours hours48 = hours41.minus((int) (short) 0);
        org.joda.time.Hours hours49 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType50 = null;
        int int51 = hours49.get(durationFieldType50);
        org.joda.time.DurationFieldType durationFieldType52 = hours49.getFieldType();
        int int53 = hours48.get(durationFieldType52);
        int int54 = hours36.get(durationFieldType52);
        boolean boolean55 = hours14.equals((java.lang.Object) hours36);
        boolean boolean56 = hours12.equals((java.lang.Object) hours36);
        org.joda.time.Hours hours58 = hours12.minus((-1));
        // The following exception was thrown during execution in test generation
        try {
            int int60 = hours58.getValue((-91));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -91");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 8 + "'", int17 == 8);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 7 + "'", int53 == 7);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 3 + "'", int54 == 3);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(hours58);
    }

    @Test
    public void test0607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0607");
        org.joda.time.Hours hours0 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours1 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = hours1.get(durationFieldType2);
        boolean boolean4 = hours0.equals((java.lang.Object) durationFieldType2);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod7 = hours6.toMutablePeriod();
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours9 = hours6.minus(hours8);
        int int10 = hours5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours8);
        org.joda.time.Hours hours12 = hours8.multipliedBy(0);
        org.joda.time.Hours hours13 = hours0.plus(hours12);
        org.joda.time.Hours hours15 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod17 = hours16.toMutablePeriod();
        org.joda.time.Hours hours18 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours19 = hours16.minus(hours18);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = hours16.get(durationFieldType20);
        org.joda.time.Hours hours23 = hours16.minus((int) (short) 0);
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod25 = hours24.toMutablePeriod();
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours27 = hours24.minus(hours26);
        org.joda.time.DurationFieldType durationFieldType28 = null;
        boolean boolean29 = hours26.isSupported(durationFieldType28);
        org.joda.time.Hours hours30 = hours23.minus(hours26);
        org.joda.time.Hours hours31 = hours15.plus(hours30);
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod33 = hours32.toMutablePeriod();
        org.joda.time.Hours hours34 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours35 = hours32.minus(hours34);
        boolean boolean36 = hours30.isGreaterThan(hours34);
        org.joda.time.Hours hours37 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours30);
        int int38 = hours12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours30);
        org.joda.time.Hours hours39 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod40 = hours39.toMutablePeriod();
        org.joda.time.Hours hours41 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours42 = hours39.minus(hours41);
        org.joda.time.DurationFieldType durationFieldType43 = null;
        int int44 = hours39.get(durationFieldType43);
        org.joda.time.Hours hours46 = hours39.multipliedBy(1);
        int int47 = hours46.getHours();
        org.joda.time.DurationFieldType durationFieldType48 = hours46.getFieldType();
        org.joda.time.Hours hours49 = hours30.plus(hours46);
        org.joda.time.Hours hours51 = org.joda.time.Hours.hours((int) (short) 0);
        org.joda.time.Hours hours52 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod53 = hours52.toMutablePeriod();
        org.joda.time.Hours hours54 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours55 = hours52.minus(hours54);
        org.joda.time.DurationFieldType durationFieldType56 = null;
        int int57 = hours52.get(durationFieldType56);
        org.joda.time.Hours hours59 = hours52.multipliedBy(1);
        org.joda.time.Hours hours60 = org.joda.time.Hours.ONE;
        int int61 = hours59.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours60);
        org.joda.time.Hours hours62 = org.joda.time.Hours.SEVEN;
        boolean boolean63 = hours59.equals((java.lang.Object) hours62);
        org.joda.time.Hours hours64 = hours51.minus(hours59);
        java.lang.String str65 = hours64.toString();
        int int66 = hours46.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours64);
        org.joda.time.Hours hours68 = hours46.multipliedBy(2);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(mutablePeriod40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 7 + "'", int47 == 7);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(mutablePeriod53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "PT-7H" + "'", str65, "PT-7H");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertNotNull(hours68);
    }

    @Test
    public void test0608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0608");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((int) '4');
        org.joda.time.DurationFieldType durationFieldType2 = hours1.getFieldType();
        org.joda.time.Period period3 = hours1.toPeriod();
        org.joda.time.Period period4 = hours1.toPeriod();
        org.joda.time.Seconds seconds5 = hours1.toStandardSeconds();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(seconds5);
    }

    @Test
    public void test0609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0609");
        org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT2H");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType3 = hours1.getFieldType((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours1);
    }

    @Test
    public void test0610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0610");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period1 = hours0.toPeriod();
        org.joda.time.Weeks weeks2 = hours0.toStandardWeeks();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(weeks2);
    }

    @Test
    public void test0611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0611");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(0);
        org.joda.time.Hours hours3 = hours1.multipliedBy((int) (short) 0);
        org.joda.time.Period period4 = hours3.toPeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = hours5.getFieldType();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(durationFieldType6);
    }

    @Test
    public void test0612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0612");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((int) '4');
        org.joda.time.DurationFieldType durationFieldType2 = hours1.getFieldType();
        org.joda.time.PeriodType periodType3 = hours1.getPeriodType();
        org.joda.time.Weeks weeks4 = hours1.toStandardWeeks();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(weeks4);
    }

    @Test
    public void test0613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0613");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((int) '4');
        org.joda.time.DurationFieldType durationFieldType2 = hours1.getFieldType();
        org.joda.time.Hours hours4 = hours1.plus(700);
        int int5 = hours1.size();
        org.joda.time.Hours hours7 = hours1.multipliedBy((int) (short) 100);
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours11 = hours8.minus(hours10);
        org.joda.time.DurationFieldType durationFieldType12 = hours8.getFieldType();
        org.joda.time.Hours hours13 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours8);
        org.joda.time.Hours hours14 = hours1.plus(hours13);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
    }

    @Test
    public void test0614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0614");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours5.get(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType8 = hours5.getFieldType();
        int int9 = hours0.get(durationFieldType8);
        org.joda.time.Hours hours11 = hours0.multipliedBy(7);
        org.joda.time.Hours hours13 = hours11.minus((-2));
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod15 = hours14.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours17 = hours14.minus(hours16);
        org.joda.time.Hours hours18 = hours16.negated();
        org.joda.time.DurationFieldType durationFieldType19 = hours18.getFieldType();
        org.joda.time.Hours hours20 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod21 = hours20.toMutablePeriod();
        org.joda.time.Hours hours22 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours23 = hours20.minus(hours22);
        org.joda.time.Hours hours24 = hours22.negated();
        int int25 = hours24.getHours();
        int int26 = hours18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours24);
        org.joda.time.Hours hours27 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours18);
        org.joda.time.Hours hours28 = hours11.minus(hours18);
        int int29 = hours18.size();
        org.joda.time.Period period30 = hours18.toPeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7 + "'", int9 == 7);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-8) + "'", int25 == (-8));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(period30);
    }

    @Test
    public void test0615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0615");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.PeriodType periodType6 = hours0.getPeriodType();
        org.joda.time.Hours hours8 = org.joda.time.Hours.parseHours("PT7H");
        boolean boolean9 = hours0.isLessThan(hours8);
        java.lang.String str10 = hours0.toString();
        org.joda.time.Hours hours12 = hours0.minus((-4));
        org.joda.time.Hours hours13 = hours0.negated();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType15 = hours0.getFieldType(56);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 56");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT7H" + "'", str10, "PT7H");
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
    }

    @Test
    public void test0616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0616");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = hours0.get(durationFieldType1);
        org.joda.time.DurationFieldType durationFieldType3 = hours0.getFieldType();
        org.joda.time.DurationFieldType durationFieldType4 = hours0.getFieldType();
        org.joda.time.Period period5 = hours0.toPeriod();
        org.joda.time.Duration duration6 = hours0.toStandardDuration();
        org.joda.time.Hours hours7 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours11 = hours8.minus(hours10);
        org.joda.time.Hours hours12 = hours10.negated();
        org.joda.time.DurationFieldType durationFieldType13 = hours12.getFieldType();
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod15 = hours14.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours17 = hours14.minus(hours16);
        org.joda.time.Hours hours18 = hours16.negated();
        int int19 = hours18.getHours();
        int int20 = hours12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours18);
        org.joda.time.Hours hours21 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod22 = hours21.toMutablePeriod();
        org.joda.time.Hours hours23 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours24 = hours21.minus(hours23);
        org.joda.time.DurationFieldType durationFieldType25 = null;
        int int26 = hours21.get(durationFieldType25);
        org.joda.time.Hours hours28 = hours21.minus((int) (short) 0);
        org.joda.time.Hours hours29 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = hours29.get(durationFieldType30);
        org.joda.time.DurationFieldType durationFieldType32 = hours29.getFieldType();
        int int33 = hours28.get(durationFieldType32);
        org.joda.time.PeriodType periodType34 = hours28.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType35 = hours28.getFieldType();
        boolean boolean36 = hours12.isSupported(durationFieldType35);
        boolean boolean37 = hours7.isSupported(durationFieldType35);
        org.joda.time.Hours hours38 = hours7.negated();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-8) + "'", int19 == (-8));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 7 + "'", int33 == 7);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(hours38);
    }

    @Test
    public void test0617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0617");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        boolean boolean22 = hours16.isGreaterThan(hours20);
        org.joda.time.Hours hours23 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod24 = hours23.toMutablePeriod();
        org.joda.time.Hours hours25 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours26 = hours23.minus(hours25);
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = hours23.get(durationFieldType27);
        org.joda.time.Hours hours30 = hours23.minus((int) (short) 0);
        org.joda.time.Hours hours31 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours23);
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours33 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod34 = hours33.toMutablePeriod();
        org.joda.time.Hours hours35 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours36 = hours33.minus(hours35);
        int int37 = hours32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours35);
        org.joda.time.DurationFieldType durationFieldType38 = null;
        boolean boolean39 = hours32.isSupported(durationFieldType38);
        org.joda.time.Hours hours41 = hours32.minus((int) (short) -1);
        org.joda.time.Hours hours42 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod43 = hours42.toMutablePeriod();
        org.joda.time.Hours hours44 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours45 = hours42.minus(hours44);
        org.joda.time.Hours hours47 = hours44.plus(8);
        org.joda.time.Hours hours48 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType49 = null;
        int int50 = hours48.get(durationFieldType49);
        org.joda.time.DurationFieldType durationFieldType51 = hours48.getFieldType();
        boolean boolean52 = hours47.isSupported(durationFieldType51);
        int int53 = hours41.get(durationFieldType51);
        org.joda.time.Hours hours54 = hours23.plus(hours41);
        org.joda.time.Hours hours55 = hours20.plus(hours23);
        org.joda.time.Hours hours57 = hours55.dividedBy(100);
        org.joda.time.DurationFieldType durationFieldType58 = hours55.getFieldType();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(durationFieldType51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 8 + "'", int53 == 8);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(durationFieldType58);
    }

    @Test
    public void test0618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0618");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.PeriodType periodType10 = hours0.getPeriodType();
        org.joda.time.Hours hours11 = org.joda.time.Hours.EIGHT;
        int int13 = hours11.getValue((int) (short) 0);
        org.joda.time.Hours hours14 = hours0.minus(hours11);
        org.joda.time.Hours hours16 = hours0.plus(7);
        org.joda.time.Hours hours17 = hours0.negated();
        org.joda.time.Hours hours19 = hours17.multipliedBy(100);
        org.joda.time.Hours hours20 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        int int23 = hours21.getValue((int) (short) 0);
        org.joda.time.Hours hours24 = hours20.minus(hours21);
        boolean boolean26 = hours21.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours27 = null;
        org.joda.time.Hours hours28 = hours21.minus(hours27);
        org.joda.time.Hours hours29 = hours28.negated();
        org.joda.time.Hours hours30 = hours17.plus(hours28);
        org.joda.time.Hours hours31 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours32 = org.joda.time.Hours.EIGHT;
        int int34 = hours32.getValue((int) (short) 0);
        org.joda.time.Hours hours35 = hours31.minus(hours32);
        org.joda.time.Hours hours36 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod37 = hours36.toMutablePeriod();
        org.joda.time.Hours hours38 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours39 = hours36.minus(hours38);
        org.joda.time.Hours hours41 = hours38.plus(8);
        org.joda.time.Hours hours42 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType43 = null;
        int int44 = hours42.get(durationFieldType43);
        org.joda.time.DurationFieldType durationFieldType45 = hours42.getFieldType();
        boolean boolean46 = hours41.isSupported(durationFieldType45);
        boolean boolean47 = hours31.isSupported(durationFieldType45);
        org.joda.time.Hours hours48 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType49 = null;
        int int50 = hours48.get(durationFieldType49);
        org.joda.time.DurationFieldType durationFieldType51 = hours48.getFieldType();
        org.joda.time.DurationFieldType durationFieldType52 = hours48.getFieldType();
        boolean boolean53 = hours31.isSupported(durationFieldType52);
        boolean boolean54 = hours28.equals((java.lang.Object) boolean53);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 8 + "'", int13 == 8);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 8 + "'", int23 == 8);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 8 + "'", int34 == 8);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(durationFieldType51);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test0619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0619");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = hours8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = hours8.getFieldType();
        int int12 = hours7.get(durationFieldType11);
        org.joda.time.Hours hours13 = hours7.negated();
        int int15 = hours13.getValue((int) (short) 0);
        org.joda.time.Hours hours17 = hours13.dividedBy(6);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 7 + "'", int12 == 7);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-7) + "'", int15 == (-7));
        org.junit.Assert.assertNotNull(hours17);
    }

    @Test
    public void test0620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0620");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(100);
        org.joda.time.Period period2 = hours1.toPeriod();
        org.joda.time.Hours hours4 = hours1.minus(8);
        org.joda.time.Hours hours5 = org.joda.time.Hours.THREE;
        org.joda.time.Period period6 = hours5.toPeriod();
        org.joda.time.Hours hours8 = hours5.plus((int) (byte) -1);
        org.joda.time.Hours hours10 = hours8.minus((int) (byte) 100);
        boolean boolean11 = hours1.equals((java.lang.Object) hours10);
        org.joda.time.MutablePeriod mutablePeriod12 = hours1.toMutablePeriod();
        org.joda.time.Hours hours14 = org.joda.time.Hours.parseHours("PT16H");
        org.joda.time.Hours hours15 = hours1.minus(hours14);
        // The following exception was thrown during execution in test generation
        try {
            int int17 = hours14.getValue(14);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 14");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
    }

    @Test
    public void test0621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0621");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((-4));
        org.junit.Assert.assertNotNull(hours1);
    }

    @Test
    public void test0622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0622");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours7 = hours3.multipliedBy(0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours9 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod10 = hours9.toMutablePeriod();
        org.joda.time.Hours hours11 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours12 = hours9.minus(hours11);
        int int13 = hours8.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours11);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours8.isSupported(durationFieldType14);
        org.joda.time.Hours hours17 = hours8.minus((int) (short) -1);
        org.joda.time.PeriodType periodType18 = hours8.getPeriodType();
        int int19 = hours8.getHours();
        boolean boolean20 = hours3.equals((java.lang.Object) int19);
        java.lang.String str21 = hours3.toString();
        org.joda.time.Hours hours23 = hours3.minus((int) (short) 10);
        org.joda.time.Hours hours25 = hours3.multipliedBy((int) '4');
        org.joda.time.MutablePeriod mutablePeriod26 = hours3.toMutablePeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 7 + "'", int19 == 7);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "PT8H" + "'", str21, "PT8H");
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(mutablePeriod26);
    }

    @Test
    public void test0623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0623");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours7 = hours3.multipliedBy(0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours7);
        org.joda.time.Hours hours9 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        int int12 = hours10.getValue((int) (short) 0);
        org.joda.time.Hours hours13 = hours9.minus(hours10);
        boolean boolean15 = hours10.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours16 = null;
        org.joda.time.Hours hours17 = hours10.minus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        int int21 = hours19.getValue((int) (short) 0);
        org.joda.time.Hours hours22 = hours18.minus(hours19);
        org.joda.time.Hours hours23 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType24 = null;
        int int25 = hours23.get(durationFieldType24);
        org.joda.time.DurationFieldType durationFieldType26 = hours23.getFieldType();
        int int27 = hours18.get(durationFieldType26);
        int int28 = hours17.get(durationFieldType26);
        boolean boolean29 = hours7.isGreaterThan(hours17);
        org.joda.time.PeriodType periodType30 = hours7.getPeriodType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 8 + "'", int12 == 8);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 8 + "'", int21 == 8);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 7 + "'", int27 == 7);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 8 + "'", int28 == 8);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(periodType30);
    }

    @Test
    public void test0624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0624");
        org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT16H");
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours6 = hours3.minus(hours5);
        int int7 = hours2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours5);
        org.joda.time.MutablePeriod mutablePeriod8 = hours2.toMutablePeriod();
        org.joda.time.Hours hours9 = hours1.minus(hours2);
        org.joda.time.Hours hours10 = hours9.negated();
        org.joda.time.Period period11 = hours10.toPeriod();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(period11);
    }

    @Test
    public void test0625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0625");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period1 = hours0.toPeriod();
        org.joda.time.Hours hours3 = hours0.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.THREE;
        org.joda.time.Period period6 = hours5.toPeriod();
        org.joda.time.Hours hours8 = hours5.plus((int) (byte) -1);
        org.joda.time.Hours hours9 = hours3.minus(hours5);
        org.joda.time.Hours hours11 = org.joda.time.Hours.hours((int) '4');
        org.joda.time.DurationFieldType durationFieldType12 = hours11.getFieldType();
        org.joda.time.PeriodType periodType13 = hours11.getPeriodType();
        org.joda.time.Hours hours14 = hours9.plus(hours11);
        org.joda.time.DurationFieldType durationFieldType15 = hours14.getFieldType();
        org.joda.time.Hours hours16 = org.joda.time.Hours.THREE;
        org.joda.time.Period period17 = hours16.toPeriod();
        org.joda.time.Hours hours19 = hours16.plus((int) (byte) -1);
        org.joda.time.Hours hours21 = hours19.minus((int) (byte) 100);
        org.joda.time.DurationFieldType durationFieldType22 = hours19.getFieldType();
        org.joda.time.Hours hours23 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod24 = hours23.toMutablePeriod();
        org.joda.time.Hours hours25 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours26 = hours23.minus(hours25);
        org.joda.time.Duration duration27 = hours23.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod28 = hours23.toMutablePeriod();
        org.joda.time.Hours hours29 = org.joda.time.Hours.EIGHT;
        int int31 = hours29.getValue((int) (short) 0);
        java.lang.String str32 = hours29.toString();
        boolean boolean33 = hours23.isGreaterThan(hours29);
        org.joda.time.Hours hours34 = hours19.minus(hours29);
        boolean boolean35 = hours14.isLessThan(hours34);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 8 + "'", int31 == 8);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "PT8H" + "'", str32, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test0626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0626");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.Hours hours10 = hours9.negated();
        org.joda.time.Duration duration11 = hours10.toStandardDuration();
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod14 = hours13.toMutablePeriod();
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours16 = hours13.minus(hours15);
        int int17 = hours12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours15);
        org.joda.time.Hours hours18 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours12);
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        org.joda.time.Hours hours24 = hours21.plus(8);
        org.joda.time.Hours hours25 = hours12.minus(hours24);
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod28 = hours27.toMutablePeriod();
        org.joda.time.Hours hours29 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours30 = hours27.minus(hours29);
        int int31 = hours26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours29);
        org.joda.time.DurationFieldType durationFieldType32 = null;
        boolean boolean33 = hours26.isSupported(durationFieldType32);
        org.joda.time.Hours hours35 = hours26.minus((int) (short) -1);
        org.joda.time.Hours hours36 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod37 = hours36.toMutablePeriod();
        org.joda.time.Hours hours38 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours39 = hours36.minus(hours38);
        org.joda.time.Hours hours41 = hours38.plus(8);
        org.joda.time.Hours hours42 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType43 = null;
        int int44 = hours42.get(durationFieldType43);
        org.joda.time.DurationFieldType durationFieldType45 = hours42.getFieldType();
        boolean boolean46 = hours41.isSupported(durationFieldType45);
        int int47 = hours35.get(durationFieldType45);
        int int48 = hours24.get(durationFieldType45);
        int int49 = hours10.get(durationFieldType45);
        org.joda.time.DurationFieldType durationFieldType50 = hours10.getFieldType();
        org.joda.time.Hours hours51 = org.joda.time.Hours.ONE;
        int int52 = hours51.getHours();
        org.joda.time.Hours hours54 = hours51.plus(10);
        org.joda.time.Hours hours55 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod56 = hours55.toMutablePeriod();
        org.joda.time.Hours hours57 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours58 = hours55.minus(hours57);
        org.joda.time.Duration duration59 = hours55.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod60 = hours55.toMutablePeriod();
        org.joda.time.Hours hours61 = org.joda.time.Hours.EIGHT;
        int int63 = hours61.getValue((int) (short) 0);
        java.lang.String str64 = hours61.toString();
        boolean boolean65 = hours55.isGreaterThan(hours61);
        org.joda.time.Hours hours67 = hours61.minus(10);
        org.joda.time.Hours hours68 = hours61.negated();
        org.joda.time.Hours hours70 = hours68.plus((int) (byte) 0);
        org.joda.time.DurationFieldType durationFieldType72 = hours68.getFieldType(0);
        boolean boolean73 = hours51.equals((java.lang.Object) durationFieldType72);
        boolean boolean74 = hours10.isLessThan(hours51);
        // The following exception was thrown during execution in test generation
        try {
            int int76 = hours10.getValue((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 8 + "'", int47 == 8);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-8) + "'", int49 == (-8));
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(mutablePeriod56);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertNotNull(mutablePeriod60);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 8 + "'", int63 == 8);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "PT8H" + "'", str64, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertNotNull(hours70);
        org.junit.Assert.assertNotNull(durationFieldType72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
    }

    @Test
    public void test0627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0627");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.multipliedBy(1);
        org.joda.time.Hours hours8 = org.joda.time.Hours.ONE;
        int int9 = hours7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours8);
        int int10 = hours8.size();
        org.joda.time.MutablePeriod mutablePeriod11 = hours8.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours13 = org.joda.time.Hours.EIGHT;
        int int15 = hours13.getValue((int) (short) 0);
        org.joda.time.Hours hours16 = hours12.minus(hours13);
        boolean boolean18 = hours13.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours19 = null;
        org.joda.time.Hours hours20 = hours13.minus(hours19);
        java.lang.String str21 = hours20.toString();
        org.joda.time.Hours hours22 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours20);
        org.joda.time.Hours hours23 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod24 = hours23.toMutablePeriod();
        org.joda.time.Hours hours25 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours26 = hours23.minus(hours25);
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = hours23.get(durationFieldType27);
        org.joda.time.Hours hours30 = hours23.minus((int) (short) 0);
        int int31 = hours20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours23);
        org.joda.time.Hours hours33 = hours23.multipliedBy((int) 'a');
        org.joda.time.Hours hours34 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod35 = hours34.toMutablePeriod();
        org.joda.time.Hours hours36 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours37 = hours34.minus(hours36);
        org.joda.time.Duration duration38 = hours34.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod39 = hours34.toMutablePeriod();
        org.joda.time.Hours hours40 = org.joda.time.Hours.EIGHT;
        int int42 = hours40.getValue((int) (short) 0);
        java.lang.String str43 = hours40.toString();
        boolean boolean44 = hours34.isGreaterThan(hours40);
        org.joda.time.Hours hours46 = hours40.minus(10);
        org.joda.time.Hours hours47 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours48 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod49 = hours48.toMutablePeriod();
        org.joda.time.Hours hours50 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours51 = hours48.minus(hours50);
        int int52 = hours47.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours50);
        org.joda.time.Hours hours53 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours47);
        org.joda.time.DurationFieldType durationFieldType54 = null;
        int int55 = hours47.get(durationFieldType54);
        boolean boolean56 = hours46.equals((java.lang.Object) hours47);
        org.joda.time.Hours hours58 = hours47.minus(100);
        java.lang.Class<?> wildcardClass59 = hours58.getClass();
        boolean boolean60 = hours33.equals((java.lang.Object) hours58);
        org.joda.time.Hours hours61 = hours8.plus(hours58);
        java.lang.String str62 = hours61.toString();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 8 + "'", int15 == 8);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "PT8H" + "'", str21, "PT8H");
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertNotNull(mutablePeriod39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 8 + "'", int42 == 8);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "PT8H" + "'", str43, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(mutablePeriod49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "PT-92H" + "'", str62, "PT-92H");
    }

    @Test
    public void test0628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0628");
        org.joda.time.Hours hours0 = org.joda.time.Hours.TWO;
        org.joda.time.Hours hours1 = org.joda.time.Hours.MAX_VALUE;
        int int2 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours1);
        org.joda.time.Hours hours3 = hours1.negated();
        org.joda.time.Hours hours4 = hours3.negated();
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod6 = hours5.toMutablePeriod();
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours8 = hours5.minus(hours7);
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = hours5.get(durationFieldType9);
        org.joda.time.Hours hours12 = hours5.minus((int) (short) 0);
        org.joda.time.Hours hours13 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = hours13.get(durationFieldType14);
        org.joda.time.DurationFieldType durationFieldType16 = hours13.getFieldType();
        int int17 = hours12.get(durationFieldType16);
        org.joda.time.PeriodType periodType18 = hours12.getPeriodType();
        org.joda.time.Hours hours20 = hours12.multipliedBy(8);
        int int21 = hours12.size();
        org.joda.time.Hours hours23 = hours12.dividedBy(9);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Hours hours24 = hours4.plus(hours12);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: 2147483647 + 7");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 7 + "'", int17 == 7);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(hours23);
    }

    @Test
    public void test0629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0629");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period1 = hours0.toPeriod();
        org.joda.time.Hours hours3 = hours0.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod6 = hours5.toMutablePeriod();
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours8 = hours5.minus(hours7);
        org.joda.time.Duration duration9 = hours5.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod10 = hours5.toMutablePeriod();
        org.joda.time.Hours hours11 = org.joda.time.Hours.EIGHT;
        int int13 = hours11.getValue((int) (short) 0);
        java.lang.String str14 = hours11.toString();
        boolean boolean15 = hours5.isGreaterThan(hours11);
        org.joda.time.Hours hours17 = hours11.minus(10);
        org.joda.time.Hours hours18 = hours11.negated();
        org.joda.time.Duration duration19 = hours11.toStandardDuration();
        boolean boolean20 = hours3.isLessThan(hours11);
        java.lang.String str21 = hours3.toString();
        org.joda.time.Hours hours22 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours23 = org.joda.time.Hours.EIGHT;
        int int25 = hours23.getValue((int) (short) 0);
        org.joda.time.Hours hours26 = hours22.minus(hours23);
        org.joda.time.Hours hours27 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType28 = null;
        int int29 = hours27.get(durationFieldType28);
        org.joda.time.DurationFieldType durationFieldType30 = hours27.getFieldType();
        int int31 = hours22.get(durationFieldType30);
        boolean boolean32 = hours3.isSupported(durationFieldType30);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 8 + "'", int13 == 8);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "PT8H" + "'", str14, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "PT7H" + "'", str21, "PT7H");
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 8 + "'", int25 == 8);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 7 + "'", int31 == 7);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test0630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0630");
        org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT128H");
        org.junit.Assert.assertNotNull(hours1);
    }

    @Test
    public void test0631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0631");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Period period5 = hours4.toPeriod();
        int int6 = hours4.size();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
    }

    @Test
    public void test0632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0632");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((-91));
        org.junit.Assert.assertNotNull(hours1);
    }

    @Test
    public void test0633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0633");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours19 = hours1.plus((int) (byte) 100);
        int int20 = hours19.size();
        int int21 = hours19.getHours();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 108 + "'", int21 == 108);
    }

    @Test
    public void test0634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0634");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours12 = hours6.minus(10);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod15 = hours14.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours17 = hours14.minus(hours16);
        int int18 = hours13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours16);
        org.joda.time.Hours hours19 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours13);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = hours13.get(durationFieldType20);
        boolean boolean22 = hours12.equals((java.lang.Object) hours13);
        java.lang.String str23 = hours12.toString();
        org.joda.time.ReadableInterval readableInterval24 = null;
        org.joda.time.Hours hours25 = org.joda.time.Hours.hoursIn(readableInterval24);
        org.joda.time.DurationFieldType durationFieldType26 = hours25.getFieldType();
        org.joda.time.Hours hours28 = hours25.dividedBy((int) (byte) 10);
        org.joda.time.Hours hours30 = hours25.plus((int) (byte) 1);
        org.joda.time.Hours hours32 = hours25.dividedBy(100);
        int int33 = hours12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours32);
        org.joda.time.Hours hours34 = hours12.negated();
        org.joda.time.Hours hours36 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours37 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod38 = hours37.toMutablePeriod();
        org.joda.time.Hours hours39 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours40 = hours37.minus(hours39);
        org.joda.time.DurationFieldType durationFieldType41 = null;
        int int42 = hours37.get(durationFieldType41);
        org.joda.time.Hours hours44 = hours37.minus((int) (short) 0);
        org.joda.time.Hours hours45 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod46 = hours45.toMutablePeriod();
        org.joda.time.Hours hours47 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours48 = hours45.minus(hours47);
        org.joda.time.DurationFieldType durationFieldType49 = null;
        boolean boolean50 = hours47.isSupported(durationFieldType49);
        org.joda.time.Hours hours51 = hours44.minus(hours47);
        org.joda.time.Hours hours52 = hours36.plus(hours51);
        org.joda.time.Hours hours53 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod54 = hours53.toMutablePeriod();
        org.joda.time.Hours hours55 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours56 = hours53.minus(hours55);
        boolean boolean57 = hours51.isGreaterThan(hours55);
        org.joda.time.Hours hours58 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod59 = hours58.toMutablePeriod();
        org.joda.time.Hours hours60 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours61 = hours58.minus(hours60);
        org.joda.time.DurationFieldType durationFieldType62 = null;
        int int63 = hours58.get(durationFieldType62);
        org.joda.time.Hours hours65 = hours58.minus((int) (short) 0);
        org.joda.time.Hours hours66 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours58);
        org.joda.time.Hours hours67 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours68 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod69 = hours68.toMutablePeriod();
        org.joda.time.Hours hours70 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours71 = hours68.minus(hours70);
        int int72 = hours67.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours70);
        org.joda.time.DurationFieldType durationFieldType73 = null;
        boolean boolean74 = hours67.isSupported(durationFieldType73);
        org.joda.time.Hours hours76 = hours67.minus((int) (short) -1);
        org.joda.time.Hours hours77 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod78 = hours77.toMutablePeriod();
        org.joda.time.Hours hours79 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours80 = hours77.minus(hours79);
        org.joda.time.Hours hours82 = hours79.plus(8);
        org.joda.time.Hours hours83 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType84 = null;
        int int85 = hours83.get(durationFieldType84);
        org.joda.time.DurationFieldType durationFieldType86 = hours83.getFieldType();
        boolean boolean87 = hours82.isSupported(durationFieldType86);
        int int88 = hours76.get(durationFieldType86);
        org.joda.time.Hours hours89 = hours58.plus(hours76);
        org.joda.time.Hours hours90 = hours55.plus(hours58);
        org.joda.time.Hours hours91 = hours34.plus(hours58);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "PT-2H" + "'", str23, "PT-2H");
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(mutablePeriod46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(mutablePeriod54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(mutablePeriod59);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertNotNull(mutablePeriod69);
        org.junit.Assert.assertNotNull(hours70);
        org.junit.Assert.assertNotNull(hours71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(hours76);
        org.junit.Assert.assertNotNull(hours77);
        org.junit.Assert.assertNotNull(mutablePeriod78);
        org.junit.Assert.assertNotNull(hours79);
        org.junit.Assert.assertNotNull(hours80);
        org.junit.Assert.assertNotNull(hours82);
        org.junit.Assert.assertNotNull(hours83);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertNotNull(durationFieldType86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 8 + "'", int88 == 8);
        org.junit.Assert.assertNotNull(hours89);
        org.junit.Assert.assertNotNull(hours90);
        org.junit.Assert.assertNotNull(hours91);
    }

    @Test
    public void test0635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0635");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod6 = hours5.toMutablePeriod();
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours8 = hours5.minus(hours7);
        org.joda.time.Hours hours10 = hours7.plus(8);
        org.joda.time.Hours hours11 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = hours11.get(durationFieldType12);
        org.joda.time.DurationFieldType durationFieldType14 = hours11.getFieldType();
        boolean boolean15 = hours10.isSupported(durationFieldType14);
        boolean boolean16 = hours0.isSupported(durationFieldType14);
        org.joda.time.Hours hours18 = hours0.minus((int) (short) -1);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(hours18);
    }

    @Test
    public void test0636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0636");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(92);
        org.junit.Assert.assertNotNull(hours1);
    }

    @Test
    public void test0637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0637");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.PeriodType periodType10 = hours0.getPeriodType();
        org.joda.time.Hours hours11 = org.joda.time.Hours.EIGHT;
        int int13 = hours11.getValue((int) (short) 0);
        org.joda.time.Hours hours14 = hours0.minus(hours11);
        org.joda.time.Hours hours16 = hours0.plus(7);
        org.joda.time.Hours hours17 = hours0.negated();
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        int int23 = hours18.get(durationFieldType22);
        org.joda.time.Hours hours25 = hours18.minus((int) (short) 0);
        org.joda.time.Hours hours26 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = hours26.get(durationFieldType27);
        org.joda.time.DurationFieldType durationFieldType29 = hours26.getFieldType();
        int int30 = hours25.get(durationFieldType29);
        int int31 = hours0.get(durationFieldType29);
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours33 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod34 = hours33.toMutablePeriod();
        org.joda.time.Hours hours35 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours36 = hours33.minus(hours35);
        int int37 = hours32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours35);
        org.joda.time.Hours hours38 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours32);
        org.joda.time.DurationFieldType durationFieldType39 = null;
        int int40 = hours32.get(durationFieldType39);
        org.joda.time.DurationFieldType durationFieldType41 = null;
        int int42 = hours32.get(durationFieldType41);
        org.joda.time.Hours hours44 = hours32.minus(0);
        org.joda.time.DurationFieldType durationFieldType45 = hours44.getFieldType();
        boolean boolean46 = hours0.isSupported(durationFieldType45);
        org.joda.time.Hours hours47 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod48 = hours47.toMutablePeriod();
        org.joda.time.Hours hours49 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours50 = hours47.minus(hours49);
        org.joda.time.Duration duration51 = hours47.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod52 = hours47.toMutablePeriod();
        org.joda.time.Hours hours53 = org.joda.time.Hours.EIGHT;
        int int55 = hours53.getValue((int) (short) 0);
        java.lang.String str56 = hours53.toString();
        boolean boolean57 = hours47.isGreaterThan(hours53);
        org.joda.time.Hours hours59 = hours53.minus(10);
        org.joda.time.Hours hours60 = hours53.negated();
        org.joda.time.Duration duration61 = hours53.toStandardDuration();
        int int62 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours53);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType64 = hours0.getFieldType(5);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 8 + "'", int13 == 8);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 7 + "'", int30 == 7);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 7 + "'", int31 == 7);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(mutablePeriod48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertNotNull(mutablePeriod52);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 8 + "'", int55 == 8);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "PT8H" + "'", str56, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
    }

    @Test
    public void test0638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0638");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = hours0.get(durationFieldType1);
        org.joda.time.Minutes minutes3 = hours0.toStandardMinutes();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(minutes3);
    }

    @Test
    public void test0639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0639");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours12 = hours6.minus(10);
        java.lang.String str13 = hours6.toString();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "PT8H" + "'", str13, "PT8H");
    }

    @Test
    public void test0640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0640");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        boolean boolean22 = hours16.isGreaterThan(hours20);
        org.joda.time.Hours hours24 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours25 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod26 = hours25.toMutablePeriod();
        org.joda.time.Hours hours27 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours28 = hours25.minus(hours27);
        org.joda.time.DurationFieldType durationFieldType29 = null;
        int int30 = hours25.get(durationFieldType29);
        org.joda.time.Hours hours32 = hours25.minus((int) (short) 0);
        org.joda.time.Hours hours33 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod34 = hours33.toMutablePeriod();
        org.joda.time.Hours hours35 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours36 = hours33.minus(hours35);
        org.joda.time.DurationFieldType durationFieldType37 = null;
        boolean boolean38 = hours35.isSupported(durationFieldType37);
        org.joda.time.Hours hours39 = hours32.minus(hours35);
        org.joda.time.Hours hours40 = hours24.plus(hours39);
        org.joda.time.Hours hours41 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod42 = hours41.toMutablePeriod();
        org.joda.time.Hours hours43 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours44 = hours41.minus(hours43);
        boolean boolean45 = hours39.isGreaterThan(hours43);
        org.joda.time.Hours hours46 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod47 = hours46.toMutablePeriod();
        org.joda.time.Hours hours48 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours49 = hours46.minus(hours48);
        org.joda.time.DurationFieldType durationFieldType50 = null;
        int int51 = hours46.get(durationFieldType50);
        org.joda.time.Hours hours53 = hours46.minus((int) (short) 0);
        org.joda.time.Hours hours54 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours46);
        org.joda.time.Hours hours55 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours56 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod57 = hours56.toMutablePeriod();
        org.joda.time.Hours hours58 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours59 = hours56.minus(hours58);
        int int60 = hours55.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours58);
        org.joda.time.DurationFieldType durationFieldType61 = null;
        boolean boolean62 = hours55.isSupported(durationFieldType61);
        org.joda.time.Hours hours64 = hours55.minus((int) (short) -1);
        org.joda.time.Hours hours65 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod66 = hours65.toMutablePeriod();
        org.joda.time.Hours hours67 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours68 = hours65.minus(hours67);
        org.joda.time.Hours hours70 = hours67.plus(8);
        org.joda.time.Hours hours71 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType72 = null;
        int int73 = hours71.get(durationFieldType72);
        org.joda.time.DurationFieldType durationFieldType74 = hours71.getFieldType();
        boolean boolean75 = hours70.isSupported(durationFieldType74);
        int int76 = hours64.get(durationFieldType74);
        org.joda.time.Hours hours77 = hours46.plus(hours64);
        org.joda.time.Hours hours78 = hours43.plus(hours46);
        int int79 = hours20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours43);
        org.joda.time.Duration duration80 = hours20.toStandardDuration();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(mutablePeriod47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertNotNull(mutablePeriod57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertNotNull(mutablePeriod66);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertNotNull(hours70);
        org.junit.Assert.assertNotNull(hours71);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(durationFieldType74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 8 + "'", int76 == 8);
        org.junit.Assert.assertNotNull(hours77);
        org.junit.Assert.assertNotNull(hours78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(duration80);
    }

    @Test
    public void test0641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0641");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        int int5 = hours4.getHours();
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours7 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod8 = hours7.toMutablePeriod();
        org.joda.time.Hours hours9 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours10 = hours7.minus(hours9);
        int int11 = hours6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours9);
        org.joda.time.DurationFieldType durationFieldType12 = null;
        boolean boolean13 = hours6.isSupported(durationFieldType12);
        org.joda.time.Hours hours15 = hours6.minus((int) (short) -1);
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod17 = hours16.toMutablePeriod();
        org.joda.time.Hours hours18 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours19 = hours16.minus(hours18);
        org.joda.time.Hours hours21 = hours18.plus(8);
        org.joda.time.Hours hours22 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType23 = null;
        int int24 = hours22.get(durationFieldType23);
        org.joda.time.DurationFieldType durationFieldType25 = hours22.getFieldType();
        boolean boolean26 = hours21.isSupported(durationFieldType25);
        int int27 = hours15.get(durationFieldType25);
        boolean boolean28 = hours4.isSupported(durationFieldType25);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Hours hours30 = hours4.dividedBy((int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: / by zero");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 8 + "'", int27 == 8);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test0642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0642");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours12 = hours6.minus(10);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod15 = hours14.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours17 = hours14.minus(hours16);
        int int18 = hours13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours16);
        org.joda.time.Hours hours19 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours13);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = hours13.get(durationFieldType20);
        boolean boolean22 = hours12.equals((java.lang.Object) hours13);
        java.lang.String str23 = hours12.toString();
        org.joda.time.DurationFieldType durationFieldType25 = hours12.getFieldType(0);
        org.joda.time.Hours hours26 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours12);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "PT-2H" + "'", str23, "PT-2H");
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertNotNull(hours26);
    }

    @Test
    public void test0643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0643");
        org.joda.time.Hours hours0 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours2 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours6 = hours3.minus(hours5);
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = hours3.get(durationFieldType7);
        org.joda.time.Hours hours10 = hours3.minus((int) (short) 0);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod12 = hours11.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours14 = hours11.minus(hours13);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = hours13.isSupported(durationFieldType15);
        org.joda.time.Hours hours17 = hours10.minus(hours13);
        org.joda.time.Hours hours18 = hours2.plus(hours17);
        int int19 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours17);
        org.joda.time.MutablePeriod mutablePeriod20 = hours17.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours22 = org.joda.time.Hours.EIGHT;
        int int24 = hours22.getValue((int) (short) 0);
        org.joda.time.Hours hours25 = hours21.minus(hours22);
        org.joda.time.Hours hours26 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours28 = org.joda.time.Hours.EIGHT;
        int int30 = hours28.getValue((int) (short) 0);
        org.joda.time.Hours hours31 = hours27.minus(hours28);
        org.joda.time.Hours hours32 = hours26.minus(hours27);
        int int33 = hours26.size();
        org.joda.time.Duration duration34 = hours26.toStandardDuration();
        boolean boolean35 = hours22.isGreaterThan(hours26);
        org.joda.time.MutablePeriod mutablePeriod36 = hours26.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType37 = hours26.getFieldType();
        org.joda.time.Hours hours38 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period39 = hours38.toPeriod();
        org.joda.time.Hours hours41 = hours38.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod42 = hours41.toMutablePeriod();
        org.joda.time.Hours hours43 = org.joda.time.Hours.THREE;
        org.joda.time.Period period44 = hours43.toPeriod();
        org.joda.time.Hours hours46 = hours43.plus((int) (byte) -1);
        org.joda.time.Hours hours47 = hours41.minus(hours43);
        org.joda.time.Hours hours48 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod49 = hours48.toMutablePeriod();
        org.joda.time.Hours hours50 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours51 = hours48.minus(hours50);
        org.joda.time.DurationFieldType durationFieldType52 = null;
        int int53 = hours48.get(durationFieldType52);
        org.joda.time.Hours hours55 = hours48.minus((int) (short) 0);
        org.joda.time.Hours hours56 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType57 = null;
        int int58 = hours56.get(durationFieldType57);
        org.joda.time.DurationFieldType durationFieldType59 = hours56.getFieldType();
        int int60 = hours55.get(durationFieldType59);
        int int61 = hours43.get(durationFieldType59);
        int int62 = hours26.get(durationFieldType59);
        boolean boolean63 = hours17.isGreaterThan(hours26);
        // The following exception was thrown during execution in test generation
        try {
            int int65 = hours17.getValue(5);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 8 + "'", int24 == 8);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 8 + "'", int30 == 8);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(mutablePeriod36);
        org.junit.Assert.assertNotNull(durationFieldType37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(mutablePeriod49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(durationFieldType59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 7 + "'", int60 == 7);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 3 + "'", int61 == 3);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 6 + "'", int62 == 6);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test0644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0644");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((-1));
        org.joda.time.Hours hours2 = hours1.negated();
        org.joda.time.Hours hours4 = hours2.multipliedBy(8);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod7 = hours6.toMutablePeriod();
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours9 = hours6.minus(hours8);
        int int10 = hours5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours8);
        org.joda.time.DurationFieldType durationFieldType11 = null;
        boolean boolean12 = hours5.isSupported(durationFieldType11);
        org.joda.time.Hours hours14 = hours5.multipliedBy((int) (short) 10);
        org.joda.time.Period period15 = hours5.toPeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod18 = hours17.toMutablePeriod();
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours20 = hours17.minus(hours19);
        int int21 = hours16.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours19);
        org.joda.time.Hours hours22 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours16);
        org.joda.time.Hours hours24 = hours22.multipliedBy((int) (byte) 10);
        boolean boolean25 = hours5.isLessThan(hours24);
        org.joda.time.Hours hours26 = org.joda.time.Hours.ONE;
        int int27 = hours26.getHours();
        org.joda.time.Hours hours29 = hours26.plus(10);
        org.joda.time.Hours hours30 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours31 = hours30.negated();
        org.joda.time.DurationFieldType durationFieldType32 = hours30.getFieldType();
        boolean boolean33 = hours26.equals((java.lang.Object) hours30);
        org.joda.time.Hours hours35 = hours26.minus((int) '4');
        org.joda.time.Hours hours36 = hours5.minus(hours35);
        org.joda.time.Hours hours38 = hours5.multipliedBy((int) (byte) 0);
        boolean boolean39 = hours4.equals((java.lang.Object) (byte) 0);
        org.joda.time.Hours hours41 = hours4.dividedBy(3);
        java.lang.String str42 = hours4.toString();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "PT8H" + "'", str42, "PT8H");
    }

    @Test
    public void test0645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0645");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours7 = hours0.minus((int) 'a');
        org.joda.time.Hours hours9 = hours7.minus((int) (short) 1);
        int int10 = hours7.size();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
    }

    @Test
    public void test0646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0646");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours11 = hours8.minus(hours10);
        org.joda.time.DurationFieldType durationFieldType12 = null;
        boolean boolean13 = hours10.isSupported(durationFieldType12);
        org.joda.time.Hours hours14 = hours7.minus(hours10);
        org.joda.time.Hours hours15 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod17 = hours16.toMutablePeriod();
        org.joda.time.Hours hours18 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours19 = hours16.minus(hours18);
        int int20 = hours15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours18);
        org.joda.time.DurationFieldType durationFieldType21 = null;
        boolean boolean22 = hours15.isSupported(durationFieldType21);
        org.joda.time.Hours hours24 = hours15.minus((int) (short) -1);
        org.joda.time.PeriodType periodType25 = hours15.getPeriodType();
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        int int28 = hours26.getValue((int) (short) 0);
        org.joda.time.Hours hours29 = hours15.minus(hours26);
        org.joda.time.Hours hours31 = hours15.plus(7);
        org.joda.time.Hours hours32 = hours14.minus(hours31);
        org.joda.time.Hours hours34 = org.joda.time.Hours.hours((int) '4');
        org.joda.time.DurationFieldType durationFieldType35 = hours34.getFieldType();
        org.joda.time.Period period36 = hours34.toPeriod();
        org.joda.time.Period period37 = hours34.toPeriod();
        org.joda.time.Hours hours38 = hours32.plus(hours34);
        java.lang.String str39 = hours32.toString();
        org.joda.time.ReadableInterval readableInterval40 = null;
        org.joda.time.Hours hours41 = org.joda.time.Hours.hoursIn(readableInterval40);
        org.joda.time.DurationFieldType durationFieldType42 = hours41.getFieldType();
        org.joda.time.Hours hours44 = hours41.dividedBy((int) (byte) 10);
        org.joda.time.Hours hours45 = hours32.minus(hours44);
        // The following exception was thrown during execution in test generation
        try {
            int int47 = hours32.getValue((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 32");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 8 + "'", int28 == 8);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "PT-15H" + "'", str39, "PT-15H");
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
    }

    @Test
    public void test0647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0647");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        java.lang.String str5 = hours0.toString();
        org.joda.time.Hours hours7 = hours0.minus((-6));
        org.joda.time.Hours hours8 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours10 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod12 = hours11.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours14 = hours11.minus(hours13);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = hours11.get(durationFieldType15);
        org.joda.time.Hours hours18 = hours11.minus((int) (short) 0);
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        org.joda.time.DurationFieldType durationFieldType23 = null;
        boolean boolean24 = hours21.isSupported(durationFieldType23);
        org.joda.time.Hours hours25 = hours18.minus(hours21);
        org.joda.time.Hours hours26 = hours10.plus(hours25);
        int int27 = hours8.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours25);
        org.joda.time.MutablePeriod mutablePeriod28 = hours25.toMutablePeriod();
        org.joda.time.Duration duration29 = hours25.toStandardDuration();
        org.joda.time.Hours hours31 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod33 = hours32.toMutablePeriod();
        org.joda.time.Hours hours34 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours35 = hours32.minus(hours34);
        org.joda.time.DurationFieldType durationFieldType36 = null;
        int int37 = hours32.get(durationFieldType36);
        org.joda.time.Hours hours39 = hours32.minus((int) (short) 0);
        org.joda.time.Hours hours40 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod41 = hours40.toMutablePeriod();
        org.joda.time.Hours hours42 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours43 = hours40.minus(hours42);
        org.joda.time.DurationFieldType durationFieldType44 = null;
        boolean boolean45 = hours42.isSupported(durationFieldType44);
        org.joda.time.Hours hours46 = hours39.minus(hours42);
        org.joda.time.Hours hours47 = hours31.plus(hours46);
        org.joda.time.Hours hours48 = hours25.plus(hours31);
        org.joda.time.Hours hours49 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod50 = hours49.toMutablePeriod();
        org.joda.time.Hours hours51 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours52 = hours49.minus(hours51);
        org.joda.time.DurationFieldType durationFieldType53 = null;
        int int54 = hours49.get(durationFieldType53);
        org.joda.time.Hours hours56 = hours49.minus((int) (short) 0);
        org.joda.time.Hours hours57 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType58 = null;
        int int59 = hours57.get(durationFieldType58);
        org.joda.time.DurationFieldType durationFieldType60 = hours57.getFieldType();
        int int61 = hours56.get(durationFieldType60);
        org.joda.time.Hours hours62 = org.joda.time.Hours.ONE;
        int int63 = hours62.getHours();
        org.joda.time.Hours hours65 = hours62.plus(10);
        org.joda.time.Hours hours66 = hours56.minus(hours65);
        int int67 = hours25.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours56);
        org.joda.time.Hours hours68 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours25);
        org.joda.time.Hours hours69 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours70 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours71 = org.joda.time.Hours.EIGHT;
        int int73 = hours71.getValue((int) (short) 0);
        org.joda.time.Hours hours74 = hours70.minus(hours71);
        org.joda.time.Hours hours75 = hours69.minus(hours70);
        int int76 = hours69.size();
        org.joda.time.PeriodType periodType77 = hours69.getPeriodType();
        org.joda.time.Hours hours78 = hours68.minus(hours69);
        boolean boolean79 = hours7.isLessThan(hours69);
        org.joda.time.Hours hours80 = hours69.negated();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "PT7H" + "'", str5, "PT7H");
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(mutablePeriod41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(mutablePeriod50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(durationFieldType60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 7 + "'", int61 == 7);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertNotNull(hours69);
        org.junit.Assert.assertNotNull(hours70);
        org.junit.Assert.assertNotNull(hours71);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 8 + "'", int73 == 8);
        org.junit.Assert.assertNotNull(hours74);
        org.junit.Assert.assertNotNull(hours75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertNotNull(periodType77);
        org.junit.Assert.assertNotNull(hours78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(hours80);
    }

    @Test
    public void test0648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0648");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.multipliedBy((int) (short) 10);
        org.joda.time.MutablePeriod mutablePeriod10 = hours0.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod14 = hours13.toMutablePeriod();
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours16 = hours13.minus(hours15);
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = hours13.get(durationFieldType17);
        org.joda.time.Hours hours20 = hours13.minus((int) (short) 0);
        org.joda.time.Hours hours21 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod22 = hours21.toMutablePeriod();
        org.joda.time.Hours hours23 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours24 = hours21.minus(hours23);
        org.joda.time.DurationFieldType durationFieldType25 = null;
        boolean boolean26 = hours23.isSupported(durationFieldType25);
        org.joda.time.Hours hours27 = hours20.minus(hours23);
        org.joda.time.Hours hours28 = hours12.plus(hours27);
        boolean boolean29 = hours0.isLessThan(hours27);
        java.lang.Class<?> wildcardClass30 = hours0.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0649");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod6 = hours5.toMutablePeriod();
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours8 = hours5.minus(hours7);
        org.joda.time.Hours hours10 = hours7.plus(8);
        org.joda.time.Hours hours11 = hours1.minus(hours7);
        int int12 = hours11.size();
        org.joda.time.Hours hours14 = hours11.multipliedBy(0);
        org.joda.time.Hours hours16 = hours14.multipliedBy((-25));
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours16);
    }

    @Test
    public void test0650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0650");
        org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT16H");
        org.joda.time.Period period2 = hours1.toPeriod();
        org.joda.time.Hours hours4 = hours1.minus((int) (byte) -1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.ONE;
        org.joda.time.Hours hours7 = hours5.dividedBy((int) (byte) -1);
        org.joda.time.DurationFieldType durationFieldType9 = hours5.getFieldType(0);
        boolean boolean10 = hours1.isSupported(durationFieldType9);
        org.joda.time.Hours hours12 = hours1.multipliedBy((-2));
        // The following exception was thrown during execution in test generation
        try {
            int int14 = hours1.getValue((-2));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -2");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(hours12);
    }

    @Test
    public void test0651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0651");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        boolean boolean22 = hours16.isGreaterThan(hours20);
        org.joda.time.Hours hours24 = hours16.plus((-2));
        int int25 = hours16.getHours();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
    }

    @Test
    public void test0652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0652");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        boolean boolean6 = hours1.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours7 = null;
        org.joda.time.Hours hours8 = hours1.minus(hours7);
        org.joda.time.Hours hours9 = hours8.negated();
        org.joda.time.Hours hours10 = hours8.negated();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
    }

    @Test
    public void test0653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0653");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Hours hours5 = hours2.plus(8);
        org.joda.time.Hours hours6 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = hours6.get(durationFieldType7);
        org.joda.time.DurationFieldType durationFieldType9 = hours6.getFieldType();
        boolean boolean10 = hours5.isSupported(durationFieldType9);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod13 = hours12.toMutablePeriod();
        org.joda.time.Hours hours14 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours15 = hours12.minus(hours14);
        int int16 = hours11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours14);
        org.joda.time.DurationFieldType durationFieldType17 = null;
        boolean boolean18 = hours11.isSupported(durationFieldType17);
        org.joda.time.Hours hours20 = hours11.minus((int) (short) -1);
        org.joda.time.PeriodType periodType21 = hours11.getPeriodType();
        org.joda.time.Hours hours22 = org.joda.time.Hours.EIGHT;
        int int24 = hours22.getValue((int) (short) 0);
        org.joda.time.Hours hours25 = hours11.minus(hours22);
        org.joda.time.Hours hours26 = hours5.minus(hours25);
        org.joda.time.Hours hours28 = org.joda.time.Hours.parseHours("PT8H");
        boolean boolean29 = hours26.isLessThan(hours28);
        org.joda.time.Hours hours30 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours31 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod32 = hours31.toMutablePeriod();
        org.joda.time.Hours hours33 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours34 = hours31.minus(hours33);
        int int35 = hours30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours33);
        org.joda.time.Hours hours37 = hours30.minus((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod38 = hours30.toMutablePeriod();
        org.joda.time.Hours hours39 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours40 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod41 = hours40.toMutablePeriod();
        org.joda.time.Hours hours42 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours43 = hours40.minus(hours42);
        int int44 = hours39.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours42);
        org.joda.time.DurationFieldType durationFieldType45 = null;
        boolean boolean46 = hours39.isSupported(durationFieldType45);
        org.joda.time.Hours hours48 = hours39.minus((int) (short) -1);
        org.joda.time.Hours hours49 = hours48.negated();
        org.joda.time.Period period50 = hours48.toPeriod();
        boolean boolean51 = hours30.equals((java.lang.Object) hours48);
        boolean boolean52 = hours26.equals((java.lang.Object) boolean51);
        org.joda.time.Hours hours53 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours54 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours55 = org.joda.time.Hours.EIGHT;
        int int57 = hours55.getValue((int) (short) 0);
        org.joda.time.Hours hours58 = hours54.minus(hours55);
        org.joda.time.Hours hours59 = hours53.minus(hours54);
        org.joda.time.Hours hours61 = hours54.dividedBy(1);
        org.joda.time.Duration duration62 = hours54.toStandardDuration();
        boolean boolean63 = hours26.equals((java.lang.Object) hours54);
        org.joda.time.Hours hours64 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours26);
        java.lang.Object obj65 = null;
        boolean boolean66 = hours26.equals(obj65);
        int int67 = hours26.getHours();
        java.lang.Class<?> wildcardClass68 = hours26.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 8 + "'", int24 == 8);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(mutablePeriod41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 8 + "'", int57 == 8);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 17 + "'", int67 == 17);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test0654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0654");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours6 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = hours0.get(durationFieldType7);
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = hours0.get(durationFieldType9);
        org.joda.time.Hours hours12 = hours0.minus(0);
        org.joda.time.DurationFieldType durationFieldType13 = hours12.getFieldType();
        org.joda.time.Hours hours14 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours12);
        org.joda.time.Hours hours16 = hours12.plus((int) (short) 1);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours16);
    }

    @Test
    public void test0655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0655");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        int int23 = hours18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours21);
        org.joda.time.Hours hours24 = hours1.plus(hours21);
        org.joda.time.Hours hours25 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period26 = hours25.toPeriod();
        org.joda.time.Hours hours28 = hours25.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod29 = hours28.toMutablePeriod();
        org.joda.time.Hours hours30 = org.joda.time.Hours.THREE;
        org.joda.time.Period period31 = hours30.toPeriod();
        org.joda.time.Hours hours33 = hours30.plus((int) (byte) -1);
        org.joda.time.Hours hours34 = hours28.minus(hours30);
        org.joda.time.DurationFieldType durationFieldType35 = hours34.getFieldType();
        org.joda.time.Hours hours36 = hours24.plus(hours34);
        org.joda.time.Hours hours38 = hours36.multipliedBy((int) (byte) -1);
        org.joda.time.Hours hours40 = hours36.plus(6);
        // The following exception was thrown during execution in test generation
        try {
            int int42 = hours40.getValue((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours40);
    }

    @Test
    public void test0656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0656");
        org.joda.time.Hours hours0 = org.joda.time.Hours.THREE;
        org.joda.time.Period period1 = hours0.toPeriod();
        org.joda.time.Hours hours3 = hours0.plus((int) (byte) -1);
        org.joda.time.Hours hours5 = hours3.minus((int) (byte) 100);
        org.joda.time.DurationFieldType durationFieldType6 = hours3.getFieldType();
        org.joda.time.Hours hours7 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod8 = hours7.toMutablePeriod();
        org.joda.time.Hours hours9 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours10 = hours7.minus(hours9);
        org.joda.time.Duration duration11 = hours7.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod12 = hours7.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.EIGHT;
        int int15 = hours13.getValue((int) (short) 0);
        java.lang.String str16 = hours13.toString();
        boolean boolean17 = hours7.isGreaterThan(hours13);
        org.joda.time.Hours hours18 = hours3.minus(hours13);
        org.joda.time.Hours hours19 = hours3.negated();
        org.joda.time.Hours hours20 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours21 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod22 = hours21.toMutablePeriod();
        org.joda.time.Hours hours23 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours24 = hours21.minus(hours23);
        int int25 = hours20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours23);
        org.joda.time.DurationFieldType durationFieldType26 = null;
        boolean boolean27 = hours20.isSupported(durationFieldType26);
        org.joda.time.PeriodType periodType28 = hours20.getPeriodType();
        org.joda.time.Hours hours29 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours30 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours31 = org.joda.time.Hours.EIGHT;
        int int33 = hours31.getValue((int) (short) 0);
        org.joda.time.Hours hours34 = hours30.minus(hours31);
        org.joda.time.Hours hours35 = hours29.minus(hours30);
        int int36 = hours29.size();
        org.joda.time.Hours hours37 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours38 = org.joda.time.Hours.EIGHT;
        int int40 = hours38.getValue((int) (short) 0);
        org.joda.time.Hours hours41 = hours37.minus(hours38);
        boolean boolean43 = hours38.equals((java.lang.Object) (short) 10);
        int int44 = hours29.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours38);
        org.joda.time.Hours hours45 = hours20.plus(hours29);
        org.joda.time.Hours hours46 = hours19.minus(hours20);
        java.lang.Class<?> wildcardClass47 = hours46.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 8 + "'", int15 == 8);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT8H" + "'", str16, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 8 + "'", int33 == 8);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 8 + "'", int40 == 8);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0657");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.MutablePeriod mutablePeriod6 = hours0.toMutablePeriod();
        org.joda.time.Hours hours8 = hours0.multipliedBy((int) (byte) 100);
        org.joda.time.Hours hours9 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod10 = hours9.toMutablePeriod();
        org.joda.time.Hours hours11 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours12 = hours9.minus(hours11);
        int int13 = hours11.size();
        boolean boolean14 = hours8.isLessThan(hours11);
        // The following exception was thrown during execution in test generation
        try {
            int int16 = hours11.getValue((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0658");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        boolean boolean22 = hours16.isGreaterThan(hours20);
        org.joda.time.Hours hours23 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod24 = hours23.toMutablePeriod();
        org.joda.time.Hours hours25 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours26 = hours23.minus(hours25);
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = hours23.get(durationFieldType27);
        org.joda.time.Hours hours30 = hours23.minus((int) (short) 0);
        org.joda.time.Hours hours31 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours23);
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours33 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod34 = hours33.toMutablePeriod();
        org.joda.time.Hours hours35 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours36 = hours33.minus(hours35);
        int int37 = hours32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours35);
        org.joda.time.DurationFieldType durationFieldType38 = null;
        boolean boolean39 = hours32.isSupported(durationFieldType38);
        org.joda.time.Hours hours41 = hours32.minus((int) (short) -1);
        org.joda.time.Hours hours42 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod43 = hours42.toMutablePeriod();
        org.joda.time.Hours hours44 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours45 = hours42.minus(hours44);
        org.joda.time.Hours hours47 = hours44.plus(8);
        org.joda.time.Hours hours48 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType49 = null;
        int int50 = hours48.get(durationFieldType49);
        org.joda.time.DurationFieldType durationFieldType51 = hours48.getFieldType();
        boolean boolean52 = hours47.isSupported(durationFieldType51);
        int int53 = hours41.get(durationFieldType51);
        org.joda.time.Hours hours54 = hours23.plus(hours41);
        org.joda.time.Hours hours55 = hours20.plus(hours23);
        org.joda.time.Hours hours56 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours57 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod58 = hours57.toMutablePeriod();
        org.joda.time.Hours hours59 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours60 = hours57.minus(hours59);
        int int61 = hours56.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours59);
        org.joda.time.Hours hours63 = hours59.multipliedBy(0);
        org.joda.time.Hours hours64 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours65 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod66 = hours65.toMutablePeriod();
        org.joda.time.Hours hours67 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours68 = hours65.minus(hours67);
        int int69 = hours64.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours67);
        org.joda.time.DurationFieldType durationFieldType70 = null;
        boolean boolean71 = hours64.isSupported(durationFieldType70);
        org.joda.time.Hours hours73 = hours64.minus((int) (short) -1);
        org.joda.time.PeriodType periodType74 = hours64.getPeriodType();
        int int75 = hours64.getHours();
        boolean boolean76 = hours59.equals((java.lang.Object) int75);
        org.joda.time.Hours hours77 = hours23.minus(hours59);
        int int78 = hours59.getHours();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(durationFieldType51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 8 + "'", int53 == 8);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(mutablePeriod58);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertNotNull(mutablePeriod66);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(hours73);
        org.junit.Assert.assertNotNull(periodType74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 7 + "'", int75 == 7);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(hours77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 8 + "'", int78 == 8);
    }

    @Test
    public void test0659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0659");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod6 = hours5.toMutablePeriod();
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours8 = hours5.minus(hours7);
        org.joda.time.Hours hours10 = hours7.plus(8);
        org.joda.time.Hours hours11 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = hours11.get(durationFieldType12);
        org.joda.time.DurationFieldType durationFieldType14 = hours11.getFieldType();
        boolean boolean15 = hours10.isSupported(durationFieldType14);
        boolean boolean16 = hours0.isSupported(durationFieldType14);
        org.joda.time.Hours hours17 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType18 = null;
        int int19 = hours17.get(durationFieldType18);
        org.joda.time.Hours hours21 = hours17.dividedBy(100);
        org.joda.time.Hours hours23 = hours21.plus((int) (byte) 10);
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours25 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod26 = hours25.toMutablePeriod();
        org.joda.time.Hours hours27 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours28 = hours25.minus(hours27);
        int int29 = hours24.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours27);
        org.joda.time.DurationFieldType durationFieldType30 = null;
        boolean boolean31 = hours24.isSupported(durationFieldType30);
        org.joda.time.Hours hours33 = hours24.minus((int) (short) -1);
        org.joda.time.Hours hours34 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod35 = hours34.toMutablePeriod();
        org.joda.time.Hours hours36 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours37 = hours34.minus(hours36);
        org.joda.time.Hours hours39 = hours36.plus(8);
        org.joda.time.Hours hours40 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType41 = null;
        int int42 = hours40.get(durationFieldType41);
        org.joda.time.DurationFieldType durationFieldType43 = hours40.getFieldType();
        boolean boolean44 = hours39.isSupported(durationFieldType43);
        int int45 = hours33.get(durationFieldType43);
        boolean boolean46 = hours23.isSupported(durationFieldType43);
        org.joda.time.Hours hours47 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod48 = hours47.toMutablePeriod();
        org.joda.time.Hours hours49 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours50 = hours47.minus(hours49);
        org.joda.time.DurationFieldType durationFieldType51 = null;
        int int52 = hours47.get(durationFieldType51);
        org.joda.time.Hours hours54 = hours47.minus((int) (short) 0);
        org.joda.time.Hours hours55 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours47);
        boolean boolean56 = hours23.equals((java.lang.Object) hours55);
        org.joda.time.Hours hours58 = hours23.plus((-1));
        org.joda.time.Period period59 = hours58.toPeriod();
        int int60 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours58);
        org.joda.time.Period period61 = hours58.toPeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(durationFieldType43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 8 + "'", int45 == 8);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(mutablePeriod48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(period61);
    }

    @Test
    public void test0660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0660");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        int int9 = hours7.getValue((int) (short) 0);
        org.joda.time.Hours hours10 = hours6.minus(hours7);
        org.joda.time.Hours hours11 = hours5.minus(hours6);
        int int12 = hours5.size();
        org.joda.time.Duration duration13 = hours5.toStandardDuration();
        boolean boolean14 = hours1.isGreaterThan(hours5);
        org.joda.time.Hours hours16 = hours5.plus((int) (byte) -1);
        org.joda.time.DurationFieldType durationFieldType17 = hours16.getFieldType();
        // The following exception was thrown during execution in test generation
        try {
            int int19 = hours16.getValue(10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8 + "'", int9 == 8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(durationFieldType17);
    }

    @Test
    public void test0661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0661");
        org.joda.time.Hours hours0 = org.joda.time.Hours.TWO;
        org.joda.time.Hours hours1 = org.joda.time.Hours.MAX_VALUE;
        int int2 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours1);
        int int3 = hours1.size();
        org.joda.time.Hours hours4 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        int int9 = hours7.getValue((int) (short) 0);
        org.joda.time.Hours hours10 = hours6.minus(hours7);
        org.joda.time.Hours hours11 = hours5.minus(hours6);
        int int12 = hours5.size();
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours14 = org.joda.time.Hours.EIGHT;
        int int16 = hours14.getValue((int) (short) 0);
        org.joda.time.Hours hours17 = hours13.minus(hours14);
        boolean boolean19 = hours14.equals((java.lang.Object) (short) 10);
        int int20 = hours5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours14);
        org.joda.time.Period period21 = hours14.toPeriod();
        org.joda.time.Duration duration22 = hours14.toStandardDuration();
        org.joda.time.Hours hours23 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours24 = org.joda.time.Hours.EIGHT;
        int int26 = hours24.getValue((int) (short) 0);
        org.joda.time.Hours hours27 = hours23.minus(hours24);
        org.joda.time.Hours hours28 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType29 = null;
        int int30 = hours28.get(durationFieldType29);
        org.joda.time.DurationFieldType durationFieldType31 = hours28.getFieldType();
        int int32 = hours23.get(durationFieldType31);
        org.joda.time.Hours hours34 = hours23.multipliedBy(7);
        org.joda.time.Hours hours36 = hours34.minus((-2));
        boolean boolean37 = hours14.equals((java.lang.Object) hours34);
        org.joda.time.Hours hours38 = hours14.negated();
        org.joda.time.Hours hours40 = org.joda.time.Hours.parseHours("PT16H");
        org.joda.time.Hours hours41 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours42 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod43 = hours42.toMutablePeriod();
        org.joda.time.Hours hours44 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours45 = hours42.minus(hours44);
        int int46 = hours41.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours44);
        org.joda.time.MutablePeriod mutablePeriod47 = hours41.toMutablePeriod();
        org.joda.time.Hours hours48 = hours40.minus(hours41);
        org.joda.time.Hours hours49 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours50 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod51 = hours50.toMutablePeriod();
        org.joda.time.Hours hours52 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours53 = hours50.minus(hours52);
        int int54 = hours49.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours52);
        org.joda.time.Hours hours55 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours49);
        org.joda.time.Hours hours56 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours57 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType58 = null;
        int int59 = hours57.get(durationFieldType58);
        boolean boolean60 = hours56.equals((java.lang.Object) durationFieldType58);
        org.joda.time.Hours hours61 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours62 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod63 = hours62.toMutablePeriod();
        org.joda.time.Hours hours64 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours65 = hours62.minus(hours64);
        int int66 = hours61.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours64);
        org.joda.time.Hours hours68 = hours64.multipliedBy(0);
        org.joda.time.Hours hours69 = hours56.plus(hours68);
        boolean boolean70 = hours55.isGreaterThan(hours68);
        boolean boolean71 = hours48.isLessThan(hours68);
        org.joda.time.Hours hours72 = hours38.plus(hours48);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Hours hours73 = hours4.plus(hours48);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: 2147483647 + 9");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8 + "'", int9 == 8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 8 + "'", int16 == 8);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 8 + "'", int26 == 8);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 7 + "'", int32 == 7);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(mutablePeriod51);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertNotNull(mutablePeriod63);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertNotNull(hours69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(hours72);
    }

    @Test
    public void test0662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0662");
        org.joda.time.Hours hours0 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours1 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = hours1.get(durationFieldType2);
        boolean boolean4 = hours0.equals((java.lang.Object) durationFieldType2);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod7 = hours6.toMutablePeriod();
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours9 = hours6.minus(hours8);
        int int10 = hours5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours8);
        org.joda.time.Hours hours12 = hours8.multipliedBy(0);
        org.joda.time.Hours hours13 = hours0.plus(hours12);
        org.joda.time.Hours hours14 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = hours14.get(durationFieldType15);
        org.joda.time.DurationFieldType durationFieldType17 = hours14.getFieldType();
        org.joda.time.DurationFieldType durationFieldType18 = hours14.getFieldType();
        org.joda.time.DurationFieldType durationFieldType19 = hours14.getFieldType();
        org.joda.time.Hours hours20 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours21 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod22 = hours21.toMutablePeriod();
        org.joda.time.Hours hours23 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours24 = hours21.minus(hours23);
        int int25 = hours20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours23);
        org.joda.time.Hours hours26 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours20);
        org.joda.time.Hours hours28 = hours20.plus(0);
        boolean boolean29 = hours14.isGreaterThan(hours20);
        org.joda.time.Hours hours30 = hours13.plus(hours14);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(hours30);
    }

    @Test
    public void test0663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0663");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        int int9 = hours7.getValue((int) (short) 0);
        org.joda.time.Hours hours10 = hours6.minus(hours7);
        org.joda.time.Hours hours11 = hours5.minus(hours6);
        int int12 = hours5.size();
        org.joda.time.Duration duration13 = hours5.toStandardDuration();
        boolean boolean14 = hours1.isGreaterThan(hours5);
        org.joda.time.Hours hours15 = org.joda.time.Hours.TWO;
        org.joda.time.Hours hours16 = org.joda.time.Hours.MAX_VALUE;
        int int17 = hours15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours16);
        org.joda.time.Hours hours18 = hours16.negated();
        org.joda.time.Hours hours19 = hours18.negated();
        boolean boolean20 = hours5.isLessThan(hours18);
        java.lang.String str21 = hours5.toString();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8 + "'", int9 == 8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "PT6H" + "'", str21, "PT6H");
    }

    @Test
    public void test0664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0664");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(0);
        org.joda.time.Hours hours3 = hours1.multipliedBy((int) (short) 0);
        org.joda.time.Hours hours5 = hours3.dividedBy((int) 'a');
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours5);
    }

    @Test
    public void test0665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0665");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours12 = hours6.minus(10);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod15 = hours14.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours17 = hours14.minus(hours16);
        int int18 = hours13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours16);
        org.joda.time.Hours hours19 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours13);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = hours13.get(durationFieldType20);
        boolean boolean22 = hours12.equals((java.lang.Object) hours13);
        java.lang.String str23 = hours12.toString();
        org.joda.time.DurationFieldType durationFieldType25 = hours12.getFieldType(0);
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours27 = org.joda.time.Hours.EIGHT;
        int int29 = hours27.getValue((int) (short) 0);
        org.joda.time.Hours hours30 = hours26.minus(hours27);
        boolean boolean32 = hours27.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours33 = null;
        org.joda.time.Hours hours34 = hours27.minus(hours33);
        org.joda.time.Hours hours35 = hours34.negated();
        org.joda.time.Hours hours36 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod37 = hours36.toMutablePeriod();
        org.joda.time.Hours hours38 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours39 = hours36.minus(hours38);
        org.joda.time.Duration duration40 = hours36.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod41 = hours36.toMutablePeriod();
        org.joda.time.Hours hours42 = org.joda.time.Hours.EIGHT;
        int int44 = hours42.getValue((int) (short) 0);
        java.lang.String str45 = hours42.toString();
        boolean boolean46 = hours36.isGreaterThan(hours42);
        org.joda.time.Hours hours48 = hours42.minus(10);
        org.joda.time.Hours hours49 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours50 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod51 = hours50.toMutablePeriod();
        org.joda.time.Hours hours52 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours53 = hours50.minus(hours52);
        int int54 = hours49.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours52);
        org.joda.time.Hours hours55 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours49);
        org.joda.time.DurationFieldType durationFieldType56 = null;
        int int57 = hours49.get(durationFieldType56);
        boolean boolean58 = hours48.equals((java.lang.Object) hours49);
        java.lang.String str59 = hours48.toString();
        org.joda.time.DurationFieldType durationFieldType61 = hours48.getFieldType(0);
        boolean boolean62 = hours34.isGreaterThan(hours48);
        org.joda.time.Hours hours63 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours48);
        org.joda.time.Hours hours64 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours63);
        org.joda.time.Hours hours65 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod66 = hours65.toMutablePeriod();
        org.joda.time.Hours hours67 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours68 = hours65.minus(hours67);
        org.joda.time.DurationFieldType durationFieldType69 = null;
        int int70 = hours65.get(durationFieldType69);
        org.joda.time.Hours hours72 = hours65.minus((int) (short) 0);
        org.joda.time.Hours hours73 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType74 = null;
        int int75 = hours73.get(durationFieldType74);
        org.joda.time.DurationFieldType durationFieldType76 = hours73.getFieldType();
        int int77 = hours72.get(durationFieldType76);
        org.joda.time.PeriodType periodType78 = hours72.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType79 = hours72.getFieldType();
        int int80 = hours63.get(durationFieldType79);
        boolean boolean81 = hours12.isSupported(durationFieldType79);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "PT-2H" + "'", str23, "PT-2H");
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 8 + "'", int29 == 8);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertNotNull(mutablePeriod41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 8 + "'", int44 == 8);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "PT8H" + "'", str45, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(mutablePeriod51);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "PT-2H" + "'", str59, "PT-2H");
        org.junit.Assert.assertNotNull(durationFieldType61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertNotNull(mutablePeriod66);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(hours72);
        org.junit.Assert.assertNotNull(hours73);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertNotNull(durationFieldType76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 7 + "'", int77 == 7);
        org.junit.Assert.assertNotNull(periodType78);
        org.junit.Assert.assertNotNull(durationFieldType79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-2) + "'", int80 == (-2));
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
    }

    @Test
    public void test0666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0666");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period1 = hours0.toPeriod();
        java.lang.String str2 = hours0.toString();
        org.joda.time.Hours hours4 = hours0.plus((int) (short) 0);
        java.lang.Class<?> wildcardClass5 = hours0.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "PT7H" + "'", str2, "PT7H");
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0667");
        org.joda.time.Hours hours0 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours1 = hours0.negated();
        org.joda.time.DurationFieldType durationFieldType2 = hours0.getFieldType();
        java.lang.String str3 = hours0.toString();
        org.joda.time.Hours hours4 = org.joda.time.Hours.ZERO;
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod7 = hours6.toMutablePeriod();
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours9 = hours6.minus(hours8);
        int int10 = hours5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours8);
        org.joda.time.MutablePeriod mutablePeriod11 = hours5.toMutablePeriod();
        org.joda.time.Hours hours13 = hours5.minus(7);
        org.joda.time.Hours hours14 = hours4.minus(hours5);
        org.joda.time.Hours hours15 = hours0.minus(hours5);
        int int16 = hours5.getHours();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT3H" + "'", str3, "PT3H");
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 7 + "'", int16 == 7);
    }

    @Test
    public void test0668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0668");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours12 = hours6.minus(10);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod15 = hours14.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours17 = hours14.minus(hours16);
        int int18 = hours13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours16);
        org.joda.time.Hours hours19 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours13);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = hours13.get(durationFieldType20);
        boolean boolean22 = hours12.equals((java.lang.Object) hours13);
        org.joda.time.Hours hours24 = hours13.minus(100);
        int int25 = hours13.size();
        org.joda.time.Hours hours27 = hours13.minus((int) (byte) -1);
        org.joda.time.Hours hours29 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours30 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod31 = hours30.toMutablePeriod();
        org.joda.time.Hours hours32 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours33 = hours30.minus(hours32);
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = hours30.get(durationFieldType34);
        org.joda.time.Hours hours37 = hours30.minus((int) (short) 0);
        org.joda.time.Hours hours38 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod39 = hours38.toMutablePeriod();
        org.joda.time.Hours hours40 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours41 = hours38.minus(hours40);
        org.joda.time.DurationFieldType durationFieldType42 = null;
        boolean boolean43 = hours40.isSupported(durationFieldType42);
        org.joda.time.Hours hours44 = hours37.minus(hours40);
        org.joda.time.Hours hours45 = hours29.plus(hours44);
        org.joda.time.Hours hours46 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours47 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod48 = hours47.toMutablePeriod();
        org.joda.time.Hours hours49 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours50 = hours47.minus(hours49);
        int int51 = hours46.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours49);
        org.joda.time.Hours hours52 = hours29.plus(hours49);
        org.joda.time.Hours hours53 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period54 = hours53.toPeriod();
        org.joda.time.Hours hours56 = hours53.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod57 = hours56.toMutablePeriod();
        org.joda.time.Hours hours58 = org.joda.time.Hours.THREE;
        org.joda.time.Period period59 = hours58.toPeriod();
        org.joda.time.Hours hours61 = hours58.plus((int) (byte) -1);
        org.joda.time.Hours hours62 = hours56.minus(hours58);
        org.joda.time.DurationFieldType durationFieldType63 = hours62.getFieldType();
        org.joda.time.Hours hours64 = hours52.plus(hours62);
        org.joda.time.Hours hours66 = hours64.multipliedBy((int) (byte) -1);
        org.joda.time.Hours hours67 = hours13.plus(hours66);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(mutablePeriod39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(mutablePeriod48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertNotNull(mutablePeriod57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertNotNull(durationFieldType63);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertNotNull(hours67);
    }

    @Test
    public void test0669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0669");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = hours8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = hours8.getFieldType();
        int int12 = hours7.get(durationFieldType11);
        org.joda.time.Hours hours13 = org.joda.time.Hours.ONE;
        int int14 = hours13.getHours();
        org.joda.time.Hours hours16 = hours13.plus(10);
        org.joda.time.Hours hours17 = hours7.minus(hours16);
        org.joda.time.Hours hours19 = hours7.dividedBy(6);
        org.joda.time.ReadableInterval readableInterval20 = null;
        org.joda.time.Hours hours21 = org.joda.time.Hours.hoursIn(readableInterval20);
        org.joda.time.DurationFieldType durationFieldType22 = hours21.getFieldType();
        org.joda.time.Hours hours24 = hours21.dividedBy((int) (byte) 10);
        org.joda.time.Hours hours26 = hours21.plus((int) (byte) 1);
        org.joda.time.Hours hours27 = hours26.negated();
        int int28 = hours19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours26);
        int int29 = hours19.getHours();
        org.joda.time.PeriodType periodType30 = hours19.getPeriodType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 7 + "'", int12 == 7);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(periodType30);
    }

    @Test
    public void test0670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0670");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours7 = hours3.multipliedBy(0);
        org.joda.time.Hours hours9 = org.joda.time.Hours.hours(0);
        org.joda.time.Duration duration10 = hours9.toStandardDuration();
        org.joda.time.Hours hours12 = hours9.multipliedBy((int) (short) 1);
        java.lang.String str13 = hours9.toString();
        int int14 = hours3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours9);
        org.joda.time.Hours hours16 = hours3.dividedBy(15);
        int int17 = hours16.size();
        org.joda.time.Duration duration18 = hours16.toStandardDuration();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "PT0H" + "'", str13, "PT0H");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(duration18);
    }

    @Test
    public void test0671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0671");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        int int4 = hours2.getValue((int) (short) 0);
        org.joda.time.Hours hours5 = hours1.minus(hours2);
        org.joda.time.Hours hours6 = hours0.minus(hours1);
        org.joda.time.Hours hours8 = hours1.dividedBy(1);
        int int9 = hours8.getHours();
        java.lang.Class<?> wildcardClass10 = hours8.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 8 + "'", int4 == 8);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7 + "'", int9 == 7);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0672");
        org.joda.time.Hours hours0 = org.joda.time.Hours.THREE;
        org.joda.time.Period period1 = hours0.toPeriod();
        org.joda.time.Hours hours3 = hours0.plus((int) (byte) -1);
        org.joda.time.Hours hours5 = hours3.minus((int) (byte) 100);
        org.joda.time.PeriodType periodType6 = hours3.getPeriodType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(periodType6);
    }

    @Test
    public void test0673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0673");
        org.joda.time.Hours hours0 = org.joda.time.Hours.EIGHT;
        int int1 = hours0.size();
        org.joda.time.Hours hours3 = hours0.dividedBy(100);
        org.joda.time.Hours hours4 = hours3.negated();
        org.joda.time.Hours hours6 = org.joda.time.Hours.parseHours("PT16H");
        org.joda.time.Hours hours7 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours11 = hours8.minus(hours10);
        int int12 = hours7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours10);
        org.joda.time.MutablePeriod mutablePeriod13 = hours7.toMutablePeriod();
        org.joda.time.Hours hours14 = hours6.minus(hours7);
        org.joda.time.Hours hours15 = hours3.plus(hours6);
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod17 = hours16.toMutablePeriod();
        org.joda.time.Hours hours18 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours19 = hours16.minus(hours18);
        org.joda.time.Hours hours20 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        int int23 = hours21.getValue((int) (short) 0);
        org.joda.time.Hours hours24 = hours20.minus(hours21);
        org.joda.time.Hours hours25 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType26 = null;
        int int27 = hours25.get(durationFieldType26);
        org.joda.time.DurationFieldType durationFieldType28 = hours25.getFieldType();
        int int29 = hours20.get(durationFieldType28);
        boolean boolean30 = hours19.isSupported(durationFieldType28);
        org.joda.time.Hours hours31 = hours19.negated();
        boolean boolean32 = hours3.equals((java.lang.Object) hours19);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 8 + "'", int23 == 8);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 7 + "'", int29 == 7);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test0674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0674");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours12 = hours6.minus(10);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod15 = hours14.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours17 = hours14.minus(hours16);
        int int18 = hours13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours16);
        org.joda.time.Hours hours19 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours13);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = hours13.get(durationFieldType20);
        boolean boolean22 = hours12.equals((java.lang.Object) hours13);
        java.lang.String str23 = hours12.toString();
        org.joda.time.ReadableInterval readableInterval24 = null;
        org.joda.time.Hours hours25 = org.joda.time.Hours.hoursIn(readableInterval24);
        org.joda.time.DurationFieldType durationFieldType26 = hours25.getFieldType();
        org.joda.time.Hours hours28 = hours25.dividedBy((int) (byte) 10);
        org.joda.time.Hours hours30 = hours25.plus((int) (byte) 1);
        org.joda.time.Hours hours32 = hours25.dividedBy(100);
        int int33 = hours12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours32);
        org.joda.time.Hours hours34 = hours12.negated();
        org.joda.time.Hours hours35 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod36 = hours35.toMutablePeriod();
        org.joda.time.Hours hours37 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours38 = hours35.minus(hours37);
        org.joda.time.DurationFieldType durationFieldType39 = null;
        int int40 = hours35.get(durationFieldType39);
        org.joda.time.Hours hours42 = hours35.minus((int) (short) 0);
        org.joda.time.Hours hours43 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours35);
        org.joda.time.Hours hours44 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours45 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod46 = hours45.toMutablePeriod();
        org.joda.time.Hours hours47 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours48 = hours45.minus(hours47);
        int int49 = hours44.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours47);
        org.joda.time.DurationFieldType durationFieldType50 = null;
        boolean boolean51 = hours44.isSupported(durationFieldType50);
        org.joda.time.Hours hours53 = hours44.minus((int) (short) -1);
        org.joda.time.Hours hours54 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod55 = hours54.toMutablePeriod();
        org.joda.time.Hours hours56 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours57 = hours54.minus(hours56);
        org.joda.time.Hours hours59 = hours56.plus(8);
        org.joda.time.Hours hours60 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType61 = null;
        int int62 = hours60.get(durationFieldType61);
        org.joda.time.DurationFieldType durationFieldType63 = hours60.getFieldType();
        boolean boolean64 = hours59.isSupported(durationFieldType63);
        int int65 = hours53.get(durationFieldType63);
        org.joda.time.Hours hours66 = hours35.plus(hours53);
        boolean boolean67 = hours34.equals((java.lang.Object) hours53);
        org.joda.time.Hours hours68 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType69 = null;
        int int70 = hours68.get(durationFieldType69);
        org.joda.time.Hours hours72 = hours68.dividedBy(100);
        org.joda.time.Hours hours73 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours74 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod75 = hours74.toMutablePeriod();
        org.joda.time.Hours hours76 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours77 = hours74.minus(hours76);
        int int78 = hours73.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours76);
        org.joda.time.DurationFieldType durationFieldType79 = null;
        boolean boolean80 = hours73.isSupported(durationFieldType79);
        org.joda.time.Hours hours82 = hours73.multipliedBy((int) (short) 10);
        org.joda.time.Period period83 = hours73.toPeriod();
        org.joda.time.Hours hours84 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours85 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod86 = hours85.toMutablePeriod();
        org.joda.time.Hours hours87 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours88 = hours85.minus(hours87);
        int int89 = hours84.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours87);
        org.joda.time.Hours hours90 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours84);
        org.joda.time.Hours hours92 = hours90.multipliedBy((int) (byte) 10);
        boolean boolean93 = hours73.isLessThan(hours92);
        int int94 = hours72.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours73);
        org.joda.time.Hours hours95 = hours53.minus(hours72);
        // The following exception was thrown during execution in test generation
        try {
            int int97 = hours53.getValue(364);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 364");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "PT-2H" + "'", str23, "PT-2H");
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(mutablePeriod36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(mutablePeriod46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(mutablePeriod55);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(durationFieldType63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 8 + "'", int65 == 8);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(hours72);
        org.junit.Assert.assertNotNull(hours73);
        org.junit.Assert.assertNotNull(hours74);
        org.junit.Assert.assertNotNull(mutablePeriod75);
        org.junit.Assert.assertNotNull(hours76);
        org.junit.Assert.assertNotNull(hours77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(hours82);
        org.junit.Assert.assertNotNull(period83);
        org.junit.Assert.assertNotNull(hours84);
        org.junit.Assert.assertNotNull(hours85);
        org.junit.Assert.assertNotNull(mutablePeriod86);
        org.junit.Assert.assertNotNull(hours87);
        org.junit.Assert.assertNotNull(hours88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertNotNull(hours90);
        org.junit.Assert.assertNotNull(hours92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-1) + "'", int94 == (-1));
        org.junit.Assert.assertNotNull(hours95);
    }

    @Test
    public void test0675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0675");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        int int9 = hours7.getValue((int) (short) 0);
        org.joda.time.Hours hours10 = hours6.minus(hours7);
        org.joda.time.Hours hours11 = hours5.minus(hours6);
        int int12 = hours5.size();
        org.joda.time.Duration duration13 = hours5.toStandardDuration();
        boolean boolean14 = hours1.isGreaterThan(hours5);
        org.joda.time.Hours hours16 = hours5.plus((int) (byte) -1);
        org.joda.time.DurationFieldType durationFieldType17 = null;
        boolean boolean18 = hours5.isSupported(durationFieldType17);
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        org.joda.time.Duration duration23 = hours19.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod24 = hours19.toMutablePeriod();
        org.joda.time.Hours hours25 = org.joda.time.Hours.EIGHT;
        int int27 = hours25.getValue((int) (short) 0);
        java.lang.String str28 = hours25.toString();
        boolean boolean29 = hours19.isGreaterThan(hours25);
        org.joda.time.Hours hours31 = hours25.minus(10);
        org.joda.time.Hours hours32 = hours25.negated();
        org.joda.time.MutablePeriod mutablePeriod33 = hours32.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType34 = hours32.getFieldType();
        int int35 = hours5.get(durationFieldType34);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8 + "'", int9 == 8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 8 + "'", int27 == 8);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "PT8H" + "'", str28, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 6 + "'", int35 == 6);
    }

    @Test
    public void test0676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0676");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours12 = hours6.minus(10);
        org.joda.time.Hours hours13 = hours6.negated();
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod15 = hours14.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours17 = hours14.minus(hours16);
        org.joda.time.DurationFieldType durationFieldType18 = null;
        int int19 = hours14.get(durationFieldType18);
        org.joda.time.Hours hours21 = hours14.multipliedBy(1);
        org.joda.time.Hours hours22 = org.joda.time.Hours.ONE;
        int int23 = hours21.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours22);
        int int24 = hours6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours21);
        java.lang.String str25 = hours21.toString();
        org.joda.time.Period period26 = hours21.toPeriod();
        org.joda.time.Period period27 = hours21.toPeriod();
        org.joda.time.Hours hours28 = hours21.negated();
        org.joda.time.Hours hours29 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod30 = hours29.toMutablePeriod();
        org.joda.time.Hours hours31 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours32 = hours29.minus(hours31);
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = hours29.get(durationFieldType33);
        org.joda.time.Hours hours36 = hours29.minus((int) (short) 0);
        org.joda.time.Hours hours37 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType38 = null;
        int int39 = hours37.get(durationFieldType38);
        org.joda.time.DurationFieldType durationFieldType40 = hours37.getFieldType();
        int int41 = hours36.get(durationFieldType40);
        org.joda.time.PeriodType periodType42 = hours36.getPeriodType();
        org.joda.time.Hours hours44 = hours36.multipliedBy(8);
        int int45 = hours36.size();
        org.joda.time.Hours hours47 = hours36.dividedBy(9);
        boolean boolean48 = hours28.equals((java.lang.Object) hours36);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "PT7H" + "'", str25, "PT7H");
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(durationFieldType40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 7 + "'", int41 == 7);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test0677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0677");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        int int23 = hours18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours21);
        org.joda.time.Hours hours24 = hours1.plus(hours21);
        org.joda.time.Hours hours25 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period26 = hours25.toPeriod();
        org.joda.time.Hours hours28 = hours25.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod29 = hours28.toMutablePeriod();
        org.joda.time.Hours hours30 = org.joda.time.Hours.THREE;
        org.joda.time.Period period31 = hours30.toPeriod();
        org.joda.time.Hours hours33 = hours30.plus((int) (byte) -1);
        org.joda.time.Hours hours34 = hours28.minus(hours30);
        org.joda.time.DurationFieldType durationFieldType35 = hours34.getFieldType();
        org.joda.time.Hours hours36 = hours24.plus(hours34);
        org.joda.time.Hours hours38 = hours36.multipliedBy((int) (byte) -1);
        org.joda.time.Hours hours40 = hours36.plus(6);
        org.joda.time.Hours hours41 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod42 = hours41.toMutablePeriod();
        org.joda.time.Hours hours43 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours44 = hours41.minus(hours43);
        org.joda.time.DurationFieldType durationFieldType45 = null;
        int int46 = hours41.get(durationFieldType45);
        org.joda.time.Hours hours48 = hours41.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval49 = null;
        org.joda.time.Hours hours50 = org.joda.time.Hours.hoursIn(readableInterval49);
        int int51 = hours48.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours50);
        org.joda.time.DurationFieldType durationFieldType52 = null;
        int int53 = hours48.get(durationFieldType52);
        org.joda.time.Hours hours54 = hours48.negated();
        boolean boolean55 = hours36.isGreaterThan(hours48);
        // The following exception was thrown during execution in test generation
        try {
            int int57 = hours36.getValue((-4));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -4");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
    }

    @Test
    public void test0678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0678");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(0);
        org.joda.time.Hours hours3 = hours1.multipliedBy((int) (short) 0);
        org.joda.time.Hours hours5 = hours1.dividedBy((int) 'a');
        org.joda.time.Hours hours7 = hours5.plus((-8));
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours7);
    }

    @Test
    public void test0679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0679");
        org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT16H");
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours6 = hours3.minus(hours5);
        int int7 = hours2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours5);
        org.joda.time.MutablePeriod mutablePeriod8 = hours2.toMutablePeriod();
        org.joda.time.Hours hours9 = hours1.minus(hours2);
        org.joda.time.Hours hours10 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours2);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Hours hours12 = hours2.dividedBy((int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: / by zero");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
    }

    @Test
    public void test0680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0680");
        org.joda.time.Hours hours0 = org.joda.time.Hours.TWO;
        org.joda.time.Hours hours1 = org.joda.time.Hours.MAX_VALUE;
        int int2 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours1);
        org.joda.time.Hours hours3 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours3.get(durationFieldType4);
        org.joda.time.DurationFieldType durationFieldType6 = hours3.getFieldType();
        org.joda.time.DurationFieldType durationFieldType7 = hours3.getFieldType();
        boolean boolean8 = hours1.isSupported(durationFieldType7);
        org.joda.time.Period period9 = hours1.toPeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) period9);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod12 = hours11.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours14 = hours11.minus(hours13);
        org.joda.time.Hours hours16 = hours13.plus(8);
        org.joda.time.Hours hours17 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType18 = null;
        int int19 = hours17.get(durationFieldType18);
        org.joda.time.DurationFieldType durationFieldType20 = hours17.getFieldType();
        boolean boolean21 = hours16.isSupported(durationFieldType20);
        boolean boolean22 = hours10.isSupported(durationFieldType20);
        java.lang.Class<?> wildcardClass23 = durationFieldType20.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0681");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours7 = hours3.multipliedBy(0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours9 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod10 = hours9.toMutablePeriod();
        org.joda.time.Hours hours11 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours12 = hours9.minus(hours11);
        int int13 = hours8.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours11);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours8.isSupported(durationFieldType14);
        org.joda.time.Hours hours17 = hours8.minus((int) (short) -1);
        org.joda.time.PeriodType periodType18 = hours8.getPeriodType();
        int int19 = hours8.getHours();
        boolean boolean20 = hours3.equals((java.lang.Object) int19);
        java.lang.String str21 = hours3.toString();
        org.joda.time.Hours hours23 = hours3.minus((int) (short) 10);
        int int25 = hours23.getValue((int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            int int27 = hours23.getValue(17);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 17");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 7 + "'", int19 == 7);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "PT8H" + "'", str21, "PT8H");
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-2) + "'", int25 == (-2));
    }

    @Test
    public void test0682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0682");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours12 = hours6.minus(10);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod15 = hours14.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours17 = hours14.minus(hours16);
        int int18 = hours13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours16);
        org.joda.time.Hours hours19 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours13);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = hours13.get(durationFieldType20);
        boolean boolean22 = hours12.equals((java.lang.Object) hours13);
        org.joda.time.Hours hours23 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period24 = hours23.toPeriod();
        org.joda.time.Hours hours26 = hours23.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod27 = hours26.toMutablePeriod();
        org.joda.time.Hours hours28 = org.joda.time.Hours.THREE;
        org.joda.time.Period period29 = hours28.toPeriod();
        org.joda.time.Hours hours31 = hours28.plus((int) (byte) -1);
        org.joda.time.Hours hours32 = hours26.minus(hours28);
        org.joda.time.DurationFieldType durationFieldType33 = hours32.getFieldType();
        boolean boolean34 = hours13.isGreaterThan(hours32);
        org.joda.time.Hours hours35 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours13);
        org.joda.time.Hours hours36 = org.joda.time.Hours.ONE;
        org.joda.time.Hours hours38 = hours36.dividedBy((int) (byte) -1);
        org.joda.time.DurationFieldType durationFieldType40 = hours36.getFieldType(0);
        int int41 = hours35.get(durationFieldType40);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(durationFieldType40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 7 + "'", int41 == 7);
    }

    @Test
    public void test0683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0683");
        org.joda.time.Hours hours0 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours2 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours6 = hours3.minus(hours5);
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = hours3.get(durationFieldType7);
        org.joda.time.Hours hours10 = hours3.minus((int) (short) 0);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod12 = hours11.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours14 = hours11.minus(hours13);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = hours13.isSupported(durationFieldType15);
        org.joda.time.Hours hours17 = hours10.minus(hours13);
        org.joda.time.Hours hours18 = hours2.plus(hours17);
        int int19 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours17);
        org.joda.time.MutablePeriod mutablePeriod20 = hours17.toMutablePeriod();
        org.joda.time.Duration duration21 = hours17.toStandardDuration();
        org.joda.time.Hours hours23 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod25 = hours24.toMutablePeriod();
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours27 = hours24.minus(hours26);
        org.joda.time.DurationFieldType durationFieldType28 = null;
        int int29 = hours24.get(durationFieldType28);
        org.joda.time.Hours hours31 = hours24.minus((int) (short) 0);
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod33 = hours32.toMutablePeriod();
        org.joda.time.Hours hours34 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours35 = hours32.minus(hours34);
        org.joda.time.DurationFieldType durationFieldType36 = null;
        boolean boolean37 = hours34.isSupported(durationFieldType36);
        org.joda.time.Hours hours38 = hours31.minus(hours34);
        org.joda.time.Hours hours39 = hours23.plus(hours38);
        org.joda.time.Hours hours40 = hours17.plus(hours23);
        org.joda.time.Hours hours41 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod42 = hours41.toMutablePeriod();
        org.joda.time.Hours hours43 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours44 = hours41.minus(hours43);
        org.joda.time.DurationFieldType durationFieldType45 = null;
        int int46 = hours41.get(durationFieldType45);
        org.joda.time.Hours hours48 = hours41.minus((int) (short) 0);
        org.joda.time.Hours hours49 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType50 = null;
        int int51 = hours49.get(durationFieldType50);
        org.joda.time.DurationFieldType durationFieldType52 = hours49.getFieldType();
        int int53 = hours48.get(durationFieldType52);
        org.joda.time.Hours hours54 = org.joda.time.Hours.ONE;
        int int55 = hours54.getHours();
        org.joda.time.Hours hours57 = hours54.plus(10);
        org.joda.time.Hours hours58 = hours48.minus(hours57);
        int int59 = hours17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours48);
        org.joda.time.Hours hours60 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours17);
        org.joda.time.Hours hours61 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours62 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours63 = org.joda.time.Hours.EIGHT;
        int int65 = hours63.getValue((int) (short) 0);
        org.joda.time.Hours hours66 = hours62.minus(hours63);
        org.joda.time.Hours hours67 = hours61.minus(hours62);
        int int68 = hours61.size();
        org.joda.time.PeriodType periodType69 = hours61.getPeriodType();
        org.joda.time.Hours hours70 = hours60.minus(hours61);
        org.joda.time.MutablePeriod mutablePeriod71 = hours60.toMutablePeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 7 + "'", int53 == 7);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 8 + "'", int65 == 8);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertNotNull(periodType69);
        org.junit.Assert.assertNotNull(hours70);
        org.junit.Assert.assertNotNull(mutablePeriod71);
    }

    @Test
    public void test0684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0684");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(100);
        org.joda.time.Hours hours2 = null;
        boolean boolean3 = hours1.isGreaterThan(hours2);
        org.joda.time.Weeks weeks4 = hours1.toStandardWeeks();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(weeks4);
    }

    @Test
    public void test0685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0685");
        org.joda.time.Hours hours0 = org.joda.time.Hours.TWO;
        org.joda.time.Hours hours1 = org.joda.time.Hours.MAX_VALUE;
        int int2 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours1);
        int int3 = hours1.size();
        org.joda.time.Hours hours4 = org.joda.time.Hours.ONE;
        org.joda.time.Hours hours6 = hours4.plus(1);
        boolean boolean7 = hours1.isGreaterThan(hours6);
        int int8 = hours6.getHours();
        int int9 = hours6.size();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
    }

    @Test
    public void test0686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0686");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        int int23 = hours18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours21);
        org.joda.time.Hours hours24 = hours1.plus(hours21);
        org.joda.time.Hours hours25 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod26 = hours25.toMutablePeriod();
        org.joda.time.Hours hours27 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours28 = hours25.minus(hours27);
        org.joda.time.DurationFieldType durationFieldType29 = null;
        int int30 = hours25.get(durationFieldType29);
        org.joda.time.Hours hours32 = hours25.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval33 = null;
        org.joda.time.Hours hours34 = org.joda.time.Hours.hoursIn(readableInterval33);
        int int35 = hours32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours34);
        boolean boolean36 = hours21.isGreaterThan(hours32);
        org.joda.time.Hours hours38 = hours21.multipliedBy(16);
        org.joda.time.Hours hours39 = hours21.negated();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
    }

    @Test
    public void test0687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0687");
        org.joda.time.Hours hours0 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours1 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = hours1.get(durationFieldType2);
        boolean boolean4 = hours0.equals((java.lang.Object) durationFieldType2);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod7 = hours6.toMutablePeriod();
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours9 = hours6.minus(hours8);
        int int10 = hours5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours8);
        org.joda.time.Hours hours12 = hours8.multipliedBy(0);
        org.joda.time.Hours hours13 = hours0.plus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = hours13.getFieldType();
        org.joda.time.Hours hours15 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod17 = hours16.toMutablePeriod();
        org.joda.time.Hours hours18 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours19 = hours16.minus(hours18);
        int int20 = hours15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours18);
        org.joda.time.Hours hours21 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours15);
        org.joda.time.DurationFieldType durationFieldType22 = hours15.getFieldType();
        int int23 = hours13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours15);
        org.joda.time.Hours hours25 = hours15.minus((int) '4');
        org.joda.time.Hours hours27 = hours15.multipliedBy(3);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours27);
    }

    @Test
    public void test0688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0688");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((int) '4');
        org.joda.time.DurationFieldType durationFieldType2 = hours1.getFieldType();
        org.joda.time.Period period3 = hours1.toPeriod();
        org.joda.time.Period period4 = hours1.toPeriod();
        org.joda.time.Hours hours6 = hours1.plus(0);
        org.joda.time.Hours hours8 = hours1.minus((int) (short) 0);
        org.joda.time.Hours hours9 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        int int12 = hours10.getValue((int) (short) 0);
        org.joda.time.Hours hours13 = hours9.minus(hours10);
        boolean boolean15 = hours10.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours16 = null;
        org.joda.time.Hours hours17 = hours10.minus(hours16);
        java.lang.String str18 = hours17.toString();
        org.joda.time.Hours hours19 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours17);
        int int20 = hours1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours19);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 8 + "'", int12 == 8);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "PT8H" + "'", str18, "PT8H");
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
    }

    @Test
    public void test0689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0689");
        org.joda.time.Hours hours0 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours2 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours6 = hours3.minus(hours5);
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = hours3.get(durationFieldType7);
        org.joda.time.Hours hours10 = hours3.minus((int) (short) 0);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod12 = hours11.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours14 = hours11.minus(hours13);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = hours13.isSupported(durationFieldType15);
        org.joda.time.Hours hours17 = hours10.minus(hours13);
        org.joda.time.Hours hours18 = hours2.plus(hours17);
        int int19 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours17);
        org.joda.time.Hours hours21 = hours17.plus((int) ' ');
        org.joda.time.Hours hours22 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod23 = hours22.toMutablePeriod();
        org.joda.time.Hours hours24 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours25 = hours22.minus(hours24);
        org.joda.time.Duration duration26 = hours22.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod27 = hours22.toMutablePeriod();
        org.joda.time.Hours hours28 = org.joda.time.Hours.EIGHT;
        int int30 = hours28.getValue((int) (short) 0);
        java.lang.String str31 = hours28.toString();
        boolean boolean32 = hours22.isGreaterThan(hours28);
        org.joda.time.Hours hours34 = hours28.minus(10);
        int int35 = hours17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours34);
        org.joda.time.Hours hours37 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours38 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod39 = hours38.toMutablePeriod();
        org.joda.time.Hours hours40 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours41 = hours38.minus(hours40);
        org.joda.time.DurationFieldType durationFieldType42 = null;
        int int43 = hours38.get(durationFieldType42);
        org.joda.time.Hours hours45 = hours38.minus((int) (short) 0);
        org.joda.time.Hours hours46 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod47 = hours46.toMutablePeriod();
        org.joda.time.Hours hours48 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours49 = hours46.minus(hours48);
        org.joda.time.DurationFieldType durationFieldType50 = null;
        boolean boolean51 = hours48.isSupported(durationFieldType50);
        org.joda.time.Hours hours52 = hours45.minus(hours48);
        org.joda.time.Hours hours53 = hours37.plus(hours52);
        org.joda.time.Hours hours54 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod55 = hours54.toMutablePeriod();
        org.joda.time.Hours hours56 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours57 = hours54.minus(hours56);
        boolean boolean58 = hours52.isGreaterThan(hours56);
        org.joda.time.Hours hours59 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours52);
        int int60 = hours34.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours52);
        org.joda.time.PeriodType periodType61 = hours34.getPeriodType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(mutablePeriod23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 8 + "'", int30 == 8);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "PT8H" + "'", str31, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(mutablePeriod39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(mutablePeriod47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(mutablePeriod55);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(periodType61);
    }

    @Test
    public void test0690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0690");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        org.joda.time.Hours hours9 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = hours9.get(durationFieldType10);
        org.joda.time.Hours hours13 = hours9.dividedBy(100);
        int int14 = hours9.size();
        org.joda.time.Period period15 = hours9.toPeriod();
        boolean boolean16 = hours0.equals((java.lang.Object) period15);
        java.lang.Class<?> wildcardClass17 = period15.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0691");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.Hours hours2 = hours0.plus(1);
        org.joda.time.Hours hours4 = hours2.minus((int) (byte) 10);
        org.joda.time.Hours hours5 = hours2.negated();
        org.joda.time.Hours hours7 = org.joda.time.Hours.parseHours("PT7H");
        org.joda.time.PeriodType periodType8 = hours7.getPeriodType();
        int int9 = hours5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours7);
        org.joda.time.Hours hours11 = hours7.plus(14);
        org.joda.time.Hours hours13 = hours11.dividedBy((int) (short) -1);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours13);
    }

    @Test
    public void test0692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0692");
        org.joda.time.Hours hours0 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours2 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours6 = hours3.minus(hours5);
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = hours3.get(durationFieldType7);
        org.joda.time.Hours hours10 = hours3.minus((int) (short) 0);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod12 = hours11.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours14 = hours11.minus(hours13);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = hours13.isSupported(durationFieldType15);
        org.joda.time.Hours hours17 = hours10.minus(hours13);
        org.joda.time.Hours hours18 = hours2.plus(hours17);
        int int19 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours17);
        org.joda.time.MutablePeriod mutablePeriod20 = hours17.toMutablePeriod();
        org.joda.time.Duration duration21 = hours17.toStandardDuration();
        org.joda.time.Hours hours23 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod25 = hours24.toMutablePeriod();
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours27 = hours24.minus(hours26);
        org.joda.time.DurationFieldType durationFieldType28 = null;
        int int29 = hours24.get(durationFieldType28);
        org.joda.time.Hours hours31 = hours24.minus((int) (short) 0);
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod33 = hours32.toMutablePeriod();
        org.joda.time.Hours hours34 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours35 = hours32.minus(hours34);
        org.joda.time.DurationFieldType durationFieldType36 = null;
        boolean boolean37 = hours34.isSupported(durationFieldType36);
        org.joda.time.Hours hours38 = hours31.minus(hours34);
        org.joda.time.Hours hours39 = hours23.plus(hours38);
        org.joda.time.Hours hours40 = hours17.plus(hours23);
        org.joda.time.Hours hours42 = hours17.multipliedBy(9);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType44 = hours17.getFieldType(14);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 14");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours42);
    }

    @Test
    public void test0693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0693");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period1 = hours0.toPeriod();
        org.joda.time.Hours hours3 = hours0.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.THREE;
        org.joda.time.Period period6 = hours5.toPeriod();
        org.joda.time.Hours hours8 = hours5.plus((int) (byte) -1);
        org.joda.time.Hours hours9 = hours3.minus(hours5);
        org.joda.time.PeriodType periodType10 = hours5.getPeriodType();
        org.joda.time.Hours hours11 = org.joda.time.Hours.ZERO;
        org.joda.time.Duration duration12 = hours11.toStandardDuration();
        boolean boolean13 = hours5.isLessThan(hours11);
        org.joda.time.Hours hours15 = hours11.minus((int) (byte) 100);
        org.joda.time.Hours hours17 = hours11.multipliedBy((-8));
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours17);
    }

    @Test
    public void test0694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0694");
        org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT8H");
        org.joda.time.Hours hours3 = hours1.dividedBy(3);
        org.joda.time.Hours hours5 = hours3.dividedBy((-6));
        org.joda.time.Hours hours7 = hours5.dividedBy(6);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours7);
    }

    @Test
    public void test0695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0695");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours11 = hours8.minus(hours10);
        org.joda.time.DurationFieldType durationFieldType12 = null;
        boolean boolean13 = hours10.isSupported(durationFieldType12);
        org.joda.time.Hours hours14 = hours7.minus(hours10);
        org.joda.time.Hours hours16 = hours10.dividedBy(12);
        org.joda.time.Hours hours18 = org.joda.time.Hours.hours((-25));
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours20 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod21 = hours20.toMutablePeriod();
        org.joda.time.Hours hours22 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours23 = hours20.minus(hours22);
        int int24 = hours19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours22);
        org.joda.time.DurationFieldType durationFieldType25 = null;
        boolean boolean26 = hours19.isSupported(durationFieldType25);
        org.joda.time.Hours hours28 = hours19.minus((int) (short) -1);
        org.joda.time.PeriodType periodType29 = hours19.getPeriodType();
        org.joda.time.Hours hours30 = org.joda.time.Hours.EIGHT;
        int int32 = hours30.getValue((int) (short) 0);
        org.joda.time.Hours hours33 = hours19.minus(hours30);
        org.joda.time.Hours hours35 = hours19.plus(7);
        int int36 = hours19.size();
        org.joda.time.Hours hours37 = org.joda.time.Hours.TWO;
        org.joda.time.Hours hours39 = hours37.plus(0);
        org.joda.time.Hours hours40 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours41 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod42 = hours41.toMutablePeriod();
        org.joda.time.Hours hours43 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours44 = hours41.minus(hours43);
        int int45 = hours40.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours43);
        org.joda.time.DurationFieldType durationFieldType46 = null;
        boolean boolean47 = hours40.isSupported(durationFieldType46);
        org.joda.time.Hours hours49 = hours40.minus((int) (short) -1);
        org.joda.time.Hours hours50 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod51 = hours50.toMutablePeriod();
        org.joda.time.Hours hours52 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours53 = hours50.minus(hours52);
        org.joda.time.Hours hours55 = hours52.plus(8);
        org.joda.time.Hours hours56 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType57 = null;
        int int58 = hours56.get(durationFieldType57);
        org.joda.time.DurationFieldType durationFieldType59 = hours56.getFieldType();
        boolean boolean60 = hours55.isSupported(durationFieldType59);
        int int61 = hours49.get(durationFieldType59);
        org.joda.time.Hours hours62 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours63 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod64 = hours63.toMutablePeriod();
        org.joda.time.Hours hours65 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours66 = hours63.minus(hours65);
        int int67 = hours62.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours65);
        org.joda.time.DurationFieldType durationFieldType68 = null;
        boolean boolean69 = hours62.isSupported(durationFieldType68);
        org.joda.time.Hours hours71 = hours62.multipliedBy((int) (short) 10);
        org.joda.time.Hours hours72 = hours49.plus(hours62);
        org.joda.time.DurationFieldType durationFieldType73 = hours72.getFieldType();
        boolean boolean74 = hours39.isSupported(durationFieldType73);
        org.joda.time.Hours hours76 = org.joda.time.Hours.hours(0);
        org.joda.time.Hours hours77 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod78 = hours77.toMutablePeriod();
        org.joda.time.Hours hours79 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours80 = hours77.minus(hours79);
        org.joda.time.DurationFieldType durationFieldType81 = null;
        boolean boolean82 = hours79.isSupported(durationFieldType81);
        org.joda.time.Hours hours83 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours84 = org.joda.time.Hours.EIGHT;
        int int86 = hours84.getValue((int) (short) 0);
        org.joda.time.Hours hours87 = hours83.minus(hours84);
        boolean boolean88 = hours79.isLessThan(hours84);
        org.joda.time.Hours hours89 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType90 = null;
        int int91 = hours89.get(durationFieldType90);
        org.joda.time.DurationFieldType durationFieldType92 = hours89.getFieldType();
        boolean boolean93 = hours79.isSupported(durationFieldType92);
        int int94 = hours76.get(durationFieldType92);
        boolean boolean95 = hours39.isSupported(durationFieldType92);
        boolean boolean96 = hours19.isSupported(durationFieldType92);
        int int97 = hours18.get(durationFieldType92);
        boolean boolean98 = hours16.isSupported(durationFieldType92);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 8 + "'", int32 == 8);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(mutablePeriod51);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(durationFieldType59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 8 + "'", int61 == 8);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertNotNull(mutablePeriod64);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(hours71);
        org.junit.Assert.assertNotNull(hours72);
        org.junit.Assert.assertNotNull(durationFieldType73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(hours76);
        org.junit.Assert.assertNotNull(hours77);
        org.junit.Assert.assertNotNull(mutablePeriod78);
        org.junit.Assert.assertNotNull(hours79);
        org.junit.Assert.assertNotNull(hours80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(hours83);
        org.junit.Assert.assertNotNull(hours84);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 8 + "'", int86 == 8);
        org.junit.Assert.assertNotNull(hours87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(hours89);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
        org.junit.Assert.assertNotNull(durationFieldType92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 0 + "'", int94 == 0);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + (-25) + "'", int97 == (-25));
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
    }

    @Test
    public void test0696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0696");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.Hours hours2 = hours0.plus(1);
        org.joda.time.Hours hours4 = hours0.dividedBy((int) (byte) -1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod6 = hours5.toMutablePeriod();
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours8 = hours5.minus(hours7);
        org.joda.time.Duration duration9 = hours5.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod10 = hours5.toMutablePeriod();
        org.joda.time.Hours hours11 = org.joda.time.Hours.EIGHT;
        int int13 = hours11.getValue((int) (short) 0);
        java.lang.String str14 = hours11.toString();
        boolean boolean15 = hours5.isGreaterThan(hours11);
        org.joda.time.Hours hours17 = hours11.minus(10);
        org.joda.time.Hours hours18 = hours11.negated();
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        org.joda.time.DurationFieldType durationFieldType23 = null;
        int int24 = hours19.get(durationFieldType23);
        org.joda.time.Hours hours26 = hours19.multipliedBy(1);
        org.joda.time.Hours hours27 = org.joda.time.Hours.ONE;
        int int28 = hours26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours27);
        int int29 = hours11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours26);
        java.lang.String str30 = hours26.toString();
        int int31 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours26);
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours33 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod34 = hours33.toMutablePeriod();
        org.joda.time.Hours hours35 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours36 = hours33.minus(hours35);
        int int37 = hours32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours35);
        org.joda.time.Hours hours38 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours35);
        org.joda.time.Hours hours39 = org.joda.time.Hours.ONE;
        int int40 = hours39.getHours();
        org.joda.time.Hours hours42 = hours39.plus(10);
        boolean boolean43 = hours35.equals((java.lang.Object) hours42);
        boolean boolean44 = hours0.isGreaterThan(hours35);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 8 + "'", int13 == 8);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "PT8H" + "'", str14, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "PT7H" + "'", str30, "PT7H");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test0697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0697");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Hours hours9 = org.joda.time.Hours.hoursIn(readableInterval8);
        int int10 = hours7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours9);
        org.joda.time.DurationFieldType durationFieldType11 = null;
        int int12 = hours7.get(durationFieldType11);
        org.joda.time.Hours hours13 = hours7.negated();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType15 = hours7.getFieldType((-2147483648));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -2147483648");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(hours13);
    }

    @Test
    public void test0698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0698");
        org.joda.time.Hours hours0 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours1 = hours0.negated();
        org.joda.time.DurationFieldType durationFieldType2 = hours0.getFieldType();
        java.lang.String str3 = hours0.toString();
        org.joda.time.Hours hours4 = org.joda.time.Hours.ZERO;
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod7 = hours6.toMutablePeriod();
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours9 = hours6.minus(hours8);
        int int10 = hours5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours8);
        org.joda.time.MutablePeriod mutablePeriod11 = hours5.toMutablePeriod();
        org.joda.time.Hours hours13 = hours5.minus(7);
        org.joda.time.Hours hours14 = hours4.minus(hours5);
        org.joda.time.Hours hours15 = hours0.minus(hours5);
        org.joda.time.Hours hours16 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        org.joda.time.Hours hours17 = org.joda.time.Hours.TWO;
        org.joda.time.Hours hours18 = org.joda.time.Hours.MAX_VALUE;
        int int19 = hours17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours18);
        org.joda.time.Hours hours20 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = hours20.get(durationFieldType21);
        org.joda.time.DurationFieldType durationFieldType23 = hours20.getFieldType();
        org.joda.time.DurationFieldType durationFieldType24 = hours20.getFieldType();
        boolean boolean25 = hours18.isSupported(durationFieldType24);
        org.joda.time.Period period26 = hours18.toPeriod();
        org.joda.time.DurationFieldType durationFieldType27 = hours18.getFieldType();
        boolean boolean28 = hours16.isSupported(durationFieldType27);
        org.joda.time.Hours hours29 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours30 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod31 = hours30.toMutablePeriod();
        org.joda.time.Hours hours32 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours33 = hours30.minus(hours32);
        int int34 = hours29.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours32);
        org.joda.time.Hours hours35 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours29);
        org.joda.time.Hours hours36 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod37 = hours36.toMutablePeriod();
        org.joda.time.Hours hours38 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours39 = hours36.minus(hours38);
        org.joda.time.Hours hours41 = hours38.plus(8);
        org.joda.time.Hours hours42 = hours29.minus(hours41);
        org.joda.time.Hours hours43 = hours16.plus(hours42);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT3H" + "'", str3, "PT3H");
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
    }

    @Test
    public void test0699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0699");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Hours hours4 = hours2.negated();
        org.joda.time.DurationFieldType durationFieldType5 = hours4.getFieldType();
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod7 = hours6.toMutablePeriod();
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours9 = hours6.minus(hours8);
        org.joda.time.Hours hours10 = hours8.negated();
        int int11 = hours10.getHours();
        int int12 = hours4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours10);
        org.joda.time.Hours hours13 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours4);
        org.joda.time.Hours hours15 = hours4.dividedBy(10);
        org.joda.time.PeriodType periodType16 = hours15.getPeriodType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-8) + "'", int11 == (-8));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(periodType16);
    }

    @Test
    public void test0700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0700");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Duration duration2 = hours0.toStandardDuration();
        int int4 = hours0.getValue(0);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 7 + "'", int4 == 7);
    }

    @Test
    public void test0701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0701");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = hours0.get(durationFieldType1);
        org.joda.time.Hours hours4 = hours0.dividedBy(100);
        org.joda.time.Hours hours6 = hours4.plus((int) (byte) 10);
        org.joda.time.Hours hours7 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours11 = hours8.minus(hours10);
        int int12 = hours7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours10);
        org.joda.time.DurationFieldType durationFieldType13 = null;
        boolean boolean14 = hours7.isSupported(durationFieldType13);
        org.joda.time.Hours hours16 = hours7.minus((int) (short) -1);
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod18 = hours17.toMutablePeriod();
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours20 = hours17.minus(hours19);
        org.joda.time.Hours hours22 = hours19.plus(8);
        org.joda.time.Hours hours23 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType24 = null;
        int int25 = hours23.get(durationFieldType24);
        org.joda.time.DurationFieldType durationFieldType26 = hours23.getFieldType();
        boolean boolean27 = hours22.isSupported(durationFieldType26);
        int int28 = hours16.get(durationFieldType26);
        boolean boolean29 = hours6.isSupported(durationFieldType26);
        org.joda.time.Hours hours30 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod31 = hours30.toMutablePeriod();
        org.joda.time.Hours hours32 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours33 = hours30.minus(hours32);
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = hours30.get(durationFieldType34);
        org.joda.time.Hours hours37 = hours30.minus((int) (short) 0);
        org.joda.time.Hours hours38 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours30);
        boolean boolean39 = hours6.equals((java.lang.Object) hours38);
        org.joda.time.Hours hours41 = hours6.plus((-1));
        org.joda.time.Hours hours42 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod43 = hours42.toMutablePeriod();
        org.joda.time.Hours hours44 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours45 = hours42.minus(hours44);
        org.joda.time.DurationFieldType durationFieldType46 = null;
        int int47 = hours42.get(durationFieldType46);
        org.joda.time.Hours hours49 = hours42.multipliedBy(1);
        org.joda.time.Hours hours50 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod51 = hours50.toMutablePeriod();
        org.joda.time.Hours hours52 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours53 = hours50.minus(hours52);
        org.joda.time.DurationFieldType durationFieldType54 = null;
        int int55 = hours50.get(durationFieldType54);
        org.joda.time.Hours hours57 = hours50.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval58 = null;
        org.joda.time.Hours hours59 = org.joda.time.Hours.hoursIn(readableInterval58);
        int int60 = hours57.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours59);
        org.joda.time.Hours hours61 = hours42.minus(hours57);
        org.joda.time.Hours hours62 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod63 = hours62.toMutablePeriod();
        org.joda.time.Hours hours64 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours65 = hours62.minus(hours64);
        org.joda.time.Hours hours66 = hours64.negated();
        int int67 = hours66.getHours();
        org.joda.time.Hours hours69 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours71 = hours69.minus(8);
        org.joda.time.Hours hours72 = hours66.minus(hours69);
        boolean boolean73 = hours57.isLessThan(hours72);
        boolean boolean74 = hours6.equals((java.lang.Object) boolean73);
        org.joda.time.Hours hours76 = hours6.minus(5);
        int int77 = hours76.size();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 8 + "'", int28 == 8);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(mutablePeriod51);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertNotNull(mutablePeriod63);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-8) + "'", int67 == (-8));
        org.junit.Assert.assertNotNull(hours69);
        org.junit.Assert.assertNotNull(hours71);
        org.junit.Assert.assertNotNull(hours72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(hours76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
    }

    @Test
    public void test0702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0702");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Hours hours9 = org.joda.time.Hours.hoursIn(readableInterval8);
        int int10 = hours7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours9);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        int int14 = hours12.getValue((int) (short) 0);
        org.joda.time.Hours hours15 = hours11.minus(hours12);
        org.joda.time.Hours hours16 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = hours16.get(durationFieldType17);
        org.joda.time.DurationFieldType durationFieldType19 = hours16.getFieldType();
        int int20 = hours11.get(durationFieldType19);
        boolean boolean21 = hours9.isSupported(durationFieldType19);
        org.joda.time.Hours hours22 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours9);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 8 + "'", int14 == 8);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 7 + "'", int20 == 7);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(hours22);
    }

    @Test
    public void test0703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0703");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        boolean boolean22 = hours16.isGreaterThan(hours20);
        org.joda.time.Hours hours24 = hours16.plus((-2));
        org.joda.time.Hours hours26 = hours24.minus((-4));
        org.joda.time.Hours hours28 = hours26.dividedBy((int) '#');
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours28);
    }

    @Test
    public void test0704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0704");
        org.joda.time.Hours hours0 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours1 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = hours1.get(durationFieldType2);
        boolean boolean4 = hours0.equals((java.lang.Object) durationFieldType2);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod7 = hours6.toMutablePeriod();
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours9 = hours6.minus(hours8);
        int int10 = hours5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours8);
        org.joda.time.Hours hours12 = hours8.multipliedBy(0);
        org.joda.time.Hours hours13 = hours0.plus(hours12);
        org.joda.time.Hours hours15 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod17 = hours16.toMutablePeriod();
        org.joda.time.Hours hours18 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours19 = hours16.minus(hours18);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = hours16.get(durationFieldType20);
        org.joda.time.Hours hours23 = hours16.minus((int) (short) 0);
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod25 = hours24.toMutablePeriod();
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours27 = hours24.minus(hours26);
        org.joda.time.DurationFieldType durationFieldType28 = null;
        boolean boolean29 = hours26.isSupported(durationFieldType28);
        org.joda.time.Hours hours30 = hours23.minus(hours26);
        org.joda.time.Hours hours31 = hours15.plus(hours30);
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod33 = hours32.toMutablePeriod();
        org.joda.time.Hours hours34 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours35 = hours32.minus(hours34);
        boolean boolean36 = hours30.isGreaterThan(hours34);
        org.joda.time.Hours hours37 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours30);
        int int38 = hours12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours30);
        org.joda.time.Hours hours39 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod40 = hours39.toMutablePeriod();
        org.joda.time.Hours hours41 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours42 = hours39.minus(hours41);
        org.joda.time.DurationFieldType durationFieldType43 = null;
        int int44 = hours39.get(durationFieldType43);
        org.joda.time.Hours hours46 = hours39.multipliedBy(1);
        int int47 = hours46.getHours();
        org.joda.time.DurationFieldType durationFieldType48 = hours46.getFieldType();
        org.joda.time.Hours hours49 = hours30.plus(hours46);
        org.joda.time.Hours hours50 = org.joda.time.Hours.MIN_VALUE;
        org.joda.time.Hours hours52 = hours50.plus(0);
        org.joda.time.Hours hours53 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours54 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod55 = hours54.toMutablePeriod();
        org.joda.time.Hours hours56 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours57 = hours54.minus(hours56);
        int int58 = hours53.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours56);
        org.joda.time.DurationFieldType durationFieldType59 = null;
        boolean boolean60 = hours53.isSupported(durationFieldType59);
        org.joda.time.Hours hours62 = hours53.minus((int) (short) -1);
        org.joda.time.PeriodType periodType63 = hours53.getPeriodType();
        int int64 = hours53.getHours();
        org.joda.time.DurationFieldType durationFieldType66 = hours53.getFieldType((int) (short) 0);
        boolean boolean67 = hours52.isSupported(durationFieldType66);
        boolean boolean68 = hours30.isLessThan(hours52);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(mutablePeriod40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 7 + "'", int47 == 7);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(mutablePeriod55);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertNotNull(periodType63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 7 + "'", int64 == 7);
        org.junit.Assert.assertNotNull(durationFieldType66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test0705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0705");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.Hours hours2 = hours0.dividedBy((int) (byte) -1);
        int int3 = hours0.getHours();
        org.joda.time.Hours hours5 = hours0.dividedBy((int) '#');
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(hours5);
    }

    @Test
    public void test0706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0706");
        org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT16H");
        org.joda.time.Period period2 = hours1.toPeriod();
        org.joda.time.Hours hours4 = hours1.minus((int) (byte) -1);
        org.joda.time.Hours hours5 = hours1.negated();
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours7 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod8 = hours7.toMutablePeriod();
        org.joda.time.Hours hours9 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours10 = hours7.minus(hours9);
        int int11 = hours6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours9);
        org.joda.time.DurationFieldType durationFieldType12 = null;
        boolean boolean13 = hours6.isSupported(durationFieldType12);
        org.joda.time.Hours hours15 = hours6.minus((int) (short) -1);
        org.joda.time.PeriodType periodType16 = hours6.getPeriodType();
        org.joda.time.Hours hours17 = org.joda.time.Hours.EIGHT;
        int int19 = hours17.getValue((int) (short) 0);
        org.joda.time.Hours hours20 = hours6.minus(hours17);
        org.joda.time.Hours hours22 = hours6.plus(7);
        org.joda.time.Hours hours23 = hours6.negated();
        boolean boolean24 = hours5.isLessThan(hours23);
        org.joda.time.Duration duration25 = hours5.toStandardDuration();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 8 + "'", int19 == 8);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(duration25);
    }

    @Test
    public void test0707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0707");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(2);
        org.junit.Assert.assertNotNull(hours1);
    }

    @Test
    public void test0708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0708");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.PeriodType periodType6 = hours0.getPeriodType();
        org.joda.time.Hours hours8 = org.joda.time.Hours.parseHours("PT7H");
        boolean boolean9 = hours0.isLessThan(hours8);
        org.joda.time.Hours hours10 = org.joda.time.Hours.ZERO;
        boolean boolean11 = hours8.isGreaterThan(hours10);
        org.joda.time.Hours hours12 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours13 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = hours13.get(durationFieldType14);
        boolean boolean16 = hours12.equals((java.lang.Object) durationFieldType14);
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        int int22 = hours17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours20);
        org.joda.time.Hours hours24 = hours20.multipliedBy(0);
        org.joda.time.Hours hours25 = hours12.plus(hours24);
        org.joda.time.DurationFieldType durationFieldType26 = hours25.getFieldType();
        int int27 = hours8.get(durationFieldType26);
        org.joda.time.Hours hours29 = hours8.dividedBy(14);
        org.joda.time.Hours hours30 = hours8.negated();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 7 + "'", int27 == 7);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
    }

    @Test
    public void test0709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0709");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(15);
        org.junit.Assert.assertNotNull(hours1);
    }

    @Test
    public void test0710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0710");
        org.joda.time.ReadablePeriod readablePeriod0 = null;
        org.joda.time.Hours hours1 = org.joda.time.Hours.standardHoursIn(readablePeriod0);
        org.joda.time.DurationFieldType durationFieldType2 = hours1.getFieldType();
        org.joda.time.Hours hours3 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours4 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        int int7 = hours5.getValue((int) (short) 0);
        org.joda.time.Hours hours8 = hours4.minus(hours5);
        org.joda.time.Hours hours9 = hours3.minus(hours4);
        int int10 = hours3.size();
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        int int14 = hours12.getValue((int) (short) 0);
        org.joda.time.Hours hours15 = hours11.minus(hours12);
        boolean boolean17 = hours12.equals((java.lang.Object) (short) 10);
        int int18 = hours3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours12);
        org.joda.time.Period period19 = hours12.toPeriod();
        org.joda.time.Duration duration20 = hours12.toStandardDuration();
        org.joda.time.Hours hours21 = hours1.minus(hours12);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 8 + "'", int7 == 8);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 8 + "'", int14 == 8);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(hours21);
    }

    @Test
    public void test0711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0711");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours12 = hours6.minus(10);
        org.joda.time.Hours hours13 = hours6.negated();
        org.joda.time.Duration duration14 = hours6.toStandardDuration();
        org.joda.time.Hours hours15 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod17 = hours16.toMutablePeriod();
        org.joda.time.Hours hours18 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours19 = hours16.minus(hours18);
        int int20 = hours15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours18);
        org.joda.time.DurationFieldType durationFieldType21 = null;
        boolean boolean22 = hours15.isSupported(durationFieldType21);
        org.joda.time.Hours hours24 = hours15.minus((int) (short) -1);
        org.joda.time.Hours hours25 = hours24.negated();
        org.joda.time.Hours hours27 = hours25.plus(16);
        org.joda.time.DurationFieldType durationFieldType28 = hours25.getFieldType();
        boolean boolean29 = hours6.isSupported(durationFieldType28);
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = hours6.get(durationFieldType30);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
    }

    @Test
    public void test0712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0712");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.multipliedBy(1);
        int int8 = hours7.getHours();
        org.joda.time.Hours hours10 = hours7.minus((int) ' ');
        int int11 = hours10.getHours();
        org.joda.time.DurationFieldType durationFieldType12 = hours10.getFieldType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 7 + "'", int8 == 7);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-25) + "'", int11 == (-25));
        org.junit.Assert.assertNotNull(durationFieldType12);
    }

    @Test
    public void test0713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0713");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        boolean boolean22 = hours16.isGreaterThan(hours20);
        int int23 = hours16.getHours();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
    }

    @Test
    public void test0714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0714");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.multipliedBy(1);
        org.joda.time.Hours hours8 = org.joda.time.Hours.ONE;
        int int9 = hours7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours8);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        boolean boolean11 = hours7.equals((java.lang.Object) hours10);
        org.joda.time.Hours hours12 = org.joda.time.Hours.MIN_VALUE;
        org.joda.time.Hours hours14 = hours12.plus(0);
        org.joda.time.Hours hours15 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod17 = hours16.toMutablePeriod();
        org.joda.time.Hours hours18 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours19 = hours16.minus(hours18);
        int int20 = hours15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours18);
        org.joda.time.DurationFieldType durationFieldType21 = null;
        boolean boolean22 = hours15.isSupported(durationFieldType21);
        org.joda.time.Hours hours24 = hours15.minus((int) (short) -1);
        org.joda.time.PeriodType periodType25 = hours15.getPeriodType();
        int int26 = hours15.getHours();
        org.joda.time.DurationFieldType durationFieldType28 = hours15.getFieldType((int) (short) 0);
        boolean boolean29 = hours14.isSupported(durationFieldType28);
        org.joda.time.Hours hours30 = org.joda.time.Hours.MIN_VALUE;
        org.joda.time.Hours hours32 = hours30.plus(0);
        org.joda.time.Hours hours33 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours34 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod35 = hours34.toMutablePeriod();
        org.joda.time.Hours hours36 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours37 = hours34.minus(hours36);
        int int38 = hours33.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours36);
        org.joda.time.DurationFieldType durationFieldType39 = null;
        boolean boolean40 = hours33.isSupported(durationFieldType39);
        org.joda.time.Hours hours42 = hours33.minus((int) (short) -1);
        org.joda.time.PeriodType periodType43 = hours33.getPeriodType();
        int int44 = hours33.getHours();
        org.joda.time.DurationFieldType durationFieldType46 = hours33.getFieldType((int) (short) 0);
        boolean boolean47 = hours32.isSupported(durationFieldType46);
        int int48 = hours14.get(durationFieldType46);
        boolean boolean49 = hours7.isSupported(durationFieldType46);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 7 + "'", int26 == 7);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 7 + "'", int44 == 7);
        org.junit.Assert.assertNotNull(durationFieldType46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-2147483648) + "'", int48 == (-2147483648));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test0715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0715");
        org.joda.time.Hours hours0 = org.joda.time.Hours.TWO;
        org.joda.time.Hours hours1 = org.joda.time.Hours.MAX_VALUE;
        int int2 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours1);
        org.joda.time.Hours hours3 = hours0.negated();
        org.joda.time.Period period4 = hours0.toPeriod();
        java.lang.String str5 = hours0.toString();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "PT2H" + "'", str5, "PT2H");
    }

    @Test
    public void test0716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0716");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        int int1 = hours0.getHours();
        org.joda.time.Hours hours3 = hours0.plus(10);
        org.joda.time.Hours hours4 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod5 = hours4.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours7 = hours4.minus(hours6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = hours4.get(durationFieldType8);
        org.joda.time.Hours hours11 = hours4.multipliedBy(1);
        boolean boolean12 = hours0.isGreaterThan(hours4);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        int int17 = hours15.getValue((int) (short) 0);
        org.joda.time.Hours hours18 = hours14.minus(hours15);
        org.joda.time.Hours hours19 = hours13.minus(hours14);
        int int20 = hours13.size();
        org.joda.time.Hours hours21 = hours4.plus(hours13);
        org.joda.time.Hours hours22 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours23 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod24 = hours23.toMutablePeriod();
        org.joda.time.Hours hours25 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours26 = hours23.minus(hours25);
        int int27 = hours22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours25);
        org.joda.time.Hours hours29 = hours25.multipliedBy(0);
        org.joda.time.Duration duration30 = hours25.toStandardDuration();
        org.joda.time.Hours hours32 = hours25.dividedBy((int) (short) -1);
        int int33 = hours32.size();
        boolean boolean34 = hours21.isLessThan(hours32);
        org.joda.time.Hours hours36 = hours21.plus((int) (short) 1);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 8 + "'", int17 == 8);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(hours36);
    }

    @Test
    public void test0717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0717");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours9 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod10 = hours9.toMutablePeriod();
        org.joda.time.Hours hours11 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours12 = hours9.minus(hours11);
        int int13 = hours8.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours11);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours8.isSupported(durationFieldType14);
        org.joda.time.Hours hours17 = hours8.minus((int) (short) -1);
        org.joda.time.Hours hours18 = hours17.negated();
        org.joda.time.Hours hours19 = hours17.negated();
        int int20 = hours19.getHours();
        org.joda.time.DurationFieldType durationFieldType22 = hours19.getFieldType(0);
        int int23 = hours0.get(durationFieldType22);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType25 = hours0.getFieldType(7);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 7");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-8) + "'", int20 == (-8));
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 7 + "'", int23 == 7);
    }

    @Test
    public void test0718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0718");
        org.joda.time.Hours hours0 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours2 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours6 = hours3.minus(hours5);
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = hours3.get(durationFieldType7);
        org.joda.time.Hours hours10 = hours3.minus((int) (short) 0);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod12 = hours11.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours14 = hours11.minus(hours13);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = hours13.isSupported(durationFieldType15);
        org.joda.time.Hours hours17 = hours10.minus(hours13);
        org.joda.time.Hours hours18 = hours2.plus(hours17);
        int int19 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours17);
        org.joda.time.MutablePeriod mutablePeriod20 = hours17.toMutablePeriod();
        org.joda.time.Duration duration21 = hours17.toStandardDuration();
        org.joda.time.Hours hours22 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours17);
        org.joda.time.PeriodType periodType23 = hours22.getPeriodType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(periodType23);
    }

    @Test
    public void test0719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0719");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((int) '4');
        org.joda.time.DurationFieldType durationFieldType2 = hours1.getFieldType();
        org.joda.time.Hours hours4 = hours1.plus(700);
        org.joda.time.Hours hours6 = hours4.multipliedBy((int) (short) -1);
        org.joda.time.Hours hours8 = hours6.minus((int) (short) 10);
        org.joda.time.Hours hours9 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        int int14 = hours9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours12);
        org.joda.time.Hours hours16 = hours12.multipliedBy(0);
        org.joda.time.Hours hours17 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        int int21 = hours19.getValue((int) (short) 0);
        org.joda.time.Hours hours22 = hours18.minus(hours19);
        boolean boolean24 = hours19.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours25 = null;
        org.joda.time.Hours hours26 = hours19.minus(hours25);
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours28 = org.joda.time.Hours.EIGHT;
        int int30 = hours28.getValue((int) (short) 0);
        org.joda.time.Hours hours31 = hours27.minus(hours28);
        org.joda.time.Hours hours32 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = hours32.get(durationFieldType33);
        org.joda.time.DurationFieldType durationFieldType35 = hours32.getFieldType();
        int int36 = hours27.get(durationFieldType35);
        int int37 = hours26.get(durationFieldType35);
        boolean boolean38 = hours16.isGreaterThan(hours26);
        boolean boolean39 = hours6.equals((java.lang.Object) boolean38);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 8 + "'", int21 == 8);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 8 + "'", int30 == 8);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 7 + "'", int36 == 7);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 8 + "'", int37 == 8);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test0720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0720");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        int int23 = hours18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours21);
        org.joda.time.Hours hours24 = hours1.plus(hours21);
        org.joda.time.Hours hours25 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod26 = hours25.toMutablePeriod();
        org.joda.time.Hours hours27 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours28 = hours25.minus(hours27);
        org.joda.time.DurationFieldType durationFieldType29 = null;
        int int30 = hours25.get(durationFieldType29);
        org.joda.time.Hours hours32 = hours25.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval33 = null;
        org.joda.time.Hours hours34 = org.joda.time.Hours.hoursIn(readableInterval33);
        int int35 = hours32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours34);
        boolean boolean36 = hours21.isGreaterThan(hours32);
        org.joda.time.Hours hours38 = hours21.multipliedBy(16);
        org.joda.time.Duration duration39 = hours21.toStandardDuration();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(duration39);
    }

    @Test
    public void test0721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0721");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.multipliedBy((int) (short) 10);
        org.joda.time.Hours hours11 = hours0.dividedBy((int) (short) 10);
        java.lang.String str12 = hours0.toString();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "PT7H" + "'", str12, "PT7H");
    }

    @Test
    public void test0722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0722");
        org.joda.time.Hours hours0 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours1 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = hours1.get(durationFieldType2);
        boolean boolean4 = hours0.equals((java.lang.Object) durationFieldType2);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod7 = hours6.toMutablePeriod();
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours9 = hours6.minus(hours8);
        int int10 = hours5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours8);
        org.joda.time.Hours hours12 = hours8.multipliedBy(0);
        org.joda.time.Hours hours13 = hours0.plus(hours12);
        org.joda.time.Hours hours15 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod17 = hours16.toMutablePeriod();
        org.joda.time.Hours hours18 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours19 = hours16.minus(hours18);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = hours16.get(durationFieldType20);
        org.joda.time.Hours hours23 = hours16.minus((int) (short) 0);
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod25 = hours24.toMutablePeriod();
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours27 = hours24.minus(hours26);
        org.joda.time.DurationFieldType durationFieldType28 = null;
        boolean boolean29 = hours26.isSupported(durationFieldType28);
        org.joda.time.Hours hours30 = hours23.minus(hours26);
        org.joda.time.Hours hours31 = hours15.plus(hours30);
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod33 = hours32.toMutablePeriod();
        org.joda.time.Hours hours34 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours35 = hours32.minus(hours34);
        boolean boolean36 = hours30.isGreaterThan(hours34);
        org.joda.time.Hours hours37 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours30);
        int int38 = hours12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours30);
        org.joda.time.Hours hours39 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod40 = hours39.toMutablePeriod();
        org.joda.time.Hours hours41 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours42 = hours39.minus(hours41);
        org.joda.time.DurationFieldType durationFieldType43 = null;
        int int44 = hours39.get(durationFieldType43);
        org.joda.time.Hours hours46 = hours39.multipliedBy(1);
        int int47 = hours46.getHours();
        org.joda.time.DurationFieldType durationFieldType48 = hours46.getFieldType();
        org.joda.time.Hours hours49 = hours30.plus(hours46);
        org.joda.time.Hours hours51 = hours46.dividedBy((int) (short) -1);
        org.joda.time.Duration duration52 = hours51.toStandardDuration();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(mutablePeriod40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 7 + "'", int47 == 7);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(duration52);
    }

    @Test
    public void test0723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0723");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period1 = hours0.toPeriod();
        org.joda.time.Hours hours3 = hours0.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.THREE;
        org.joda.time.Period period6 = hours5.toPeriod();
        org.joda.time.Hours hours8 = hours5.plus((int) (byte) -1);
        org.joda.time.Hours hours9 = hours3.minus(hours5);
        org.joda.time.Hours hours11 = org.joda.time.Hours.hours((int) '4');
        org.joda.time.DurationFieldType durationFieldType12 = hours11.getFieldType();
        org.joda.time.Hours hours14 = hours11.plus(700);
        boolean boolean15 = hours9.isGreaterThan(hours14);
        org.joda.time.Hours hours17 = hours9.plus((int) '#');
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        int int23 = hours18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours21);
        org.joda.time.Hours hours25 = hours18.minus((int) 'a');
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period27 = hours26.toPeriod();
        boolean boolean28 = hours18.equals((java.lang.Object) period27);
        org.joda.time.Hours hours29 = hours9.minus(hours18);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(hours29);
    }

    @Test
    public void test0724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0724");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours12 = hours6.minus(10);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod15 = hours14.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours17 = hours14.minus(hours16);
        int int18 = hours13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours16);
        org.joda.time.Hours hours19 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours13);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = hours13.get(durationFieldType20);
        boolean boolean22 = hours12.equals((java.lang.Object) hours13);
        org.joda.time.Hours hours24 = hours13.minus(100);
        int int25 = hours13.getHours();
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod28 = hours27.toMutablePeriod();
        org.joda.time.Hours hours29 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours30 = hours27.minus(hours29);
        int int31 = hours26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours29);
        org.joda.time.Hours hours32 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours26);
        org.joda.time.Hours hours33 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod34 = hours33.toMutablePeriod();
        org.joda.time.Hours hours35 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours36 = hours33.minus(hours35);
        org.joda.time.DurationFieldType durationFieldType37 = null;
        int int38 = hours33.get(durationFieldType37);
        org.joda.time.Hours hours40 = hours33.minus((int) (short) 0);
        org.joda.time.Hours hours41 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType42 = null;
        int int43 = hours41.get(durationFieldType42);
        org.joda.time.DurationFieldType durationFieldType44 = hours41.getFieldType();
        int int45 = hours40.get(durationFieldType44);
        org.joda.time.Hours hours46 = org.joda.time.Hours.ONE;
        int int47 = hours46.getHours();
        org.joda.time.Hours hours49 = hours46.plus(10);
        org.joda.time.Hours hours50 = hours40.minus(hours49);
        org.joda.time.Hours hours51 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours50);
        boolean boolean52 = hours26.isLessThan(hours51);
        boolean boolean53 = hours13.equals((java.lang.Object) hours26);
        org.joda.time.Hours hours54 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType55 = null;
        int int56 = hours54.get(durationFieldType55);
        org.joda.time.Hours hours58 = hours54.dividedBy(100);
        org.joda.time.Hours hours59 = hours54.negated();
        boolean boolean60 = hours26.equals((java.lang.Object) hours59);
        org.joda.time.Hours hours61 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours62 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours63 = org.joda.time.Hours.EIGHT;
        int int65 = hours63.getValue((int) (short) 0);
        org.joda.time.Hours hours66 = hours62.minus(hours63);
        org.joda.time.Hours hours67 = hours61.minus(hours62);
        int int68 = hours59.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours67);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 7 + "'", int25 == 7);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 7 + "'", int45 == 7);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 8 + "'", int65 == 8);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
    }

    @Test
    public void test0725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0725");
        org.joda.time.Hours hours0 = org.joda.time.Hours.EIGHT;
        org.joda.time.Duration duration1 = hours0.toStandardDuration();
        org.joda.time.Hours hours2 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType3 = null;
        int int4 = hours2.get(durationFieldType3);
        org.joda.time.DurationFieldType durationFieldType5 = hours2.getFieldType();
        boolean boolean6 = hours0.isSupported(durationFieldType5);
        org.joda.time.Hours hours7 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod8 = hours7.toMutablePeriod();
        org.joda.time.Hours hours9 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours10 = hours7.minus(hours9);
        org.joda.time.DurationFieldType durationFieldType11 = null;
        int int12 = hours7.get(durationFieldType11);
        org.joda.time.Hours hours14 = hours7.minus((int) (short) 0);
        org.joda.time.Hours hours15 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod16 = hours15.toMutablePeriod();
        org.joda.time.Hours hours17 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours18 = hours15.minus(hours17);
        org.joda.time.DurationFieldType durationFieldType19 = null;
        boolean boolean20 = hours17.isSupported(durationFieldType19);
        org.joda.time.Hours hours21 = hours14.minus(hours17);
        org.joda.time.Hours hours22 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours23 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod24 = hours23.toMutablePeriod();
        org.joda.time.Hours hours25 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours26 = hours23.minus(hours25);
        int int27 = hours22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours25);
        org.joda.time.DurationFieldType durationFieldType28 = null;
        boolean boolean29 = hours22.isSupported(durationFieldType28);
        org.joda.time.Hours hours31 = hours22.minus((int) (short) -1);
        org.joda.time.PeriodType periodType32 = hours22.getPeriodType();
        org.joda.time.Hours hours33 = org.joda.time.Hours.EIGHT;
        int int35 = hours33.getValue((int) (short) 0);
        org.joda.time.Hours hours36 = hours22.minus(hours33);
        org.joda.time.Hours hours38 = hours22.plus(7);
        org.joda.time.Hours hours39 = hours21.minus(hours38);
        org.joda.time.Hours hours41 = hours38.minus(16);
        int int42 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours38);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 8 + "'", int35 == 8);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
    }

    @Test
    public void test0726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0726");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(0);
        int int2 = hours1.size();
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours4 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod5 = hours4.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours7 = hours4.minus(hours6);
        int int8 = hours3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours6);
        org.joda.time.DurationFieldType durationFieldType9 = null;
        boolean boolean10 = hours3.isSupported(durationFieldType9);
        org.joda.time.Hours hours12 = hours3.minus((int) (short) -1);
        org.joda.time.PeriodType periodType13 = hours3.getPeriodType();
        int int14 = hours3.getHours();
        org.joda.time.DurationFieldType durationFieldType16 = hours3.getFieldType((int) (short) 0);
        int int17 = hours1.get(durationFieldType16);
        org.joda.time.PeriodType periodType18 = hours1.getPeriodType();
        org.joda.time.Hours hours19 = org.joda.time.Hours.THREE;
        org.joda.time.Period period20 = hours19.toPeriod();
        org.joda.time.Hours hours22 = hours19.plus((int) (byte) -1);
        org.joda.time.Hours hours24 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours25 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod26 = hours25.toMutablePeriod();
        org.joda.time.Hours hours27 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours28 = hours25.minus(hours27);
        org.joda.time.DurationFieldType durationFieldType29 = null;
        int int30 = hours25.get(durationFieldType29);
        org.joda.time.Hours hours32 = hours25.minus((int) (short) 0);
        org.joda.time.Hours hours33 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod34 = hours33.toMutablePeriod();
        org.joda.time.Hours hours35 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours36 = hours33.minus(hours35);
        org.joda.time.DurationFieldType durationFieldType37 = null;
        boolean boolean38 = hours35.isSupported(durationFieldType37);
        org.joda.time.Hours hours39 = hours32.minus(hours35);
        org.joda.time.Hours hours40 = hours24.plus(hours39);
        org.joda.time.Hours hours41 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod42 = hours41.toMutablePeriod();
        org.joda.time.Hours hours43 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours44 = hours41.minus(hours43);
        boolean boolean45 = hours39.isGreaterThan(hours43);
        org.joda.time.DurationFieldType durationFieldType47 = hours39.getFieldType((int) (short) 0);
        int int48 = hours39.size();
        org.joda.time.Hours hours49 = hours19.plus(hours39);
        boolean boolean50 = hours1.isGreaterThan(hours49);
        org.joda.time.Hours hours52 = hours49.dividedBy(14);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 7 + "'", int14 == 7);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(hours52);
    }

    @Test
    public void test0727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0727");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(100);
        org.joda.time.Period period2 = hours1.toPeriod();
        org.joda.time.Hours hours4 = hours1.minus(8);
        org.joda.time.Hours hours5 = org.joda.time.Hours.THREE;
        org.joda.time.Period period6 = hours5.toPeriod();
        org.joda.time.Hours hours8 = hours5.plus((int) (byte) -1);
        org.joda.time.Hours hours10 = hours8.minus((int) (byte) 100);
        boolean boolean11 = hours1.equals((java.lang.Object) hours10);
        org.joda.time.MutablePeriod mutablePeriod12 = hours1.toMutablePeriod();
        org.joda.time.Hours hours14 = org.joda.time.Hours.parseHours("PT16H");
        org.joda.time.Hours hours15 = hours1.minus(hours14);
        org.joda.time.Hours hours17 = org.joda.time.Hours.hours((int) '4');
        org.joda.time.DurationFieldType durationFieldType18 = hours17.getFieldType();
        org.joda.time.Period period19 = hours17.toPeriod();
        org.joda.time.Period period20 = hours17.toPeriod();
        org.joda.time.Hours hours22 = hours17.dividedBy(5);
        boolean boolean23 = hours14.isLessThan(hours22);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test0728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0728");
        org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT0H");
        // The following exception was thrown during execution in test generation
        try {
            int int3 = hours1.getValue((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 35");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours1);
    }

    @Test
    public void test0729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0729");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        int int1 = hours0.getHours();
        org.joda.time.Hours hours3 = hours0.plus(10);
        org.joda.time.Hours hours4 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod5 = hours4.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours7 = hours4.minus(hours6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = hours4.get(durationFieldType8);
        org.joda.time.Hours hours11 = hours4.multipliedBy(1);
        boolean boolean12 = hours0.isGreaterThan(hours4);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        int int17 = hours15.getValue((int) (short) 0);
        org.joda.time.Hours hours18 = hours14.minus(hours15);
        org.joda.time.Hours hours19 = hours13.minus(hours14);
        int int20 = hours13.size();
        org.joda.time.Hours hours21 = hours4.plus(hours13);
        org.joda.time.Hours hours23 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours25 = hours23.minus(8);
        org.joda.time.Hours hours26 = org.joda.time.Hours.ONE;
        org.joda.time.Hours hours28 = hours26.plus(1);
        org.joda.time.Hours hours30 = hours28.minus((int) (byte) 10);
        org.joda.time.Hours hours31 = hours28.negated();
        boolean boolean32 = hours23.isLessThan(hours28);
        org.joda.time.Hours hours33 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours28);
        boolean boolean34 = hours4.equals((java.lang.Object) hours33);
        org.joda.time.Hours hours35 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours36 = org.joda.time.Hours.EIGHT;
        int int38 = hours36.getValue((int) (short) 0);
        org.joda.time.Hours hours39 = hours35.minus(hours36);
        int int40 = hours39.getHours();
        org.joda.time.Hours hours41 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours42 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType43 = null;
        int int44 = hours42.get(durationFieldType43);
        boolean boolean45 = hours41.equals((java.lang.Object) durationFieldType43);
        org.joda.time.Hours hours46 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours47 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod48 = hours47.toMutablePeriod();
        org.joda.time.Hours hours49 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours50 = hours47.minus(hours49);
        int int51 = hours46.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours49);
        org.joda.time.Hours hours53 = hours49.multipliedBy(0);
        org.joda.time.Hours hours54 = hours41.plus(hours53);
        org.joda.time.DurationFieldType durationFieldType55 = hours54.getFieldType();
        org.joda.time.Hours hours56 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours57 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod58 = hours57.toMutablePeriod();
        org.joda.time.Hours hours59 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours60 = hours57.minus(hours59);
        int int61 = hours56.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours59);
        org.joda.time.Hours hours62 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours56);
        org.joda.time.DurationFieldType durationFieldType63 = hours56.getFieldType();
        int int64 = hours54.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours56);
        org.joda.time.Hours hours65 = hours39.minus(hours54);
        int int66 = hours33.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours39);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 8 + "'", int17 == 8);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 8 + "'", int38 == 8);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(mutablePeriod48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(durationFieldType55);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(mutablePeriod58);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertNotNull(durationFieldType63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
    }

    @Test
    public void test0730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0730");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours11 = hours8.minus(hours10);
        org.joda.time.Hours hours12 = hours10.negated();
        org.joda.time.DurationFieldType durationFieldType13 = hours12.getFieldType();
        org.joda.time.Hours hours14 = hours7.minus(hours12);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType16 = hours7.getFieldType(7);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 7");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertNotNull(hours14);
    }

    @Test
    public void test0731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0731");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period1 = hours0.toPeriod();
        org.joda.time.Hours hours3 = hours0.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.THREE;
        org.joda.time.Period period6 = hours5.toPeriod();
        org.joda.time.Hours hours8 = hours5.plus((int) (byte) -1);
        org.joda.time.Hours hours9 = hours3.minus(hours5);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = hours10.get(durationFieldType14);
        org.joda.time.Hours hours17 = hours10.minus((int) (short) 0);
        org.joda.time.Hours hours18 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = hours18.get(durationFieldType19);
        org.joda.time.DurationFieldType durationFieldType21 = hours18.getFieldType();
        int int22 = hours17.get(durationFieldType21);
        int int23 = hours5.get(durationFieldType21);
        org.joda.time.Hours hours25 = hours5.minus((int) ' ');
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod28 = hours27.toMutablePeriod();
        org.joda.time.Hours hours29 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours30 = hours27.minus(hours29);
        int int31 = hours26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours29);
        org.joda.time.Hours hours33 = hours29.multipliedBy(0);
        org.joda.time.Hours hours34 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours35 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod36 = hours35.toMutablePeriod();
        org.joda.time.Hours hours37 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours38 = hours35.minus(hours37);
        int int39 = hours34.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours37);
        org.joda.time.DurationFieldType durationFieldType40 = null;
        boolean boolean41 = hours34.isSupported(durationFieldType40);
        org.joda.time.Hours hours43 = hours34.minus((int) (short) -1);
        org.joda.time.PeriodType periodType44 = hours34.getPeriodType();
        int int45 = hours34.getHours();
        boolean boolean46 = hours29.equals((java.lang.Object) int45);
        java.lang.String str47 = hours29.toString();
        org.joda.time.Hours hours49 = hours29.minus((int) (short) 10);
        org.joda.time.Hours hours51 = hours29.multipliedBy((int) '4');
        org.joda.time.Hours hours52 = hours25.plus(hours29);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 7 + "'", int22 == 7);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 3 + "'", int23 == 3);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(mutablePeriod36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 7 + "'", int45 == 7);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "PT8H" + "'", str47, "PT8H");
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(hours52);
    }

    @Test
    public void test0732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0732");
        org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT-92H");
        org.junit.Assert.assertNotNull(hours1);
    }

    @Test
    public void test0733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0733");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((-2147483598));
        org.junit.Assert.assertNotNull(hours1);
    }

    @Test
    public void test0734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0734");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Hours hours1 = org.joda.time.Hours.hoursIn(readableInterval0);
        org.joda.time.DurationFieldType durationFieldType2 = hours1.getFieldType();
        org.joda.time.Hours hours4 = hours1.dividedBy((int) (byte) 10);
        org.joda.time.Hours hours6 = hours1.plus((int) (byte) 1);
        org.joda.time.Hours hours8 = hours1.dividedBy(100);
        org.joda.time.Hours hours9 = hours8.negated();
        org.joda.time.Hours hours11 = hours8.minus((-2));
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod14 = hours13.toMutablePeriod();
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours16 = hours13.minus(hours15);
        int int17 = hours12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours15);
        org.joda.time.Hours hours19 = hours12.minus((int) 'a');
        org.joda.time.Hours hours20 = org.joda.time.Hours.ZERO;
        org.joda.time.MutablePeriod mutablePeriod21 = hours20.toMutablePeriod();
        boolean boolean22 = hours19.equals((java.lang.Object) hours20);
        org.joda.time.Hours hours23 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours24 = hours23.negated();
        org.joda.time.Hours hours25 = hours23.negated();
        org.joda.time.Hours hours26 = hours20.minus(hours23);
        boolean boolean27 = hours11.isLessThan(hours26);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test0735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0735");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours7 = hours3.multipliedBy(0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours9 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod10 = hours9.toMutablePeriod();
        org.joda.time.Hours hours11 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours12 = hours9.minus(hours11);
        int int13 = hours8.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours11);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours8.isSupported(durationFieldType14);
        org.joda.time.Hours hours17 = hours8.minus((int) (short) -1);
        org.joda.time.PeriodType periodType18 = hours8.getPeriodType();
        int int19 = hours8.getHours();
        boolean boolean20 = hours3.equals((java.lang.Object) int19);
        java.lang.String str21 = hours3.toString();
        org.joda.time.Hours hours23 = hours3.minus((int) (short) 10);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType25 = hours3.getFieldType((int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 7 + "'", int19 == 7);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "PT8H" + "'", str21, "PT8H");
        org.junit.Assert.assertNotNull(hours23);
    }

    @Test
    public void test0736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0736");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = hours8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = hours8.getFieldType();
        int int12 = hours7.get(durationFieldType11);
        org.joda.time.Hours hours13 = hours7.negated();
        org.joda.time.PeriodType periodType14 = hours13.getPeriodType();
        java.lang.Class<?> wildcardClass15 = hours13.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 7 + "'", int12 == 7);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0737");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        int int23 = hours18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours21);
        org.joda.time.Hours hours24 = hours1.plus(hours21);
        org.joda.time.PeriodType periodType25 = hours24.getPeriodType();
        int int26 = hours24.getHours();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 16 + "'", int26 == 16);
    }

    @Test
    public void test0738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0738");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.multipliedBy(1);
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours11 = hours8.minus(hours10);
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = hours8.get(durationFieldType12);
        org.joda.time.Hours hours15 = hours8.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Hours hours17 = org.joda.time.Hours.hoursIn(readableInterval16);
        int int18 = hours15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours17);
        org.joda.time.Hours hours19 = hours0.minus(hours15);
        org.joda.time.Hours hours20 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod21 = hours20.toMutablePeriod();
        org.joda.time.Hours hours22 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours23 = hours20.minus(hours22);
        org.joda.time.Hours hours24 = hours22.negated();
        int int25 = hours24.getHours();
        org.joda.time.Hours hours27 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours29 = hours27.minus(8);
        org.joda.time.Hours hours30 = hours24.minus(hours27);
        boolean boolean31 = hours15.isLessThan(hours30);
        org.joda.time.Hours hours32 = org.joda.time.Hours.ONE;
        int int33 = hours32.getHours();
        org.joda.time.Hours hours35 = hours32.plus(10);
        int int36 = hours32.size();
        org.joda.time.Period period37 = hours32.toPeriod();
        org.joda.time.Hours hours38 = hours30.minus(hours32);
        org.joda.time.Hours hours40 = hours32.plus((int) (byte) 1);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-8) + "'", int25 == (-8));
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours40);
    }

    @Test
    public void test0739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0739");
        org.joda.time.Hours hours0 = org.joda.time.Hours.THREE;
        org.joda.time.Period period1 = hours0.toPeriod();
        org.joda.time.Hours hours3 = hours0.plus((int) (byte) -1);
        org.joda.time.Hours hours5 = hours3.minus((int) (byte) 100);
        org.joda.time.Hours hours7 = org.joda.time.Hours.hours(0);
        int int8 = hours7.size();
        org.joda.time.Hours hours10 = org.joda.time.Hours.hours((-1));
        int int11 = hours7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours10);
        org.joda.time.Hours hours13 = hours7.plus(7);
        boolean boolean14 = hours5.isGreaterThan(hours13);
        org.joda.time.PeriodType periodType15 = hours5.getPeriodType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(periodType15);
    }

    @Test
    public void test0740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0740");
        org.joda.time.Hours hours0 = org.joda.time.Hours.TWO;
        org.joda.time.Hours hours1 = org.joda.time.Hours.MAX_VALUE;
        int int2 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours1);
        int int3 = hours1.size();
        org.joda.time.Hours hours4 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours1);
        org.joda.time.Hours hours5 = hours1.negated();
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod7 = hours6.toMutablePeriod();
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours9 = hours6.minus(hours8);
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = hours6.get(durationFieldType10);
        org.joda.time.Hours hours13 = hours6.minus((int) (short) 0);
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours15 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod16 = hours15.toMutablePeriod();
        org.joda.time.Hours hours17 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours18 = hours15.minus(hours17);
        int int19 = hours14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours17);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        boolean boolean21 = hours14.isSupported(durationFieldType20);
        org.joda.time.Hours hours23 = hours14.minus((int) (short) -1);
        org.joda.time.Hours hours24 = hours23.negated();
        org.joda.time.Hours hours25 = hours23.negated();
        int int26 = hours25.getHours();
        org.joda.time.DurationFieldType durationFieldType28 = hours25.getFieldType(0);
        int int29 = hours6.get(durationFieldType28);
        boolean boolean30 = hours1.isSupported(durationFieldType28);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-8) + "'", int26 == (-8));
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 7 + "'", int29 == 7);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test0741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0741");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.PeriodType periodType10 = hours0.getPeriodType();
        org.joda.time.Hours hours11 = org.joda.time.Hours.EIGHT;
        int int13 = hours11.getValue((int) (short) 0);
        org.joda.time.Hours hours14 = hours0.minus(hours11);
        org.joda.time.Hours hours15 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod16 = hours15.toMutablePeriod();
        org.joda.time.Hours hours17 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours18 = hours15.minus(hours17);
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = hours15.get(durationFieldType19);
        org.joda.time.Hours hours22 = hours15.minus((int) (short) 0);
        org.joda.time.Hours hours23 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType24 = null;
        int int25 = hours23.get(durationFieldType24);
        org.joda.time.DurationFieldType durationFieldType26 = hours23.getFieldType();
        int int27 = hours22.get(durationFieldType26);
        org.joda.time.Hours hours28 = hours22.negated();
        org.joda.time.Hours hours29 = hours11.minus(hours28);
        org.joda.time.MutablePeriod mutablePeriod30 = hours28.toMutablePeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 8 + "'", int13 == 8);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 7 + "'", int27 == 7);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(mutablePeriod30);
    }

    @Test
    public void test0742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0742");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        java.lang.String str5 = hours4.toString();
        int int6 = hours4.size();
        org.joda.time.Hours hours8 = org.joda.time.Hours.parseHours("PT10H");
        boolean boolean9 = hours4.isLessThan(hours8);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "PT-1H" + "'", str5, "PT-1H");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test0743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0743");
        org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT16H");
        org.joda.time.Period period2 = hours1.toPeriod();
        org.joda.time.Hours hours4 = hours1.minus((int) (byte) -1);
        org.joda.time.Hours hours5 = hours1.negated();
        org.joda.time.Hours hours7 = hours1.plus(14);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours7);
    }

    @Test
    public void test0744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0744");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.multipliedBy(1);
        org.joda.time.Hours hours8 = org.joda.time.Hours.ONE;
        int int9 = hours7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours8);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod12 = hours11.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours14 = hours11.minus(hours13);
        int int15 = hours10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours13);
        org.joda.time.DurationFieldType durationFieldType16 = null;
        boolean boolean17 = hours10.isSupported(durationFieldType16);
        org.joda.time.Hours hours19 = hours10.minus((int) (short) -1);
        org.joda.time.PeriodType periodType20 = hours10.getPeriodType();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        int int23 = hours21.getValue((int) (short) 0);
        org.joda.time.Hours hours24 = hours10.minus(hours21);
        org.joda.time.Hours hours25 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod26 = hours25.toMutablePeriod();
        org.joda.time.Hours hours27 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours28 = hours25.minus(hours27);
        org.joda.time.DurationFieldType durationFieldType29 = null;
        int int30 = hours25.get(durationFieldType29);
        org.joda.time.Hours hours32 = hours25.minus((int) (short) 0);
        org.joda.time.Hours hours33 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = hours33.get(durationFieldType34);
        org.joda.time.DurationFieldType durationFieldType36 = hours33.getFieldType();
        int int37 = hours32.get(durationFieldType36);
        org.joda.time.Hours hours38 = hours32.negated();
        org.joda.time.Hours hours39 = hours21.minus(hours38);
        boolean boolean40 = hours8.isGreaterThan(hours39);
        java.lang.Class<?> wildcardClass41 = hours8.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 8 + "'", int23 == 8);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 7 + "'", int37 == 7);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0745");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        boolean boolean5 = hours2.isSupported(durationFieldType4);
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        int int9 = hours7.getValue((int) (short) 0);
        org.joda.time.Hours hours10 = hours6.minus(hours7);
        boolean boolean11 = hours2.isLessThan(hours7);
        org.joda.time.Hours hours12 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = hours12.get(durationFieldType13);
        org.joda.time.DurationFieldType durationFieldType15 = hours12.getFieldType();
        boolean boolean16 = hours2.isSupported(durationFieldType15);
        org.joda.time.Hours hours18 = org.joda.time.Hours.hours(100);
        org.joda.time.Period period19 = hours18.toPeriod();
        org.joda.time.Hours hours21 = hours18.minus(8);
        org.joda.time.Hours hours22 = org.joda.time.Hours.THREE;
        org.joda.time.Period period23 = hours22.toPeriod();
        org.joda.time.Hours hours25 = hours22.plus((int) (byte) -1);
        org.joda.time.Hours hours27 = hours25.minus((int) (byte) 100);
        boolean boolean28 = hours18.equals((java.lang.Object) hours27);
        boolean boolean29 = hours2.isGreaterThan(hours18);
        int int30 = hours2.size();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8 + "'", int9 == 8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
    }

    @Test
    public void test0746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0746");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.PeriodType periodType10 = hours0.getPeriodType();
        int int11 = hours0.getHours();
        org.joda.time.DurationFieldType durationFieldType13 = hours0.getFieldType((int) (short) 0);
        int int14 = hours0.size();
        int int15 = hours0.size();
        org.joda.time.DurationFieldType durationFieldType16 = hours0.getFieldType();
        org.joda.time.Hours hours18 = hours0.multipliedBy(100);
        org.joda.time.Hours hours20 = hours0.minus(0);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 7 + "'", int11 == 7);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours20);
    }

    @Test
    public void test0747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0747");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = hours8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = hours8.getFieldType();
        int int12 = hours7.get(durationFieldType11);
        org.joda.time.PeriodType periodType13 = hours7.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType14 = hours7.getFieldType();
        org.joda.time.Hours hours16 = org.joda.time.Hours.hours(1);
        org.joda.time.DurationFieldType durationFieldType17 = hours16.getFieldType();
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        int int23 = hours18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours21);
        org.joda.time.DurationFieldType durationFieldType24 = null;
        boolean boolean25 = hours18.isSupported(durationFieldType24);
        org.joda.time.Hours hours27 = hours18.minus((int) (short) -1);
        org.joda.time.PeriodType periodType28 = hours18.getPeriodType();
        org.joda.time.Hours hours29 = org.joda.time.Hours.EIGHT;
        int int31 = hours29.getValue((int) (short) 0);
        org.joda.time.Hours hours32 = hours18.minus(hours29);
        org.joda.time.Hours hours34 = hours18.plus(7);
        org.joda.time.Hours hours35 = hours18.negated();
        org.joda.time.Hours hours36 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod37 = hours36.toMutablePeriod();
        org.joda.time.Hours hours38 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours39 = hours36.minus(hours38);
        org.joda.time.DurationFieldType durationFieldType40 = null;
        int int41 = hours36.get(durationFieldType40);
        org.joda.time.Hours hours43 = hours36.minus((int) (short) 0);
        org.joda.time.Hours hours44 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType45 = null;
        int int46 = hours44.get(durationFieldType45);
        org.joda.time.DurationFieldType durationFieldType47 = hours44.getFieldType();
        int int48 = hours43.get(durationFieldType47);
        int int49 = hours18.get(durationFieldType47);
        org.joda.time.Hours hours50 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours51 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod52 = hours51.toMutablePeriod();
        org.joda.time.Hours hours53 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours54 = hours51.minus(hours53);
        int int55 = hours50.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours53);
        org.joda.time.Hours hours56 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours50);
        org.joda.time.DurationFieldType durationFieldType57 = null;
        int int58 = hours50.get(durationFieldType57);
        org.joda.time.DurationFieldType durationFieldType59 = null;
        int int60 = hours50.get(durationFieldType59);
        org.joda.time.Hours hours62 = hours50.minus(0);
        org.joda.time.DurationFieldType durationFieldType63 = hours62.getFieldType();
        boolean boolean64 = hours18.isSupported(durationFieldType63);
        int int65 = hours16.get(durationFieldType63);
        boolean boolean66 = hours7.isSupported(durationFieldType63);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 7 + "'", int12 == 7);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 8 + "'", int31 == 8);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 7 + "'", int48 == 7);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 7 + "'", int49 == 7);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(mutablePeriod52);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertNotNull(durationFieldType63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
    }

    @Test
    public void test0748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0748");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        int int1 = hours0.getHours();
        org.joda.time.Hours hours3 = hours0.plus(10);
        org.joda.time.Period period4 = hours3.toPeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.hours(100);
        org.joda.time.Period period7 = hours6.toPeriod();
        org.joda.time.Hours hours8 = hours3.plus(hours6);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType10 = hours6.getFieldType((int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(hours8);
    }

    @Test
    public void test0749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0749");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours5.get(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType8 = hours5.getFieldType();
        int int9 = hours0.get(durationFieldType8);
        org.joda.time.Hours hours11 = hours0.multipliedBy(7);
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod14 = hours13.toMutablePeriod();
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours16 = hours13.minus(hours15);
        int int17 = hours12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours15);
        org.joda.time.DurationFieldType durationFieldType18 = null;
        boolean boolean19 = hours12.isSupported(durationFieldType18);
        org.joda.time.Hours hours21 = hours12.minus((int) (short) -1);
        org.joda.time.PeriodType periodType22 = hours12.getPeriodType();
        org.joda.time.Hours hours23 = org.joda.time.Hours.EIGHT;
        int int25 = hours23.getValue((int) (short) 0);
        org.joda.time.Hours hours26 = hours12.minus(hours23);
        org.joda.time.Hours hours28 = hours26.minus((-1));
        boolean boolean29 = hours11.equals((java.lang.Object) hours28);
        // The following exception was thrown during execution in test generation
        try {
            int int31 = hours11.getValue((-25));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -25");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7 + "'", int9 == 7);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 8 + "'", int25 == 8);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test0750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0750");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.multipliedBy((int) (short) 10);
        org.joda.time.MutablePeriod mutablePeriod10 = hours0.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod14 = hours13.toMutablePeriod();
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours16 = hours13.minus(hours15);
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = hours13.get(durationFieldType17);
        org.joda.time.Hours hours20 = hours13.minus((int) (short) 0);
        org.joda.time.Hours hours21 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod22 = hours21.toMutablePeriod();
        org.joda.time.Hours hours23 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours24 = hours21.minus(hours23);
        org.joda.time.DurationFieldType durationFieldType25 = null;
        boolean boolean26 = hours23.isSupported(durationFieldType25);
        org.joda.time.Hours hours27 = hours20.minus(hours23);
        org.joda.time.Hours hours28 = hours12.plus(hours27);
        boolean boolean29 = hours0.isLessThan(hours27);
        org.joda.time.Hours hours30 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod31 = hours30.toMutablePeriod();
        org.joda.time.Hours hours32 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours33 = hours30.minus(hours32);
        org.joda.time.Duration duration34 = hours30.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod35 = hours30.toMutablePeriod();
        org.joda.time.Hours hours36 = org.joda.time.Hours.EIGHT;
        int int38 = hours36.getValue((int) (short) 0);
        java.lang.String str39 = hours36.toString();
        boolean boolean40 = hours30.isGreaterThan(hours36);
        org.joda.time.Hours hours42 = hours36.minus(10);
        org.joda.time.Hours hours43 = hours36.negated();
        org.joda.time.Hours hours44 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod45 = hours44.toMutablePeriod();
        org.joda.time.Hours hours46 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours47 = hours44.minus(hours46);
        org.joda.time.DurationFieldType durationFieldType48 = null;
        int int49 = hours44.get(durationFieldType48);
        org.joda.time.Hours hours51 = hours44.multipliedBy(1);
        org.joda.time.Hours hours52 = org.joda.time.Hours.ONE;
        int int53 = hours51.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours52);
        int int54 = hours36.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours51);
        boolean boolean55 = hours27.isGreaterThan(hours51);
        org.joda.time.Hours hours57 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours58 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod59 = hours58.toMutablePeriod();
        org.joda.time.Hours hours60 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours61 = hours58.minus(hours60);
        org.joda.time.DurationFieldType durationFieldType62 = null;
        int int63 = hours58.get(durationFieldType62);
        org.joda.time.Hours hours65 = hours58.minus((int) (short) 0);
        org.joda.time.Hours hours66 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod67 = hours66.toMutablePeriod();
        org.joda.time.Hours hours68 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours69 = hours66.minus(hours68);
        org.joda.time.DurationFieldType durationFieldType70 = null;
        boolean boolean71 = hours68.isSupported(durationFieldType70);
        org.joda.time.Hours hours72 = hours65.minus(hours68);
        org.joda.time.Hours hours73 = hours57.plus(hours72);
        org.joda.time.Hours hours74 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod75 = hours74.toMutablePeriod();
        org.joda.time.Hours hours76 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours77 = hours74.minus(hours76);
        boolean boolean78 = hours72.isGreaterThan(hours76);
        org.joda.time.Hours hours79 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours80 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours81 = org.joda.time.Hours.EIGHT;
        int int83 = hours81.getValue((int) (short) 0);
        org.joda.time.Hours hours84 = hours80.minus(hours81);
        org.joda.time.Hours hours85 = hours79.minus(hours80);
        org.joda.time.Hours hours87 = hours80.dividedBy(1);
        org.joda.time.Duration duration88 = hours80.toStandardDuration();
        boolean boolean89 = hours76.isGreaterThan(hours80);
        org.joda.time.Hours hours90 = hours76.negated();
        org.joda.time.Hours hours91 = hours90.negated();
        int int92 = hours27.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours90);
        org.joda.time.MutablePeriod mutablePeriod93 = hours90.toMutablePeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 8 + "'", int38 == 8);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "PT8H" + "'", str39, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(mutablePeriod45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(mutablePeriod59);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertNotNull(mutablePeriod67);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertNotNull(hours69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(hours72);
        org.junit.Assert.assertNotNull(hours73);
        org.junit.Assert.assertNotNull(hours74);
        org.junit.Assert.assertNotNull(mutablePeriod75);
        org.junit.Assert.assertNotNull(hours76);
        org.junit.Assert.assertNotNull(hours77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(hours79);
        org.junit.Assert.assertNotNull(hours80);
        org.junit.Assert.assertNotNull(hours81);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 8 + "'", int83 == 8);
        org.junit.Assert.assertNotNull(hours84);
        org.junit.Assert.assertNotNull(hours85);
        org.junit.Assert.assertNotNull(hours87);
        org.junit.Assert.assertNotNull(duration88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(hours90);
        org.junit.Assert.assertNotNull(hours91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 1 + "'", int92 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod93);
    }

    @Test
    public void test0751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0751");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.Hours hours2 = hours0.plus(1);
        org.joda.time.Hours hours4 = hours2.minus((int) (byte) 10);
        org.joda.time.Hours hours5 = hours2.negated();
        org.joda.time.Hours hours7 = org.joda.time.Hours.parseHours("PT7H");
        org.joda.time.PeriodType periodType8 = hours7.getPeriodType();
        int int9 = hours5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours7);
        org.joda.time.Hours hours11 = hours7.plus(14);
        org.joda.time.PeriodType periodType12 = hours11.getPeriodType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(periodType12);
    }

    @Test
    public void test0752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0752");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.MutablePeriod mutablePeriod6 = hours0.toMutablePeriod();
        org.joda.time.Hours hours8 = hours0.minus(7);
        org.joda.time.Hours hours10 = hours0.minus(700);
        java.lang.String str11 = hours0.toString();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "PT7H" + "'", str11, "PT7H");
    }

    @Test
    public void test0753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0753");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.Hours hours15 = hours12.plus(8);
        org.joda.time.Hours hours16 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = hours16.get(durationFieldType17);
        org.joda.time.DurationFieldType durationFieldType19 = hours16.getFieldType();
        boolean boolean20 = hours15.isSupported(durationFieldType19);
        int int21 = hours9.get(durationFieldType19);
        org.joda.time.Hours hours22 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours23 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod24 = hours23.toMutablePeriod();
        org.joda.time.Hours hours25 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours26 = hours23.minus(hours25);
        int int27 = hours22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours25);
        org.joda.time.DurationFieldType durationFieldType28 = null;
        boolean boolean29 = hours22.isSupported(durationFieldType28);
        org.joda.time.Hours hours31 = hours22.multipliedBy((int) (short) 10);
        org.joda.time.Hours hours32 = hours9.plus(hours22);
        org.joda.time.Hours hours34 = hours9.plus(0);
        org.joda.time.Hours hours35 = hours9.negated();
        java.lang.Class<?> wildcardClass36 = hours35.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 8 + "'", int21 == 8);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0754");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours6 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        org.joda.time.Hours hours8 = hours0.plus(0);
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        int int10 = hours8.getHours();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 7 + "'", int10 == 7);
    }

    @Test
    public void test0755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0755");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = hours0.get(durationFieldType1);
        org.joda.time.Hours hours4 = hours0.dividedBy(100);
        org.joda.time.Hours hours6 = hours4.plus((int) (byte) 10);
        org.joda.time.Hours hours7 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours11 = hours8.minus(hours10);
        int int12 = hours7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours10);
        org.joda.time.DurationFieldType durationFieldType13 = null;
        boolean boolean14 = hours7.isSupported(durationFieldType13);
        org.joda.time.Hours hours16 = hours7.minus((int) (short) -1);
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod18 = hours17.toMutablePeriod();
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours20 = hours17.minus(hours19);
        org.joda.time.Hours hours22 = hours19.plus(8);
        org.joda.time.Hours hours23 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType24 = null;
        int int25 = hours23.get(durationFieldType24);
        org.joda.time.DurationFieldType durationFieldType26 = hours23.getFieldType();
        boolean boolean27 = hours22.isSupported(durationFieldType26);
        int int28 = hours16.get(durationFieldType26);
        boolean boolean29 = hours6.isSupported(durationFieldType26);
        java.lang.Class<?> wildcardClass30 = durationFieldType26.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 8 + "'", int28 == 8);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0756");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period1 = hours0.toPeriod();
        org.joda.time.Hours hours3 = hours0.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod6 = hours5.toMutablePeriod();
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours8 = hours5.minus(hours7);
        org.joda.time.Duration duration9 = hours5.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod10 = hours5.toMutablePeriod();
        org.joda.time.Hours hours11 = org.joda.time.Hours.EIGHT;
        int int13 = hours11.getValue((int) (short) 0);
        java.lang.String str14 = hours11.toString();
        boolean boolean15 = hours5.isGreaterThan(hours11);
        org.joda.time.Hours hours17 = hours11.minus(10);
        org.joda.time.Hours hours18 = hours11.negated();
        org.joda.time.Duration duration19 = hours11.toStandardDuration();
        boolean boolean20 = hours3.isLessThan(hours11);
        org.joda.time.Hours hours21 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours22 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod23 = hours22.toMutablePeriod();
        org.joda.time.Hours hours24 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours25 = hours22.minus(hours24);
        int int26 = hours21.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours24);
        org.joda.time.DurationFieldType durationFieldType27 = null;
        boolean boolean28 = hours21.isSupported(durationFieldType27);
        org.joda.time.Hours hours30 = hours21.minus((int) (short) -1);
        org.joda.time.Hours hours31 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod32 = hours31.toMutablePeriod();
        org.joda.time.Hours hours33 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours34 = hours31.minus(hours33);
        org.joda.time.Hours hours36 = hours33.plus(8);
        org.joda.time.Hours hours37 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType38 = null;
        int int39 = hours37.get(durationFieldType38);
        org.joda.time.DurationFieldType durationFieldType40 = hours37.getFieldType();
        boolean boolean41 = hours36.isSupported(durationFieldType40);
        int int42 = hours30.get(durationFieldType40);
        org.joda.time.Hours hours43 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours44 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod45 = hours44.toMutablePeriod();
        org.joda.time.Hours hours46 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours47 = hours44.minus(hours46);
        int int48 = hours43.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours46);
        org.joda.time.DurationFieldType durationFieldType49 = null;
        boolean boolean50 = hours43.isSupported(durationFieldType49);
        org.joda.time.Hours hours52 = hours43.multipliedBy((int) (short) 10);
        org.joda.time.Hours hours53 = hours30.plus(hours43);
        org.joda.time.Hours hours55 = hours30.plus(0);
        org.joda.time.Hours hours56 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours57 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod58 = hours57.toMutablePeriod();
        org.joda.time.Hours hours59 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours60 = hours57.minus(hours59);
        int int61 = hours56.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours59);
        org.joda.time.DurationFieldType durationFieldType62 = null;
        boolean boolean63 = hours56.isSupported(durationFieldType62);
        org.joda.time.Hours hours65 = hours56.minus((int) (short) -1);
        org.joda.time.PeriodType periodType66 = hours56.getPeriodType();
        int int67 = hours56.getHours();
        org.joda.time.DurationFieldType durationFieldType69 = hours56.getFieldType((int) (short) 0);
        int int70 = hours56.size();
        int int71 = hours56.size();
        org.joda.time.Period period72 = hours56.toPeriod();
        org.joda.time.Hours hours73 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod74 = hours73.toMutablePeriod();
        org.joda.time.Hours hours75 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours76 = hours73.minus(hours75);
        boolean boolean77 = hours56.isGreaterThan(hours75);
        boolean boolean78 = hours30.isGreaterThan(hours56);
        org.joda.time.Hours hours80 = hours56.multipliedBy(0);
        org.joda.time.Hours hours81 = hours3.minus(hours80);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 8 + "'", int13 == 8);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "PT8H" + "'", str14, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(mutablePeriod23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(durationFieldType40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 8 + "'", int42 == 8);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(mutablePeriod45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(mutablePeriod58);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertNotNull(periodType66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 7 + "'", int67 == 7);
        org.junit.Assert.assertNotNull(durationFieldType69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertNotNull(hours73);
        org.junit.Assert.assertNotNull(mutablePeriod74);
        org.junit.Assert.assertNotNull(hours75);
        org.junit.Assert.assertNotNull(hours76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(hours80);
        org.junit.Assert.assertNotNull(hours81);
    }

    @Test
    public void test0757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0757");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        int int1 = hours0.getHours();
        org.joda.time.Hours hours3 = hours0.plus(10);
        org.joda.time.Hours hours4 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod5 = hours4.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours7 = hours4.minus(hours6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = hours4.get(durationFieldType8);
        org.joda.time.Hours hours11 = hours4.multipliedBy(1);
        boolean boolean12 = hours0.isGreaterThan(hours4);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        int int17 = hours15.getValue((int) (short) 0);
        org.joda.time.Hours hours18 = hours14.minus(hours15);
        org.joda.time.Hours hours19 = hours13.minus(hours14);
        int int20 = hours13.size();
        org.joda.time.Hours hours21 = hours4.plus(hours13);
        org.joda.time.Hours hours23 = org.joda.time.Hours.hours(0);
        int int24 = hours23.size();
        org.joda.time.Hours hours26 = org.joda.time.Hours.hours((-1));
        int int27 = hours23.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours26);
        org.joda.time.Hours hours28 = hours4.minus(hours23);
        org.joda.time.Hours hours29 = hours4.negated();
        org.joda.time.DurationFieldType durationFieldType30 = hours4.getFieldType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 8 + "'", int17 == 8);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(durationFieldType30);
    }

    @Test
    public void test0758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0758");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.PeriodType periodType1 = hours0.getPeriodType();
        org.joda.time.Hours hours2 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        java.lang.Object obj3 = null;
        boolean boolean4 = hours0.equals(obj3);
        java.lang.Class<?> wildcardClass5 = hours0.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0759");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours7 = hours3.multipliedBy(0);
        org.joda.time.Duration duration8 = hours3.toStandardDuration();
        org.joda.time.Hours hours10 = hours3.plus((-1));
        org.joda.time.Hours hours11 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours12 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = hours12.get(durationFieldType13);
        boolean boolean15 = hours11.equals((java.lang.Object) durationFieldType13);
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod18 = hours17.toMutablePeriod();
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours20 = hours17.minus(hours19);
        int int21 = hours16.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours19);
        org.joda.time.Hours hours23 = hours19.multipliedBy(0);
        org.joda.time.Hours hours24 = hours11.plus(hours23);
        org.joda.time.DurationFieldType durationFieldType25 = hours24.getFieldType();
        boolean boolean26 = hours3.isSupported(durationFieldType25);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test0760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0760");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = hours8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = hours8.getFieldType();
        int int12 = hours7.get(durationFieldType11);
        org.joda.time.Hours hours13 = hours7.negated();
        org.joda.time.Hours hours14 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours15 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        int int18 = hours16.getValue((int) (short) 0);
        org.joda.time.Hours hours19 = hours15.minus(hours16);
        org.joda.time.Hours hours20 = hours14.minus(hours15);
        org.joda.time.Hours hours21 = hours13.plus(hours15);
        org.joda.time.DurationFieldType durationFieldType22 = hours13.getFieldType();
        org.joda.time.Hours hours24 = hours13.dividedBy(17);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 7 + "'", int12 == 7);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 8 + "'", int18 == 8);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertNotNull(hours24);
    }

    @Test
    public void test0761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0761");
        org.joda.time.Hours hours0 = org.joda.time.Hours.TWO;
        org.joda.time.Hours hours1 = org.joda.time.Hours.MAX_VALUE;
        int int2 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours1);
        org.joda.time.Hours hours3 = hours1.negated();
        org.joda.time.Hours hours5 = org.joda.time.Hours.hours(100);
        org.joda.time.Period period6 = hours5.toPeriod();
        org.joda.time.Hours hours8 = hours5.minus(8);
        org.joda.time.Hours hours10 = hours8.minus((-1));
        org.joda.time.DurationFieldType durationFieldType11 = hours8.getFieldType();
        boolean boolean12 = hours1.isSupported(durationFieldType11);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours14 = org.joda.time.Hours.EIGHT;
        int int16 = hours14.getValue((int) (short) 0);
        org.joda.time.Hours hours17 = hours13.minus(hours14);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        org.joda.time.Hours hours23 = hours20.plus(8);
        org.joda.time.Hours hours24 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType25 = null;
        int int26 = hours24.get(durationFieldType25);
        org.joda.time.DurationFieldType durationFieldType27 = hours24.getFieldType();
        boolean boolean28 = hours23.isSupported(durationFieldType27);
        boolean boolean29 = hours13.isSupported(durationFieldType27);
        org.joda.time.Hours hours30 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period31 = hours30.toPeriod();
        org.joda.time.Hours hours33 = hours30.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod34 = hours33.toMutablePeriod();
        org.joda.time.Hours hours35 = org.joda.time.Hours.THREE;
        org.joda.time.Period period36 = hours35.toPeriod();
        org.joda.time.Hours hours38 = hours35.plus((int) (byte) -1);
        org.joda.time.Hours hours39 = hours33.minus(hours35);
        org.joda.time.Hours hours40 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod41 = hours40.toMutablePeriod();
        org.joda.time.Hours hours42 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours43 = hours40.minus(hours42);
        org.joda.time.DurationFieldType durationFieldType44 = null;
        int int45 = hours40.get(durationFieldType44);
        org.joda.time.Hours hours47 = hours40.minus((int) (short) 0);
        org.joda.time.Hours hours48 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType49 = null;
        int int50 = hours48.get(durationFieldType49);
        org.joda.time.DurationFieldType durationFieldType51 = hours48.getFieldType();
        int int52 = hours47.get(durationFieldType51);
        int int53 = hours35.get(durationFieldType51);
        boolean boolean54 = hours13.equals((java.lang.Object) hours35);
        org.joda.time.Hours hours55 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType56 = null;
        int int57 = hours55.get(durationFieldType56);
        org.joda.time.Hours hours59 = hours55.dividedBy(100);
        org.joda.time.MutablePeriod mutablePeriod60 = hours59.toMutablePeriod();
        int int61 = hours59.getHours();
        org.joda.time.Hours hours62 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours59);
        boolean boolean63 = hours13.isLessThan(hours62);
        boolean boolean64 = hours1.isGreaterThan(hours13);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 8 + "'", int16 == 8);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(mutablePeriod41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(durationFieldType51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 7 + "'", int52 == 7);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 3 + "'", int53 == 3);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(mutablePeriod60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
    }

    @Test
    public void test0762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0762");
        org.joda.time.Hours hours0 = org.joda.time.Hours.FIVE;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.MutablePeriod mutablePeriod2 = hours0.toMutablePeriod();
        org.joda.time.Hours hours4 = hours0.plus(0);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours4);
    }

    @Test
    public void test0763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0763");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        boolean boolean22 = hours16.isGreaterThan(hours20);
        org.joda.time.Hours hours23 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours25 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod27 = hours26.toMutablePeriod();
        org.joda.time.Hours hours28 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours29 = hours26.minus(hours28);
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = hours26.get(durationFieldType30);
        org.joda.time.Hours hours33 = hours26.minus((int) (short) 0);
        org.joda.time.Hours hours34 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod35 = hours34.toMutablePeriod();
        org.joda.time.Hours hours36 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours37 = hours34.minus(hours36);
        org.joda.time.DurationFieldType durationFieldType38 = null;
        boolean boolean39 = hours36.isSupported(durationFieldType38);
        org.joda.time.Hours hours40 = hours33.minus(hours36);
        org.joda.time.Hours hours41 = hours25.plus(hours40);
        int int42 = hours23.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours40);
        org.joda.time.MutablePeriod mutablePeriod43 = hours40.toMutablePeriod();
        boolean boolean44 = hours16.isLessThan(hours40);
        java.lang.String str45 = hours40.toString();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "PT-1H" + "'", str45, "PT-1H");
    }

    @Test
    public void test0764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0764");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((int) '#');
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours6 = hours3.minus(hours5);
        int int7 = hours2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours5);
        org.joda.time.Hours hours9 = hours5.multipliedBy(0);
        org.joda.time.Duration duration10 = hours5.toStandardDuration();
        org.joda.time.Hours hours12 = hours5.dividedBy((int) (short) -1);
        org.joda.time.Hours hours13 = hours1.minus(hours12);
        org.joda.time.MutablePeriod mutablePeriod14 = hours13.toMutablePeriod();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
    }

    @Test
    public void test0765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0765");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Hours hours5 = hours2.plus(8);
        org.joda.time.Hours hours6 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = hours6.get(durationFieldType7);
        org.joda.time.DurationFieldType durationFieldType9 = hours6.getFieldType();
        boolean boolean10 = hours5.isSupported(durationFieldType9);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod13 = hours12.toMutablePeriod();
        org.joda.time.Hours hours14 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours15 = hours12.minus(hours14);
        int int16 = hours11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours14);
        org.joda.time.DurationFieldType durationFieldType17 = null;
        boolean boolean18 = hours11.isSupported(durationFieldType17);
        org.joda.time.Hours hours20 = hours11.minus((int) (short) -1);
        org.joda.time.PeriodType periodType21 = hours11.getPeriodType();
        org.joda.time.Hours hours22 = org.joda.time.Hours.EIGHT;
        int int24 = hours22.getValue((int) (short) 0);
        org.joda.time.Hours hours25 = hours11.minus(hours22);
        org.joda.time.Hours hours26 = hours5.minus(hours25);
        java.lang.String str27 = hours5.toString();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 8 + "'", int24 == 8);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "PT16H" + "'", str27, "PT16H");
    }

    @Test
    public void test0766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0766");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.PeriodType periodType10 = hours0.getPeriodType();
        int int11 = hours0.getHours();
        int int12 = hours0.size();
        org.joda.time.Hours hours14 = hours0.plus(5);
        org.joda.time.Hours hours16 = hours0.minus(16);
        // The following exception was thrown during execution in test generation
        try {
            int int18 = hours16.getValue(12);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 12");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 7 + "'", int11 == 7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours16);
    }

    @Test
    public void test0767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0767");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.DurationFieldType durationFieldType18 = hours16.getFieldType();
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours20 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod21 = hours20.toMutablePeriod();
        org.joda.time.Hours hours22 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours23 = hours20.minus(hours22);
        int int24 = hours19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours22);
        org.joda.time.DurationFieldType durationFieldType25 = null;
        boolean boolean26 = hours19.isSupported(durationFieldType25);
        org.joda.time.Hours hours28 = hours19.minus((int) (short) -1);
        org.joda.time.PeriodType periodType29 = hours19.getPeriodType();
        org.joda.time.Hours hours30 = org.joda.time.Hours.EIGHT;
        int int32 = hours30.getValue((int) (short) 0);
        org.joda.time.Hours hours33 = hours19.minus(hours30);
        org.joda.time.Hours hours35 = hours19.plus(7);
        org.joda.time.Hours hours36 = hours19.negated();
        org.joda.time.Hours hours37 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod38 = hours37.toMutablePeriod();
        org.joda.time.Hours hours39 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours40 = hours37.minus(hours39);
        org.joda.time.DurationFieldType durationFieldType41 = null;
        int int42 = hours37.get(durationFieldType41);
        org.joda.time.Hours hours44 = hours37.minus((int) (short) 0);
        org.joda.time.Hours hours45 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType46 = null;
        int int47 = hours45.get(durationFieldType46);
        org.joda.time.DurationFieldType durationFieldType48 = hours45.getFieldType();
        int int49 = hours44.get(durationFieldType48);
        int int50 = hours19.get(durationFieldType48);
        org.joda.time.Hours hours51 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours52 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod53 = hours52.toMutablePeriod();
        org.joda.time.Hours hours54 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours55 = hours52.minus(hours54);
        int int56 = hours51.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours54);
        org.joda.time.Hours hours57 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours51);
        org.joda.time.DurationFieldType durationFieldType58 = null;
        int int59 = hours51.get(durationFieldType58);
        org.joda.time.DurationFieldType durationFieldType60 = null;
        int int61 = hours51.get(durationFieldType60);
        org.joda.time.Hours hours63 = hours51.minus(0);
        org.joda.time.DurationFieldType durationFieldType64 = hours63.getFieldType();
        boolean boolean65 = hours19.isSupported(durationFieldType64);
        org.joda.time.Hours hours66 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod67 = hours66.toMutablePeriod();
        org.joda.time.Hours hours68 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours69 = hours66.minus(hours68);
        org.joda.time.Duration duration70 = hours66.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod71 = hours66.toMutablePeriod();
        org.joda.time.Hours hours72 = org.joda.time.Hours.EIGHT;
        int int74 = hours72.getValue((int) (short) 0);
        java.lang.String str75 = hours72.toString();
        boolean boolean76 = hours66.isGreaterThan(hours72);
        org.joda.time.Hours hours78 = hours72.minus(10);
        org.joda.time.Hours hours79 = hours72.negated();
        org.joda.time.Duration duration80 = hours72.toStandardDuration();
        int int81 = hours19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours72);
        int int82 = hours16.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours72);
        java.lang.Class<?> wildcardClass83 = hours16.getClass();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 8 + "'", int32 == 8);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 7 + "'", int49 == 7);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 7 + "'", int50 == 7);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(mutablePeriod53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertNotNull(durationFieldType64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertNotNull(mutablePeriod67);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertNotNull(hours69);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertNotNull(mutablePeriod71);
        org.junit.Assert.assertNotNull(hours72);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 8 + "'", int74 == 8);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "PT8H" + "'", str75, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(hours78);
        org.junit.Assert.assertNotNull(hours79);
        org.junit.Assert.assertNotNull(duration80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test0768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0768");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        boolean boolean6 = hours1.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours7 = null;
        org.joda.time.Hours hours8 = hours1.minus(hours7);
        org.joda.time.Hours hours9 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        int int12 = hours10.getValue((int) (short) 0);
        org.joda.time.Hours hours13 = hours9.minus(hours10);
        org.joda.time.Hours hours14 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = hours14.get(durationFieldType15);
        org.joda.time.DurationFieldType durationFieldType17 = hours14.getFieldType();
        int int18 = hours9.get(durationFieldType17);
        int int19 = hours8.get(durationFieldType17);
        org.joda.time.Hours hours20 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours21 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod22 = hours21.toMutablePeriod();
        org.joda.time.Hours hours23 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours24 = hours21.minus(hours23);
        int int25 = hours20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours23);
        org.joda.time.Hours hours26 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours20);
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = hours20.get(durationFieldType27);
        org.joda.time.Hours hours29 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod30 = hours29.toMutablePeriod();
        org.joda.time.Hours hours31 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours32 = hours29.minus(hours31);
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = hours29.get(durationFieldType33);
        org.joda.time.Hours hours36 = hours29.minus((int) (short) 0);
        org.joda.time.Hours hours37 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod38 = hours37.toMutablePeriod();
        org.joda.time.Hours hours39 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours40 = hours37.minus(hours39);
        org.joda.time.DurationFieldType durationFieldType41 = null;
        boolean boolean42 = hours39.isSupported(durationFieldType41);
        org.joda.time.Hours hours43 = hours36.minus(hours39);
        org.joda.time.Period period44 = hours36.toPeriod();
        org.joda.time.Hours hours45 = hours20.plus(hours36);
        org.joda.time.Hours hours46 = hours8.minus(hours45);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 8 + "'", int12 == 8);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 7 + "'", int18 == 7);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 8 + "'", int19 == 8);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours46);
    }

    @Test
    public void test0769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0769");
        org.joda.time.Hours hours0 = org.joda.time.Hours.EIGHT;
        int int1 = hours0.size();
        org.joda.time.Hours hours3 = hours0.dividedBy(100);
        org.joda.time.Hours hours4 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        int int7 = hours5.getValue((int) (short) 0);
        org.joda.time.Hours hours8 = hours4.minus(hours5);
        org.joda.time.Hours hours9 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours11 = org.joda.time.Hours.EIGHT;
        int int13 = hours11.getValue((int) (short) 0);
        org.joda.time.Hours hours14 = hours10.minus(hours11);
        org.joda.time.Hours hours15 = hours9.minus(hours10);
        int int16 = hours9.size();
        org.joda.time.Duration duration17 = hours9.toStandardDuration();
        boolean boolean18 = hours5.isGreaterThan(hours9);
        org.joda.time.MutablePeriod mutablePeriod19 = hours9.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType20 = hours9.getFieldType();
        org.joda.time.Hours hours21 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period22 = hours21.toPeriod();
        org.joda.time.Hours hours24 = hours21.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod25 = hours24.toMutablePeriod();
        org.joda.time.Hours hours26 = org.joda.time.Hours.THREE;
        org.joda.time.Period period27 = hours26.toPeriod();
        org.joda.time.Hours hours29 = hours26.plus((int) (byte) -1);
        org.joda.time.Hours hours30 = hours24.minus(hours26);
        org.joda.time.Hours hours31 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod32 = hours31.toMutablePeriod();
        org.joda.time.Hours hours33 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours34 = hours31.minus(hours33);
        org.joda.time.DurationFieldType durationFieldType35 = null;
        int int36 = hours31.get(durationFieldType35);
        org.joda.time.Hours hours38 = hours31.minus((int) (short) 0);
        org.joda.time.Hours hours39 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType40 = null;
        int int41 = hours39.get(durationFieldType40);
        org.joda.time.DurationFieldType durationFieldType42 = hours39.getFieldType();
        int int43 = hours38.get(durationFieldType42);
        int int44 = hours26.get(durationFieldType42);
        int int45 = hours9.get(durationFieldType42);
        boolean boolean46 = hours0.isLessThan(hours9);
        org.joda.time.PeriodType periodType47 = hours9.getPeriodType();
        org.joda.time.Hours hours48 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours49 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours50 = org.joda.time.Hours.EIGHT;
        int int52 = hours50.getValue((int) (short) 0);
        org.joda.time.Hours hours53 = hours49.minus(hours50);
        org.joda.time.Hours hours54 = hours48.minus(hours49);
        org.joda.time.Hours hours56 = hours49.dividedBy(1);
        org.joda.time.Hours hours57 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours58 = hours57.negated();
        org.joda.time.Hours hours59 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours60 = org.joda.time.Hours.EIGHT;
        int int62 = hours60.getValue((int) (short) 0);
        org.joda.time.Hours hours63 = hours59.minus(hours60);
        org.joda.time.Hours hours64 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType65 = null;
        int int66 = hours64.get(durationFieldType65);
        org.joda.time.DurationFieldType durationFieldType67 = hours64.getFieldType();
        int int68 = hours59.get(durationFieldType67);
        boolean boolean69 = hours57.isSupported(durationFieldType67);
        int int70 = hours57.getHours();
        boolean boolean71 = hours49.isGreaterThan(hours57);
        org.joda.time.Hours hours73 = hours49.minus((int) '4');
        int int74 = hours9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours49);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 8 + "'", int7 == 8);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 8 + "'", int13 == 8);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 7 + "'", int43 == 7);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 3 + "'", int44 == 3);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 6 + "'", int45 == 6);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 8 + "'", int52 == 8);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 8 + "'", int62 == 8);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(durationFieldType67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 7 + "'", int68 == 7);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 3 + "'", int70 == 3);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(hours73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
    }

    @Test
    public void test0770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0770");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours6 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        org.joda.time.Hours hours7 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod8 = hours7.toMutablePeriod();
        org.joda.time.Hours hours9 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours10 = hours7.minus(hours9);
        org.joda.time.Hours hours12 = hours9.plus(8);
        org.joda.time.Hours hours13 = hours0.minus(hours12);
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        int int17 = hours15.getValue((int) (short) 0);
        org.joda.time.Hours hours18 = hours14.minus(hours15);
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        org.joda.time.Hours hours24 = hours21.plus(8);
        org.joda.time.Hours hours25 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType26 = null;
        int int27 = hours25.get(durationFieldType26);
        org.joda.time.DurationFieldType durationFieldType28 = hours25.getFieldType();
        boolean boolean29 = hours24.isSupported(durationFieldType28);
        boolean boolean30 = hours14.isSupported(durationFieldType28);
        org.joda.time.Hours hours31 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period32 = hours31.toPeriod();
        org.joda.time.Hours hours34 = hours31.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod35 = hours34.toMutablePeriod();
        org.joda.time.Hours hours36 = org.joda.time.Hours.THREE;
        org.joda.time.Period period37 = hours36.toPeriod();
        org.joda.time.Hours hours39 = hours36.plus((int) (byte) -1);
        org.joda.time.Hours hours40 = hours34.minus(hours36);
        org.joda.time.Hours hours41 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod42 = hours41.toMutablePeriod();
        org.joda.time.Hours hours43 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours44 = hours41.minus(hours43);
        org.joda.time.DurationFieldType durationFieldType45 = null;
        int int46 = hours41.get(durationFieldType45);
        org.joda.time.Hours hours48 = hours41.minus((int) (short) 0);
        org.joda.time.Hours hours49 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType50 = null;
        int int51 = hours49.get(durationFieldType50);
        org.joda.time.DurationFieldType durationFieldType52 = hours49.getFieldType();
        int int53 = hours48.get(durationFieldType52);
        int int54 = hours36.get(durationFieldType52);
        boolean boolean55 = hours14.equals((java.lang.Object) hours36);
        boolean boolean56 = hours12.equals((java.lang.Object) hours36);
        org.joda.time.Hours hours58 = hours12.minus((-1));
        java.lang.Class<?> wildcardClass59 = hours58.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 8 + "'", int17 == 8);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 7 + "'", int53 == 7);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 3 + "'", int54 == 3);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test0771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0771");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.PeriodType periodType6 = hours0.getPeriodType();
        org.joda.time.Hours hours8 = org.joda.time.Hours.parseHours("PT7H");
        boolean boolean9 = hours0.isLessThan(hours8);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        int int14 = hours12.getValue((int) (short) 0);
        org.joda.time.Hours hours15 = hours11.minus(hours12);
        org.joda.time.Hours hours16 = hours10.minus(hours11);
        org.joda.time.Hours hours17 = hours8.minus(hours10);
        org.joda.time.Hours hours18 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours8);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 8 + "'", int14 == 8);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
    }

    @Test
    public void test0772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0772");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours3 = hours1.minus(8);
        org.joda.time.Hours hours4 = org.joda.time.Hours.ONE;
        org.joda.time.Hours hours6 = hours4.plus(1);
        org.joda.time.Hours hours8 = hours6.minus((int) (byte) 10);
        org.joda.time.Hours hours9 = hours6.negated();
        boolean boolean10 = hours1.isLessThan(hours6);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period12 = hours11.toPeriod();
        org.joda.time.Hours hours14 = hours11.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod15 = hours14.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.THREE;
        org.joda.time.Period period17 = hours16.toPeriod();
        org.joda.time.Hours hours19 = hours16.plus((int) (byte) -1);
        org.joda.time.Hours hours20 = hours14.minus(hours16);
        org.joda.time.Hours hours22 = hours16.plus(10);
        org.joda.time.Hours hours23 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours24 = hours23.negated();
        org.joda.time.Hours hours25 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        int int28 = hours26.getValue((int) (short) 0);
        org.joda.time.Hours hours29 = hours25.minus(hours26);
        org.joda.time.Hours hours30 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType31 = null;
        int int32 = hours30.get(durationFieldType31);
        org.joda.time.DurationFieldType durationFieldType33 = hours30.getFieldType();
        int int34 = hours25.get(durationFieldType33);
        boolean boolean35 = hours23.isSupported(durationFieldType33);
        int int36 = hours16.get(durationFieldType33);
        org.joda.time.Hours hours37 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours38 = org.joda.time.Hours.EIGHT;
        int int40 = hours38.getValue((int) (short) 0);
        org.joda.time.Hours hours41 = hours37.minus(hours38);
        boolean boolean43 = hours38.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours44 = null;
        org.joda.time.Hours hours45 = hours38.minus(hours44);
        org.joda.time.Hours hours46 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours47 = org.joda.time.Hours.EIGHT;
        int int49 = hours47.getValue((int) (short) 0);
        org.joda.time.Hours hours50 = hours46.minus(hours47);
        org.joda.time.Hours hours51 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType52 = null;
        int int53 = hours51.get(durationFieldType52);
        org.joda.time.DurationFieldType durationFieldType54 = hours51.getFieldType();
        int int55 = hours46.get(durationFieldType54);
        int int56 = hours45.get(durationFieldType54);
        boolean boolean57 = hours16.isSupported(durationFieldType54);
        int int58 = hours6.get(durationFieldType54);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 8 + "'", int28 == 8);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 7 + "'", int34 == 7);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 3 + "'", int36 == 3);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 8 + "'", int40 == 8);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 8 + "'", int49 == 8);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(durationFieldType54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 7 + "'", int55 == 7);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 8 + "'", int56 == 8);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2 + "'", int58 == 2);
    }

    @Test
    public void test0773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0773");
        org.joda.time.ReadablePeriod readablePeriod0 = null;
        org.joda.time.Hours hours1 = org.joda.time.Hours.standardHoursIn(readablePeriod0);
        java.lang.String str2 = hours1.toString();
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        int int6 = hours4.getValue((int) (short) 0);
        org.joda.time.Hours hours7 = hours3.minus(hours4);
        boolean boolean9 = hours4.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours10 = null;
        org.joda.time.Hours hours11 = hours4.minus(hours10);
        org.joda.time.Hours hours12 = hours11.negated();
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod14 = hours13.toMutablePeriod();
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours16 = hours13.minus(hours15);
        org.joda.time.Duration duration17 = hours13.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod18 = hours13.toMutablePeriod();
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        int int21 = hours19.getValue((int) (short) 0);
        java.lang.String str22 = hours19.toString();
        boolean boolean23 = hours13.isGreaterThan(hours19);
        org.joda.time.Hours hours25 = hours19.minus(10);
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod28 = hours27.toMutablePeriod();
        org.joda.time.Hours hours29 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours30 = hours27.minus(hours29);
        int int31 = hours26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours29);
        org.joda.time.Hours hours32 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours26);
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = hours26.get(durationFieldType33);
        boolean boolean35 = hours25.equals((java.lang.Object) hours26);
        java.lang.String str36 = hours25.toString();
        org.joda.time.DurationFieldType durationFieldType38 = hours25.getFieldType(0);
        boolean boolean39 = hours11.isGreaterThan(hours25);
        org.joda.time.Hours hours40 = org.joda.time.Hours.MAX_VALUE;
        int int41 = hours11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours40);
        org.joda.time.Hours hours42 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours43 = org.joda.time.Hours.EIGHT;
        int int45 = hours43.getValue((int) (short) 0);
        org.joda.time.Hours hours46 = hours42.minus(hours43);
        org.joda.time.Hours hours47 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod48 = hours47.toMutablePeriod();
        org.joda.time.Hours hours49 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours50 = hours47.minus(hours49);
        org.joda.time.Hours hours52 = hours49.plus(8);
        org.joda.time.Hours hours53 = hours43.minus(hours49);
        int int54 = hours11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours49);
        int int55 = hours1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours49);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "PT0H" + "'", str2, "PT0H");
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 8 + "'", int6 == 8);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 8 + "'", int21 == 8);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "PT8H" + "'", str22, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "PT-2H" + "'", str36, "PT-2H");
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 8 + "'", int45 == 8);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(mutablePeriod48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
    }

    @Test
    public void test0774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0774");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Hours hours9 = org.joda.time.Hours.hoursIn(readableInterval8);
        int int10 = hours7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours9);
        org.joda.time.DurationFieldType durationFieldType11 = null;
        int int12 = hours7.get(durationFieldType11);
        org.joda.time.Hours hours13 = hours7.negated();
        org.joda.time.Hours hours14 = hours13.negated();
        java.lang.Class<?> wildcardClass15 = hours14.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0775");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours12 = hours6.minus(10);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod15 = hours14.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours17 = hours14.minus(hours16);
        int int18 = hours13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours16);
        org.joda.time.Hours hours19 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours13);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = hours13.get(durationFieldType20);
        boolean boolean22 = hours12.equals((java.lang.Object) hours13);
        org.joda.time.Hours hours24 = hours13.minus(100);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType26 = hours13.getFieldType((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 32");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours24);
    }

    @Test
    public void test0776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0776");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours12 = hours6.minus(10);
        org.joda.time.Hours hours13 = hours6.negated();
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod15 = hours14.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours17 = hours14.minus(hours16);
        org.joda.time.DurationFieldType durationFieldType18 = null;
        int int19 = hours14.get(durationFieldType18);
        org.joda.time.Hours hours21 = hours14.multipliedBy(1);
        org.joda.time.Hours hours22 = org.joda.time.Hours.ONE;
        int int23 = hours21.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours22);
        int int24 = hours6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours21);
        java.lang.String str25 = hours21.toString();
        org.joda.time.Period period26 = hours21.toPeriod();
        org.joda.time.Hours hours28 = hours21.dividedBy(5);
        org.joda.time.Period period29 = hours28.toPeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "PT7H" + "'", str25, "PT7H");
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(period29);
    }

    @Test
    public void test0777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0777");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours11 = hours8.minus(hours10);
        org.joda.time.DurationFieldType durationFieldType12 = null;
        boolean boolean13 = hours10.isSupported(durationFieldType12);
        org.joda.time.Hours hours14 = hours7.minus(hours10);
        org.joda.time.Hours hours15 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod16 = hours15.toMutablePeriod();
        org.joda.time.Hours hours17 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours18 = hours15.minus(hours17);
        org.joda.time.Hours hours20 = hours17.plus(8);
        org.joda.time.Hours hours21 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType22 = null;
        int int23 = hours21.get(durationFieldType22);
        org.joda.time.DurationFieldType durationFieldType24 = hours21.getFieldType();
        boolean boolean25 = hours20.isSupported(durationFieldType24);
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod28 = hours27.toMutablePeriod();
        org.joda.time.Hours hours29 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours30 = hours27.minus(hours29);
        int int31 = hours26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours29);
        org.joda.time.DurationFieldType durationFieldType32 = null;
        boolean boolean33 = hours26.isSupported(durationFieldType32);
        org.joda.time.Hours hours35 = hours26.minus((int) (short) -1);
        org.joda.time.PeriodType periodType36 = hours26.getPeriodType();
        org.joda.time.Hours hours37 = org.joda.time.Hours.EIGHT;
        int int39 = hours37.getValue((int) (short) 0);
        org.joda.time.Hours hours40 = hours26.minus(hours37);
        org.joda.time.Hours hours41 = hours20.minus(hours40);
        org.joda.time.Hours hours43 = org.joda.time.Hours.parseHours("PT8H");
        boolean boolean44 = hours41.isLessThan(hours43);
        boolean boolean45 = hours14.isLessThan(hours43);
        org.joda.time.Hours hours47 = hours43.dividedBy(100);
        org.joda.time.Hours hours49 = hours43.dividedBy((int) (short) 1);
        org.joda.time.Period period50 = hours49.toPeriod();
        boolean boolean52 = hours49.equals((java.lang.Object) "PT12H");
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 8 + "'", int39 == 8);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test0778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0778");
        org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT52H");
        org.joda.time.PeriodType periodType2 = hours1.getPeriodType();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(periodType2);
    }

    @Test
    public void test0779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0779");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.MutablePeriod mutablePeriod6 = hours0.toMutablePeriod();
        org.joda.time.Hours hours8 = hours0.multipliedBy((int) (byte) 100);
        org.joda.time.Hours hours9 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod10 = hours9.toMutablePeriod();
        org.joda.time.Hours hours11 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours12 = hours9.minus(hours11);
        int int13 = hours11.size();
        boolean boolean14 = hours8.isLessThan(hours11);
        org.joda.time.Hours hours15 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod16 = hours15.toMutablePeriod();
        org.joda.time.Hours hours17 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours18 = hours15.minus(hours17);
        org.joda.time.Hours hours19 = hours17.negated();
        int int20 = hours19.getHours();
        org.joda.time.Hours hours22 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours24 = hours22.minus(8);
        org.joda.time.Hours hours25 = hours19.minus(hours22);
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod27 = hours26.toMutablePeriod();
        org.joda.time.Hours hours28 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours29 = hours26.minus(hours28);
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = hours26.get(durationFieldType30);
        org.joda.time.Hours hours33 = hours26.minus((int) (short) 0);
        org.joda.time.Hours hours34 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours26);
        org.joda.time.Hours hours35 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours36 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod37 = hours36.toMutablePeriod();
        org.joda.time.Hours hours38 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours39 = hours36.minus(hours38);
        int int40 = hours35.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours38);
        org.joda.time.DurationFieldType durationFieldType41 = null;
        boolean boolean42 = hours35.isSupported(durationFieldType41);
        org.joda.time.Hours hours44 = hours35.minus((int) (short) -1);
        org.joda.time.Hours hours45 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod46 = hours45.toMutablePeriod();
        org.joda.time.Hours hours47 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours48 = hours45.minus(hours47);
        org.joda.time.Hours hours50 = hours47.plus(8);
        org.joda.time.Hours hours51 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType52 = null;
        int int53 = hours51.get(durationFieldType52);
        org.joda.time.DurationFieldType durationFieldType54 = hours51.getFieldType();
        boolean boolean55 = hours50.isSupported(durationFieldType54);
        int int56 = hours44.get(durationFieldType54);
        org.joda.time.Hours hours57 = hours26.plus(hours44);
        org.joda.time.Hours hours59 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours60 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod61 = hours60.toMutablePeriod();
        org.joda.time.Hours hours62 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours63 = hours60.minus(hours62);
        org.joda.time.DurationFieldType durationFieldType64 = null;
        int int65 = hours60.get(durationFieldType64);
        org.joda.time.Hours hours67 = hours60.minus((int) (short) 0);
        org.joda.time.Hours hours68 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod69 = hours68.toMutablePeriod();
        org.joda.time.Hours hours70 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours71 = hours68.minus(hours70);
        org.joda.time.DurationFieldType durationFieldType72 = null;
        boolean boolean73 = hours70.isSupported(durationFieldType72);
        org.joda.time.Hours hours74 = hours67.minus(hours70);
        org.joda.time.Hours hours75 = hours59.plus(hours74);
        org.joda.time.Hours hours76 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod77 = hours76.toMutablePeriod();
        org.joda.time.Hours hours78 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours79 = hours76.minus(hours78);
        boolean boolean80 = hours74.isGreaterThan(hours78);
        org.joda.time.DurationFieldType durationFieldType82 = hours74.getFieldType((int) (short) 0);
        boolean boolean83 = hours44.isSupported(durationFieldType82);
        boolean boolean84 = hours22.isSupported(durationFieldType82);
        boolean boolean85 = hours11.isSupported(durationFieldType82);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-8) + "'", int20 == (-8));
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(mutablePeriod46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(durationFieldType54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 8 + "'", int56 == 8);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertNotNull(mutablePeriod61);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertNotNull(mutablePeriod69);
        org.junit.Assert.assertNotNull(hours70);
        org.junit.Assert.assertNotNull(hours71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(hours74);
        org.junit.Assert.assertNotNull(hours75);
        org.junit.Assert.assertNotNull(hours76);
        org.junit.Assert.assertNotNull(mutablePeriod77);
        org.junit.Assert.assertNotNull(hours78);
        org.junit.Assert.assertNotNull(hours79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(durationFieldType82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
    }

    @Test
    public void test0780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0780");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = hours0.get(durationFieldType1);
        org.joda.time.Hours hours4 = hours0.dividedBy(100);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod7 = hours6.toMutablePeriod();
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours9 = hours6.minus(hours8);
        int int10 = hours5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours8);
        org.joda.time.DurationFieldType durationFieldType11 = null;
        boolean boolean12 = hours5.isSupported(durationFieldType11);
        org.joda.time.Hours hours14 = hours5.multipliedBy((int) (short) 10);
        org.joda.time.Period period15 = hours5.toPeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod18 = hours17.toMutablePeriod();
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours20 = hours17.minus(hours19);
        int int21 = hours16.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours19);
        org.joda.time.Hours hours22 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours16);
        org.joda.time.Hours hours24 = hours22.multipliedBy((int) (byte) 10);
        boolean boolean25 = hours5.isLessThan(hours24);
        int int26 = hours4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours5);
        org.joda.time.Hours hours27 = org.joda.time.Hours.ONE;
        org.joda.time.Hours hours29 = hours27.plus(1);
        org.joda.time.Hours hours31 = hours27.dividedBy((int) (byte) -1);
        int int32 = hours27.size();
        org.joda.time.Hours hours33 = org.joda.time.Hours.MIN_VALUE;
        org.joda.time.Hours hours35 = hours33.plus(0);
        org.joda.time.Hours hours36 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours37 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod38 = hours37.toMutablePeriod();
        org.joda.time.Hours hours39 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours40 = hours37.minus(hours39);
        int int41 = hours36.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours39);
        org.joda.time.DurationFieldType durationFieldType42 = null;
        boolean boolean43 = hours36.isSupported(durationFieldType42);
        org.joda.time.Hours hours45 = hours36.minus((int) (short) -1);
        org.joda.time.PeriodType periodType46 = hours36.getPeriodType();
        int int47 = hours36.getHours();
        org.joda.time.DurationFieldType durationFieldType49 = hours36.getFieldType((int) (short) 0);
        boolean boolean50 = hours35.isSupported(durationFieldType49);
        int int51 = hours27.get(durationFieldType49);
        boolean boolean52 = hours4.isSupported(durationFieldType49);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 7 + "'", int47 == 7);
        org.junit.Assert.assertNotNull(durationFieldType49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    }

    @Test
    public void test0781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0781");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours5.get(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType8 = hours5.getFieldType();
        int int9 = hours0.get(durationFieldType8);
        org.joda.time.Hours hours11 = hours0.multipliedBy(7);
        org.joda.time.Hours hours13 = hours11.minus((-2));
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod15 = hours14.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours17 = hours14.minus(hours16);
        org.joda.time.DurationFieldType durationFieldType18 = null;
        int int19 = hours14.get(durationFieldType18);
        org.joda.time.Hours hours21 = hours14.minus((int) (short) 0);
        org.joda.time.Hours hours22 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod23 = hours22.toMutablePeriod();
        org.joda.time.Hours hours24 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours25 = hours22.minus(hours24);
        org.joda.time.DurationFieldType durationFieldType26 = null;
        boolean boolean27 = hours24.isSupported(durationFieldType26);
        org.joda.time.Hours hours28 = hours21.minus(hours24);
        org.joda.time.Hours hours29 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours30 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod31 = hours30.toMutablePeriod();
        org.joda.time.Hours hours32 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours33 = hours30.minus(hours32);
        int int34 = hours29.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours32);
        org.joda.time.DurationFieldType durationFieldType35 = null;
        boolean boolean36 = hours29.isSupported(durationFieldType35);
        org.joda.time.Hours hours38 = hours29.minus((int) (short) -1);
        org.joda.time.PeriodType periodType39 = hours29.getPeriodType();
        org.joda.time.Hours hours40 = org.joda.time.Hours.EIGHT;
        int int42 = hours40.getValue((int) (short) 0);
        org.joda.time.Hours hours43 = hours29.minus(hours40);
        org.joda.time.Hours hours45 = hours29.plus(7);
        org.joda.time.Hours hours46 = hours28.minus(hours45);
        org.joda.time.Hours hours48 = org.joda.time.Hours.hours((int) '4');
        org.joda.time.DurationFieldType durationFieldType49 = hours48.getFieldType();
        org.joda.time.Period period50 = hours48.toPeriod();
        org.joda.time.Period period51 = hours48.toPeriod();
        org.joda.time.Hours hours52 = hours46.plus(hours48);
        boolean boolean53 = hours13.isLessThan(hours46);
        org.joda.time.DurationFieldType durationFieldType54 = hours13.getFieldType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7 + "'", int9 == 7);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(mutablePeriod23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 8 + "'", int42 == 8);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(durationFieldType49);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(durationFieldType54);
    }

    @Test
    public void test0782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0782");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((int) '4');
        org.joda.time.DurationFieldType durationFieldType2 = hours1.getFieldType();
        org.joda.time.PeriodType periodType3 = hours1.getPeriodType();
        org.joda.time.Hours hours4 = hours1.negated();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType6 = hours4.getFieldType(6);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 6");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(hours4);
    }

    @Test
    public void test0783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0783");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((int) (short) 0);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.multipliedBy(1);
        org.joda.time.Hours hours10 = org.joda.time.Hours.ONE;
        int int11 = hours9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours10);
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        boolean boolean13 = hours9.equals((java.lang.Object) hours12);
        org.joda.time.Hours hours14 = hours1.minus(hours9);
        int int15 = hours14.size();
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod18 = hours17.toMutablePeriod();
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours20 = hours17.minus(hours19);
        int int21 = hours16.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours19);
        org.joda.time.Hours hours23 = hours16.minus((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod24 = hours16.toMutablePeriod();
        int int25 = hours16.getHours();
        org.joda.time.Hours hours26 = hours14.plus(hours16);
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours28 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod29 = hours28.toMutablePeriod();
        org.joda.time.Hours hours30 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours31 = hours28.minus(hours30);
        int int32 = hours27.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours30);
        org.joda.time.Hours hours34 = hours27.minus((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod35 = hours27.toMutablePeriod();
        org.joda.time.Hours hours36 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours37 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod38 = hours37.toMutablePeriod();
        org.joda.time.Hours hours39 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours40 = hours37.minus(hours39);
        int int41 = hours36.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours39);
        org.joda.time.DurationFieldType durationFieldType42 = null;
        boolean boolean43 = hours36.isSupported(durationFieldType42);
        org.joda.time.Hours hours45 = hours36.minus((int) (short) -1);
        org.joda.time.Hours hours46 = hours45.negated();
        org.joda.time.Period period47 = hours45.toPeriod();
        boolean boolean48 = hours27.equals((java.lang.Object) hours45);
        org.joda.time.Hours hours49 = hours14.plus(hours27);
        org.joda.time.Duration duration50 = hours49.toStandardDuration();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 7 + "'", int25 == 7);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(duration50);
    }

    @Test
    public void test0784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0784");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((int) '4');
        org.joda.time.DurationFieldType durationFieldType2 = hours1.getFieldType();
        org.joda.time.Hours hours4 = hours1.plus(700);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period6 = hours5.toPeriod();
        org.joda.time.Hours hours8 = hours5.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.THREE;
        org.joda.time.Period period11 = hours10.toPeriod();
        org.joda.time.Hours hours13 = hours10.plus((int) (byte) -1);
        org.joda.time.Hours hours14 = hours8.minus(hours10);
        boolean boolean15 = hours1.equals((java.lang.Object) hours10);
        org.joda.time.Hours hours17 = hours10.dividedBy(2);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours17);
    }

    @Test
    public void test0785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0785");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.PeriodType periodType6 = hours0.getPeriodType();
        org.joda.time.Hours hours8 = org.joda.time.Hours.parseHours("PT7H");
        boolean boolean9 = hours0.isLessThan(hours8);
        org.joda.time.Hours hours10 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        org.joda.time.Hours hours12 = hours10.multipliedBy((int) (byte) 0);
        int int13 = hours10.size();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
    }

    @Test
    public void test0786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0786");
        org.joda.time.Hours hours0 = org.joda.time.Hours.TWO;
        org.joda.time.Hours hours1 = org.joda.time.Hours.MAX_VALUE;
        int int2 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours1);
        org.joda.time.Hours hours3 = hours0.negated();
        org.joda.time.DurationFieldType durationFieldType4 = hours0.getFieldType();
        java.lang.String str5 = hours0.toString();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "PT2H" + "'", str5, "PT2H");
    }

    @Test
    public void test0787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0787");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        boolean boolean6 = hours1.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours7 = null;
        org.joda.time.Hours hours8 = hours1.minus(hours7);
        org.joda.time.Hours hours9 = hours8.negated();
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod12 = hours11.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours14 = hours11.minus(hours13);
        int int15 = hours10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours13);
        org.joda.time.DurationFieldType durationFieldType16 = null;
        boolean boolean17 = hours10.isSupported(durationFieldType16);
        org.joda.time.Hours hours19 = hours10.minus((int) (short) -1);
        org.joda.time.Hours hours20 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod21 = hours20.toMutablePeriod();
        org.joda.time.Hours hours22 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours23 = hours20.minus(hours22);
        org.joda.time.Hours hours25 = hours22.plus(8);
        org.joda.time.Hours hours26 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = hours26.get(durationFieldType27);
        org.joda.time.DurationFieldType durationFieldType29 = hours26.getFieldType();
        boolean boolean30 = hours25.isSupported(durationFieldType29);
        int int31 = hours19.get(durationFieldType29);
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours33 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod34 = hours33.toMutablePeriod();
        org.joda.time.Hours hours35 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours36 = hours33.minus(hours35);
        int int37 = hours32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours35);
        org.joda.time.DurationFieldType durationFieldType38 = null;
        boolean boolean39 = hours32.isSupported(durationFieldType38);
        org.joda.time.Hours hours41 = hours32.multipliedBy((int) (short) 10);
        org.joda.time.Hours hours42 = hours19.plus(hours32);
        org.joda.time.Hours hours43 = hours8.minus(hours42);
        org.joda.time.Hours hours44 = org.joda.time.Hours.ONE;
        int int45 = hours44.getHours();
        org.joda.time.Hours hours47 = hours44.plus(10);
        org.joda.time.Hours hours48 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod49 = hours48.toMutablePeriod();
        org.joda.time.Hours hours50 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours51 = hours48.minus(hours50);
        org.joda.time.DurationFieldType durationFieldType52 = null;
        int int53 = hours48.get(durationFieldType52);
        org.joda.time.Hours hours55 = hours48.multipliedBy(1);
        boolean boolean56 = hours44.isGreaterThan(hours48);
        int int57 = hours44.size();
        org.joda.time.Hours hours59 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours60 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod61 = hours60.toMutablePeriod();
        org.joda.time.Hours hours62 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours63 = hours60.minus(hours62);
        org.joda.time.DurationFieldType durationFieldType64 = null;
        int int65 = hours60.get(durationFieldType64);
        org.joda.time.Hours hours67 = hours60.minus((int) (short) 0);
        org.joda.time.Hours hours68 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod69 = hours68.toMutablePeriod();
        org.joda.time.Hours hours70 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours71 = hours68.minus(hours70);
        org.joda.time.DurationFieldType durationFieldType72 = null;
        boolean boolean73 = hours70.isSupported(durationFieldType72);
        org.joda.time.Hours hours74 = hours67.minus(hours70);
        org.joda.time.Hours hours75 = hours59.plus(hours74);
        boolean boolean76 = hours44.equals((java.lang.Object) hours75);
        org.joda.time.Hours hours77 = hours42.minus(hours44);
        int int78 = hours44.size();
        org.joda.time.Hours hours79 = hours44.negated();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 8 + "'", int31 == 8);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(mutablePeriod49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertNotNull(mutablePeriod61);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertNotNull(mutablePeriod69);
        org.junit.Assert.assertNotNull(hours70);
        org.junit.Assert.assertNotNull(hours71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(hours74);
        org.junit.Assert.assertNotNull(hours75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(hours77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
        org.junit.Assert.assertNotNull(hours79);
    }

    @Test
    public void test0788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0788");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ZERO;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        int int5 = hours3.getValue((int) (short) 0);
        org.joda.time.Hours hours6 = hours2.minus(hours3);
        org.joda.time.Hours hours7 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod8 = hours7.toMutablePeriod();
        org.joda.time.Hours hours9 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours10 = hours7.minus(hours9);
        org.joda.time.Hours hours12 = hours9.plus(8);
        org.joda.time.Hours hours13 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = hours13.get(durationFieldType14);
        org.joda.time.DurationFieldType durationFieldType16 = hours13.getFieldType();
        boolean boolean17 = hours12.isSupported(durationFieldType16);
        boolean boolean18 = hours2.isSupported(durationFieldType16);
        boolean boolean19 = hours0.isSupported(durationFieldType16);
        org.joda.time.Hours hours20 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod21 = hours20.toMutablePeriod();
        org.joda.time.Hours hours22 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours23 = hours20.minus(hours22);
        org.joda.time.Hours hours25 = hours22.plus(8);
        int int26 = hours22.size();
        java.lang.String str27 = hours22.toString();
        org.joda.time.Hours hours28 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod29 = hours28.toMutablePeriod();
        org.joda.time.Hours hours30 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours31 = hours28.minus(hours30);
        org.joda.time.Duration duration32 = hours28.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod33 = hours28.toMutablePeriod();
        org.joda.time.Hours hours34 = org.joda.time.Hours.EIGHT;
        int int36 = hours34.getValue((int) (short) 0);
        java.lang.String str37 = hours34.toString();
        boolean boolean38 = hours28.isGreaterThan(hours34);
        org.joda.time.Hours hours40 = hours34.minus(10);
        org.joda.time.Hours hours41 = hours34.negated();
        org.joda.time.Hours hours42 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod43 = hours42.toMutablePeriod();
        org.joda.time.Hours hours44 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours45 = hours42.minus(hours44);
        org.joda.time.DurationFieldType durationFieldType46 = null;
        int int47 = hours42.get(durationFieldType46);
        org.joda.time.Hours hours49 = hours42.multipliedBy(1);
        org.joda.time.Hours hours50 = org.joda.time.Hours.ONE;
        int int51 = hours49.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours50);
        int int52 = hours34.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours49);
        int int53 = hours34.size();
        org.joda.time.Hours hours54 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType55 = null;
        int int56 = hours54.get(durationFieldType55);
        org.joda.time.Hours hours58 = hours54.dividedBy(100);
        org.joda.time.Hours hours60 = hours58.multipliedBy(0);
        org.joda.time.Hours hours61 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours62 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod63 = hours62.toMutablePeriod();
        org.joda.time.Hours hours64 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours65 = hours62.minus(hours64);
        int int66 = hours61.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours64);
        org.joda.time.Hours hours68 = hours64.multipliedBy(0);
        org.joda.time.Hours hours69 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period70 = hours69.toPeriod();
        org.joda.time.Hours hours72 = hours69.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod73 = hours72.toMutablePeriod();
        org.joda.time.Hours hours74 = org.joda.time.Hours.THREE;
        org.joda.time.Period period75 = hours74.toPeriod();
        org.joda.time.Hours hours77 = hours74.plus((int) (byte) -1);
        org.joda.time.Hours hours78 = hours72.minus(hours74);
        org.joda.time.DurationFieldType durationFieldType79 = hours78.getFieldType();
        org.joda.time.Hours hours80 = hours68.plus(hours78);
        org.joda.time.DurationFieldType durationFieldType81 = hours80.getFieldType();
        int int82 = hours60.get(durationFieldType81);
        boolean boolean83 = hours34.isSupported(durationFieldType81);
        boolean boolean84 = hours22.isSupported(durationFieldType81);
        boolean boolean85 = hours0.isGreaterThan(hours22);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 8 + "'", int5 == 8);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "PT8H" + "'", str27, "PT8H");
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 8 + "'", int36 == 8);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "PT8H" + "'", str37, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertNotNull(mutablePeriod63);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertNotNull(hours69);
        org.junit.Assert.assertNotNull(period70);
        org.junit.Assert.assertNotNull(hours72);
        org.junit.Assert.assertNotNull(mutablePeriod73);
        org.junit.Assert.assertNotNull(hours74);
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertNotNull(hours77);
        org.junit.Assert.assertNotNull(hours78);
        org.junit.Assert.assertNotNull(durationFieldType79);
        org.junit.Assert.assertNotNull(hours80);
        org.junit.Assert.assertNotNull(durationFieldType81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test0789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0789");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod6 = hours5.toMutablePeriod();
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours8 = hours5.minus(hours7);
        org.joda.time.Hours hours10 = hours7.plus(8);
        org.joda.time.Hours hours11 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = hours11.get(durationFieldType12);
        org.joda.time.DurationFieldType durationFieldType14 = hours11.getFieldType();
        boolean boolean15 = hours10.isSupported(durationFieldType14);
        boolean boolean16 = hours0.isSupported(durationFieldType14);
        int int17 = hours0.size();
        org.joda.time.MutablePeriod mutablePeriod18 = hours0.toMutablePeriod();
        org.joda.time.Period period19 = hours0.toPeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(period19);
    }

    @Test
    public void test0790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0790");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Hours hours5 = hours2.plus(8);
        org.joda.time.Hours hours6 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = hours6.get(durationFieldType7);
        org.joda.time.DurationFieldType durationFieldType9 = hours6.getFieldType();
        boolean boolean10 = hours5.isSupported(durationFieldType9);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod13 = hours12.toMutablePeriod();
        org.joda.time.Hours hours14 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours15 = hours12.minus(hours14);
        int int16 = hours11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours14);
        org.joda.time.DurationFieldType durationFieldType17 = null;
        boolean boolean18 = hours11.isSupported(durationFieldType17);
        org.joda.time.Hours hours20 = hours11.minus((int) (short) -1);
        org.joda.time.PeriodType periodType21 = hours11.getPeriodType();
        org.joda.time.Hours hours22 = org.joda.time.Hours.EIGHT;
        int int24 = hours22.getValue((int) (short) 0);
        org.joda.time.Hours hours25 = hours11.minus(hours22);
        org.joda.time.Hours hours26 = hours5.minus(hours25);
        org.joda.time.Hours hours28 = org.joda.time.Hours.parseHours("PT8H");
        boolean boolean29 = hours26.isLessThan(hours28);
        org.joda.time.Hours hours30 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours31 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod32 = hours31.toMutablePeriod();
        org.joda.time.Hours hours33 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours34 = hours31.minus(hours33);
        int int35 = hours30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours33);
        org.joda.time.Hours hours37 = hours30.minus((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod38 = hours30.toMutablePeriod();
        org.joda.time.Hours hours39 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours40 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod41 = hours40.toMutablePeriod();
        org.joda.time.Hours hours42 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours43 = hours40.minus(hours42);
        int int44 = hours39.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours42);
        org.joda.time.DurationFieldType durationFieldType45 = null;
        boolean boolean46 = hours39.isSupported(durationFieldType45);
        org.joda.time.Hours hours48 = hours39.minus((int) (short) -1);
        org.joda.time.Hours hours49 = hours48.negated();
        org.joda.time.Period period50 = hours48.toPeriod();
        boolean boolean51 = hours30.equals((java.lang.Object) hours48);
        boolean boolean52 = hours26.equals((java.lang.Object) boolean51);
        org.joda.time.Hours hours53 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours54 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours55 = org.joda.time.Hours.EIGHT;
        int int57 = hours55.getValue((int) (short) 0);
        org.joda.time.Hours hours58 = hours54.minus(hours55);
        org.joda.time.Hours hours59 = hours53.minus(hours54);
        org.joda.time.Hours hours61 = hours54.dividedBy(1);
        org.joda.time.Duration duration62 = hours54.toStandardDuration();
        boolean boolean63 = hours26.equals((java.lang.Object) hours54);
        org.joda.time.Hours hours64 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours26);
        java.lang.Object obj65 = null;
        boolean boolean66 = hours26.equals(obj65);
        int int67 = hours26.getHours();
        org.joda.time.Hours hours68 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours69 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod70 = hours69.toMutablePeriod();
        org.joda.time.Hours hours71 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours72 = hours69.minus(hours71);
        int int73 = hours68.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours71);
        org.joda.time.DurationFieldType durationFieldType74 = null;
        boolean boolean75 = hours68.isSupported(durationFieldType74);
        org.joda.time.Hours hours77 = hours68.multipliedBy((int) (short) 10);
        org.joda.time.Hours hours78 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours79 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType80 = null;
        int int81 = hours79.get(durationFieldType80);
        boolean boolean82 = hours78.equals((java.lang.Object) durationFieldType80);
        org.joda.time.Hours hours83 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours84 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod85 = hours84.toMutablePeriod();
        org.joda.time.Hours hours86 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours87 = hours84.minus(hours86);
        int int88 = hours83.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours86);
        org.joda.time.Hours hours90 = hours86.multipliedBy(0);
        org.joda.time.Hours hours91 = hours78.plus(hours90);
        org.joda.time.DurationFieldType durationFieldType92 = hours91.getFieldType();
        boolean boolean93 = hours68.equals((java.lang.Object) durationFieldType92);
        int int94 = hours26.get(durationFieldType92);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 8 + "'", int24 == 8);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(mutablePeriod41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 8 + "'", int57 == 8);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 17 + "'", int67 == 17);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertNotNull(hours69);
        org.junit.Assert.assertNotNull(mutablePeriod70);
        org.junit.Assert.assertNotNull(hours71);
        org.junit.Assert.assertNotNull(hours72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(hours77);
        org.junit.Assert.assertNotNull(hours78);
        org.junit.Assert.assertNotNull(hours79);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(hours83);
        org.junit.Assert.assertNotNull(hours84);
        org.junit.Assert.assertNotNull(mutablePeriod85);
        org.junit.Assert.assertNotNull(hours86);
        org.junit.Assert.assertNotNull(hours87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertNotNull(hours90);
        org.junit.Assert.assertNotNull(hours91);
        org.junit.Assert.assertNotNull(durationFieldType92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 17 + "'", int94 == 17);
    }

    @Test
    public void test0791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0791");
        org.joda.time.Hours hours0 = org.joda.time.Hours.TWO;
        org.joda.time.Hours hours1 = org.joda.time.Hours.MAX_VALUE;
        int int2 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours1);
        org.joda.time.Hours hours3 = hours0.negated();
        int int4 = hours0.getHours();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
    }

    @Test
    public void test0792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0792");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        int int10 = hours0.size();
        org.joda.time.Hours hours11 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours12 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = hours12.get(durationFieldType13);
        boolean boolean15 = hours11.equals((java.lang.Object) durationFieldType13);
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod18 = hours17.toMutablePeriod();
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours20 = hours17.minus(hours19);
        int int21 = hours16.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours19);
        org.joda.time.Hours hours23 = hours19.multipliedBy(0);
        org.joda.time.Hours hours24 = hours11.plus(hours23);
        org.joda.time.Hours hours26 = hours24.minus((int) (byte) 100);
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours28 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod29 = hours28.toMutablePeriod();
        org.joda.time.Hours hours30 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours31 = hours28.minus(hours30);
        int int32 = hours27.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours30);
        org.joda.time.DurationFieldType durationFieldType33 = null;
        boolean boolean34 = hours27.isSupported(durationFieldType33);
        org.joda.time.Hours hours36 = hours27.minus((int) (short) -1);
        org.joda.time.Hours hours37 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod38 = hours37.toMutablePeriod();
        org.joda.time.Hours hours39 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours40 = hours37.minus(hours39);
        org.joda.time.Hours hours42 = hours39.plus(8);
        org.joda.time.Hours hours43 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType44 = null;
        int int45 = hours43.get(durationFieldType44);
        org.joda.time.DurationFieldType durationFieldType46 = hours43.getFieldType();
        boolean boolean47 = hours42.isSupported(durationFieldType46);
        int int48 = hours36.get(durationFieldType46);
        java.lang.String str49 = hours36.toString();
        org.joda.time.Hours hours51 = hours36.dividedBy((-8));
        boolean boolean52 = hours26.isGreaterThan(hours51);
        boolean boolean53 = hours0.isGreaterThan(hours51);
        org.joda.time.Hours hours54 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours55 = org.joda.time.Hours.EIGHT;
        int int57 = hours55.getValue((int) (short) 0);
        org.joda.time.Hours hours58 = hours54.minus(hours55);
        boolean boolean60 = hours55.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours61 = null;
        org.joda.time.Hours hours62 = hours55.minus(hours61);
        org.joda.time.Hours hours63 = hours62.negated();
        org.joda.time.Hours hours64 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod65 = hours64.toMutablePeriod();
        org.joda.time.Hours hours66 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours67 = hours64.minus(hours66);
        org.joda.time.Duration duration68 = hours64.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod69 = hours64.toMutablePeriod();
        org.joda.time.Hours hours70 = org.joda.time.Hours.EIGHT;
        int int72 = hours70.getValue((int) (short) 0);
        java.lang.String str73 = hours70.toString();
        boolean boolean74 = hours64.isGreaterThan(hours70);
        org.joda.time.Hours hours76 = hours70.minus(10);
        org.joda.time.Hours hours77 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours78 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod79 = hours78.toMutablePeriod();
        org.joda.time.Hours hours80 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours81 = hours78.minus(hours80);
        int int82 = hours77.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours80);
        org.joda.time.Hours hours83 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours77);
        org.joda.time.DurationFieldType durationFieldType84 = null;
        int int85 = hours77.get(durationFieldType84);
        boolean boolean86 = hours76.equals((java.lang.Object) hours77);
        java.lang.String str87 = hours76.toString();
        org.joda.time.DurationFieldType durationFieldType89 = hours76.getFieldType(0);
        boolean boolean90 = hours62.isGreaterThan(hours76);
        boolean boolean91 = hours0.equals((java.lang.Object) hours62);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(durationFieldType46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 8 + "'", int48 == 8);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "PT8H" + "'", str49, "PT8H");
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 8 + "'", int57 == 8);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertNotNull(mutablePeriod65);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertNotNull(mutablePeriod69);
        org.junit.Assert.assertNotNull(hours70);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 8 + "'", int72 == 8);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "PT8H" + "'", str73, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(hours76);
        org.junit.Assert.assertNotNull(hours77);
        org.junit.Assert.assertNotNull(hours78);
        org.junit.Assert.assertNotNull(mutablePeriod79);
        org.junit.Assert.assertNotNull(hours80);
        org.junit.Assert.assertNotNull(hours81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertNotNull(hours83);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "PT-2H" + "'", str87, "PT-2H");
        org.junit.Assert.assertNotNull(durationFieldType89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test0793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0793");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.Hours hours2 = hours0.plus(1);
        org.joda.time.Period period3 = hours0.toPeriod();
        org.joda.time.Hours hours5 = hours0.dividedBy((-1));
        org.joda.time.MutablePeriod mutablePeriod6 = hours5.toMutablePeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
    }

    @Test
    public void test0794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0794");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = hours8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = hours8.getFieldType();
        int int12 = hours7.get(durationFieldType11);
        org.joda.time.PeriodType periodType13 = hours7.getPeriodType();
        org.joda.time.Hours hours15 = hours7.multipliedBy(8);
        org.joda.time.DurationFieldType durationFieldType16 = hours15.getFieldType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 7 + "'", int12 == 7);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(durationFieldType16);
    }

    @Test
    public void test0795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0795");
        org.joda.time.Hours hours0 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours2 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours6 = hours3.minus(hours5);
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = hours3.get(durationFieldType7);
        org.joda.time.Hours hours10 = hours3.minus((int) (short) 0);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod12 = hours11.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours14 = hours11.minus(hours13);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = hours13.isSupported(durationFieldType15);
        org.joda.time.Hours hours17 = hours10.minus(hours13);
        org.joda.time.Hours hours18 = hours2.plus(hours17);
        int int19 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours17);
        org.joda.time.MutablePeriod mutablePeriod20 = hours17.toMutablePeriod();
        org.joda.time.Duration duration21 = hours17.toStandardDuration();
        org.joda.time.Hours hours23 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod25 = hours24.toMutablePeriod();
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours27 = hours24.minus(hours26);
        org.joda.time.DurationFieldType durationFieldType28 = null;
        int int29 = hours24.get(durationFieldType28);
        org.joda.time.Hours hours31 = hours24.minus((int) (short) 0);
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod33 = hours32.toMutablePeriod();
        org.joda.time.Hours hours34 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours35 = hours32.minus(hours34);
        org.joda.time.DurationFieldType durationFieldType36 = null;
        boolean boolean37 = hours34.isSupported(durationFieldType36);
        org.joda.time.Hours hours38 = hours31.minus(hours34);
        org.joda.time.Hours hours39 = hours23.plus(hours38);
        org.joda.time.Hours hours40 = hours17.plus(hours23);
        org.joda.time.Hours hours42 = org.joda.time.Hours.hours(1);
        org.joda.time.DurationFieldType durationFieldType43 = hours42.getFieldType();
        int int44 = hours17.get(durationFieldType43);
        org.joda.time.MutablePeriod mutablePeriod45 = hours17.toMutablePeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(durationFieldType43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod45);
    }

    @Test
    public void test0796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0796");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.multipliedBy(1);
        org.joda.time.Hours hours8 = org.joda.time.Hours.ONE;
        int int9 = hours7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours8);
        org.joda.time.MutablePeriod mutablePeriod10 = hours7.toMutablePeriod();
        org.joda.time.PeriodType periodType11 = hours7.getPeriodType();
        org.joda.time.Hours hours13 = hours7.dividedBy((int) '4');
        int int14 = hours13.getHours();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test0797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0797");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours11 = hours8.minus(hours10);
        org.joda.time.DurationFieldType durationFieldType12 = null;
        boolean boolean13 = hours10.isSupported(durationFieldType12);
        org.joda.time.Hours hours14 = hours7.minus(hours10);
        java.lang.String str15 = hours7.toString();
        org.joda.time.PeriodType periodType16 = hours7.getPeriodType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "PT7H" + "'", str15, "PT7H");
        org.junit.Assert.assertNotNull(periodType16);
    }

    @Test
    public void test0798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0798");
        org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT16H");
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours6 = hours3.minus(hours5);
        int int7 = hours2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours5);
        org.joda.time.MutablePeriod mutablePeriod8 = hours2.toMutablePeriod();
        org.joda.time.Hours hours9 = hours1.minus(hours2);
        org.joda.time.Hours hours10 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours2);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod12 = hours11.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours14 = hours11.minus(hours13);
        org.joda.time.Duration duration15 = hours11.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod16 = hours11.toMutablePeriod();
        org.joda.time.Hours hours17 = org.joda.time.Hours.EIGHT;
        int int19 = hours17.getValue((int) (short) 0);
        java.lang.String str20 = hours17.toString();
        boolean boolean21 = hours11.isGreaterThan(hours17);
        org.joda.time.Hours hours22 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours23 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod24 = hours23.toMutablePeriod();
        org.joda.time.Hours hours25 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours26 = hours23.minus(hours25);
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = hours23.get(durationFieldType27);
        org.joda.time.Hours hours30 = hours23.minus((int) (short) 0);
        org.joda.time.Hours hours31 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours23);
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours33 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod34 = hours33.toMutablePeriod();
        org.joda.time.Hours hours35 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours36 = hours33.minus(hours35);
        int int37 = hours32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours35);
        org.joda.time.DurationFieldType durationFieldType38 = null;
        boolean boolean39 = hours32.isSupported(durationFieldType38);
        org.joda.time.Hours hours41 = hours32.minus((int) (short) -1);
        org.joda.time.Hours hours42 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod43 = hours42.toMutablePeriod();
        org.joda.time.Hours hours44 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours45 = hours42.minus(hours44);
        org.joda.time.Hours hours47 = hours44.plus(8);
        org.joda.time.Hours hours48 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType49 = null;
        int int50 = hours48.get(durationFieldType49);
        org.joda.time.DurationFieldType durationFieldType51 = hours48.getFieldType();
        boolean boolean52 = hours47.isSupported(durationFieldType51);
        int int53 = hours41.get(durationFieldType51);
        org.joda.time.Hours hours54 = hours23.plus(hours41);
        org.joda.time.Hours hours55 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours56 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod57 = hours56.toMutablePeriod();
        org.joda.time.Hours hours58 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours59 = hours56.minus(hours58);
        int int60 = hours55.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours58);
        org.joda.time.DurationFieldType durationFieldType61 = null;
        boolean boolean62 = hours55.isSupported(durationFieldType61);
        org.joda.time.Hours hours64 = hours55.multipliedBy((int) (short) 10);
        org.joda.time.Hours hours65 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours66 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType67 = null;
        int int68 = hours66.get(durationFieldType67);
        boolean boolean69 = hours65.equals((java.lang.Object) durationFieldType67);
        org.joda.time.Hours hours70 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours71 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod72 = hours71.toMutablePeriod();
        org.joda.time.Hours hours73 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours74 = hours71.minus(hours73);
        int int75 = hours70.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours73);
        org.joda.time.Hours hours77 = hours73.multipliedBy(0);
        org.joda.time.Hours hours78 = hours65.plus(hours77);
        org.joda.time.DurationFieldType durationFieldType79 = hours78.getFieldType();
        boolean boolean80 = hours55.equals((java.lang.Object) durationFieldType79);
        int int81 = hours41.get(durationFieldType79);
        boolean boolean82 = hours22.isSupported(durationFieldType79);
        boolean boolean83 = hours11.isSupported(durationFieldType79);
        org.joda.time.Hours hours85 = hours11.multipliedBy((int) (short) 0);
        boolean boolean86 = hours10.equals((java.lang.Object) (short) 0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 8 + "'", int19 == 8);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "PT8H" + "'", str20, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(durationFieldType51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 8 + "'", int53 == 8);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertNotNull(mutablePeriod57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(hours70);
        org.junit.Assert.assertNotNull(hours71);
        org.junit.Assert.assertNotNull(mutablePeriod72);
        org.junit.Assert.assertNotNull(hours73);
        org.junit.Assert.assertNotNull(hours74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(hours77);
        org.junit.Assert.assertNotNull(hours78);
        org.junit.Assert.assertNotNull(durationFieldType79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 8 + "'", int81 == 8);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(hours85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test0799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0799");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Hours hours4 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        int int7 = hours5.getValue((int) (short) 0);
        org.joda.time.Hours hours8 = hours4.minus(hours5);
        org.joda.time.Hours hours9 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = hours9.get(durationFieldType10);
        org.joda.time.DurationFieldType durationFieldType12 = hours9.getFieldType();
        int int13 = hours4.get(durationFieldType12);
        boolean boolean14 = hours3.isSupported(durationFieldType12);
        org.joda.time.Hours hours16 = hours3.dividedBy((-2147483648));
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod18 = hours17.toMutablePeriod();
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours20 = hours17.minus(hours19);
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = hours17.get(durationFieldType21);
        org.joda.time.Hours hours24 = hours17.minus((int) (short) 0);
        org.joda.time.Hours hours25 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours17);
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod28 = hours27.toMutablePeriod();
        org.joda.time.Hours hours29 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours30 = hours27.minus(hours29);
        int int31 = hours26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours29);
        org.joda.time.DurationFieldType durationFieldType32 = null;
        boolean boolean33 = hours26.isSupported(durationFieldType32);
        org.joda.time.Hours hours35 = hours26.minus((int) (short) -1);
        org.joda.time.Hours hours36 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod37 = hours36.toMutablePeriod();
        org.joda.time.Hours hours38 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours39 = hours36.minus(hours38);
        org.joda.time.Hours hours41 = hours38.plus(8);
        org.joda.time.Hours hours42 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType43 = null;
        int int44 = hours42.get(durationFieldType43);
        org.joda.time.DurationFieldType durationFieldType45 = hours42.getFieldType();
        boolean boolean46 = hours41.isSupported(durationFieldType45);
        int int47 = hours35.get(durationFieldType45);
        org.joda.time.Hours hours48 = hours17.plus(hours35);
        org.joda.time.Hours hours50 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours51 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod52 = hours51.toMutablePeriod();
        org.joda.time.Hours hours53 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours54 = hours51.minus(hours53);
        org.joda.time.DurationFieldType durationFieldType55 = null;
        int int56 = hours51.get(durationFieldType55);
        org.joda.time.Hours hours58 = hours51.minus((int) (short) 0);
        org.joda.time.Hours hours59 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod60 = hours59.toMutablePeriod();
        org.joda.time.Hours hours61 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours62 = hours59.minus(hours61);
        org.joda.time.DurationFieldType durationFieldType63 = null;
        boolean boolean64 = hours61.isSupported(durationFieldType63);
        org.joda.time.Hours hours65 = hours58.minus(hours61);
        org.joda.time.Hours hours66 = hours50.plus(hours65);
        org.joda.time.Hours hours67 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod68 = hours67.toMutablePeriod();
        org.joda.time.Hours hours69 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours70 = hours67.minus(hours69);
        boolean boolean71 = hours65.isGreaterThan(hours69);
        org.joda.time.DurationFieldType durationFieldType73 = hours65.getFieldType((int) (short) 0);
        boolean boolean74 = hours35.isSupported(durationFieldType73);
        int int75 = hours35.size();
        org.joda.time.Hours hours76 = hours3.plus(hours35);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 8 + "'", int7 == 8);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 7 + "'", int13 == 7);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 8 + "'", int47 == 8);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(mutablePeriod52);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(mutablePeriod60);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertNotNull(mutablePeriod68);
        org.junit.Assert.assertNotNull(hours69);
        org.junit.Assert.assertNotNull(hours70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(durationFieldType73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertNotNull(hours76);
    }

    @Test
    public void test0800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0800");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours12 = hours6.minus(10);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod15 = hours14.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours17 = hours14.minus(hours16);
        int int18 = hours13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours16);
        org.joda.time.Hours hours19 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours13);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = hours13.get(durationFieldType20);
        boolean boolean22 = hours12.equals((java.lang.Object) hours13);
        java.lang.String str23 = hours12.toString();
        org.joda.time.ReadableInterval readableInterval24 = null;
        org.joda.time.Hours hours25 = org.joda.time.Hours.hoursIn(readableInterval24);
        org.joda.time.DurationFieldType durationFieldType26 = hours25.getFieldType();
        org.joda.time.Hours hours28 = hours25.dividedBy((int) (byte) 10);
        org.joda.time.Hours hours30 = hours25.plus((int) (byte) 1);
        org.joda.time.Hours hours32 = hours25.dividedBy(100);
        int int33 = hours12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours32);
        org.joda.time.Hours hours35 = org.joda.time.Hours.hours(100);
        org.joda.time.Period period36 = hours35.toPeriod();
        org.joda.time.Hours hours38 = hours35.minus(8);
        org.joda.time.Hours hours40 = hours38.minus((-1));
        org.joda.time.DurationFieldType durationFieldType41 = hours38.getFieldType();
        boolean boolean42 = hours32.isSupported(durationFieldType41);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "PT-2H" + "'", str23, "PT-2H");
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(durationFieldType41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    }

    @Test
    public void test0801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0801");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Hours hours4 = hours2.negated();
        org.joda.time.DurationFieldType durationFieldType5 = hours4.getFieldType();
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod7 = hours6.toMutablePeriod();
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours9 = hours6.minus(hours8);
        org.joda.time.Hours hours10 = hours8.negated();
        int int11 = hours10.getHours();
        int int12 = hours4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours10);
        org.joda.time.Hours hours13 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours4);
        org.joda.time.Hours hours15 = hours4.dividedBy(10);
        org.joda.time.Hours hours16 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = hours16.get(durationFieldType17);
        org.joda.time.Hours hours20 = hours16.dividedBy(100);
        org.joda.time.Hours hours22 = hours20.multipliedBy(0);
        org.joda.time.MutablePeriod mutablePeriod23 = hours20.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType24 = hours20.getFieldType();
        boolean boolean25 = hours4.equals((java.lang.Object) durationFieldType24);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-8) + "'", int11 == (-8));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(mutablePeriod23);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test0802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0802");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Hours hours5 = hours2.plus(8);
        int int6 = hours5.getHours();
        org.joda.time.Hours hours8 = hours5.multipliedBy(0);
        org.joda.time.Hours hours9 = hours8.negated();
        org.joda.time.Duration duration10 = hours8.toStandardDuration();
        int int11 = hours8.size();
        org.joda.time.Hours hours13 = hours8.multipliedBy(100);
        java.lang.Class<?> wildcardClass14 = hours8.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 16 + "'", int6 == 16);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0803");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        boolean boolean22 = hours16.isGreaterThan(hours20);
        org.joda.time.Hours hours23 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours20);
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours25 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod26 = hours25.toMutablePeriod();
        org.joda.time.Hours hours27 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours28 = hours25.minus(hours27);
        int int29 = hours24.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours27);
        org.joda.time.MutablePeriod mutablePeriod30 = hours24.toMutablePeriod();
        org.joda.time.Hours hours32 = hours24.minus(7);
        boolean boolean33 = hours20.isLessThan(hours32);
        org.joda.time.Hours hours34 = hours32.negated();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(hours34);
    }

    @Test
    public void test0804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0804");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours7 = hours0.minus((int) 'a');
        org.joda.time.Hours hours8 = org.joda.time.Hours.ZERO;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        boolean boolean10 = hours7.equals((java.lang.Object) hours8);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours13 = org.joda.time.Hours.EIGHT;
        int int15 = hours13.getValue((int) (short) 0);
        org.joda.time.Hours hours16 = hours12.minus(hours13);
        org.joda.time.Hours hours17 = hours11.minus(hours12);
        int int18 = hours11.size();
        org.joda.time.Duration duration19 = hours11.toStandardDuration();
        org.joda.time.Hours hours20 = hours7.minus(hours11);
        org.joda.time.Hours hours22 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours23 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod24 = hours23.toMutablePeriod();
        org.joda.time.Hours hours25 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours26 = hours23.minus(hours25);
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = hours23.get(durationFieldType27);
        org.joda.time.Hours hours30 = hours23.minus((int) (short) 0);
        org.joda.time.Hours hours31 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod32 = hours31.toMutablePeriod();
        org.joda.time.Hours hours33 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours34 = hours31.minus(hours33);
        org.joda.time.DurationFieldType durationFieldType35 = null;
        boolean boolean36 = hours33.isSupported(durationFieldType35);
        org.joda.time.Hours hours37 = hours30.minus(hours33);
        org.joda.time.Hours hours38 = hours22.plus(hours37);
        org.joda.time.Hours hours39 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours40 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod41 = hours40.toMutablePeriod();
        org.joda.time.Hours hours42 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours43 = hours40.minus(hours42);
        int int44 = hours39.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours42);
        org.joda.time.Hours hours45 = hours22.plus(hours42);
        org.joda.time.Hours hours46 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod47 = hours46.toMutablePeriod();
        org.joda.time.Hours hours48 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours49 = hours46.minus(hours48);
        org.joda.time.DurationFieldType durationFieldType50 = null;
        int int51 = hours46.get(durationFieldType50);
        org.joda.time.Hours hours53 = hours46.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval54 = null;
        org.joda.time.Hours hours55 = org.joda.time.Hours.hoursIn(readableInterval54);
        int int56 = hours53.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours55);
        boolean boolean57 = hours42.isGreaterThan(hours53);
        org.joda.time.Hours hours59 = hours42.multipliedBy(16);
        org.joda.time.MutablePeriod mutablePeriod60 = hours59.toMutablePeriod();
        boolean boolean61 = hours7.equals((java.lang.Object) hours59);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 8 + "'", int15 == 8);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(mutablePeriod41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(mutablePeriod47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(mutablePeriod60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test0805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0805");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        int int4 = hours2.getValue((int) (short) 0);
        org.joda.time.Hours hours5 = hours1.minus(hours2);
        org.joda.time.Hours hours6 = hours0.minus(hours1);
        int int7 = hours0.size();
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours9 = org.joda.time.Hours.EIGHT;
        int int11 = hours9.getValue((int) (short) 0);
        org.joda.time.Hours hours12 = hours8.minus(hours9);
        boolean boolean14 = hours9.equals((java.lang.Object) (short) 10);
        int int15 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours9);
        org.joda.time.Period period16 = hours9.toPeriod();
        int int17 = hours9.getHours();
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        int int23 = hours18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours21);
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod25 = hours24.toMutablePeriod();
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours27 = hours24.minus(hours26);
        org.joda.time.DurationFieldType durationFieldType28 = null;
        int int29 = hours24.get(durationFieldType28);
        org.joda.time.Hours hours31 = hours24.minus((int) (short) 0);
        org.joda.time.Hours hours32 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = hours32.get(durationFieldType33);
        org.joda.time.DurationFieldType durationFieldType35 = hours32.getFieldType();
        int int36 = hours31.get(durationFieldType35);
        org.joda.time.Hours hours37 = hours31.negated();
        boolean boolean38 = hours21.isGreaterThan(hours37);
        boolean boolean39 = hours9.equals((java.lang.Object) hours21);
        org.joda.time.DurationFieldType durationFieldType40 = hours21.getFieldType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 8 + "'", int4 == 8);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 8 + "'", int11 == 8);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 8 + "'", int17 == 8);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 7 + "'", int36 == 7);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(durationFieldType40);
    }

    @Test
    public void test0806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0806");
        org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT-1H");
        org.joda.time.Minutes minutes2 = hours1.toStandardMinutes();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(minutes2);
    }

    @Test
    public void test0807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0807");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        boolean boolean22 = hours16.isGreaterThan(hours20);
        org.joda.time.Hours hours23 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours25 = org.joda.time.Hours.EIGHT;
        int int27 = hours25.getValue((int) (short) 0);
        org.joda.time.Hours hours28 = hours24.minus(hours25);
        org.joda.time.Hours hours29 = hours23.minus(hours24);
        org.joda.time.Hours hours31 = hours24.dividedBy(1);
        org.joda.time.Duration duration32 = hours24.toStandardDuration();
        boolean boolean33 = hours20.isGreaterThan(hours24);
        org.joda.time.Hours hours34 = hours20.negated();
        org.joda.time.Hours hours35 = hours34.negated();
        int int36 = hours35.size();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 8 + "'", int27 == 8);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
    }

    @Test
    public void test0808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0808");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        int int1 = hours0.getHours();
        org.joda.time.Hours hours3 = hours0.plus(10);
        org.joda.time.Hours hours4 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod5 = hours4.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours7 = hours4.minus(hours6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = hours4.get(durationFieldType8);
        org.joda.time.Hours hours11 = hours4.multipliedBy(1);
        boolean boolean12 = hours0.isGreaterThan(hours4);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        int int17 = hours15.getValue((int) (short) 0);
        org.joda.time.Hours hours18 = hours14.minus(hours15);
        org.joda.time.Hours hours19 = hours13.minus(hours14);
        int int20 = hours13.size();
        org.joda.time.Hours hours21 = hours4.plus(hours13);
        org.joda.time.Hours hours23 = org.joda.time.Hours.hours(0);
        int int24 = hours23.size();
        org.joda.time.Hours hours26 = org.joda.time.Hours.hours((-1));
        int int27 = hours23.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours26);
        org.joda.time.Hours hours28 = hours4.minus(hours23);
        org.joda.time.Hours hours29 = hours4.negated();
        org.joda.time.PeriodType periodType30 = hours29.getPeriodType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 8 + "'", int17 == 8);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(periodType30);
    }

    @Test
    public void test0809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0809");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.multipliedBy(1);
        org.joda.time.Hours hours8 = org.joda.time.Hours.ONE;
        int int9 = hours7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours8);
        org.joda.time.Hours hours10 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType11 = null;
        int int12 = hours10.get(durationFieldType11);
        org.joda.time.Hours hours14 = hours10.dividedBy(100);
        org.joda.time.Hours hours16 = hours14.plus((int) (byte) 10);
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        int int22 = hours17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours20);
        org.joda.time.DurationFieldType durationFieldType23 = null;
        boolean boolean24 = hours17.isSupported(durationFieldType23);
        org.joda.time.Hours hours26 = hours17.minus((int) (short) -1);
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod28 = hours27.toMutablePeriod();
        org.joda.time.Hours hours29 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours30 = hours27.minus(hours29);
        org.joda.time.Hours hours32 = hours29.plus(8);
        org.joda.time.Hours hours33 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = hours33.get(durationFieldType34);
        org.joda.time.DurationFieldType durationFieldType36 = hours33.getFieldType();
        boolean boolean37 = hours32.isSupported(durationFieldType36);
        int int38 = hours26.get(durationFieldType36);
        boolean boolean39 = hours16.isSupported(durationFieldType36);
        org.joda.time.Hours hours40 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod41 = hours40.toMutablePeriod();
        org.joda.time.Hours hours42 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours43 = hours40.minus(hours42);
        org.joda.time.DurationFieldType durationFieldType44 = null;
        int int45 = hours40.get(durationFieldType44);
        org.joda.time.Hours hours47 = hours40.minus((int) (short) 0);
        org.joda.time.Hours hours48 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours40);
        boolean boolean49 = hours16.equals((java.lang.Object) hours48);
        org.joda.time.Hours hours51 = hours16.plus((-1));
        org.joda.time.Hours hours52 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours53 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType54 = null;
        int int55 = hours53.get(durationFieldType54);
        boolean boolean56 = hours52.equals((java.lang.Object) durationFieldType54);
        org.joda.time.Hours hours57 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours58 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod59 = hours58.toMutablePeriod();
        org.joda.time.Hours hours60 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours61 = hours58.minus(hours60);
        int int62 = hours57.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours60);
        org.joda.time.Hours hours64 = hours60.multipliedBy(0);
        org.joda.time.Hours hours65 = hours52.plus(hours64);
        org.joda.time.DurationFieldType durationFieldType66 = hours65.getFieldType();
        boolean boolean67 = hours16.equals((java.lang.Object) durationFieldType66);
        int int68 = hours8.get(durationFieldType66);
        java.lang.Class<?> wildcardClass69 = hours8.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 8 + "'", int38 == 8);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(mutablePeriod41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(mutablePeriod59);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertNotNull(durationFieldType66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0810");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours11 = hours8.minus(hours10);
        org.joda.time.DurationFieldType durationFieldType12 = null;
        boolean boolean13 = hours10.isSupported(durationFieldType12);
        org.joda.time.Hours hours14 = hours7.minus(hours10);
        org.joda.time.PeriodType periodType15 = hours7.getPeriodType();
        org.joda.time.Hours hours17 = hours7.multipliedBy((int) (byte) 1);
        org.joda.time.Period period18 = hours17.toPeriod();
        java.lang.Class<?> wildcardClass19 = hours17.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0811");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Hours hours5 = hours2.plus(8);
        int int6 = hours5.getHours();
        org.joda.time.Hours hours8 = hours5.multipliedBy(0);
        org.joda.time.Hours hours9 = hours8.negated();
        org.joda.time.Duration duration10 = hours8.toStandardDuration();
        int int11 = hours8.size();
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod13 = hours12.toMutablePeriod();
        org.joda.time.Hours hours14 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours15 = hours12.minus(hours14);
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = hours12.get(durationFieldType16);
        org.joda.time.Hours hours19 = hours12.minus((int) (short) 0);
        org.joda.time.Hours hours20 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours12);
        org.joda.time.Hours hours21 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours22 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod23 = hours22.toMutablePeriod();
        org.joda.time.Hours hours24 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours25 = hours22.minus(hours24);
        int int26 = hours21.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours24);
        org.joda.time.DurationFieldType durationFieldType27 = null;
        boolean boolean28 = hours21.isSupported(durationFieldType27);
        org.joda.time.Hours hours30 = hours21.minus((int) (short) -1);
        org.joda.time.Hours hours31 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod32 = hours31.toMutablePeriod();
        org.joda.time.Hours hours33 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours34 = hours31.minus(hours33);
        org.joda.time.Hours hours36 = hours33.plus(8);
        org.joda.time.Hours hours37 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType38 = null;
        int int39 = hours37.get(durationFieldType38);
        org.joda.time.DurationFieldType durationFieldType40 = hours37.getFieldType();
        boolean boolean41 = hours36.isSupported(durationFieldType40);
        int int42 = hours30.get(durationFieldType40);
        org.joda.time.Hours hours43 = hours12.plus(hours30);
        org.joda.time.Hours hours45 = hours43.minus(15);
        boolean boolean46 = hours8.isLessThan(hours45);
        org.joda.time.Hours hours47 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours48 = org.joda.time.Hours.EIGHT;
        int int50 = hours48.getValue((int) (short) 0);
        org.joda.time.Hours hours51 = hours47.minus(hours48);
        org.joda.time.Hours hours52 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours53 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours54 = org.joda.time.Hours.EIGHT;
        int int56 = hours54.getValue((int) (short) 0);
        org.joda.time.Hours hours57 = hours53.minus(hours54);
        org.joda.time.Hours hours58 = hours52.minus(hours53);
        int int59 = hours52.size();
        org.joda.time.Duration duration60 = hours52.toStandardDuration();
        boolean boolean61 = hours48.isGreaterThan(hours52);
        org.joda.time.MutablePeriod mutablePeriod62 = hours52.toMutablePeriod();
        org.joda.time.Hours hours64 = hours52.multipliedBy(10);
        org.joda.time.ReadableInterval readableInterval65 = null;
        org.joda.time.Hours hours66 = org.joda.time.Hours.hoursIn(readableInterval65);
        org.joda.time.DurationFieldType durationFieldType67 = hours66.getFieldType();
        org.joda.time.Hours hours69 = hours66.dividedBy((int) (byte) 10);
        int int70 = hours64.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours69);
        org.joda.time.Hours hours72 = hours64.dividedBy((-8));
        org.joda.time.Hours hours73 = hours45.minus(hours72);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 16 + "'", int6 == 16);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(mutablePeriod23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(durationFieldType40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 8 + "'", int42 == 8);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 8 + "'", int50 == 8);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 8 + "'", int56 == 8);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(mutablePeriod62);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertNotNull(durationFieldType67);
        org.junit.Assert.assertNotNull(hours69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertNotNull(hours72);
        org.junit.Assert.assertNotNull(hours73);
    }

    @Test
    public void test0812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0812");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.Hours hours10 = hours9.negated();
        org.joda.time.Duration duration11 = hours10.toStandardDuration();
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod14 = hours13.toMutablePeriod();
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours16 = hours13.minus(hours15);
        int int17 = hours12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours15);
        org.joda.time.Hours hours18 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours12);
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        org.joda.time.Hours hours24 = hours21.plus(8);
        org.joda.time.Hours hours25 = hours12.minus(hours24);
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod28 = hours27.toMutablePeriod();
        org.joda.time.Hours hours29 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours30 = hours27.minus(hours29);
        int int31 = hours26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours29);
        org.joda.time.DurationFieldType durationFieldType32 = null;
        boolean boolean33 = hours26.isSupported(durationFieldType32);
        org.joda.time.Hours hours35 = hours26.minus((int) (short) -1);
        org.joda.time.Hours hours36 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod37 = hours36.toMutablePeriod();
        org.joda.time.Hours hours38 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours39 = hours36.minus(hours38);
        org.joda.time.Hours hours41 = hours38.plus(8);
        org.joda.time.Hours hours42 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType43 = null;
        int int44 = hours42.get(durationFieldType43);
        org.joda.time.DurationFieldType durationFieldType45 = hours42.getFieldType();
        boolean boolean46 = hours41.isSupported(durationFieldType45);
        int int47 = hours35.get(durationFieldType45);
        int int48 = hours24.get(durationFieldType45);
        int int49 = hours10.get(durationFieldType45);
        org.joda.time.Period period50 = hours10.toPeriod();
        org.joda.time.PeriodType periodType51 = hours10.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType52 = hours10.getFieldType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 8 + "'", int47 == 8);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-8) + "'", int49 == (-8));
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertNotNull(durationFieldType52);
    }

    @Test
    public void test0813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0813");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours6 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        org.joda.time.Hours hours7 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod8 = hours7.toMutablePeriod();
        org.joda.time.Hours hours9 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours10 = hours7.minus(hours9);
        org.joda.time.DurationFieldType durationFieldType11 = null;
        int int12 = hours7.get(durationFieldType11);
        org.joda.time.Hours hours14 = hours7.minus((int) (short) 0);
        org.joda.time.Hours hours15 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = hours15.get(durationFieldType16);
        org.joda.time.DurationFieldType durationFieldType18 = hours15.getFieldType();
        int int19 = hours14.get(durationFieldType18);
        org.joda.time.Hours hours20 = org.joda.time.Hours.ONE;
        int int21 = hours20.getHours();
        org.joda.time.Hours hours23 = hours20.plus(10);
        org.joda.time.Hours hours24 = hours14.minus(hours23);
        org.joda.time.Hours hours25 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours24);
        boolean boolean26 = hours0.isLessThan(hours25);
        org.joda.time.Hours hours27 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours28 = hours27.negated();
        org.joda.time.DurationFieldType durationFieldType29 = hours27.getFieldType();
        java.lang.String str30 = hours27.toString();
        org.joda.time.Hours hours31 = org.joda.time.Hours.ZERO;
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours33 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod34 = hours33.toMutablePeriod();
        org.joda.time.Hours hours35 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours36 = hours33.minus(hours35);
        int int37 = hours32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours35);
        org.joda.time.MutablePeriod mutablePeriod38 = hours32.toMutablePeriod();
        org.joda.time.Hours hours40 = hours32.minus(7);
        org.joda.time.Hours hours41 = hours31.minus(hours32);
        org.joda.time.Hours hours42 = hours27.minus(hours32);
        org.joda.time.Hours hours43 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours27);
        org.joda.time.Hours hours44 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours45 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod46 = hours45.toMutablePeriod();
        org.joda.time.Hours hours47 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours48 = hours45.minus(hours47);
        int int49 = hours44.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours47);
        org.joda.time.DurationFieldType durationFieldType50 = null;
        boolean boolean51 = hours44.isSupported(durationFieldType50);
        org.joda.time.Hours hours53 = hours44.minus((int) (short) -1);
        org.joda.time.Hours hours54 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod55 = hours54.toMutablePeriod();
        org.joda.time.Hours hours56 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours57 = hours54.minus(hours56);
        org.joda.time.Hours hours59 = hours56.plus(8);
        org.joda.time.Hours hours60 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType61 = null;
        int int62 = hours60.get(durationFieldType61);
        org.joda.time.DurationFieldType durationFieldType63 = hours60.getFieldType();
        boolean boolean64 = hours59.isSupported(durationFieldType63);
        int int65 = hours53.get(durationFieldType63);
        org.joda.time.Hours hours66 = hours27.minus(hours53);
        org.joda.time.Hours hours67 = hours0.plus(hours27);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 7 + "'", int19 == 7);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "PT3H" + "'", str30, "PT3H");
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(mutablePeriod46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(mutablePeriod55);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(durationFieldType63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 8 + "'", int65 == 8);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertNotNull(hours67);
    }

    @Test
    public void test0814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0814");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours12 = hours0.multipliedBy((int) '4');
        org.joda.time.Period period13 = hours0.toPeriod();
        org.joda.time.PeriodType periodType14 = hours0.getPeriodType();
        org.joda.time.Hours hours15 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod17 = hours16.toMutablePeriod();
        org.joda.time.Hours hours18 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours19 = hours16.minus(hours18);
        int int20 = hours15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours18);
        org.joda.time.DurationFieldType durationFieldType21 = null;
        boolean boolean22 = hours15.isSupported(durationFieldType21);
        org.joda.time.Hours hours24 = hours15.minus((int) (short) -1);
        org.joda.time.PeriodType periodType25 = hours15.getPeriodType();
        int int26 = hours15.getHours();
        org.joda.time.DurationFieldType durationFieldType28 = hours15.getFieldType((int) (short) 0);
        int int29 = hours15.size();
        int int30 = hours15.size();
        org.joda.time.DurationFieldType durationFieldType31 = hours15.getFieldType();
        boolean boolean32 = hours0.equals((java.lang.Object) hours15);
        org.joda.time.Hours hours33 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours34 = hours33.negated();
        org.joda.time.Hours hours35 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours36 = org.joda.time.Hours.EIGHT;
        int int38 = hours36.getValue((int) (short) 0);
        org.joda.time.Hours hours39 = hours35.minus(hours36);
        org.joda.time.Hours hours40 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType41 = null;
        int int42 = hours40.get(durationFieldType41);
        org.joda.time.DurationFieldType durationFieldType43 = hours40.getFieldType();
        int int44 = hours35.get(durationFieldType43);
        boolean boolean45 = hours33.isSupported(durationFieldType43);
        int int46 = hours33.getHours();
        org.joda.time.Hours hours48 = hours33.dividedBy((int) ' ');
        org.joda.time.Hours hours49 = hours0.minus(hours48);
        org.joda.time.Duration duration50 = hours49.toStandardDuration();
        org.joda.time.Hours hours52 = hours49.multipliedBy(108);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 7 + "'", int26 == 7);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 8 + "'", int38 == 8);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(durationFieldType43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 7 + "'", int44 == 7);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 3 + "'", int46 == 3);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertNotNull(hours52);
    }

    @Test
    public void test0815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0815");
        org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT8H");
        org.joda.time.Hours hours3 = hours1.dividedBy(3);
        org.joda.time.Hours hours5 = org.joda.time.Hours.parseHours("PT8H");
        org.joda.time.Duration duration6 = hours5.toStandardDuration();
        org.joda.time.Hours hours7 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours11 = hours8.minus(hours10);
        int int12 = hours7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours10);
        org.joda.time.DurationFieldType durationFieldType13 = null;
        boolean boolean14 = hours7.isSupported(durationFieldType13);
        org.joda.time.Hours hours15 = hours5.minus(hours7);
        org.joda.time.Hours hours17 = hours7.plus(10);
        boolean boolean18 = hours3.equals((java.lang.Object) 10);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test0816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0816");
        org.joda.time.Hours hours0 = org.joda.time.Hours.TWO;
        org.joda.time.Hours hours1 = org.joda.time.Hours.MAX_VALUE;
        int int2 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours1);
        org.joda.time.Hours hours3 = hours1.negated();
        org.joda.time.Hours hours4 = hours3.negated();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Hours hours6 = hours3.multipliedBy((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: -2147483647 * 35");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
    }

    @Test
    public void test0817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0817");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours7 = hours3.multipliedBy(0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period9 = hours8.toPeriod();
        org.joda.time.Hours hours11 = hours8.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod12 = hours11.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.THREE;
        org.joda.time.Period period14 = hours13.toPeriod();
        org.joda.time.Hours hours16 = hours13.plus((int) (byte) -1);
        org.joda.time.Hours hours17 = hours11.minus(hours13);
        org.joda.time.DurationFieldType durationFieldType18 = hours17.getFieldType();
        org.joda.time.Hours hours19 = hours7.plus(hours17);
        org.joda.time.Hours hours21 = hours19.multipliedBy((int) (short) 100);
        org.joda.time.Hours hours23 = hours19.plus(56);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours23);
    }

    @Test
    public void test0818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0818");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours11 = hours8.minus(hours10);
        org.joda.time.DurationFieldType durationFieldType12 = null;
        boolean boolean13 = hours10.isSupported(durationFieldType12);
        org.joda.time.Hours hours14 = hours7.minus(hours10);
        org.joda.time.Hours hours15 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod17 = hours16.toMutablePeriod();
        org.joda.time.Hours hours18 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours19 = hours16.minus(hours18);
        int int20 = hours15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours18);
        org.joda.time.DurationFieldType durationFieldType21 = null;
        boolean boolean22 = hours15.isSupported(durationFieldType21);
        org.joda.time.Hours hours24 = hours15.minus((int) (short) -1);
        org.joda.time.PeriodType periodType25 = hours15.getPeriodType();
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        int int28 = hours26.getValue((int) (short) 0);
        org.joda.time.Hours hours29 = hours15.minus(hours26);
        org.joda.time.Hours hours31 = hours15.plus(7);
        org.joda.time.Hours hours32 = hours14.minus(hours31);
        org.joda.time.Hours hours33 = hours32.negated();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 8 + "'", int28 == 8);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
    }

    @Test
    public void test0819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0819");
        org.joda.time.Hours hours0 = org.joda.time.Hours.TWO;
        org.joda.time.Hours hours1 = org.joda.time.Hours.MAX_VALUE;
        int int2 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours1);
        org.joda.time.Hours hours3 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours3.get(durationFieldType4);
        org.joda.time.DurationFieldType durationFieldType6 = hours3.getFieldType();
        org.joda.time.DurationFieldType durationFieldType7 = hours3.getFieldType();
        boolean boolean8 = hours1.isSupported(durationFieldType7);
        org.joda.time.Period period9 = hours1.toPeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) period9);
        org.joda.time.Hours hours11 = org.joda.time.Hours.ZERO;
        org.joda.time.MutablePeriod mutablePeriod12 = hours11.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours14 = org.joda.time.Hours.EIGHT;
        int int16 = hours14.getValue((int) (short) 0);
        org.joda.time.Hours hours17 = hours13.minus(hours14);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        org.joda.time.Hours hours23 = hours20.plus(8);
        org.joda.time.Hours hours24 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType25 = null;
        int int26 = hours24.get(durationFieldType25);
        org.joda.time.DurationFieldType durationFieldType27 = hours24.getFieldType();
        boolean boolean28 = hours23.isSupported(durationFieldType27);
        boolean boolean29 = hours13.isSupported(durationFieldType27);
        boolean boolean30 = hours11.isSupported(durationFieldType27);
        org.joda.time.Hours hours32 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours34 = hours32.multipliedBy((int) (byte) 100);
        org.joda.time.Hours hours35 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours36 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod37 = hours36.toMutablePeriod();
        org.joda.time.Hours hours38 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours39 = hours36.minus(hours38);
        int int40 = hours35.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours38);
        org.joda.time.DurationFieldType durationFieldType41 = null;
        boolean boolean42 = hours35.isSupported(durationFieldType41);
        org.joda.time.Hours hours44 = hours35.minus((int) (short) -1);
        org.joda.time.PeriodType periodType45 = hours35.getPeriodType();
        org.joda.time.Hours hours46 = org.joda.time.Hours.EIGHT;
        int int48 = hours46.getValue((int) (short) 0);
        org.joda.time.Hours hours49 = hours35.minus(hours46);
        org.joda.time.Hours hours50 = hours32.plus(hours49);
        boolean boolean51 = hours11.equals((java.lang.Object) hours49);
        boolean boolean52 = hours10.equals((java.lang.Object) hours49);
        org.joda.time.MutablePeriod mutablePeriod53 = hours10.toMutablePeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 8 + "'", int16 == 8);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 8 + "'", int48 == 8);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(mutablePeriod53);
    }

    @Test
    public void test0820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0820");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.Hours hours10 = hours9.negated();
        org.joda.time.Period period11 = hours9.toPeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.ONE;
        int int13 = hours12.getHours();
        org.joda.time.Hours hours15 = hours12.plus(10);
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod17 = hours16.toMutablePeriod();
        org.joda.time.Hours hours18 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours19 = hours16.minus(hours18);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = hours16.get(durationFieldType20);
        org.joda.time.Hours hours23 = hours16.multipliedBy(1);
        boolean boolean24 = hours12.isGreaterThan(hours16);
        int int25 = hours12.size();
        org.joda.time.Hours hours27 = hours12.plus((int) (short) 0);
        org.joda.time.Hours hours28 = hours9.plus(hours27);
        org.joda.time.Hours hours30 = hours27.multipliedBy((-8));
        int int31 = hours27.getHours();
        org.joda.time.Hours hours33 = hours27.plus((int) '#');
        int int35 = hours33.getValue(0);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 36 + "'", int35 == 36);
    }

    @Test
    public void test0821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0821");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        boolean boolean5 = hours2.isSupported(durationFieldType4);
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        int int9 = hours7.getValue((int) (short) 0);
        org.joda.time.Hours hours10 = hours6.minus(hours7);
        boolean boolean11 = hours2.isLessThan(hours7);
        org.joda.time.Hours hours12 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = hours12.get(durationFieldType13);
        org.joda.time.DurationFieldType durationFieldType15 = hours12.getFieldType();
        boolean boolean16 = hours2.isSupported(durationFieldType15);
        org.joda.time.MutablePeriod mutablePeriod17 = hours2.toMutablePeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8 + "'", int9 == 8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(mutablePeriod17);
    }

    @Test
    public void test0822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0822");
        org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT6H");
        org.junit.Assert.assertNotNull(hours1);
    }

    @Test
    public void test0823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0823");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours5.get(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType8 = hours5.getFieldType();
        int int9 = hours0.get(durationFieldType8);
        org.joda.time.Hours hours11 = hours0.multipliedBy(7);
        org.joda.time.Hours hours13 = hours11.minus((-2));
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod15 = hours14.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours17 = hours14.minus(hours16);
        org.joda.time.Hours hours18 = hours16.negated();
        org.joda.time.DurationFieldType durationFieldType19 = hours18.getFieldType();
        org.joda.time.Hours hours20 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod21 = hours20.toMutablePeriod();
        org.joda.time.Hours hours22 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours23 = hours20.minus(hours22);
        org.joda.time.Hours hours24 = hours22.negated();
        int int25 = hours24.getHours();
        int int26 = hours18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours24);
        org.joda.time.Hours hours27 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours18);
        org.joda.time.Hours hours28 = hours11.minus(hours18);
        org.joda.time.Hours hours30 = hours18.minus(0);
        org.joda.time.Hours hours31 = hours18.negated();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7 + "'", int9 == 7);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-8) + "'", int25 == (-8));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
    }

    @Test
    public void test0824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0824");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        int int1 = hours0.getHours();
        org.joda.time.Hours hours3 = hours0.plus(10);
        int int4 = hours0.size();
        org.joda.time.Hours hours5 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours6 = hours5.negated();
        org.joda.time.DurationFieldType durationFieldType7 = hours5.getFieldType();
        boolean boolean8 = hours0.isLessThan(hours5);
        org.joda.time.Hours hours9 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        int int14 = hours9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours12);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = hours9.isSupported(durationFieldType15);
        org.joda.time.PeriodType periodType17 = hours9.getPeriodType();
        org.joda.time.Hours hours18 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        int int22 = hours20.getValue((int) (short) 0);
        org.joda.time.Hours hours23 = hours19.minus(hours20);
        org.joda.time.Hours hours24 = hours18.minus(hours19);
        int int25 = hours18.size();
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours27 = org.joda.time.Hours.EIGHT;
        int int29 = hours27.getValue((int) (short) 0);
        org.joda.time.Hours hours30 = hours26.minus(hours27);
        boolean boolean32 = hours27.equals((java.lang.Object) (short) 10);
        int int33 = hours18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours27);
        org.joda.time.Hours hours34 = hours9.plus(hours18);
        org.joda.time.Hours hours35 = hours0.minus(hours9);
        org.joda.time.Hours hours36 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours37 = org.joda.time.Hours.EIGHT;
        int int39 = hours37.getValue((int) (short) 0);
        org.joda.time.Hours hours40 = hours36.minus(hours37);
        org.joda.time.Hours hours41 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType42 = null;
        int int43 = hours41.get(durationFieldType42);
        org.joda.time.DurationFieldType durationFieldType44 = hours41.getFieldType();
        int int45 = hours36.get(durationFieldType44);
        org.joda.time.Hours hours47 = hours36.multipliedBy(7);
        org.joda.time.Hours hours49 = hours47.minus((-2));
        org.joda.time.Hours hours50 = hours9.plus(hours49);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 8 + "'", int22 == 8);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 8 + "'", int29 == 8);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 8 + "'", int39 == 8);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 7 + "'", int45 == 7);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours50);
    }

    @Test
    public void test0825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0825");
        org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT-1H");
        org.joda.time.Hours hours3 = hours1.dividedBy(16);
        org.joda.time.DurationFieldType durationFieldType4 = hours3.getFieldType();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(durationFieldType4);
    }

    @Test
    public void test0826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0826");
        org.joda.time.Hours hours0 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours1 = hours0.negated();
        org.joda.time.Period period2 = hours1.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod3 = hours1.toMutablePeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
    }

    @Test
    public void test0827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0827");
        org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT8H");
        org.joda.time.Hours hours3 = hours1.dividedBy(3);
        // The following exception was thrown during execution in test generation
        try {
            int int5 = hours3.getValue(3);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours3);
    }

    @Test
    public void test0828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0828");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours7 = hours0.minus((int) 'a');
        org.joda.time.Hours hours8 = org.joda.time.Hours.ZERO;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        boolean boolean10 = hours7.equals((java.lang.Object) hours8);
        org.joda.time.Hours hours12 = hours8.multipliedBy((int) (short) 100);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        int int17 = hours15.getValue((int) (short) 0);
        org.joda.time.Hours hours18 = hours14.minus(hours15);
        org.joda.time.Hours hours19 = hours13.minus(hours14);
        java.lang.String str20 = hours14.toString();
        org.joda.time.DurationFieldType durationFieldType21 = hours14.getFieldType();
        boolean boolean22 = hours8.isSupported(durationFieldType21);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 8 + "'", int17 == 8);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "PT7H" + "'", str20, "PT7H");
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test0829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0829");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        boolean boolean22 = hours16.isGreaterThan(hours20);
        org.joda.time.Hours hours23 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours20);
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours25 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod26 = hours25.toMutablePeriod();
        org.joda.time.Hours hours27 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours28 = hours25.minus(hours27);
        int int29 = hours24.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours27);
        org.joda.time.MutablePeriod mutablePeriod30 = hours24.toMutablePeriod();
        org.joda.time.Hours hours32 = hours24.minus(7);
        boolean boolean33 = hours20.isLessThan(hours32);
        org.joda.time.MutablePeriod mutablePeriod34 = hours32.toMutablePeriod();
        org.joda.time.Hours hours35 = hours32.negated();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(hours35);
    }

    @Test
    public void test0830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0830");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod13 = hours12.toMutablePeriod();
        org.joda.time.Hours hours14 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours15 = hours12.minus(hours14);
        int int16 = hours11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours14);
        org.joda.time.Hours hours18 = hours14.multipliedBy(0);
        int int19 = hours6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours18);
        org.joda.time.Hours hours20 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod21 = hours20.toMutablePeriod();
        org.joda.time.Hours hours22 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours23 = hours20.minus(hours22);
        org.joda.time.Duration duration24 = hours20.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod25 = hours20.toMutablePeriod();
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        int int28 = hours26.getValue((int) (short) 0);
        java.lang.String str29 = hours26.toString();
        boolean boolean30 = hours20.isGreaterThan(hours26);
        org.joda.time.Hours hours32 = hours26.minus(10);
        org.joda.time.Hours hours33 = hours26.negated();
        org.joda.time.MutablePeriod mutablePeriod34 = hours33.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType35 = hours33.getFieldType();
        boolean boolean36 = hours6.isSupported(durationFieldType35);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 8 + "'", int28 == 8);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT8H" + "'", str29, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    }

    @Test
    public void test0831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0831");
        org.joda.time.Hours hours0 = org.joda.time.Hours.MIN_VALUE;
        org.joda.time.Hours hours2 = hours0.plus(0);
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours4 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod5 = hours4.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours7 = hours4.minus(hours6);
        int int8 = hours3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours6);
        org.joda.time.DurationFieldType durationFieldType9 = null;
        boolean boolean10 = hours3.isSupported(durationFieldType9);
        org.joda.time.Hours hours12 = hours3.minus((int) (short) -1);
        org.joda.time.PeriodType periodType13 = hours3.getPeriodType();
        int int14 = hours3.getHours();
        org.joda.time.DurationFieldType durationFieldType16 = hours3.getFieldType((int) (short) 0);
        boolean boolean17 = hours2.isSupported(durationFieldType16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.MIN_VALUE;
        org.joda.time.Hours hours20 = hours18.plus(0);
        org.joda.time.Hours hours21 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours22 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod23 = hours22.toMutablePeriod();
        org.joda.time.Hours hours24 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours25 = hours22.minus(hours24);
        int int26 = hours21.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours24);
        org.joda.time.DurationFieldType durationFieldType27 = null;
        boolean boolean28 = hours21.isSupported(durationFieldType27);
        org.joda.time.Hours hours30 = hours21.minus((int) (short) -1);
        org.joda.time.PeriodType periodType31 = hours21.getPeriodType();
        int int32 = hours21.getHours();
        org.joda.time.DurationFieldType durationFieldType34 = hours21.getFieldType((int) (short) 0);
        boolean boolean35 = hours20.isSupported(durationFieldType34);
        int int36 = hours2.get(durationFieldType34);
        org.joda.time.Duration duration37 = hours2.toStandardDuration();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 7 + "'", int14 == 7);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(mutablePeriod23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 7 + "'", int32 == 7);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-2147483648) + "'", int36 == (-2147483648));
        org.junit.Assert.assertNotNull(duration37);
    }

    @Test
    public void test0832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0832");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = hours8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = hours8.getFieldType();
        int int12 = hours7.get(durationFieldType11);
        org.joda.time.Hours hours13 = hours7.negated();
        int int15 = hours13.getValue((int) (short) 0);
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod17 = hours16.toMutablePeriod();
        org.joda.time.Hours hours18 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours19 = hours16.minus(hours18);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = hours16.get(durationFieldType20);
        org.joda.time.Hours hours23 = hours16.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval24 = null;
        org.joda.time.Hours hours25 = org.joda.time.Hours.hoursIn(readableInterval24);
        int int26 = hours23.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours25);
        org.joda.time.MutablePeriod mutablePeriod27 = hours25.toMutablePeriod();
        org.joda.time.Hours hours28 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) mutablePeriod27);
        boolean boolean29 = hours13.isGreaterThan(hours28);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 7 + "'", int12 == 7);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-7) + "'", int15 == (-7));
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test0833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0833");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.PeriodType periodType10 = hours0.getPeriodType();
        int int11 = hours0.getHours();
        int int12 = hours0.size();
        org.joda.time.Hours hours14 = hours0.plus(5);
        org.joda.time.Hours hours15 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        int int18 = hours16.getValue((int) (short) 0);
        org.joda.time.Hours hours19 = hours15.minus(hours16);
        int int20 = hours19.getHours();
        org.joda.time.Hours hours21 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours22 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType23 = null;
        int int24 = hours22.get(durationFieldType23);
        boolean boolean25 = hours21.equals((java.lang.Object) durationFieldType23);
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod28 = hours27.toMutablePeriod();
        org.joda.time.Hours hours29 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours30 = hours27.minus(hours29);
        int int31 = hours26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours29);
        org.joda.time.Hours hours33 = hours29.multipliedBy(0);
        org.joda.time.Hours hours34 = hours21.plus(hours33);
        org.joda.time.DurationFieldType durationFieldType35 = hours34.getFieldType();
        org.joda.time.Hours hours36 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours37 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod38 = hours37.toMutablePeriod();
        org.joda.time.Hours hours39 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours40 = hours37.minus(hours39);
        int int41 = hours36.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours39);
        org.joda.time.Hours hours42 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours36);
        org.joda.time.DurationFieldType durationFieldType43 = hours36.getFieldType();
        int int44 = hours34.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours36);
        org.joda.time.Hours hours45 = hours19.minus(hours34);
        org.joda.time.Hours hours46 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod47 = hours46.toMutablePeriod();
        org.joda.time.Hours hours48 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours49 = hours46.minus(hours48);
        org.joda.time.Duration duration50 = hours46.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod51 = hours46.toMutablePeriod();
        org.joda.time.Hours hours52 = org.joda.time.Hours.EIGHT;
        int int54 = hours52.getValue((int) (short) 0);
        java.lang.String str55 = hours52.toString();
        boolean boolean56 = hours46.isGreaterThan(hours52);
        org.joda.time.Hours hours58 = hours52.minus(10);
        org.joda.time.Hours hours59 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours60 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod61 = hours60.toMutablePeriod();
        org.joda.time.Hours hours62 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours63 = hours60.minus(hours62);
        int int64 = hours59.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours62);
        org.joda.time.Hours hours65 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours59);
        org.joda.time.DurationFieldType durationFieldType66 = null;
        int int67 = hours59.get(durationFieldType66);
        boolean boolean68 = hours58.equals((java.lang.Object) hours59);
        java.lang.String str69 = hours58.toString();
        org.joda.time.DurationFieldType durationFieldType71 = hours58.getFieldType(0);
        int int72 = hours45.get(durationFieldType71);
        int int73 = hours0.get(durationFieldType71);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 7 + "'", int11 == 7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 8 + "'", int18 == 8);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(durationFieldType43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(mutablePeriod47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertNotNull(mutablePeriod51);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 8 + "'", int54 == 8);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "PT8H" + "'", str55, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertNotNull(mutablePeriod61);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "PT-2H" + "'", str69, "PT-2H");
        org.junit.Assert.assertNotNull(durationFieldType71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-4) + "'", int72 == (-4));
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 7 + "'", int73 == 7);
    }

    @Test
    public void test0834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0834");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours12 = hours6.minus(10);
        java.lang.String str13 = hours12.toString();
        org.joda.time.Hours hours15 = hours12.minus(7);
        org.joda.time.Hours hours17 = hours12.dividedBy(12);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        int int23 = hours18.get(durationFieldType22);
        org.joda.time.Hours hours25 = hours18.multipliedBy(1);
        org.joda.time.Hours hours26 = org.joda.time.Hours.ONE;
        int int27 = hours25.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours26);
        org.joda.time.MutablePeriod mutablePeriod28 = hours25.toMutablePeriod();
        boolean boolean29 = hours17.equals((java.lang.Object) hours25);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "PT-2H" + "'", str13, "PT-2H");
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test0835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0835");
        org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT8H");
        org.joda.time.Duration duration2 = hours1.toStandardDuration();
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours4 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod5 = hours4.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours7 = hours4.minus(hours6);
        int int8 = hours3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours6);
        org.joda.time.DurationFieldType durationFieldType9 = null;
        boolean boolean10 = hours3.isSupported(durationFieldType9);
        org.joda.time.Hours hours11 = hours1.minus(hours3);
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod14 = hours13.toMutablePeriod();
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours16 = hours13.minus(hours15);
        int int17 = hours12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours15);
        org.joda.time.DurationFieldType durationFieldType18 = null;
        boolean boolean19 = hours12.isSupported(durationFieldType18);
        org.joda.time.Hours hours21 = hours12.minus((int) (short) -1);
        org.joda.time.Hours hours22 = hours21.negated();
        org.joda.time.DurationFieldType durationFieldType23 = hours21.getFieldType();
        int int24 = hours1.get(durationFieldType23);
        java.lang.String str25 = hours1.toString();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 8 + "'", int24 == 8);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "PT8H" + "'", str25, "PT8H");
    }

    @Test
    public void test0836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0836");
        org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT8H");
        org.joda.time.Duration duration2 = hours1.toStandardDuration();
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours4 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod5 = hours4.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours7 = hours4.minus(hours6);
        int int8 = hours3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours6);
        org.joda.time.DurationFieldType durationFieldType9 = null;
        boolean boolean10 = hours3.isSupported(durationFieldType9);
        org.joda.time.Hours hours11 = hours1.minus(hours3);
        java.lang.Object obj12 = null;
        boolean boolean13 = hours11.equals(obj12);
        org.joda.time.Hours hours15 = hours11.minus((int) (byte) -1);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(hours15);
    }

    @Test
    public void test0837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0837");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = hours8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = hours8.getFieldType();
        int int12 = hours7.get(durationFieldType11);
        org.joda.time.Hours hours13 = org.joda.time.Hours.ONE;
        int int14 = hours13.getHours();
        org.joda.time.Hours hours16 = hours13.plus(10);
        org.joda.time.Hours hours17 = hours7.minus(hours16);
        org.joda.time.Hours hours19 = hours7.dividedBy(6);
        org.joda.time.ReadableInterval readableInterval20 = null;
        org.joda.time.Hours hours21 = org.joda.time.Hours.hoursIn(readableInterval20);
        org.joda.time.DurationFieldType durationFieldType22 = hours21.getFieldType();
        org.joda.time.Hours hours24 = hours21.dividedBy((int) (byte) 10);
        org.joda.time.Hours hours26 = hours21.plus((int) (byte) 1);
        org.joda.time.Hours hours27 = hours26.negated();
        int int28 = hours19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours26);
        org.joda.time.Hours hours29 = org.joda.time.Hours.ONE;
        org.joda.time.Hours hours31 = hours29.plus(1);
        org.joda.time.Hours hours33 = hours31.minus((int) (byte) 10);
        org.joda.time.Hours hours34 = hours31.negated();
        org.joda.time.Hours hours36 = org.joda.time.Hours.parseHours("PT7H");
        org.joda.time.PeriodType periodType37 = hours36.getPeriodType();
        int int38 = hours34.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours36);
        int int39 = hours19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours36);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 7 + "'", int12 == 7);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
    }

    @Test
    public void test0838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0838");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((int) ' ');
        int int3 = hours1.getValue(0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 32 + "'", int3 == 32);
    }

    @Test
    public void test0839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0839");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours5.get(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType8 = hours5.getFieldType();
        int int9 = hours0.get(durationFieldType8);
        org.joda.time.Hours hours11 = hours0.multipliedBy(7);
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod14 = hours13.toMutablePeriod();
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours16 = hours13.minus(hours15);
        int int17 = hours12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours15);
        org.joda.time.DurationFieldType durationFieldType18 = null;
        boolean boolean19 = hours12.isSupported(durationFieldType18);
        org.joda.time.Hours hours21 = hours12.minus((int) (short) -1);
        org.joda.time.PeriodType periodType22 = hours12.getPeriodType();
        org.joda.time.Hours hours23 = org.joda.time.Hours.EIGHT;
        int int25 = hours23.getValue((int) (short) 0);
        org.joda.time.Hours hours26 = hours12.minus(hours23);
        org.joda.time.Hours hours28 = hours26.minus((-1));
        boolean boolean29 = hours11.equals((java.lang.Object) hours28);
        org.joda.time.Period period30 = hours11.toPeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7 + "'", int9 == 7);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 8 + "'", int25 == 8);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(period30);
    }

    @Test
    public void test0840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0840");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.PeriodType periodType10 = hours0.getPeriodType();
        org.joda.time.Hours hours11 = org.joda.time.Hours.EIGHT;
        int int13 = hours11.getValue((int) (short) 0);
        org.joda.time.Hours hours14 = hours0.minus(hours11);
        org.joda.time.Hours hours16 = hours0.plus(7);
        org.joda.time.Hours hours17 = hours0.negated();
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        int int23 = hours18.get(durationFieldType22);
        org.joda.time.Hours hours25 = hours18.minus((int) (short) 0);
        org.joda.time.Hours hours26 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = hours26.get(durationFieldType27);
        org.joda.time.DurationFieldType durationFieldType29 = hours26.getFieldType();
        int int30 = hours25.get(durationFieldType29);
        int int31 = hours0.get(durationFieldType29);
        org.joda.time.Hours hours32 = null;
        org.joda.time.Hours hours33 = hours0.plus(hours32);
        org.joda.time.Hours hours34 = org.joda.time.Hours.ONE;
        int int35 = hours34.getHours();
        org.joda.time.Hours hours37 = hours34.plus(10);
        org.joda.time.Hours hours38 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod39 = hours38.toMutablePeriod();
        org.joda.time.Hours hours40 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours41 = hours38.minus(hours40);
        org.joda.time.DurationFieldType durationFieldType42 = null;
        int int43 = hours38.get(durationFieldType42);
        org.joda.time.Hours hours45 = hours38.multipliedBy(1);
        boolean boolean46 = hours34.isGreaterThan(hours38);
        org.joda.time.Hours hours47 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours48 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours49 = org.joda.time.Hours.EIGHT;
        int int51 = hours49.getValue((int) (short) 0);
        org.joda.time.Hours hours52 = hours48.minus(hours49);
        org.joda.time.Hours hours53 = hours47.minus(hours48);
        int int54 = hours47.size();
        org.joda.time.Hours hours55 = hours38.plus(hours47);
        boolean boolean56 = hours33.isGreaterThan(hours38);
        org.joda.time.DurationFieldType durationFieldType57 = hours33.getFieldType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 8 + "'", int13 == 8);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 7 + "'", int30 == 7);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 7 + "'", int31 == 7);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(mutablePeriod39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 8 + "'", int51 == 8);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(durationFieldType57);
    }

    @Test
    public void test0841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0841");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.PeriodType periodType10 = hours0.getPeriodType();
        int int11 = hours0.getHours();
        org.joda.time.DurationFieldType durationFieldType13 = hours0.getFieldType((int) (short) 0);
        org.joda.time.Hours hours15 = hours0.plus((int) (short) 1);
        org.joda.time.Duration duration16 = hours15.toStandardDuration();
        org.joda.time.Hours hours17 = org.joda.time.Hours.EIGHT;
        int int18 = hours17.size();
        org.joda.time.Hours hours20 = hours17.dividedBy(100);
        org.joda.time.Hours hours21 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours22 = org.joda.time.Hours.EIGHT;
        int int24 = hours22.getValue((int) (short) 0);
        org.joda.time.Hours hours25 = hours21.minus(hours22);
        org.joda.time.Hours hours26 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours28 = org.joda.time.Hours.EIGHT;
        int int30 = hours28.getValue((int) (short) 0);
        org.joda.time.Hours hours31 = hours27.minus(hours28);
        org.joda.time.Hours hours32 = hours26.minus(hours27);
        int int33 = hours26.size();
        org.joda.time.Duration duration34 = hours26.toStandardDuration();
        boolean boolean35 = hours22.isGreaterThan(hours26);
        org.joda.time.MutablePeriod mutablePeriod36 = hours26.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType37 = hours26.getFieldType();
        org.joda.time.Hours hours38 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period39 = hours38.toPeriod();
        org.joda.time.Hours hours41 = hours38.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod42 = hours41.toMutablePeriod();
        org.joda.time.Hours hours43 = org.joda.time.Hours.THREE;
        org.joda.time.Period period44 = hours43.toPeriod();
        org.joda.time.Hours hours46 = hours43.plus((int) (byte) -1);
        org.joda.time.Hours hours47 = hours41.minus(hours43);
        org.joda.time.Hours hours48 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod49 = hours48.toMutablePeriod();
        org.joda.time.Hours hours50 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours51 = hours48.minus(hours50);
        org.joda.time.DurationFieldType durationFieldType52 = null;
        int int53 = hours48.get(durationFieldType52);
        org.joda.time.Hours hours55 = hours48.minus((int) (short) 0);
        org.joda.time.Hours hours56 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType57 = null;
        int int58 = hours56.get(durationFieldType57);
        org.joda.time.DurationFieldType durationFieldType59 = hours56.getFieldType();
        int int60 = hours55.get(durationFieldType59);
        int int61 = hours43.get(durationFieldType59);
        int int62 = hours26.get(durationFieldType59);
        boolean boolean63 = hours17.isLessThan(hours26);
        org.joda.time.Hours hours65 = hours26.dividedBy((int) (short) 1);
        org.joda.time.Hours hours66 = hours15.minus(hours65);
        org.joda.time.MutablePeriod mutablePeriod67 = hours65.toMutablePeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 7 + "'", int11 == 7);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 8 + "'", int24 == 8);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 8 + "'", int30 == 8);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(mutablePeriod36);
        org.junit.Assert.assertNotNull(durationFieldType37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(mutablePeriod49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(durationFieldType59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 7 + "'", int60 == 7);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 3 + "'", int61 == 3);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 6 + "'", int62 == 6);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertNotNull(mutablePeriod67);
    }

    @Test
    public void test0842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0842");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        org.joda.time.Hours hours9 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod10 = hours9.toMutablePeriod();
        org.joda.time.Hours hours11 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours12 = hours9.minus(hours11);
        org.joda.time.Hours hours13 = hours11.negated();
        int int14 = hours13.getHours();
        org.joda.time.Hours hours15 = hours8.plus(hours13);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Hours hours17 = hours8.dividedBy(0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: / by zero");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-8) + "'", int14 == (-8));
        org.junit.Assert.assertNotNull(hours15);
    }

    @Test
    public void test0843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0843");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        org.joda.time.Hours hours9 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        int int14 = hours9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours12);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = hours9.isSupported(durationFieldType15);
        org.joda.time.Hours hours18 = hours9.minus((int) (short) -1);
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        org.joda.time.Hours hours24 = hours21.plus(8);
        org.joda.time.Hours hours25 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType26 = null;
        int int27 = hours25.get(durationFieldType26);
        org.joda.time.DurationFieldType durationFieldType28 = hours25.getFieldType();
        boolean boolean29 = hours24.isSupported(durationFieldType28);
        int int30 = hours18.get(durationFieldType28);
        org.joda.time.Hours hours31 = hours0.plus(hours18);
        org.joda.time.Hours hours33 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours34 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod35 = hours34.toMutablePeriod();
        org.joda.time.Hours hours36 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours37 = hours34.minus(hours36);
        org.joda.time.DurationFieldType durationFieldType38 = null;
        int int39 = hours34.get(durationFieldType38);
        org.joda.time.Hours hours41 = hours34.minus((int) (short) 0);
        org.joda.time.Hours hours42 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod43 = hours42.toMutablePeriod();
        org.joda.time.Hours hours44 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours45 = hours42.minus(hours44);
        org.joda.time.DurationFieldType durationFieldType46 = null;
        boolean boolean47 = hours44.isSupported(durationFieldType46);
        org.joda.time.Hours hours48 = hours41.minus(hours44);
        org.joda.time.Hours hours49 = hours33.plus(hours48);
        org.joda.time.Hours hours50 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod51 = hours50.toMutablePeriod();
        org.joda.time.Hours hours52 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours53 = hours50.minus(hours52);
        boolean boolean54 = hours48.isGreaterThan(hours52);
        org.joda.time.DurationFieldType durationFieldType56 = hours48.getFieldType((int) (short) 0);
        boolean boolean57 = hours18.isSupported(durationFieldType56);
        int int58 = hours18.size();
        org.joda.time.Hours hours60 = hours18.multipliedBy((int) (byte) -1);
        org.joda.time.Hours hours62 = hours18.multipliedBy(15);
        java.lang.Class<?> wildcardClass63 = hours18.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 8 + "'", int30 == 8);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(mutablePeriod51);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(durationFieldType56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0844");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.multipliedBy((int) (short) 10);
        org.joda.time.Period period10 = hours0.toPeriod();
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod13 = hours12.toMutablePeriod();
        org.joda.time.Hours hours14 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours15 = hours12.minus(hours14);
        int int16 = hours11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours14);
        org.joda.time.Hours hours17 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours11);
        org.joda.time.Hours hours19 = hours17.multipliedBy((int) (byte) 10);
        boolean boolean20 = hours0.isLessThan(hours19);
        org.joda.time.Hours hours21 = org.joda.time.Hours.ONE;
        int int22 = hours21.getHours();
        org.joda.time.Hours hours24 = hours21.plus(10);
        org.joda.time.Hours hours25 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours26 = hours25.negated();
        org.joda.time.DurationFieldType durationFieldType27 = hours25.getFieldType();
        boolean boolean28 = hours21.equals((java.lang.Object) hours25);
        org.joda.time.Hours hours30 = hours21.minus((int) '4');
        org.joda.time.Hours hours31 = hours0.minus(hours30);
        org.joda.time.Hours hours33 = hours0.plus(5);
        org.joda.time.Hours hours35 = org.joda.time.Hours.hours(0);
        int int36 = hours35.size();
        org.joda.time.Hours hours37 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours38 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod39 = hours38.toMutablePeriod();
        org.joda.time.Hours hours40 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours41 = hours38.minus(hours40);
        int int42 = hours37.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours40);
        org.joda.time.DurationFieldType durationFieldType43 = null;
        boolean boolean44 = hours37.isSupported(durationFieldType43);
        org.joda.time.Hours hours46 = hours37.minus((int) (short) -1);
        org.joda.time.PeriodType periodType47 = hours37.getPeriodType();
        int int48 = hours37.getHours();
        org.joda.time.DurationFieldType durationFieldType50 = hours37.getFieldType((int) (short) 0);
        int int51 = hours35.get(durationFieldType50);
        org.joda.time.Hours hours52 = hours33.minus(hours35);
        org.joda.time.Period period53 = hours33.toPeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(mutablePeriod39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 7 + "'", int48 == 7);
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(period53);
    }

    @Test
    public void test0845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0845");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(100);
        org.joda.time.Period period2 = hours1.toPeriod();
        org.joda.time.Hours hours4 = hours1.minus(8);
        org.joda.time.Hours hours5 = org.joda.time.Hours.THREE;
        org.joda.time.Period period6 = hours5.toPeriod();
        org.joda.time.Hours hours8 = hours5.plus((int) (byte) -1);
        org.joda.time.Hours hours10 = hours8.minus((int) (byte) 100);
        boolean boolean11 = hours1.equals((java.lang.Object) hours10);
        org.joda.time.MutablePeriod mutablePeriod12 = hours1.toMutablePeriod();
        org.joda.time.Hours hours14 = org.joda.time.Hours.parseHours("PT16H");
        org.joda.time.Hours hours15 = hours1.minus(hours14);
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod18 = hours17.toMutablePeriod();
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours20 = hours17.minus(hours19);
        int int21 = hours16.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours19);
        org.joda.time.MutablePeriod mutablePeriod22 = hours16.toMutablePeriod();
        org.joda.time.Hours hours24 = hours16.minus(7);
        org.joda.time.Hours hours26 = hours16.minus(700);
        org.joda.time.Hours hours27 = hours15.plus(hours26);
        org.joda.time.Hours hours28 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod29 = hours28.toMutablePeriod();
        org.joda.time.Hours hours30 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours31 = hours28.minus(hours30);
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = hours28.get(durationFieldType32);
        org.joda.time.Hours hours35 = hours28.minus((int) (short) 0);
        org.joda.time.Hours hours36 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod37 = hours36.toMutablePeriod();
        org.joda.time.Hours hours38 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours39 = hours36.minus(hours38);
        org.joda.time.DurationFieldType durationFieldType40 = null;
        boolean boolean41 = hours38.isSupported(durationFieldType40);
        org.joda.time.Hours hours42 = hours35.minus(hours38);
        org.joda.time.Hours hours43 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod44 = hours43.toMutablePeriod();
        org.joda.time.Hours hours45 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours46 = hours43.minus(hours45);
        org.joda.time.Hours hours48 = hours45.plus(8);
        org.joda.time.Hours hours49 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType50 = null;
        int int51 = hours49.get(durationFieldType50);
        org.joda.time.DurationFieldType durationFieldType52 = hours49.getFieldType();
        boolean boolean53 = hours48.isSupported(durationFieldType52);
        org.joda.time.Hours hours54 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours55 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod56 = hours55.toMutablePeriod();
        org.joda.time.Hours hours57 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours58 = hours55.minus(hours57);
        int int59 = hours54.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours57);
        org.joda.time.DurationFieldType durationFieldType60 = null;
        boolean boolean61 = hours54.isSupported(durationFieldType60);
        org.joda.time.Hours hours63 = hours54.minus((int) (short) -1);
        org.joda.time.PeriodType periodType64 = hours54.getPeriodType();
        org.joda.time.Hours hours65 = org.joda.time.Hours.EIGHT;
        int int67 = hours65.getValue((int) (short) 0);
        org.joda.time.Hours hours68 = hours54.minus(hours65);
        org.joda.time.Hours hours69 = hours48.minus(hours68);
        org.joda.time.Hours hours71 = org.joda.time.Hours.parseHours("PT8H");
        boolean boolean72 = hours69.isLessThan(hours71);
        boolean boolean73 = hours42.isLessThan(hours71);
        org.joda.time.Hours hours75 = hours71.dividedBy(100);
        boolean boolean76 = hours26.isGreaterThan(hours75);
        org.joda.time.Hours hours78 = hours26.plus((-6));
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(mutablePeriod44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(mutablePeriod56);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertNotNull(periodType64);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 8 + "'", int67 == 8);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertNotNull(hours69);
        org.junit.Assert.assertNotNull(hours71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(hours75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(hours78);
    }

    @Test
    public void test0846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0846");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours12 = hours6.minus(10);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod15 = hours14.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours17 = hours14.minus(hours16);
        int int18 = hours13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours16);
        org.joda.time.Hours hours19 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours13);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = hours13.get(durationFieldType20);
        boolean boolean22 = hours12.equals((java.lang.Object) hours13);
        java.lang.String str23 = hours12.toString();
        org.joda.time.ReadableInterval readableInterval24 = null;
        org.joda.time.Hours hours25 = org.joda.time.Hours.hoursIn(readableInterval24);
        org.joda.time.DurationFieldType durationFieldType26 = hours25.getFieldType();
        org.joda.time.Hours hours28 = hours25.dividedBy((int) (byte) 10);
        org.joda.time.Hours hours30 = hours25.plus((int) (byte) 1);
        org.joda.time.Hours hours32 = hours25.dividedBy(100);
        int int33 = hours12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours32);
        org.joda.time.Hours hours34 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours32);
        org.joda.time.Period period35 = hours34.toPeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "PT-2H" + "'", str23, "PT-2H");
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(period35);
    }

    @Test
    public void test0847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0847");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Hours hours9 = org.joda.time.Hours.hoursIn(readableInterval8);
        int int10 = hours7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours9);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        int int14 = hours12.getValue((int) (short) 0);
        org.joda.time.Hours hours15 = hours11.minus(hours12);
        org.joda.time.Hours hours16 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = hours16.get(durationFieldType17);
        org.joda.time.DurationFieldType durationFieldType19 = hours16.getFieldType();
        int int20 = hours11.get(durationFieldType19);
        boolean boolean21 = hours9.isSupported(durationFieldType19);
        org.joda.time.PeriodType periodType22 = hours9.getPeriodType();
        org.joda.time.Hours hours23 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod24 = hours23.toMutablePeriod();
        org.joda.time.Hours hours25 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours26 = hours23.minus(hours25);
        org.joda.time.Duration duration27 = hours23.toStandardDuration();
        java.lang.String str28 = hours23.toString();
        org.joda.time.Hours hours30 = hours23.minus((-6));
        org.joda.time.Hours hours32 = hours23.multipliedBy(7);
        boolean boolean33 = hours9.isGreaterThan(hours32);
        org.joda.time.Hours hours34 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours35 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod36 = hours35.toMutablePeriod();
        org.joda.time.Hours hours37 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours38 = hours35.minus(hours37);
        int int39 = hours34.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours37);
        org.joda.time.DurationFieldType durationFieldType40 = null;
        boolean boolean41 = hours34.isSupported(durationFieldType40);
        org.joda.time.Hours hours43 = hours34.minus((int) (short) -1);
        org.joda.time.PeriodType periodType44 = hours34.getPeriodType();
        int int45 = hours34.getHours();
        org.joda.time.DurationFieldType durationFieldType47 = hours34.getFieldType((int) (short) 0);
        int int48 = hours34.size();
        int int49 = hours34.size();
        org.joda.time.Period period50 = hours34.toPeriod();
        org.joda.time.Hours hours51 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod52 = hours51.toMutablePeriod();
        org.joda.time.Hours hours53 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours54 = hours51.minus(hours53);
        boolean boolean55 = hours34.isGreaterThan(hours53);
        org.joda.time.Hours hours56 = org.joda.time.Hours.ONE;
        org.joda.time.Hours hours58 = hours56.plus(1);
        org.joda.time.Hours hours60 = hours56.dividedBy((int) (byte) -1);
        int int61 = hours56.size();
        int int62 = hours53.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours56);
        org.joda.time.Hours hours64 = hours53.dividedBy(100);
        boolean boolean65 = hours9.equals((java.lang.Object) hours53);
        int int66 = hours53.size();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 8 + "'", int14 == 8);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 7 + "'", int20 == 7);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "PT7H" + "'", str28, "PT7H");
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(mutablePeriod36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 7 + "'", int45 == 7);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(mutablePeriod52);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
    }

    @Test
    public void test0848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0848");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.multipliedBy(1);
        org.joda.time.Hours hours8 = org.joda.time.Hours.ONE;
        int int9 = hours7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours8);
        int int10 = hours8.size();
        org.joda.time.MutablePeriod mutablePeriod11 = hours8.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod13 = hours12.toMutablePeriod();
        org.joda.time.Hours hours14 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours15 = hours12.minus(hours14);
        org.joda.time.Duration duration16 = hours12.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod17 = hours12.toMutablePeriod();
        org.joda.time.Hours hours18 = org.joda.time.Hours.EIGHT;
        int int20 = hours18.getValue((int) (short) 0);
        java.lang.String str21 = hours18.toString();
        boolean boolean22 = hours12.isGreaterThan(hours18);
        org.joda.time.Hours hours24 = hours18.minus(10);
        org.joda.time.Hours hours25 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod27 = hours26.toMutablePeriod();
        org.joda.time.Hours hours28 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours29 = hours26.minus(hours28);
        int int30 = hours25.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours28);
        org.joda.time.Hours hours31 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours25);
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = hours25.get(durationFieldType32);
        boolean boolean34 = hours24.equals((java.lang.Object) hours25);
        org.joda.time.Hours hours36 = hours25.minus(100);
        int int37 = hours25.size();
        org.joda.time.Hours hours39 = hours25.minus((int) (byte) -1);
        org.joda.time.Hours hours40 = hours8.plus(hours39);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 8 + "'", int20 == 8);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "PT8H" + "'", str21, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
    }

    @Test
    public void test0849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0849");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        boolean boolean6 = hours1.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours7 = null;
        org.joda.time.Hours hours8 = hours1.minus(hours7);
        java.lang.String str9 = hours8.toString();
        org.joda.time.Hours hours10 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours8);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod12 = hours11.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours14 = hours11.minus(hours13);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = hours11.get(durationFieldType15);
        org.joda.time.Hours hours18 = hours11.minus((int) (short) 0);
        int int19 = hours8.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours11);
        org.joda.time.MutablePeriod mutablePeriod20 = hours11.toMutablePeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod20);
    }

    @Test
    public void test0850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0850");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours6 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        org.joda.time.Hours hours8 = hours6.multipliedBy((int) (byte) 10);
        org.joda.time.Hours hours9 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod10 = hours9.toMutablePeriod();
        org.joda.time.Hours hours11 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours12 = hours9.minus(hours11);
        org.joda.time.Hours hours14 = hours11.plus(8);
        org.joda.time.Hours hours15 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = hours15.get(durationFieldType16);
        org.joda.time.DurationFieldType durationFieldType18 = hours15.getFieldType();
        boolean boolean19 = hours14.isSupported(durationFieldType18);
        int int20 = hours6.get(durationFieldType18);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType22 = hours6.getFieldType((-2));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -2");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 7 + "'", int20 == 7);
    }

    @Test
    public void test0851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0851");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(0);
        org.joda.time.Duration duration2 = hours1.toStandardDuration();
        org.joda.time.Hours hours4 = hours1.multipliedBy((int) (short) 1);
        org.joda.time.Hours hours5 = hours1.negated();
        org.joda.time.DurationFieldType durationFieldType6 = hours1.getFieldType();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(durationFieldType6);
    }

    @Test
    public void test0852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0852");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        boolean boolean6 = hours1.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours7 = null;
        org.joda.time.Hours hours8 = hours1.minus(hours7);
        org.joda.time.Hours hours9 = hours8.negated();
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.Duration duration14 = hours10.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod15 = hours10.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        int int18 = hours16.getValue((int) (short) 0);
        java.lang.String str19 = hours16.toString();
        boolean boolean20 = hours10.isGreaterThan(hours16);
        org.joda.time.Hours hours22 = hours16.minus(10);
        org.joda.time.Hours hours23 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod25 = hours24.toMutablePeriod();
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours27 = hours24.minus(hours26);
        int int28 = hours23.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours26);
        org.joda.time.Hours hours29 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours23);
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = hours23.get(durationFieldType30);
        boolean boolean32 = hours22.equals((java.lang.Object) hours23);
        java.lang.String str33 = hours22.toString();
        org.joda.time.DurationFieldType durationFieldType35 = hours22.getFieldType(0);
        boolean boolean36 = hours8.isGreaterThan(hours22);
        org.joda.time.Hours hours37 = org.joda.time.Hours.MAX_VALUE;
        int int38 = hours8.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours37);
        org.joda.time.Hours hours39 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours40 = org.joda.time.Hours.EIGHT;
        int int42 = hours40.getValue((int) (short) 0);
        org.joda.time.Hours hours43 = hours39.minus(hours40);
        org.joda.time.Hours hours44 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod45 = hours44.toMutablePeriod();
        org.joda.time.Hours hours46 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours47 = hours44.minus(hours46);
        org.joda.time.Hours hours49 = hours46.plus(8);
        org.joda.time.Hours hours50 = hours40.minus(hours46);
        int int51 = hours8.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours46);
        org.joda.time.Hours hours52 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours53 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod54 = hours53.toMutablePeriod();
        org.joda.time.Hours hours55 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours56 = hours53.minus(hours55);
        int int57 = hours52.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours55);
        org.joda.time.DurationFieldType durationFieldType58 = null;
        boolean boolean59 = hours52.isSupported(durationFieldType58);
        org.joda.time.Hours hours61 = hours52.minus((int) (short) -1);
        org.joda.time.PeriodType periodType62 = hours52.getPeriodType();
        org.joda.time.Hours hours63 = org.joda.time.Hours.EIGHT;
        int int65 = hours63.getValue((int) (short) 0);
        org.joda.time.Hours hours66 = hours52.minus(hours63);
        org.joda.time.Hours hours68 = hours52.plus(7);
        org.joda.time.Hours hours69 = hours52.negated();
        org.joda.time.Hours hours70 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod71 = hours70.toMutablePeriod();
        org.joda.time.Hours hours72 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours73 = hours70.minus(hours72);
        org.joda.time.DurationFieldType durationFieldType74 = null;
        int int75 = hours70.get(durationFieldType74);
        org.joda.time.Hours hours77 = hours70.minus((int) (short) 0);
        org.joda.time.Hours hours78 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType79 = null;
        int int80 = hours78.get(durationFieldType79);
        org.joda.time.DurationFieldType durationFieldType81 = hours78.getFieldType();
        int int82 = hours77.get(durationFieldType81);
        int int83 = hours52.get(durationFieldType81);
        boolean boolean84 = hours8.isLessThan(hours52);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 8 + "'", int18 == 8);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "PT8H" + "'", str19, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "PT-2H" + "'", str33, "PT-2H");
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 8 + "'", int42 == 8);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(mutablePeriod45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(mutablePeriod54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(periodType62);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 8 + "'", int65 == 8);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertNotNull(hours69);
        org.junit.Assert.assertNotNull(hours70);
        org.junit.Assert.assertNotNull(mutablePeriod71);
        org.junit.Assert.assertNotNull(hours72);
        org.junit.Assert.assertNotNull(hours73);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertNotNull(hours77);
        org.junit.Assert.assertNotNull(hours78);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertNotNull(durationFieldType81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 7 + "'", int82 == 7);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 7 + "'", int83 == 7);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test0853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0853");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours6 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        org.joda.time.Hours hours7 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod8 = hours7.toMutablePeriod();
        org.joda.time.Hours hours9 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours10 = hours7.minus(hours9);
        org.joda.time.Hours hours12 = hours9.plus(8);
        org.joda.time.Hours hours13 = hours0.minus(hours12);
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        int int17 = hours15.getValue((int) (short) 0);
        org.joda.time.Hours hours18 = hours14.minus(hours15);
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        org.joda.time.Hours hours24 = hours21.plus(8);
        org.joda.time.Hours hours25 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType26 = null;
        int int27 = hours25.get(durationFieldType26);
        org.joda.time.DurationFieldType durationFieldType28 = hours25.getFieldType();
        boolean boolean29 = hours24.isSupported(durationFieldType28);
        boolean boolean30 = hours14.isSupported(durationFieldType28);
        org.joda.time.Hours hours31 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period32 = hours31.toPeriod();
        org.joda.time.Hours hours34 = hours31.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod35 = hours34.toMutablePeriod();
        org.joda.time.Hours hours36 = org.joda.time.Hours.THREE;
        org.joda.time.Period period37 = hours36.toPeriod();
        org.joda.time.Hours hours39 = hours36.plus((int) (byte) -1);
        org.joda.time.Hours hours40 = hours34.minus(hours36);
        org.joda.time.Hours hours41 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod42 = hours41.toMutablePeriod();
        org.joda.time.Hours hours43 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours44 = hours41.minus(hours43);
        org.joda.time.DurationFieldType durationFieldType45 = null;
        int int46 = hours41.get(durationFieldType45);
        org.joda.time.Hours hours48 = hours41.minus((int) (short) 0);
        org.joda.time.Hours hours49 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType50 = null;
        int int51 = hours49.get(durationFieldType50);
        org.joda.time.DurationFieldType durationFieldType52 = hours49.getFieldType();
        int int53 = hours48.get(durationFieldType52);
        int int54 = hours36.get(durationFieldType52);
        boolean boolean55 = hours14.equals((java.lang.Object) hours36);
        boolean boolean56 = hours12.equals((java.lang.Object) hours36);
        org.joda.time.Duration duration57 = hours12.toStandardDuration();
        org.joda.time.DurationFieldType durationFieldType58 = hours12.getFieldType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 8 + "'", int17 == 8);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 7 + "'", int53 == 7);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 3 + "'", int54 == 3);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertNotNull(durationFieldType58);
    }

    @Test
    public void test0854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0854");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        boolean boolean22 = hours16.isGreaterThan(hours20);
        org.joda.time.Hours hours23 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours25 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod27 = hours26.toMutablePeriod();
        org.joda.time.Hours hours28 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours29 = hours26.minus(hours28);
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = hours26.get(durationFieldType30);
        org.joda.time.Hours hours33 = hours26.minus((int) (short) 0);
        org.joda.time.Hours hours34 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod35 = hours34.toMutablePeriod();
        org.joda.time.Hours hours36 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours37 = hours34.minus(hours36);
        org.joda.time.DurationFieldType durationFieldType38 = null;
        boolean boolean39 = hours36.isSupported(durationFieldType38);
        org.joda.time.Hours hours40 = hours33.minus(hours36);
        org.joda.time.Hours hours41 = hours25.plus(hours40);
        int int42 = hours23.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours40);
        org.joda.time.MutablePeriod mutablePeriod43 = hours40.toMutablePeriod();
        boolean boolean44 = hours16.isLessThan(hours40);
        org.joda.time.Hours hours46 = hours40.plus((int) (short) -1);
        org.joda.time.Hours hours47 = org.joda.time.Hours.EIGHT;
        int int49 = hours47.getValue((int) (short) 0);
        java.lang.String str50 = hours47.toString();
        org.joda.time.Hours hours52 = hours47.minus(100);
        boolean boolean53 = hours40.isLessThan(hours47);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 8 + "'", int49 == 8);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "PT8H" + "'", str50, "PT8H");
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
    }

    @Test
    public void test0855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0855");
        org.joda.time.Hours hours0 = org.joda.time.Hours.EIGHT;
        int int2 = hours0.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus((int) '4');
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        int int6 = hours5.size();
        org.joda.time.Hours hours7 = hours0.minus(hours5);
        org.joda.time.Hours hours9 = org.joda.time.Hours.parseHours("PT8H");
        org.joda.time.Duration duration10 = hours9.toStandardDuration();
        boolean boolean11 = hours5.isGreaterThan(hours9);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 8 + "'", int2 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0856");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod7 = hours6.toMutablePeriod();
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours9 = hours6.minus(hours8);
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = hours6.get(durationFieldType10);
        org.joda.time.Hours hours13 = hours6.minus((int) (short) 0);
        org.joda.time.Hours hours14 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = hours14.get(durationFieldType15);
        org.joda.time.DurationFieldType durationFieldType17 = hours14.getFieldType();
        int int18 = hours13.get(durationFieldType17);
        org.joda.time.Hours hours19 = hours13.negated();
        boolean boolean20 = hours3.isGreaterThan(hours19);
        org.joda.time.Hours hours21 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod22 = hours21.toMutablePeriod();
        org.joda.time.Hours hours23 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours24 = hours21.minus(hours23);
        org.joda.time.DurationFieldType durationFieldType25 = null;
        int int26 = hours21.get(durationFieldType25);
        org.joda.time.Hours hours28 = hours21.multipliedBy(1);
        org.joda.time.Hours hours29 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod30 = hours29.toMutablePeriod();
        org.joda.time.Hours hours31 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours32 = hours29.minus(hours31);
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = hours29.get(durationFieldType33);
        org.joda.time.Hours hours36 = hours29.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval37 = null;
        org.joda.time.Hours hours38 = org.joda.time.Hours.hoursIn(readableInterval37);
        int int39 = hours36.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours38);
        org.joda.time.Hours hours40 = hours21.minus(hours36);
        org.joda.time.Hours hours41 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours42 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod43 = hours42.toMutablePeriod();
        org.joda.time.Hours hours44 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours45 = hours42.minus(hours44);
        int int46 = hours41.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours44);
        org.joda.time.DurationFieldType durationFieldType47 = null;
        boolean boolean48 = hours41.isSupported(durationFieldType47);
        org.joda.time.Hours hours50 = hours41.minus((int) (short) -1);
        boolean boolean51 = hours40.isLessThan(hours41);
        org.joda.time.Hours hours52 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours53 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod54 = hours53.toMutablePeriod();
        org.joda.time.Hours hours55 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours56 = hours53.minus(hours55);
        int int57 = hours52.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours55);
        org.joda.time.DurationFieldType durationFieldType58 = null;
        boolean boolean59 = hours52.isSupported(durationFieldType58);
        org.joda.time.Hours hours61 = hours52.minus((int) (short) -1);
        org.joda.time.PeriodType periodType62 = hours52.getPeriodType();
        org.joda.time.Hours hours63 = org.joda.time.Hours.EIGHT;
        int int65 = hours63.getValue((int) (short) 0);
        org.joda.time.Hours hours66 = hours52.minus(hours63);
        org.joda.time.Hours hours68 = hours52.plus(7);
        org.joda.time.Hours hours69 = hours52.negated();
        org.joda.time.Hours hours70 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod71 = hours70.toMutablePeriod();
        org.joda.time.Hours hours72 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours73 = hours70.minus(hours72);
        org.joda.time.DurationFieldType durationFieldType74 = null;
        int int75 = hours70.get(durationFieldType74);
        org.joda.time.Hours hours77 = hours70.minus((int) (short) 0);
        org.joda.time.Hours hours78 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType79 = null;
        int int80 = hours78.get(durationFieldType79);
        org.joda.time.DurationFieldType durationFieldType81 = hours78.getFieldType();
        int int82 = hours77.get(durationFieldType81);
        int int83 = hours52.get(durationFieldType81);
        boolean boolean84 = hours40.isSupported(durationFieldType81);
        int int85 = hours19.get(durationFieldType81);
        java.lang.String str86 = hours19.toString();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 7 + "'", int18 == 7);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(mutablePeriod54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(periodType62);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 8 + "'", int65 == 8);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertNotNull(hours69);
        org.junit.Assert.assertNotNull(hours70);
        org.junit.Assert.assertNotNull(mutablePeriod71);
        org.junit.Assert.assertNotNull(hours72);
        org.junit.Assert.assertNotNull(hours73);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertNotNull(hours77);
        org.junit.Assert.assertNotNull(hours78);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertNotNull(durationFieldType81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 7 + "'", int82 == 7);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 7 + "'", int83 == 7);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-7) + "'", int85 == (-7));
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "PT-7H" + "'", str86, "PT-7H");
    }

    @Test
    public void test0857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0857");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours12 = hours6.minus(10);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod15 = hours14.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours17 = hours14.minus(hours16);
        int int18 = hours13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours16);
        org.joda.time.Hours hours19 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours13);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = hours13.get(durationFieldType20);
        boolean boolean22 = hours12.equals((java.lang.Object) hours13);
        java.lang.String str23 = hours12.toString();
        org.joda.time.ReadableInterval readableInterval24 = null;
        org.joda.time.Hours hours25 = org.joda.time.Hours.hoursIn(readableInterval24);
        org.joda.time.DurationFieldType durationFieldType26 = hours25.getFieldType();
        org.joda.time.Hours hours28 = hours25.dividedBy((int) (byte) 10);
        org.joda.time.Hours hours30 = hours25.plus((int) (byte) 1);
        org.joda.time.Hours hours32 = hours25.dividedBy(100);
        int int33 = hours12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours32);
        org.joda.time.Hours hours34 = hours12.negated();
        org.joda.time.Hours hours35 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod36 = hours35.toMutablePeriod();
        org.joda.time.Hours hours37 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours38 = hours35.minus(hours37);
        org.joda.time.DurationFieldType durationFieldType39 = null;
        int int40 = hours35.get(durationFieldType39);
        org.joda.time.Hours hours42 = hours35.minus((int) (short) 0);
        org.joda.time.Hours hours43 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours35);
        org.joda.time.Hours hours44 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours45 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod46 = hours45.toMutablePeriod();
        org.joda.time.Hours hours47 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours48 = hours45.minus(hours47);
        int int49 = hours44.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours47);
        org.joda.time.DurationFieldType durationFieldType50 = null;
        boolean boolean51 = hours44.isSupported(durationFieldType50);
        org.joda.time.Hours hours53 = hours44.minus((int) (short) -1);
        org.joda.time.Hours hours54 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod55 = hours54.toMutablePeriod();
        org.joda.time.Hours hours56 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours57 = hours54.minus(hours56);
        org.joda.time.Hours hours59 = hours56.plus(8);
        org.joda.time.Hours hours60 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType61 = null;
        int int62 = hours60.get(durationFieldType61);
        org.joda.time.DurationFieldType durationFieldType63 = hours60.getFieldType();
        boolean boolean64 = hours59.isSupported(durationFieldType63);
        int int65 = hours53.get(durationFieldType63);
        org.joda.time.Hours hours66 = hours35.plus(hours53);
        boolean boolean67 = hours34.equals((java.lang.Object) hours53);
        org.joda.time.Hours hours68 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType69 = null;
        int int70 = hours68.get(durationFieldType69);
        org.joda.time.Hours hours72 = hours68.dividedBy(100);
        org.joda.time.Hours hours73 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours74 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod75 = hours74.toMutablePeriod();
        org.joda.time.Hours hours76 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours77 = hours74.minus(hours76);
        int int78 = hours73.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours76);
        org.joda.time.DurationFieldType durationFieldType79 = null;
        boolean boolean80 = hours73.isSupported(durationFieldType79);
        org.joda.time.Hours hours82 = hours73.multipliedBy((int) (short) 10);
        org.joda.time.Period period83 = hours73.toPeriod();
        org.joda.time.Hours hours84 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours85 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod86 = hours85.toMutablePeriod();
        org.joda.time.Hours hours87 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours88 = hours85.minus(hours87);
        int int89 = hours84.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours87);
        org.joda.time.Hours hours90 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours84);
        org.joda.time.Hours hours92 = hours90.multipliedBy((int) (byte) 10);
        boolean boolean93 = hours73.isLessThan(hours92);
        int int94 = hours72.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours73);
        org.joda.time.Hours hours95 = hours53.minus(hours72);
        org.joda.time.PeriodType periodType96 = hours53.getPeriodType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "PT-2H" + "'", str23, "PT-2H");
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(mutablePeriod36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(mutablePeriod46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(mutablePeriod55);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(durationFieldType63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 8 + "'", int65 == 8);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(hours72);
        org.junit.Assert.assertNotNull(hours73);
        org.junit.Assert.assertNotNull(hours74);
        org.junit.Assert.assertNotNull(mutablePeriod75);
        org.junit.Assert.assertNotNull(hours76);
        org.junit.Assert.assertNotNull(hours77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(hours82);
        org.junit.Assert.assertNotNull(period83);
        org.junit.Assert.assertNotNull(hours84);
        org.junit.Assert.assertNotNull(hours85);
        org.junit.Assert.assertNotNull(mutablePeriod86);
        org.junit.Assert.assertNotNull(hours87);
        org.junit.Assert.assertNotNull(hours88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertNotNull(hours90);
        org.junit.Assert.assertNotNull(hours92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-1) + "'", int94 == (-1));
        org.junit.Assert.assertNotNull(hours95);
        org.junit.Assert.assertNotNull(periodType96);
    }

    @Test
    public void test0858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0858");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        int int23 = hours18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours21);
        org.joda.time.Hours hours24 = hours1.plus(hours21);
        org.joda.time.Hours hours25 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod26 = hours25.toMutablePeriod();
        org.joda.time.Hours hours27 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours28 = hours25.minus(hours27);
        org.joda.time.DurationFieldType durationFieldType29 = null;
        int int30 = hours25.get(durationFieldType29);
        org.joda.time.Hours hours32 = hours25.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval33 = null;
        org.joda.time.Hours hours34 = org.joda.time.Hours.hoursIn(readableInterval33);
        int int35 = hours32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours34);
        boolean boolean36 = hours21.isGreaterThan(hours32);
        org.joda.time.Hours hours37 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod38 = hours37.toMutablePeriod();
        org.joda.time.Hours hours39 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours40 = hours37.minus(hours39);
        org.joda.time.Duration duration41 = hours37.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod42 = hours37.toMutablePeriod();
        org.joda.time.PeriodType periodType43 = hours37.getPeriodType();
        org.joda.time.Hours hours45 = org.joda.time.Hours.parseHours("PT7H");
        boolean boolean46 = hours37.isLessThan(hours45);
        org.joda.time.Hours hours47 = org.joda.time.Hours.ZERO;
        boolean boolean48 = hours45.isGreaterThan(hours47);
        org.joda.time.Hours hours49 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours50 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType51 = null;
        int int52 = hours50.get(durationFieldType51);
        boolean boolean53 = hours49.equals((java.lang.Object) durationFieldType51);
        org.joda.time.Hours hours54 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours55 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod56 = hours55.toMutablePeriod();
        org.joda.time.Hours hours57 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours58 = hours55.minus(hours57);
        int int59 = hours54.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours57);
        org.joda.time.Hours hours61 = hours57.multipliedBy(0);
        org.joda.time.Hours hours62 = hours49.plus(hours61);
        org.joda.time.DurationFieldType durationFieldType63 = hours62.getFieldType();
        int int64 = hours45.get(durationFieldType63);
        boolean boolean65 = hours32.equals((java.lang.Object) int64);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(mutablePeriod56);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertNotNull(durationFieldType63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 7 + "'", int64 == 7);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test0859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0859");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.Hours hours2 = hours0.plus(1);
        org.joda.time.Hours hours4 = hours0.dividedBy((-2));
        org.joda.time.Hours hours6 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours7 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod8 = hours7.toMutablePeriod();
        org.joda.time.Hours hours9 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours10 = hours7.minus(hours9);
        org.joda.time.DurationFieldType durationFieldType11 = null;
        int int12 = hours7.get(durationFieldType11);
        org.joda.time.Hours hours14 = hours7.minus((int) (short) 0);
        org.joda.time.Hours hours15 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod16 = hours15.toMutablePeriod();
        org.joda.time.Hours hours17 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours18 = hours15.minus(hours17);
        org.joda.time.DurationFieldType durationFieldType19 = null;
        boolean boolean20 = hours17.isSupported(durationFieldType19);
        org.joda.time.Hours hours21 = hours14.minus(hours17);
        org.joda.time.Hours hours22 = hours6.plus(hours21);
        org.joda.time.Hours hours23 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod24 = hours23.toMutablePeriod();
        org.joda.time.Hours hours25 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours26 = hours23.minus(hours25);
        boolean boolean27 = hours21.isGreaterThan(hours25);
        org.joda.time.Hours hours28 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours29 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours30 = org.joda.time.Hours.EIGHT;
        int int32 = hours30.getValue((int) (short) 0);
        org.joda.time.Hours hours33 = hours29.minus(hours30);
        org.joda.time.Hours hours34 = hours28.minus(hours29);
        org.joda.time.Hours hours36 = hours29.dividedBy(1);
        org.joda.time.Duration duration37 = hours29.toStandardDuration();
        boolean boolean38 = hours25.isGreaterThan(hours29);
        org.joda.time.Hours hours39 = hours25.negated();
        org.joda.time.Hours hours40 = hours39.negated();
        boolean boolean41 = hours0.isLessThan(hours39);
        java.lang.Object obj42 = null;
        boolean boolean43 = hours0.equals(obj42);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 8 + "'", int32 == 8);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test0860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0860");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Hours hours4 = hours2.negated();
        org.joda.time.DurationFieldType durationFieldType5 = hours4.getFieldType();
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod7 = hours6.toMutablePeriod();
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours9 = hours6.minus(hours8);
        org.joda.time.Hours hours10 = hours8.negated();
        int int11 = hours10.getHours();
        int int12 = hours4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours10);
        org.joda.time.Hours hours13 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours4);
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod15 = hours14.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours17 = hours14.minus(hours16);
        org.joda.time.Duration duration18 = hours14.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod19 = hours14.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        int int22 = hours20.getValue((int) (short) 0);
        java.lang.String str23 = hours20.toString();
        boolean boolean24 = hours14.isGreaterThan(hours20);
        org.joda.time.Hours hours26 = hours20.minus(10);
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours28 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod29 = hours28.toMutablePeriod();
        org.joda.time.Hours hours30 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours31 = hours28.minus(hours30);
        int int32 = hours27.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours30);
        org.joda.time.Hours hours33 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours27);
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = hours27.get(durationFieldType34);
        boolean boolean36 = hours26.equals((java.lang.Object) hours27);
        org.joda.time.Hours hours37 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period38 = hours37.toPeriod();
        org.joda.time.Hours hours40 = hours37.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod41 = hours40.toMutablePeriod();
        org.joda.time.Hours hours42 = org.joda.time.Hours.THREE;
        org.joda.time.Period period43 = hours42.toPeriod();
        org.joda.time.Hours hours45 = hours42.plus((int) (byte) -1);
        org.joda.time.Hours hours46 = hours40.minus(hours42);
        org.joda.time.DurationFieldType durationFieldType47 = hours46.getFieldType();
        boolean boolean48 = hours27.isGreaterThan(hours46);
        org.joda.time.Hours hours49 = hours46.negated();
        org.joda.time.Hours hours51 = hours49.minus((int) (short) -1);
        boolean boolean52 = hours13.isGreaterThan(hours49);
        org.joda.time.Hours hours54 = hours49.plus(8);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-8) + "'", int11 == (-8));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 8 + "'", int22 == 8);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "PT8H" + "'", str23, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(mutablePeriod41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(hours54);
    }

    @Test
    public void test0861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0861");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = hours0.get(durationFieldType1);
        org.joda.time.Hours hours4 = hours0.dividedBy(100);
        int int5 = hours0.size();
        // The following exception was thrown during execution in test generation
        try {
            int int7 = hours0.getValue(14);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 14");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
    }

    @Test
    public void test0862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0862");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.PeriodType periodType10 = hours0.getPeriodType();
        org.joda.time.Hours hours11 = org.joda.time.Hours.EIGHT;
        int int13 = hours11.getValue((int) (short) 0);
        org.joda.time.Hours hours14 = hours0.minus(hours11);
        org.joda.time.Hours hours16 = hours0.plus(7);
        org.joda.time.Hours hours17 = hours0.negated();
        org.joda.time.MutablePeriod mutablePeriod18 = hours0.toMutablePeriod();
        org.joda.time.Hours hours20 = hours0.dividedBy((-25));
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 8 + "'", int13 == 8);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(hours20);
    }

    @Test
    public void test0863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0863");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = hours8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = hours8.getFieldType();
        int int12 = hours7.get(durationFieldType11);
        org.joda.time.PeriodType periodType13 = hours7.getPeriodType();
        org.joda.time.Hours hours15 = hours7.multipliedBy(8);
        // The following exception was thrown during execution in test generation
        try {
            int int17 = hours7.getValue(92);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 92");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 7 + "'", int12 == 7);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(hours15);
    }

    @Test
    public void test0864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0864");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        boolean boolean6 = hours1.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours7 = null;
        org.joda.time.Hours hours8 = hours1.minus(hours7);
        org.joda.time.Hours hours9 = hours8.negated();
        org.joda.time.Hours hours10 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours8);
        org.joda.time.MutablePeriod mutablePeriod11 = hours8.toMutablePeriod();
        org.joda.time.Hours hours12 = hours8.negated();
        org.joda.time.Hours hours13 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours15 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod17 = hours16.toMutablePeriod();
        org.joda.time.Hours hours18 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours19 = hours16.minus(hours18);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = hours16.get(durationFieldType20);
        org.joda.time.Hours hours23 = hours16.minus((int) (short) 0);
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod25 = hours24.toMutablePeriod();
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours27 = hours24.minus(hours26);
        org.joda.time.DurationFieldType durationFieldType28 = null;
        boolean boolean29 = hours26.isSupported(durationFieldType28);
        org.joda.time.Hours hours30 = hours23.minus(hours26);
        org.joda.time.Hours hours31 = hours15.plus(hours30);
        int int32 = hours13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours30);
        org.joda.time.Hours hours34 = hours30.plus((int) ' ');
        org.joda.time.PeriodType periodType35 = hours30.getPeriodType();
        org.joda.time.Hours hours37 = org.joda.time.Hours.hours((int) ' ');
        int int38 = hours30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours37);
        org.joda.time.Hours hours39 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours40 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod41 = hours40.toMutablePeriod();
        org.joda.time.Hours hours42 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours43 = hours40.minus(hours42);
        int int44 = hours39.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours42);
        org.joda.time.Hours hours46 = hours42.multipliedBy(0);
        org.joda.time.Hours hours48 = org.joda.time.Hours.hours(0);
        org.joda.time.Duration duration49 = hours48.toStandardDuration();
        org.joda.time.Hours hours51 = hours48.multipliedBy((int) (short) 1);
        java.lang.String str52 = hours48.toString();
        int int53 = hours42.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours48);
        boolean boolean54 = hours30.equals((java.lang.Object) hours48);
        org.joda.time.Hours hours55 = hours8.plus(hours30);
        org.joda.time.Hours hours56 = org.joda.time.Hours.ONE;
        int int57 = hours56.getHours();
        org.joda.time.Hours hours59 = hours56.plus(10);
        int int60 = hours56.size();
        org.joda.time.Hours hours61 = hours56.negated();
        org.joda.time.Hours hours63 = hours61.plus(7);
        org.joda.time.Hours hours64 = hours55.plus(hours61);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(mutablePeriod41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "PT0H" + "'", str52, "PT0H");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertNotNull(hours64);
    }

    @Test
    public void test0865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0865");
        org.joda.time.Hours hours0 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours1 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = hours1.get(durationFieldType2);
        boolean boolean4 = hours0.equals((java.lang.Object) durationFieldType2);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod7 = hours6.toMutablePeriod();
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours9 = hours6.minus(hours8);
        int int10 = hours5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours8);
        org.joda.time.Hours hours12 = hours8.multipliedBy(0);
        org.joda.time.Hours hours13 = hours0.plus(hours12);
        org.joda.time.Duration duration14 = hours12.toStandardDuration();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(duration14);
    }

    @Test
    public void test0866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0866");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.PeriodType periodType10 = hours0.getPeriodType();
        org.joda.time.Hours hours11 = org.joda.time.Hours.EIGHT;
        int int13 = hours11.getValue((int) (short) 0);
        org.joda.time.Hours hours14 = hours0.minus(hours11);
        org.joda.time.Hours hours16 = hours0.plus(7);
        org.joda.time.Hours hours17 = hours0.negated();
        org.joda.time.Hours hours19 = hours17.multipliedBy(100);
        org.joda.time.Duration duration20 = hours19.toStandardDuration();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 8 + "'", int13 == 8);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(duration20);
    }

    @Test
    public void test0867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0867");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.Hours hours10 = org.joda.time.Hours.ONE;
        int int11 = hours10.getHours();
        org.joda.time.Hours hours13 = hours10.plus(10);
        int int14 = hours10.size();
        org.joda.time.Hours hours15 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours16 = hours15.negated();
        org.joda.time.DurationFieldType durationFieldType17 = hours15.getFieldType();
        boolean boolean18 = hours10.isLessThan(hours15);
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours20 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod21 = hours20.toMutablePeriod();
        org.joda.time.Hours hours22 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours23 = hours20.minus(hours22);
        int int24 = hours19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours22);
        org.joda.time.DurationFieldType durationFieldType25 = null;
        boolean boolean26 = hours19.isSupported(durationFieldType25);
        org.joda.time.PeriodType periodType27 = hours19.getPeriodType();
        org.joda.time.Hours hours28 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours29 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours30 = org.joda.time.Hours.EIGHT;
        int int32 = hours30.getValue((int) (short) 0);
        org.joda.time.Hours hours33 = hours29.minus(hours30);
        org.joda.time.Hours hours34 = hours28.minus(hours29);
        int int35 = hours28.size();
        org.joda.time.Hours hours36 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours37 = org.joda.time.Hours.EIGHT;
        int int39 = hours37.getValue((int) (short) 0);
        org.joda.time.Hours hours40 = hours36.minus(hours37);
        boolean boolean42 = hours37.equals((java.lang.Object) (short) 10);
        int int43 = hours28.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours37);
        org.joda.time.Hours hours44 = hours19.plus(hours28);
        org.joda.time.Hours hours45 = hours10.minus(hours19);
        org.joda.time.Duration duration46 = hours45.toStandardDuration();
        org.joda.time.Hours hours47 = hours45.negated();
        org.joda.time.Hours hours49 = hours47.minus((int) (byte) 100);
        int int50 = hours47.size();
        boolean boolean51 = hours9.equals((java.lang.Object) hours47);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 8 + "'", int32 == 8);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 8 + "'", int39 == 8);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test0868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0868");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours12 = hours6.minus(10);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod15 = hours14.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours17 = hours14.minus(hours16);
        int int18 = hours13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours16);
        org.joda.time.Hours hours19 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours13);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = hours13.get(durationFieldType20);
        boolean boolean22 = hours12.equals((java.lang.Object) hours13);
        org.joda.time.Hours hours24 = hours13.minus(100);
        int int25 = hours13.getHours();
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod28 = hours27.toMutablePeriod();
        org.joda.time.Hours hours29 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours30 = hours27.minus(hours29);
        int int31 = hours26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours29);
        org.joda.time.Hours hours32 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours26);
        org.joda.time.Hours hours33 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod34 = hours33.toMutablePeriod();
        org.joda.time.Hours hours35 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours36 = hours33.minus(hours35);
        org.joda.time.DurationFieldType durationFieldType37 = null;
        int int38 = hours33.get(durationFieldType37);
        org.joda.time.Hours hours40 = hours33.minus((int) (short) 0);
        org.joda.time.Hours hours41 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType42 = null;
        int int43 = hours41.get(durationFieldType42);
        org.joda.time.DurationFieldType durationFieldType44 = hours41.getFieldType();
        int int45 = hours40.get(durationFieldType44);
        org.joda.time.Hours hours46 = org.joda.time.Hours.ONE;
        int int47 = hours46.getHours();
        org.joda.time.Hours hours49 = hours46.plus(10);
        org.joda.time.Hours hours50 = hours40.minus(hours49);
        org.joda.time.Hours hours51 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours50);
        boolean boolean52 = hours26.isLessThan(hours51);
        boolean boolean53 = hours13.equals((java.lang.Object) hours26);
        org.joda.time.Hours hours54 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType55 = null;
        int int56 = hours54.get(durationFieldType55);
        org.joda.time.Hours hours58 = hours54.dividedBy(100);
        org.joda.time.Hours hours59 = hours54.negated();
        boolean boolean60 = hours26.equals((java.lang.Object) hours59);
        int int62 = hours59.getValue(0);
        org.joda.time.Hours hours63 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours64 = org.joda.time.Hours.EIGHT;
        int int66 = hours64.getValue((int) (short) 0);
        org.joda.time.Hours hours67 = hours63.minus(hours64);
        boolean boolean69 = hours64.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours70 = null;
        org.joda.time.Hours hours71 = hours64.minus(hours70);
        org.joda.time.Hours hours72 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours73 = org.joda.time.Hours.EIGHT;
        int int75 = hours73.getValue((int) (short) 0);
        org.joda.time.Hours hours76 = hours72.minus(hours73);
        org.joda.time.Hours hours77 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType78 = null;
        int int79 = hours77.get(durationFieldType78);
        org.joda.time.DurationFieldType durationFieldType80 = hours77.getFieldType();
        int int81 = hours72.get(durationFieldType80);
        int int82 = hours71.get(durationFieldType80);
        boolean boolean83 = hours59.isSupported(durationFieldType80);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 7 + "'", int25 == 7);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 7 + "'", int45 == 7);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 8 + "'", int66 == 8);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(hours71);
        org.junit.Assert.assertNotNull(hours72);
        org.junit.Assert.assertNotNull(hours73);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 8 + "'", int75 == 8);
        org.junit.Assert.assertNotNull(hours76);
        org.junit.Assert.assertNotNull(hours77);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(durationFieldType80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 7 + "'", int81 == 7);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 8 + "'", int82 == 8);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
    }

    @Test
    public void test0869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0869");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        boolean boolean6 = hours1.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours7 = null;
        org.joda.time.Hours hours8 = hours1.minus(hours7);
        org.joda.time.Hours hours9 = hours8.negated();
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.Duration duration14 = hours10.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod15 = hours10.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        int int18 = hours16.getValue((int) (short) 0);
        java.lang.String str19 = hours16.toString();
        boolean boolean20 = hours10.isGreaterThan(hours16);
        org.joda.time.Hours hours22 = hours16.minus(10);
        org.joda.time.Hours hours23 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod25 = hours24.toMutablePeriod();
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours27 = hours24.minus(hours26);
        int int28 = hours23.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours26);
        org.joda.time.Hours hours29 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours23);
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = hours23.get(durationFieldType30);
        boolean boolean32 = hours22.equals((java.lang.Object) hours23);
        java.lang.String str33 = hours22.toString();
        org.joda.time.DurationFieldType durationFieldType35 = hours22.getFieldType(0);
        boolean boolean36 = hours8.isGreaterThan(hours22);
        org.joda.time.Hours hours37 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours22);
        org.joda.time.Hours hours38 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours37);
        org.joda.time.Hours hours39 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod40 = hours39.toMutablePeriod();
        org.joda.time.Hours hours41 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours42 = hours39.minus(hours41);
        org.joda.time.DurationFieldType durationFieldType43 = null;
        int int44 = hours39.get(durationFieldType43);
        org.joda.time.Hours hours46 = hours39.minus((int) (short) 0);
        org.joda.time.Hours hours47 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType48 = null;
        int int49 = hours47.get(durationFieldType48);
        org.joda.time.DurationFieldType durationFieldType50 = hours47.getFieldType();
        int int51 = hours46.get(durationFieldType50);
        org.joda.time.PeriodType periodType52 = hours46.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType53 = hours46.getFieldType();
        int int54 = hours37.get(durationFieldType53);
        org.joda.time.Hours hours56 = org.joda.time.Hours.hours(100);
        org.joda.time.Period period57 = hours56.toPeriod();
        org.joda.time.Hours hours59 = hours56.minus(8);
        org.joda.time.Hours hours60 = org.joda.time.Hours.THREE;
        org.joda.time.Period period61 = hours60.toPeriod();
        org.joda.time.Hours hours63 = hours60.plus((int) (byte) -1);
        org.joda.time.Hours hours65 = hours63.minus((int) (byte) 100);
        boolean boolean66 = hours56.equals((java.lang.Object) hours65);
        org.joda.time.MutablePeriod mutablePeriod67 = hours56.toMutablePeriod();
        org.joda.time.Hours hours69 = org.joda.time.Hours.parseHours("PT16H");
        org.joda.time.Hours hours70 = hours56.minus(hours69);
        org.joda.time.Hours hours71 = hours37.minus(hours56);
        org.joda.time.Hours hours72 = hours37.negated();
        org.joda.time.Hours hours73 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours74 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType75 = null;
        int int76 = hours74.get(durationFieldType75);
        boolean boolean77 = hours73.equals((java.lang.Object) durationFieldType75);
        org.joda.time.Hours hours78 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours79 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod80 = hours79.toMutablePeriod();
        org.joda.time.Hours hours81 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours82 = hours79.minus(hours81);
        int int83 = hours78.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours81);
        org.joda.time.Hours hours85 = hours81.multipliedBy(0);
        org.joda.time.Hours hours86 = hours73.plus(hours85);
        org.joda.time.DurationFieldType durationFieldType87 = hours86.getFieldType();
        org.joda.time.Hours hours88 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours89 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod90 = hours89.toMutablePeriod();
        org.joda.time.Hours hours91 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours92 = hours89.minus(hours91);
        int int93 = hours88.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours91);
        org.joda.time.Hours hours94 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours88);
        org.joda.time.DurationFieldType durationFieldType95 = hours88.getFieldType();
        int int96 = hours86.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours88);
        int int97 = hours72.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours88);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 8 + "'", int18 == 8);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "PT8H" + "'", str19, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "PT-2H" + "'", str33, "PT-2H");
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(mutablePeriod40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 7 + "'", int51 == 7);
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertNotNull(durationFieldType53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-2) + "'", int54 == (-2));
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(mutablePeriod67);
        org.junit.Assert.assertNotNull(hours69);
        org.junit.Assert.assertNotNull(hours70);
        org.junit.Assert.assertNotNull(hours71);
        org.junit.Assert.assertNotNull(hours72);
        org.junit.Assert.assertNotNull(hours73);
        org.junit.Assert.assertNotNull(hours74);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(hours78);
        org.junit.Assert.assertNotNull(hours79);
        org.junit.Assert.assertNotNull(mutablePeriod80);
        org.junit.Assert.assertNotNull(hours81);
        org.junit.Assert.assertNotNull(hours82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertNotNull(hours85);
        org.junit.Assert.assertNotNull(hours86);
        org.junit.Assert.assertNotNull(durationFieldType87);
        org.junit.Assert.assertNotNull(hours88);
        org.junit.Assert.assertNotNull(hours89);
        org.junit.Assert.assertNotNull(mutablePeriod90);
        org.junit.Assert.assertNotNull(hours91);
        org.junit.Assert.assertNotNull(hours92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
        org.junit.Assert.assertNotNull(hours94);
        org.junit.Assert.assertNotNull(durationFieldType95);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + (-1) + "'", int96 == (-1));
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + (-1) + "'", int97 == (-1));
    }

    @Test
    public void test0870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0870");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Hours hours9 = org.joda.time.Hours.hoursIn(readableInterval8);
        int int10 = hours7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours9);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        int int14 = hours12.getValue((int) (short) 0);
        org.joda.time.Hours hours15 = hours11.minus(hours12);
        org.joda.time.Hours hours16 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = hours16.get(durationFieldType17);
        org.joda.time.DurationFieldType durationFieldType19 = hours16.getFieldType();
        int int20 = hours11.get(durationFieldType19);
        boolean boolean21 = hours9.isSupported(durationFieldType19);
        org.joda.time.PeriodType periodType22 = hours9.getPeriodType();
        org.joda.time.Hours hours24 = hours9.multipliedBy(100);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 8 + "'", int14 == 8);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 7 + "'", int20 == 7);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(hours24);
    }

    @Test
    public void test0871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0871");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.PeriodType periodType10 = hours0.getPeriodType();
        org.joda.time.Hours hours11 = org.joda.time.Hours.EIGHT;
        int int13 = hours11.getValue((int) (short) 0);
        org.joda.time.Hours hours14 = hours0.minus(hours11);
        org.joda.time.Hours hours16 = hours0.plus(7);
        org.joda.time.Hours hours17 = hours0.negated();
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        int int23 = hours18.get(durationFieldType22);
        org.joda.time.Hours hours25 = hours18.minus((int) (short) 0);
        org.joda.time.Hours hours26 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = hours26.get(durationFieldType27);
        org.joda.time.DurationFieldType durationFieldType29 = hours26.getFieldType();
        int int30 = hours25.get(durationFieldType29);
        int int31 = hours0.get(durationFieldType29);
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours33 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod34 = hours33.toMutablePeriod();
        org.joda.time.Hours hours35 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours36 = hours33.minus(hours35);
        int int37 = hours32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours35);
        org.joda.time.Hours hours38 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours32);
        org.joda.time.DurationFieldType durationFieldType39 = null;
        int int40 = hours32.get(durationFieldType39);
        org.joda.time.DurationFieldType durationFieldType41 = null;
        int int42 = hours32.get(durationFieldType41);
        org.joda.time.Hours hours44 = hours32.minus(0);
        org.joda.time.DurationFieldType durationFieldType45 = hours44.getFieldType();
        boolean boolean46 = hours0.isSupported(durationFieldType45);
        org.joda.time.Hours hours47 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod48 = hours47.toMutablePeriod();
        org.joda.time.Hours hours49 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours50 = hours47.minus(hours49);
        org.joda.time.Duration duration51 = hours47.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod52 = hours47.toMutablePeriod();
        org.joda.time.Hours hours53 = org.joda.time.Hours.EIGHT;
        int int55 = hours53.getValue((int) (short) 0);
        java.lang.String str56 = hours53.toString();
        boolean boolean57 = hours47.isGreaterThan(hours53);
        org.joda.time.Hours hours59 = hours53.minus(10);
        org.joda.time.Hours hours60 = hours53.negated();
        org.joda.time.Duration duration61 = hours53.toStandardDuration();
        int int62 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours53);
        org.joda.time.Hours hours63 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours65 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours66 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod67 = hours66.toMutablePeriod();
        org.joda.time.Hours hours68 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours69 = hours66.minus(hours68);
        org.joda.time.DurationFieldType durationFieldType70 = null;
        int int71 = hours66.get(durationFieldType70);
        org.joda.time.Hours hours73 = hours66.minus((int) (short) 0);
        org.joda.time.Hours hours74 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod75 = hours74.toMutablePeriod();
        org.joda.time.Hours hours76 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours77 = hours74.minus(hours76);
        org.joda.time.DurationFieldType durationFieldType78 = null;
        boolean boolean79 = hours76.isSupported(durationFieldType78);
        org.joda.time.Hours hours80 = hours73.minus(hours76);
        org.joda.time.Hours hours81 = hours65.plus(hours80);
        int int82 = hours63.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours80);
        org.joda.time.Hours hours84 = hours80.plus((int) ' ');
        org.joda.time.PeriodType periodType85 = hours80.getPeriodType();
        org.joda.time.Hours hours87 = org.joda.time.Hours.hours((int) ' ');
        int int88 = hours80.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours87);
        boolean boolean89 = hours53.isLessThan(hours80);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 8 + "'", int13 == 8);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 7 + "'", int30 == 7);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 7 + "'", int31 == 7);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(mutablePeriod48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertNotNull(mutablePeriod52);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 8 + "'", int55 == 8);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "PT8H" + "'", str56, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertNotNull(mutablePeriod67);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertNotNull(hours69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(hours73);
        org.junit.Assert.assertNotNull(hours74);
        org.junit.Assert.assertNotNull(mutablePeriod75);
        org.junit.Assert.assertNotNull(hours76);
        org.junit.Assert.assertNotNull(hours77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(hours80);
        org.junit.Assert.assertNotNull(hours81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 1 + "'", int82 == 1);
        org.junit.Assert.assertNotNull(hours84);
        org.junit.Assert.assertNotNull(periodType85);
        org.junit.Assert.assertNotNull(hours87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test0872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0872");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.Hours hours10 = hours9.negated();
        org.joda.time.Period period11 = hours9.toPeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.ONE;
        int int13 = hours12.getHours();
        org.joda.time.Hours hours15 = hours12.plus(10);
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod17 = hours16.toMutablePeriod();
        org.joda.time.Hours hours18 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours19 = hours16.minus(hours18);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = hours16.get(durationFieldType20);
        org.joda.time.Hours hours23 = hours16.multipliedBy(1);
        boolean boolean24 = hours12.isGreaterThan(hours16);
        int int25 = hours12.size();
        org.joda.time.Hours hours27 = hours12.plus((int) (short) 0);
        org.joda.time.Hours hours28 = hours9.plus(hours27);
        int int29 = hours28.getHours();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 9 + "'", int29 == 9);
    }

    @Test
    public void test0873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0873");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        int int4 = hours2.getValue((int) (short) 0);
        org.joda.time.Hours hours5 = hours1.minus(hours2);
        org.joda.time.Hours hours6 = hours0.minus(hours1);
        int int7 = hours0.size();
        org.joda.time.Hours hours9 = hours0.minus(2);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 8 + "'", int4 == 8);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(hours9);
    }

    @Test
    public void test0874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0874");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.PeriodType periodType10 = hours0.getPeriodType();
        org.joda.time.Hours hours11 = org.joda.time.Hours.EIGHT;
        int int13 = hours11.getValue((int) (short) 0);
        org.joda.time.Hours hours14 = hours0.minus(hours11);
        // The following exception was thrown during execution in test generation
        try {
            int int16 = hours0.getValue((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 8 + "'", int13 == 8);
        org.junit.Assert.assertNotNull(hours14);
    }

    @Test
    public void test0875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0875");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours12 = hours6.minus(10);
        java.lang.String str13 = hours12.toString();
        org.joda.time.Hours hours15 = hours12.minus(7);
        java.lang.Class<?> wildcardClass16 = hours15.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "PT-2H" + "'", str13, "PT-2H");
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0876");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = hours8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = hours8.getFieldType();
        int int12 = hours7.get(durationFieldType11);
        org.joda.time.Hours hours13 = org.joda.time.Hours.ONE;
        int int14 = hours13.getHours();
        org.joda.time.Hours hours16 = hours13.plus(10);
        org.joda.time.Hours hours17 = hours7.minus(hours16);
        org.joda.time.Hours hours19 = hours17.multipliedBy((-4));
        org.joda.time.Hours hours20 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod21 = hours20.toMutablePeriod();
        org.joda.time.Hours hours22 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours23 = hours20.minus(hours22);
        org.joda.time.DurationFieldType durationFieldType24 = null;
        int int25 = hours20.get(durationFieldType24);
        org.joda.time.Hours hours27 = hours20.minus((int) (short) 0);
        org.joda.time.Hours hours28 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType29 = null;
        int int30 = hours28.get(durationFieldType29);
        org.joda.time.DurationFieldType durationFieldType31 = hours28.getFieldType();
        int int32 = hours27.get(durationFieldType31);
        org.joda.time.PeriodType periodType33 = hours27.getPeriodType();
        int int34 = hours17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours27);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 7 + "'", int12 == 7);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 7 + "'", int32 == 7);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
    }

    @Test
    public void test0877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0877");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours12 = hours6.minus(10);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod15 = hours14.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours17 = hours14.minus(hours16);
        int int18 = hours13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours16);
        org.joda.time.Hours hours19 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours13);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = hours13.get(durationFieldType20);
        boolean boolean22 = hours12.equals((java.lang.Object) hours13);
        java.lang.String str23 = hours12.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Hours hours25 = hours12.dividedBy(0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: / by zero");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "PT-2H" + "'", str23, "PT-2H");
    }

    @Test
    public void test0878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0878");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        int int1 = hours0.getHours();
        org.joda.time.Hours hours3 = hours0.plus(10);
        org.joda.time.Hours hours4 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours5 = hours4.negated();
        org.joda.time.DurationFieldType durationFieldType6 = hours4.getFieldType();
        boolean boolean7 = hours0.equals((java.lang.Object) hours4);
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours9 = org.joda.time.Hours.EIGHT;
        int int11 = hours9.getValue((int) (short) 0);
        org.joda.time.Hours hours12 = hours8.minus(hours9);
        boolean boolean14 = hours9.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours15 = hours9.negated();
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod18 = hours17.toMutablePeriod();
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours20 = hours17.minus(hours19);
        int int21 = hours16.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours19);
        org.joda.time.Hours hours23 = hours19.multipliedBy(0);
        org.joda.time.Hours hours24 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours23);
        org.joda.time.Duration duration25 = hours24.toStandardDuration();
        org.joda.time.Hours hours26 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours24);
        boolean boolean27 = hours9.equals((java.lang.Object) hours26);
        org.joda.time.Hours hours28 = hours4.minus(hours9);
        org.joda.time.Hours hours30 = hours9.dividedBy((int) (short) 1);
        org.joda.time.Hours hours32 = org.joda.time.Hours.parseHours("PT8H");
        org.joda.time.Duration duration33 = hours32.toStandardDuration();
        org.joda.time.Hours hours34 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours35 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod36 = hours35.toMutablePeriod();
        org.joda.time.Hours hours37 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours38 = hours35.minus(hours37);
        int int39 = hours34.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours37);
        org.joda.time.DurationFieldType durationFieldType40 = null;
        boolean boolean41 = hours34.isSupported(durationFieldType40);
        org.joda.time.Hours hours42 = hours32.minus(hours34);
        org.joda.time.Hours hours43 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours44 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod45 = hours44.toMutablePeriod();
        org.joda.time.Hours hours46 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours47 = hours44.minus(hours46);
        int int48 = hours43.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours46);
        org.joda.time.DurationFieldType durationFieldType49 = null;
        boolean boolean50 = hours43.isSupported(durationFieldType49);
        org.joda.time.Hours hours52 = hours43.minus((int) (short) -1);
        org.joda.time.Hours hours53 = hours52.negated();
        org.joda.time.DurationFieldType durationFieldType54 = hours52.getFieldType();
        int int55 = hours32.get(durationFieldType54);
        org.joda.time.Hours hours56 = org.joda.time.Hours.TWO;
        org.joda.time.Hours hours57 = org.joda.time.Hours.MAX_VALUE;
        int int58 = hours56.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours57);
        org.joda.time.Hours hours59 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType60 = null;
        int int61 = hours59.get(durationFieldType60);
        org.joda.time.DurationFieldType durationFieldType62 = hours59.getFieldType();
        org.joda.time.DurationFieldType durationFieldType63 = hours59.getFieldType();
        boolean boolean64 = hours57.isSupported(durationFieldType63);
        org.joda.time.Period period65 = hours57.toPeriod();
        org.joda.time.Hours hours66 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) period65);
        org.joda.time.Hours hours67 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod68 = hours67.toMutablePeriod();
        org.joda.time.Hours hours69 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours70 = hours67.minus(hours69);
        org.joda.time.Hours hours72 = hours69.plus(8);
        org.joda.time.Hours hours73 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType74 = null;
        int int75 = hours73.get(durationFieldType74);
        org.joda.time.DurationFieldType durationFieldType76 = hours73.getFieldType();
        boolean boolean77 = hours72.isSupported(durationFieldType76);
        boolean boolean78 = hours66.isSupported(durationFieldType76);
        boolean boolean79 = hours32.isSupported(durationFieldType76);
        boolean boolean80 = hours30.isSupported(durationFieldType76);
        org.joda.time.Hours hours81 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours82 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod83 = hours82.toMutablePeriod();
        org.joda.time.Hours hours84 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours85 = hours82.minus(hours84);
        int int86 = hours81.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours84);
        org.joda.time.Hours hours88 = hours81.minus((int) 'a');
        org.joda.time.Hours hours89 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours81);
        boolean boolean90 = hours30.equals((java.lang.Object) hours81);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 8 + "'", int11 == 8);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(mutablePeriod36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(mutablePeriod45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(durationFieldType54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 8 + "'", int55 == 8);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(durationFieldType62);
        org.junit.Assert.assertNotNull(durationFieldType63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertNotNull(mutablePeriod68);
        org.junit.Assert.assertNotNull(hours69);
        org.junit.Assert.assertNotNull(hours70);
        org.junit.Assert.assertNotNull(hours72);
        org.junit.Assert.assertNotNull(hours73);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertNotNull(durationFieldType76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(hours81);
        org.junit.Assert.assertNotNull(hours82);
        org.junit.Assert.assertNotNull(mutablePeriod83);
        org.junit.Assert.assertNotNull(hours84);
        org.junit.Assert.assertNotNull(hours85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertNotNull(hours88);
        org.junit.Assert.assertNotNull(hours89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test0879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0879");
        org.joda.time.Hours hours0 = org.joda.time.Hours.EIGHT;
        int int2 = hours0.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus((int) '4');
        // The following exception was thrown during execution in test generation
        try {
            int int6 = hours4.getValue(7);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 7");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 8 + "'", int2 == 8);
        org.junit.Assert.assertNotNull(hours4);
    }

    @Test
    public void test0880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0880");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(0);
        int int2 = hours1.size();
        org.joda.time.Hours hours4 = org.joda.time.Hours.hours((-1));
        int int5 = hours1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours4);
        org.joda.time.Hours hours7 = hours1.plus(32);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(hours7);
    }

    @Test
    public void test0881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0881");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = hours8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = hours8.getFieldType();
        int int12 = hours7.get(durationFieldType11);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod14 = hours13.toMutablePeriod();
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours16 = hours13.minus(hours15);
        org.joda.time.Duration duration17 = hours13.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod18 = hours13.toMutablePeriod();
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        int int21 = hours19.getValue((int) (short) 0);
        java.lang.String str22 = hours19.toString();
        boolean boolean23 = hours13.isGreaterThan(hours19);
        org.joda.time.Hours hours25 = hours19.minus(10);
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod28 = hours27.toMutablePeriod();
        org.joda.time.Hours hours29 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours30 = hours27.minus(hours29);
        int int31 = hours26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours29);
        org.joda.time.Hours hours32 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours26);
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = hours26.get(durationFieldType33);
        boolean boolean35 = hours25.equals((java.lang.Object) hours26);
        org.joda.time.Hours hours37 = hours26.minus(100);
        org.joda.time.Hours hours38 = hours7.minus(hours26);
        org.joda.time.Hours hours40 = hours26.plus(8);
        int int41 = hours40.getHours();
        org.joda.time.Hours hours42 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType43 = null;
        int int44 = hours42.get(durationFieldType43);
        org.joda.time.DurationFieldType durationFieldType45 = hours42.getFieldType();
        org.joda.time.DurationFieldType durationFieldType46 = hours42.getFieldType();
        org.joda.time.Period period47 = hours42.toPeriod();
        org.joda.time.Duration duration48 = hours42.toStandardDuration();
        org.joda.time.Hours hours49 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours42);
        org.joda.time.Hours hours50 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod51 = hours50.toMutablePeriod();
        org.joda.time.Hours hours52 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours53 = hours50.minus(hours52);
        org.joda.time.Hours hours54 = hours52.negated();
        org.joda.time.DurationFieldType durationFieldType55 = hours54.getFieldType();
        org.joda.time.Hours hours56 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod57 = hours56.toMutablePeriod();
        org.joda.time.Hours hours58 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours59 = hours56.minus(hours58);
        org.joda.time.Hours hours60 = hours58.negated();
        int int61 = hours60.getHours();
        int int62 = hours54.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours60);
        org.joda.time.Hours hours63 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod64 = hours63.toMutablePeriod();
        org.joda.time.Hours hours65 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours66 = hours63.minus(hours65);
        org.joda.time.DurationFieldType durationFieldType67 = null;
        int int68 = hours63.get(durationFieldType67);
        org.joda.time.Hours hours70 = hours63.minus((int) (short) 0);
        org.joda.time.Hours hours71 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType72 = null;
        int int73 = hours71.get(durationFieldType72);
        org.joda.time.DurationFieldType durationFieldType74 = hours71.getFieldType();
        int int75 = hours70.get(durationFieldType74);
        org.joda.time.PeriodType periodType76 = hours70.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType77 = hours70.getFieldType();
        boolean boolean78 = hours54.isSupported(durationFieldType77);
        boolean boolean79 = hours49.isSupported(durationFieldType77);
        int int80 = hours40.get(durationFieldType77);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 7 + "'", int12 == 7);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 8 + "'", int21 == 8);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "PT8H" + "'", str22, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 15 + "'", int41 == 15);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertNotNull(durationFieldType46);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(mutablePeriod51);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(durationFieldType55);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertNotNull(mutablePeriod57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-8) + "'", int61 == (-8));
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertNotNull(mutablePeriod64);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(hours70);
        org.junit.Assert.assertNotNull(hours71);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(durationFieldType74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 7 + "'", int75 == 7);
        org.junit.Assert.assertNotNull(periodType76);
        org.junit.Assert.assertNotNull(durationFieldType77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 15 + "'", int80 == 15);
    }

    @Test
    public void test0882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0882");
        org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT-8H");
        org.joda.time.Seconds seconds2 = hours1.toStandardSeconds();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(seconds2);
    }

    @Test
    public void test0883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0883");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        int int4 = hours2.getValue((int) (short) 0);
        org.joda.time.Hours hours5 = hours1.minus(hours2);
        org.joda.time.Hours hours6 = hours0.minus(hours1);
        java.lang.String str7 = hours1.toString();
        org.joda.time.DurationFieldType durationFieldType8 = hours1.getFieldType();
        org.joda.time.MutablePeriod mutablePeriod9 = hours1.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours11 = org.joda.time.Hours.EIGHT;
        int int13 = hours11.getValue((int) (short) 0);
        org.joda.time.Hours hours14 = hours10.minus(hours11);
        org.joda.time.Hours hours15 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod16 = hours15.toMutablePeriod();
        org.joda.time.Hours hours17 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours18 = hours15.minus(hours17);
        org.joda.time.Hours hours20 = hours17.plus(8);
        org.joda.time.Hours hours21 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType22 = null;
        int int23 = hours21.get(durationFieldType22);
        org.joda.time.DurationFieldType durationFieldType24 = hours21.getFieldType();
        boolean boolean25 = hours20.isSupported(durationFieldType24);
        boolean boolean26 = hours10.isSupported(durationFieldType24);
        int int27 = hours10.size();
        org.joda.time.Hours hours28 = hours1.plus(hours10);
        org.joda.time.Hours hours30 = org.joda.time.Hours.hours((int) '4');
        org.joda.time.DurationFieldType durationFieldType31 = hours30.getFieldType();
        org.joda.time.Period period32 = hours30.toPeriod();
        org.joda.time.Period period33 = hours30.toPeriod();
        org.joda.time.Hours hours35 = hours30.plus(0);
        org.joda.time.Hours hours36 = hours35.negated();
        int int37 = hours1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours35);
        // The following exception was thrown during execution in test generation
        try {
            int int39 = hours35.getValue(32);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 32");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 8 + "'", int4 == 8);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT7H" + "'", str7, "PT7H");
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 8 + "'", int13 == 8);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
    }

    @Test
    public void test0884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0884");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours12 = hours6.minus(10);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod15 = hours14.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours17 = hours14.minus(hours16);
        int int18 = hours13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours16);
        org.joda.time.Hours hours19 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours13);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = hours13.get(durationFieldType20);
        boolean boolean22 = hours12.equals((java.lang.Object) hours13);
        org.joda.time.Hours hours24 = hours13.minus(100);
        org.joda.time.Hours hours26 = hours24.plus(7);
        org.joda.time.MutablePeriod mutablePeriod27 = hours26.toMutablePeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
    }

    @Test
    public void test0885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0885");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period1 = hours0.toPeriod();
        java.lang.String str2 = hours0.toString();
        org.joda.time.Hours hours4 = org.joda.time.Hours.hours((-25));
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod7 = hours6.toMutablePeriod();
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours9 = hours6.minus(hours8);
        int int10 = hours5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours8);
        org.joda.time.DurationFieldType durationFieldType11 = null;
        boolean boolean12 = hours5.isSupported(durationFieldType11);
        org.joda.time.Hours hours14 = hours5.minus((int) (short) -1);
        org.joda.time.PeriodType periodType15 = hours5.getPeriodType();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        int int18 = hours16.getValue((int) (short) 0);
        org.joda.time.Hours hours19 = hours5.minus(hours16);
        org.joda.time.Hours hours21 = hours5.plus(7);
        int int22 = hours5.size();
        org.joda.time.Hours hours23 = org.joda.time.Hours.TWO;
        org.joda.time.Hours hours25 = hours23.plus(0);
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod28 = hours27.toMutablePeriod();
        org.joda.time.Hours hours29 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours30 = hours27.minus(hours29);
        int int31 = hours26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours29);
        org.joda.time.DurationFieldType durationFieldType32 = null;
        boolean boolean33 = hours26.isSupported(durationFieldType32);
        org.joda.time.Hours hours35 = hours26.minus((int) (short) -1);
        org.joda.time.Hours hours36 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod37 = hours36.toMutablePeriod();
        org.joda.time.Hours hours38 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours39 = hours36.minus(hours38);
        org.joda.time.Hours hours41 = hours38.plus(8);
        org.joda.time.Hours hours42 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType43 = null;
        int int44 = hours42.get(durationFieldType43);
        org.joda.time.DurationFieldType durationFieldType45 = hours42.getFieldType();
        boolean boolean46 = hours41.isSupported(durationFieldType45);
        int int47 = hours35.get(durationFieldType45);
        org.joda.time.Hours hours48 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours49 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod50 = hours49.toMutablePeriod();
        org.joda.time.Hours hours51 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours52 = hours49.minus(hours51);
        int int53 = hours48.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours51);
        org.joda.time.DurationFieldType durationFieldType54 = null;
        boolean boolean55 = hours48.isSupported(durationFieldType54);
        org.joda.time.Hours hours57 = hours48.multipliedBy((int) (short) 10);
        org.joda.time.Hours hours58 = hours35.plus(hours48);
        org.joda.time.DurationFieldType durationFieldType59 = hours58.getFieldType();
        boolean boolean60 = hours25.isSupported(durationFieldType59);
        org.joda.time.Hours hours62 = org.joda.time.Hours.hours(0);
        org.joda.time.Hours hours63 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod64 = hours63.toMutablePeriod();
        org.joda.time.Hours hours65 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours66 = hours63.minus(hours65);
        org.joda.time.DurationFieldType durationFieldType67 = null;
        boolean boolean68 = hours65.isSupported(durationFieldType67);
        org.joda.time.Hours hours69 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours70 = org.joda.time.Hours.EIGHT;
        int int72 = hours70.getValue((int) (short) 0);
        org.joda.time.Hours hours73 = hours69.minus(hours70);
        boolean boolean74 = hours65.isLessThan(hours70);
        org.joda.time.Hours hours75 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType76 = null;
        int int77 = hours75.get(durationFieldType76);
        org.joda.time.DurationFieldType durationFieldType78 = hours75.getFieldType();
        boolean boolean79 = hours65.isSupported(durationFieldType78);
        int int80 = hours62.get(durationFieldType78);
        boolean boolean81 = hours25.isSupported(durationFieldType78);
        boolean boolean82 = hours5.isSupported(durationFieldType78);
        int int83 = hours4.get(durationFieldType78);
        boolean boolean84 = hours0.equals((java.lang.Object) hours4);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "PT7H" + "'", str2, "PT7H");
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 8 + "'", int18 == 8);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 8 + "'", int47 == 8);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(mutablePeriod50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(durationFieldType59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertNotNull(mutablePeriod64);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(hours69);
        org.junit.Assert.assertNotNull(hours70);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 8 + "'", int72 == 8);
        org.junit.Assert.assertNotNull(hours73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(hours75);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(durationFieldType78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-25) + "'", int83 == (-25));
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test0886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0886");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        int int9 = hours7.getValue((int) (short) 0);
        org.joda.time.Hours hours10 = hours6.minus(hours7);
        org.joda.time.Hours hours11 = hours5.minus(hours6);
        int int12 = hours5.size();
        org.joda.time.Duration duration13 = hours5.toStandardDuration();
        boolean boolean14 = hours1.isGreaterThan(hours5);
        org.joda.time.Hours hours16 = org.joda.time.Hours.hours((int) '4');
        org.joda.time.DurationFieldType durationFieldType17 = hours16.getFieldType();
        org.joda.time.Period period18 = hours16.toPeriod();
        org.joda.time.Period period19 = hours16.toPeriod();
        org.joda.time.Hours hours21 = hours16.plus(0);
        org.joda.time.Hours hours22 = hours21.negated();
        org.joda.time.DurationFieldType durationFieldType23 = hours21.getFieldType();
        org.joda.time.Hours hours24 = hours5.plus(hours21);
        org.joda.time.Hours hours26 = hours24.multipliedBy(100);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8 + "'", int9 == 8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours26);
    }

    @Test
    public void test0887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0887");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        boolean boolean6 = hours1.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours7 = null;
        org.joda.time.Hours hours8 = hours1.minus(hours7);
        org.joda.time.Hours hours9 = hours8.negated();
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.Duration duration14 = hours10.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod15 = hours10.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        int int18 = hours16.getValue((int) (short) 0);
        java.lang.String str19 = hours16.toString();
        boolean boolean20 = hours10.isGreaterThan(hours16);
        org.joda.time.Hours hours22 = hours16.minus(10);
        org.joda.time.Hours hours23 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod25 = hours24.toMutablePeriod();
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours27 = hours24.minus(hours26);
        int int28 = hours23.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours26);
        org.joda.time.Hours hours29 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours23);
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = hours23.get(durationFieldType30);
        boolean boolean32 = hours22.equals((java.lang.Object) hours23);
        java.lang.String str33 = hours22.toString();
        org.joda.time.DurationFieldType durationFieldType35 = hours22.getFieldType(0);
        boolean boolean36 = hours8.isGreaterThan(hours22);
        int int37 = hours8.getHours();
        org.joda.time.DurationFieldType durationFieldType38 = hours8.getFieldType();
        org.joda.time.Hours hours39 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours40 = org.joda.time.Hours.EIGHT;
        int int42 = hours40.getValue((int) (short) 0);
        org.joda.time.Hours hours43 = hours39.minus(hours40);
        org.joda.time.Hours hours44 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType45 = null;
        int int46 = hours44.get(durationFieldType45);
        org.joda.time.DurationFieldType durationFieldType47 = hours44.getFieldType();
        int int48 = hours39.get(durationFieldType47);
        org.joda.time.Hours hours50 = hours39.multipliedBy(7);
        org.joda.time.Hours hours52 = hours50.minus((-2));
        org.joda.time.Hours hours53 = hours8.minus(hours50);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 8 + "'", int18 == 8);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "PT8H" + "'", str19, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "PT-2H" + "'", str33, "PT-2H");
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 8 + "'", int37 == 8);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 8 + "'", int42 == 8);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 7 + "'", int48 == 7);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(hours53);
    }

    @Test
    public void test0888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0888");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours12 = hours6.minus(10);
        org.joda.time.Hours hours13 = hours6.negated();
        org.joda.time.Hours hours14 = org.joda.time.Hours.THREE;
        org.joda.time.Period period15 = hours14.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod16 = hours14.toMutablePeriod();
        boolean boolean17 = hours13.equals((java.lang.Object) hours14);
        int int18 = hours13.getHours();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-8) + "'", int18 == (-8));
    }

    @Test
    public void test0889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0889");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        int int1 = hours0.getHours();
        org.joda.time.Hours hours3 = hours0.plus(10);
        org.joda.time.Hours hours4 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod5 = hours4.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours7 = hours4.minus(hours6);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = hours4.get(durationFieldType8);
        org.joda.time.Hours hours11 = hours4.multipliedBy(1);
        boolean boolean12 = hours0.isGreaterThan(hours4);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        int int17 = hours15.getValue((int) (short) 0);
        org.joda.time.Hours hours18 = hours14.minus(hours15);
        org.joda.time.Hours hours19 = hours13.minus(hours14);
        int int20 = hours13.size();
        org.joda.time.Hours hours21 = hours4.plus(hours13);
        org.joda.time.Hours hours22 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours23 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod24 = hours23.toMutablePeriod();
        org.joda.time.Hours hours25 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours26 = hours23.minus(hours25);
        int int27 = hours22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours25);
        org.joda.time.Hours hours29 = hours25.multipliedBy(0);
        org.joda.time.Duration duration30 = hours25.toStandardDuration();
        org.joda.time.Hours hours32 = hours25.dividedBy((int) (short) -1);
        int int33 = hours32.size();
        boolean boolean34 = hours21.isLessThan(hours32);
        org.joda.time.Hours hours35 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod36 = hours35.toMutablePeriod();
        org.joda.time.Hours hours37 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours38 = hours35.minus(hours37);
        org.joda.time.Duration duration39 = hours35.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod40 = hours35.toMutablePeriod();
        org.joda.time.PeriodType periodType41 = hours35.getPeriodType();
        org.joda.time.Hours hours43 = org.joda.time.Hours.parseHours("PT7H");
        boolean boolean44 = hours35.isLessThan(hours43);
        org.joda.time.Hours hours45 = org.joda.time.Hours.ZERO;
        boolean boolean46 = hours43.isGreaterThan(hours45);
        org.joda.time.Hours hours47 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours48 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType49 = null;
        int int50 = hours48.get(durationFieldType49);
        boolean boolean51 = hours47.equals((java.lang.Object) durationFieldType49);
        org.joda.time.Hours hours52 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours53 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod54 = hours53.toMutablePeriod();
        org.joda.time.Hours hours55 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours56 = hours53.minus(hours55);
        int int57 = hours52.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours55);
        org.joda.time.Hours hours59 = hours55.multipliedBy(0);
        org.joda.time.Hours hours60 = hours47.plus(hours59);
        org.joda.time.DurationFieldType durationFieldType61 = hours60.getFieldType();
        int int62 = hours43.get(durationFieldType61);
        int int63 = hours43.getHours();
        org.joda.time.Hours hours64 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours65 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod66 = hours65.toMutablePeriod();
        org.joda.time.Hours hours67 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours68 = hours65.minus(hours67);
        int int69 = hours64.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours67);
        org.joda.time.DurationFieldType durationFieldType70 = null;
        boolean boolean71 = hours64.isSupported(durationFieldType70);
        org.joda.time.Hours hours73 = hours64.minus((int) (short) -1);
        org.joda.time.Hours hours74 = hours73.negated();
        org.joda.time.Hours hours76 = hours74.plus(16);
        org.joda.time.DurationFieldType durationFieldType77 = hours74.getFieldType();
        boolean boolean78 = hours43.isSupported(durationFieldType77);
        int int79 = hours21.get(durationFieldType77);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 8 + "'", int17 == 8);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(mutablePeriod36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertNotNull(mutablePeriod40);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(mutablePeriod54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertNotNull(durationFieldType61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 7 + "'", int62 == 7);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 7 + "'", int63 == 7);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertNotNull(mutablePeriod66);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(hours73);
        org.junit.Assert.assertNotNull(hours74);
        org.junit.Assert.assertNotNull(hours76);
        org.junit.Assert.assertNotNull(durationFieldType77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 13 + "'", int79 == 13);
    }

    @Test
    public void test0890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0890");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        org.joda.time.Hours hours9 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        int int14 = hours9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours12);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = hours9.isSupported(durationFieldType15);
        org.joda.time.Hours hours18 = hours9.minus((int) (short) -1);
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        org.joda.time.Hours hours24 = hours21.plus(8);
        org.joda.time.Hours hours25 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType26 = null;
        int int27 = hours25.get(durationFieldType26);
        org.joda.time.DurationFieldType durationFieldType28 = hours25.getFieldType();
        boolean boolean29 = hours24.isSupported(durationFieldType28);
        int int30 = hours18.get(durationFieldType28);
        org.joda.time.Hours hours31 = hours0.plus(hours18);
        org.joda.time.Hours hours33 = hours31.minus(15);
        org.joda.time.Duration duration34 = hours31.toStandardDuration();
        org.joda.time.Hours hours35 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours36 = org.joda.time.Hours.EIGHT;
        int int38 = hours36.getValue((int) (short) 0);
        org.joda.time.Hours hours39 = hours35.minus(hours36);
        org.joda.time.Hours hours40 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours41 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours42 = org.joda.time.Hours.EIGHT;
        int int44 = hours42.getValue((int) (short) 0);
        org.joda.time.Hours hours45 = hours41.minus(hours42);
        org.joda.time.Hours hours46 = hours40.minus(hours41);
        int int47 = hours40.size();
        org.joda.time.Duration duration48 = hours40.toStandardDuration();
        boolean boolean49 = hours36.isGreaterThan(hours40);
        org.joda.time.Hours hours51 = hours40.plus((int) (byte) -1);
        org.joda.time.Hours hours53 = hours51.multipliedBy((int) (short) 1);
        boolean boolean54 = hours31.isLessThan(hours53);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 8 + "'", int30 == 8);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 8 + "'", int38 == 8);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 8 + "'", int44 == 8);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test0891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0891");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours12 = hours0.multipliedBy((int) '4');
        org.joda.time.Hours hours13 = hours0.negated();
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        int int17 = hours15.getValue((int) (short) 0);
        org.joda.time.Hours hours18 = hours14.minus(hours15);
        int int19 = hours18.getHours();
        org.joda.time.Hours hours20 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours21 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType22 = null;
        int int23 = hours21.get(durationFieldType22);
        boolean boolean24 = hours20.equals((java.lang.Object) durationFieldType22);
        org.joda.time.Hours hours25 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod27 = hours26.toMutablePeriod();
        org.joda.time.Hours hours28 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours29 = hours26.minus(hours28);
        int int30 = hours25.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours28);
        org.joda.time.Hours hours32 = hours28.multipliedBy(0);
        org.joda.time.Hours hours33 = hours20.plus(hours32);
        org.joda.time.DurationFieldType durationFieldType34 = hours33.getFieldType();
        org.joda.time.Hours hours35 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours36 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod37 = hours36.toMutablePeriod();
        org.joda.time.Hours hours38 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours39 = hours36.minus(hours38);
        int int40 = hours35.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours38);
        org.joda.time.Hours hours41 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours35);
        org.joda.time.DurationFieldType durationFieldType42 = hours35.getFieldType();
        int int43 = hours33.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours35);
        org.joda.time.Hours hours44 = hours18.minus(hours33);
        org.joda.time.Hours hours45 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod46 = hours45.toMutablePeriod();
        org.joda.time.Hours hours47 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours48 = hours45.minus(hours47);
        org.joda.time.Duration duration49 = hours45.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod50 = hours45.toMutablePeriod();
        org.joda.time.Hours hours51 = org.joda.time.Hours.EIGHT;
        int int53 = hours51.getValue((int) (short) 0);
        java.lang.String str54 = hours51.toString();
        boolean boolean55 = hours45.isGreaterThan(hours51);
        org.joda.time.Hours hours57 = hours51.minus(10);
        org.joda.time.Hours hours58 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours59 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod60 = hours59.toMutablePeriod();
        org.joda.time.Hours hours61 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours62 = hours59.minus(hours61);
        int int63 = hours58.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours61);
        org.joda.time.Hours hours64 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours58);
        org.joda.time.DurationFieldType durationFieldType65 = null;
        int int66 = hours58.get(durationFieldType65);
        boolean boolean67 = hours57.equals((java.lang.Object) hours58);
        java.lang.String str68 = hours57.toString();
        org.joda.time.DurationFieldType durationFieldType70 = hours57.getFieldType(0);
        int int71 = hours44.get(durationFieldType70);
        int int72 = hours0.get(durationFieldType70);
        int int73 = hours0.size();
        int int74 = hours0.getHours();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 8 + "'", int17 == 8);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(mutablePeriod46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertNotNull(mutablePeriod50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 8 + "'", int53 == 8);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "PT8H" + "'", str54, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(mutablePeriod60);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "PT-2H" + "'", str68, "PT-2H");
        org.junit.Assert.assertNotNull(durationFieldType70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-4) + "'", int71 == (-4));
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 7 + "'", int72 == 7);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 7 + "'", int74 == 7);
    }

    @Test
    public void test0892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0892");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        boolean boolean22 = hours16.isGreaterThan(hours20);
        org.joda.time.Hours hours23 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod24 = hours23.toMutablePeriod();
        org.joda.time.Hours hours25 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours26 = hours23.minus(hours25);
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = hours23.get(durationFieldType27);
        org.joda.time.Hours hours30 = hours23.minus((int) (short) 0);
        org.joda.time.Hours hours31 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours23);
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours33 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod34 = hours33.toMutablePeriod();
        org.joda.time.Hours hours35 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours36 = hours33.minus(hours35);
        int int37 = hours32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours35);
        org.joda.time.DurationFieldType durationFieldType38 = null;
        boolean boolean39 = hours32.isSupported(durationFieldType38);
        org.joda.time.Hours hours41 = hours32.minus((int) (short) -1);
        org.joda.time.Hours hours42 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod43 = hours42.toMutablePeriod();
        org.joda.time.Hours hours44 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours45 = hours42.minus(hours44);
        org.joda.time.Hours hours47 = hours44.plus(8);
        org.joda.time.Hours hours48 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType49 = null;
        int int50 = hours48.get(durationFieldType49);
        org.joda.time.DurationFieldType durationFieldType51 = hours48.getFieldType();
        boolean boolean52 = hours47.isSupported(durationFieldType51);
        int int53 = hours41.get(durationFieldType51);
        org.joda.time.Hours hours54 = hours23.plus(hours41);
        org.joda.time.Hours hours55 = hours20.plus(hours23);
        org.joda.time.Hours hours56 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours57 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod58 = hours57.toMutablePeriod();
        org.joda.time.Hours hours59 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours60 = hours57.minus(hours59);
        int int61 = hours56.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours59);
        org.joda.time.Hours hours63 = hours59.multipliedBy(0);
        org.joda.time.Hours hours64 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours65 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod66 = hours65.toMutablePeriod();
        org.joda.time.Hours hours67 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours68 = hours65.minus(hours67);
        int int69 = hours64.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours67);
        org.joda.time.DurationFieldType durationFieldType70 = null;
        boolean boolean71 = hours64.isSupported(durationFieldType70);
        org.joda.time.Hours hours73 = hours64.minus((int) (short) -1);
        org.joda.time.PeriodType periodType74 = hours64.getPeriodType();
        int int75 = hours64.getHours();
        boolean boolean76 = hours59.equals((java.lang.Object) int75);
        org.joda.time.Hours hours77 = hours23.minus(hours59);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType79 = hours77.getFieldType(1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(durationFieldType51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 8 + "'", int53 == 8);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(mutablePeriod58);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertNotNull(mutablePeriod66);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(hours73);
        org.junit.Assert.assertNotNull(periodType74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 7 + "'", int75 == 7);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(hours77);
    }

    @Test
    public void test0893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0893");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours3 = hours1.multipliedBy((int) (byte) 100);
        int int4 = hours3.size();
        int int5 = hours3.size();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
    }

    @Test
    public void test0894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0894");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        boolean boolean22 = hours16.isGreaterThan(hours20);
        org.joda.time.Hours hours23 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod24 = hours23.toMutablePeriod();
        org.joda.time.Hours hours25 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours26 = hours23.minus(hours25);
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = hours23.get(durationFieldType27);
        org.joda.time.Hours hours30 = hours23.minus((int) (short) 0);
        org.joda.time.Hours hours31 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours23);
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours33 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod34 = hours33.toMutablePeriod();
        org.joda.time.Hours hours35 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours36 = hours33.minus(hours35);
        int int37 = hours32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours35);
        org.joda.time.DurationFieldType durationFieldType38 = null;
        boolean boolean39 = hours32.isSupported(durationFieldType38);
        org.joda.time.Hours hours41 = hours32.minus((int) (short) -1);
        org.joda.time.Hours hours42 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod43 = hours42.toMutablePeriod();
        org.joda.time.Hours hours44 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours45 = hours42.minus(hours44);
        org.joda.time.Hours hours47 = hours44.plus(8);
        org.joda.time.Hours hours48 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType49 = null;
        int int50 = hours48.get(durationFieldType49);
        org.joda.time.DurationFieldType durationFieldType51 = hours48.getFieldType();
        boolean boolean52 = hours47.isSupported(durationFieldType51);
        int int53 = hours41.get(durationFieldType51);
        org.joda.time.Hours hours54 = hours23.plus(hours41);
        org.joda.time.Hours hours55 = hours20.plus(hours23);
        org.joda.time.Hours hours56 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours57 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod58 = hours57.toMutablePeriod();
        org.joda.time.Hours hours59 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours60 = hours57.minus(hours59);
        int int61 = hours56.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours59);
        org.joda.time.Hours hours63 = hours59.multipliedBy(0);
        org.joda.time.Hours hours64 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours65 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod66 = hours65.toMutablePeriod();
        org.joda.time.Hours hours67 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours68 = hours65.minus(hours67);
        int int69 = hours64.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours67);
        org.joda.time.DurationFieldType durationFieldType70 = null;
        boolean boolean71 = hours64.isSupported(durationFieldType70);
        org.joda.time.Hours hours73 = hours64.minus((int) (short) -1);
        org.joda.time.PeriodType periodType74 = hours64.getPeriodType();
        int int75 = hours64.getHours();
        boolean boolean76 = hours59.equals((java.lang.Object) int75);
        org.joda.time.Hours hours77 = hours23.minus(hours59);
        org.joda.time.Hours hours79 = hours77.minus((-4));
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(durationFieldType51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 8 + "'", int53 == 8);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(mutablePeriod58);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertNotNull(mutablePeriod66);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(hours73);
        org.junit.Assert.assertNotNull(periodType74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 7 + "'", int75 == 7);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(hours77);
        org.junit.Assert.assertNotNull(hours79);
    }

    @Test
    public void test0895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0895");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        int int1 = hours0.getHours();
        org.joda.time.Hours hours3 = hours0.plus(10);
        int int4 = hours0.size();
        org.joda.time.Hours hours5 = hours0.negated();
        org.joda.time.Hours hours7 = hours5.plus(7);
        org.joda.time.Hours hours9 = hours5.multipliedBy(100);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = hours10.get(durationFieldType14);
        org.joda.time.Hours hours17 = hours10.minus((int) (short) 0);
        org.joda.time.Hours hours18 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours10);
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours20 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod21 = hours20.toMutablePeriod();
        org.joda.time.Hours hours22 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours23 = hours20.minus(hours22);
        int int24 = hours19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours22);
        org.joda.time.DurationFieldType durationFieldType25 = null;
        boolean boolean26 = hours19.isSupported(durationFieldType25);
        org.joda.time.Hours hours28 = hours19.minus((int) (short) -1);
        org.joda.time.Hours hours29 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod30 = hours29.toMutablePeriod();
        org.joda.time.Hours hours31 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours32 = hours29.minus(hours31);
        org.joda.time.Hours hours34 = hours31.plus(8);
        org.joda.time.Hours hours35 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType36 = null;
        int int37 = hours35.get(durationFieldType36);
        org.joda.time.DurationFieldType durationFieldType38 = hours35.getFieldType();
        boolean boolean39 = hours34.isSupported(durationFieldType38);
        int int40 = hours28.get(durationFieldType38);
        org.joda.time.Hours hours41 = hours10.plus(hours28);
        org.joda.time.Hours hours43 = hours28.minus(3);
        org.joda.time.Hours hours44 = hours5.plus(hours43);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 8 + "'", int40 == 8);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
    }

    @Test
    public void test0896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0896");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.multipliedBy(1);
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours11 = hours8.minus(hours10);
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = hours8.get(durationFieldType12);
        org.joda.time.Hours hours15 = hours8.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Hours hours17 = org.joda.time.Hours.hoursIn(readableInterval16);
        int int18 = hours15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours17);
        org.joda.time.Hours hours19 = hours0.minus(hours15);
        org.joda.time.Hours hours20 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod21 = hours20.toMutablePeriod();
        org.joda.time.Hours hours22 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours23 = hours20.minus(hours22);
        org.joda.time.Hours hours24 = hours22.negated();
        int int25 = hours24.getHours();
        org.joda.time.Hours hours27 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours29 = hours27.minus(8);
        org.joda.time.Hours hours30 = hours24.minus(hours27);
        boolean boolean31 = hours15.isLessThan(hours30);
        org.joda.time.Hours hours32 = org.joda.time.Hours.ONE;
        int int33 = hours32.getHours();
        org.joda.time.Hours hours35 = hours32.plus(10);
        int int36 = hours32.size();
        org.joda.time.Period period37 = hours32.toPeriod();
        org.joda.time.Hours hours38 = hours30.minus(hours32);
        org.joda.time.Hours hours40 = hours32.plus(36);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-8) + "'", int25 == (-8));
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours40);
    }

    @Test
    public void test0897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0897");
        org.joda.time.Hours hours0 = org.joda.time.Hours.TWO;
        org.joda.time.Hours hours1 = org.joda.time.Hours.MAX_VALUE;
        int int2 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours1);
        org.joda.time.Hours hours3 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours3.get(durationFieldType4);
        org.joda.time.DurationFieldType durationFieldType6 = hours3.getFieldType();
        org.joda.time.DurationFieldType durationFieldType7 = hours3.getFieldType();
        boolean boolean8 = hours1.isSupported(durationFieldType7);
        org.joda.time.Hours hours9 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod10 = hours9.toMutablePeriod();
        org.joda.time.Hours hours11 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours12 = hours9.minus(hours11);
        org.joda.time.Duration duration13 = hours9.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod14 = hours9.toMutablePeriod();
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        int int17 = hours15.getValue((int) (short) 0);
        java.lang.String str18 = hours15.toString();
        boolean boolean19 = hours9.isGreaterThan(hours15);
        org.joda.time.Hours hours21 = hours15.minus(10);
        org.joda.time.Hours hours22 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours23 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod24 = hours23.toMutablePeriod();
        org.joda.time.Hours hours25 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours26 = hours23.minus(hours25);
        int int27 = hours22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours25);
        org.joda.time.Hours hours28 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours22);
        org.joda.time.DurationFieldType durationFieldType29 = null;
        int int30 = hours22.get(durationFieldType29);
        boolean boolean31 = hours21.equals((java.lang.Object) hours22);
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period33 = hours32.toPeriod();
        org.joda.time.Hours hours35 = hours32.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod36 = hours35.toMutablePeriod();
        org.joda.time.Hours hours37 = org.joda.time.Hours.THREE;
        org.joda.time.Period period38 = hours37.toPeriod();
        org.joda.time.Hours hours40 = hours37.plus((int) (byte) -1);
        org.joda.time.Hours hours41 = hours35.minus(hours37);
        org.joda.time.DurationFieldType durationFieldType42 = hours41.getFieldType();
        boolean boolean43 = hours22.isGreaterThan(hours41);
        boolean boolean44 = hours1.isLessThan(hours22);
        org.joda.time.Hours hours45 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours1);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 8 + "'", int17 == 8);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "PT8H" + "'", str18, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(mutablePeriod36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(hours45);
    }

    @Test
    public void test0898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0898");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.Hours hours10 = hours9.negated();
        org.joda.time.Period period11 = hours9.toPeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.ONE;
        int int13 = hours12.getHours();
        org.joda.time.Hours hours15 = hours12.plus(10);
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod17 = hours16.toMutablePeriod();
        org.joda.time.Hours hours18 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours19 = hours16.minus(hours18);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = hours16.get(durationFieldType20);
        org.joda.time.Hours hours23 = hours16.multipliedBy(1);
        boolean boolean24 = hours12.isGreaterThan(hours16);
        int int25 = hours12.size();
        org.joda.time.Hours hours27 = hours12.plus((int) (short) 0);
        org.joda.time.Hours hours28 = hours9.plus(hours27);
        int int30 = hours28.getValue(0);
        org.joda.time.Hours hours32 = hours28.plus(15);
        org.joda.time.Hours hours33 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours28);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 9 + "'", int30 == 9);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
    }

    @Test
    public void test0899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0899");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        int int1 = hours0.getHours();
        org.joda.time.Hours hours3 = hours0.plus(10);
        org.joda.time.Period period4 = hours3.toPeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.hours(100);
        org.joda.time.Period period7 = hours6.toPeriod();
        org.joda.time.Hours hours8 = hours3.plus(hours6);
        org.joda.time.Hours hours10 = hours8.plus(7);
        org.joda.time.Hours hours11 = org.joda.time.Hours.ONE;
        int int12 = hours11.getHours();
        org.joda.time.Hours hours14 = hours11.plus(10);
        org.joda.time.Hours hours15 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod16 = hours15.toMutablePeriod();
        org.joda.time.Hours hours17 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours18 = hours15.minus(hours17);
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = hours15.get(durationFieldType19);
        org.joda.time.Hours hours22 = hours15.multipliedBy(1);
        boolean boolean23 = hours11.isGreaterThan(hours15);
        org.joda.time.Hours hours24 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours25 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        int int28 = hours26.getValue((int) (short) 0);
        org.joda.time.Hours hours29 = hours25.minus(hours26);
        org.joda.time.Hours hours30 = hours24.minus(hours25);
        int int31 = hours24.size();
        org.joda.time.Hours hours32 = hours15.plus(hours24);
        org.joda.time.Hours hours33 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours34 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod35 = hours34.toMutablePeriod();
        org.joda.time.Hours hours36 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours37 = hours34.minus(hours36);
        int int38 = hours33.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours36);
        org.joda.time.Hours hours40 = hours36.multipliedBy(0);
        org.joda.time.Duration duration41 = hours36.toStandardDuration();
        org.joda.time.Hours hours43 = hours36.dividedBy((int) (short) -1);
        int int44 = hours43.size();
        boolean boolean45 = hours32.isLessThan(hours43);
        boolean boolean46 = hours8.isGreaterThan(hours32);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 8 + "'", int28 == 8);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
    }

    @Test
    public void test0900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0900");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        boolean boolean22 = hours16.isGreaterThan(hours20);
        org.joda.time.Hours hours23 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod24 = hours23.toMutablePeriod();
        org.joda.time.Hours hours25 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours26 = hours23.minus(hours25);
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = hours23.get(durationFieldType27);
        org.joda.time.Hours hours30 = hours23.minus((int) (short) 0);
        org.joda.time.Hours hours31 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours23);
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours33 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod34 = hours33.toMutablePeriod();
        org.joda.time.Hours hours35 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours36 = hours33.minus(hours35);
        int int37 = hours32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours35);
        org.joda.time.DurationFieldType durationFieldType38 = null;
        boolean boolean39 = hours32.isSupported(durationFieldType38);
        org.joda.time.Hours hours41 = hours32.minus((int) (short) -1);
        org.joda.time.Hours hours42 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod43 = hours42.toMutablePeriod();
        org.joda.time.Hours hours44 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours45 = hours42.minus(hours44);
        org.joda.time.Hours hours47 = hours44.plus(8);
        org.joda.time.Hours hours48 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType49 = null;
        int int50 = hours48.get(durationFieldType49);
        org.joda.time.DurationFieldType durationFieldType51 = hours48.getFieldType();
        boolean boolean52 = hours47.isSupported(durationFieldType51);
        int int53 = hours41.get(durationFieldType51);
        org.joda.time.Hours hours54 = hours23.plus(hours41);
        org.joda.time.Hours hours55 = hours20.plus(hours23);
        org.joda.time.Hours hours57 = hours55.dividedBy(100);
        org.joda.time.Hours hours58 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours59 = org.joda.time.Hours.EIGHT;
        int int61 = hours59.getValue((int) (short) 0);
        org.joda.time.Hours hours62 = hours58.minus(hours59);
        java.lang.String str63 = hours62.toString();
        int int64 = hours62.size();
        int int65 = hours62.getHours();
        int int66 = hours55.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours62);
        org.joda.time.Hours hours68 = hours55.multipliedBy(14);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(durationFieldType51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 8 + "'", int53 == 8);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 8 + "'", int61 == 8);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "PT-1H" + "'", str63, "PT-1H");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertNotNull(hours68);
    }

    @Test
    public void test0901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0901");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours12 = hours6.minus(10);
        org.joda.time.Hours hours13 = hours6.negated();
        org.joda.time.Hours hours15 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod17 = hours16.toMutablePeriod();
        org.joda.time.Hours hours18 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours19 = hours16.minus(hours18);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = hours16.get(durationFieldType20);
        org.joda.time.Hours hours23 = hours16.minus((int) (short) 0);
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod25 = hours24.toMutablePeriod();
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours27 = hours24.minus(hours26);
        org.joda.time.DurationFieldType durationFieldType28 = null;
        boolean boolean29 = hours26.isSupported(durationFieldType28);
        org.joda.time.Hours hours30 = hours23.minus(hours26);
        org.joda.time.Hours hours31 = hours15.plus(hours30);
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod33 = hours32.toMutablePeriod();
        org.joda.time.Hours hours34 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours35 = hours32.minus(hours34);
        boolean boolean36 = hours30.isGreaterThan(hours34);
        java.lang.String str37 = hours30.toString();
        org.joda.time.Hours hours38 = hours6.plus(hours30);
        org.joda.time.Hours hours39 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours40 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod41 = hours40.toMutablePeriod();
        org.joda.time.Hours hours42 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours43 = hours40.minus(hours42);
        int int44 = hours39.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours42);
        org.joda.time.DurationFieldType durationFieldType45 = null;
        boolean boolean46 = hours39.isSupported(durationFieldType45);
        org.joda.time.Hours hours48 = hours39.minus((int) (short) -1);
        org.joda.time.Hours hours49 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod50 = hours49.toMutablePeriod();
        org.joda.time.Hours hours51 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours52 = hours49.minus(hours51);
        org.joda.time.Hours hours54 = hours51.plus(8);
        org.joda.time.Hours hours55 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType56 = null;
        int int57 = hours55.get(durationFieldType56);
        org.joda.time.DurationFieldType durationFieldType58 = hours55.getFieldType();
        boolean boolean59 = hours54.isSupported(durationFieldType58);
        int int60 = hours48.get(durationFieldType58);
        org.joda.time.Hours hours61 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours62 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod63 = hours62.toMutablePeriod();
        org.joda.time.Hours hours64 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours65 = hours62.minus(hours64);
        int int66 = hours61.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours64);
        org.joda.time.DurationFieldType durationFieldType67 = null;
        boolean boolean68 = hours61.isSupported(durationFieldType67);
        org.joda.time.Hours hours70 = hours61.multipliedBy((int) (short) 10);
        org.joda.time.Hours hours71 = hours48.plus(hours61);
        org.joda.time.Hours hours72 = hours6.plus(hours48);
        org.joda.time.PeriodType periodType73 = hours48.getPeriodType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "PT-1H" + "'", str37, "PT-1H");
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(mutablePeriod41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(mutablePeriod50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(durationFieldType58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 8 + "'", int60 == 8);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertNotNull(mutablePeriod63);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(hours70);
        org.junit.Assert.assertNotNull(hours71);
        org.junit.Assert.assertNotNull(hours72);
        org.junit.Assert.assertNotNull(periodType73);
    }

    @Test
    public void test0902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0902");
        org.joda.time.Hours hours0 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours1 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = hours1.get(durationFieldType2);
        boolean boolean4 = hours0.equals((java.lang.Object) durationFieldType2);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod7 = hours6.toMutablePeriod();
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours9 = hours6.minus(hours8);
        int int10 = hours5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours8);
        org.joda.time.Hours hours12 = hours8.multipliedBy(0);
        org.joda.time.Hours hours13 = hours0.plus(hours12);
        org.joda.time.Hours hours15 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod17 = hours16.toMutablePeriod();
        org.joda.time.Hours hours18 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours19 = hours16.minus(hours18);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = hours16.get(durationFieldType20);
        org.joda.time.Hours hours23 = hours16.minus((int) (short) 0);
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod25 = hours24.toMutablePeriod();
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours27 = hours24.minus(hours26);
        org.joda.time.DurationFieldType durationFieldType28 = null;
        boolean boolean29 = hours26.isSupported(durationFieldType28);
        org.joda.time.Hours hours30 = hours23.minus(hours26);
        org.joda.time.Hours hours31 = hours15.plus(hours30);
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod33 = hours32.toMutablePeriod();
        org.joda.time.Hours hours34 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours35 = hours32.minus(hours34);
        boolean boolean36 = hours30.isGreaterThan(hours34);
        org.joda.time.Hours hours37 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours30);
        int int38 = hours12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours30);
        int int39 = hours30.getHours();
        java.lang.String str40 = hours30.toString();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "PT-1H" + "'", str40, "PT-1H");
    }

    @Test
    public void test0903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0903");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((int) (short) 0);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.multipliedBy(1);
        org.joda.time.Hours hours10 = org.joda.time.Hours.ONE;
        int int11 = hours9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours10);
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        boolean boolean13 = hours9.equals((java.lang.Object) hours12);
        org.joda.time.Hours hours14 = hours1.minus(hours9);
        java.lang.String str15 = hours14.toString();
        org.joda.time.Period period16 = hours14.toPeriod();
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod18 = hours17.toMutablePeriod();
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours20 = hours17.minus(hours19);
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = hours17.get(durationFieldType21);
        org.joda.time.Hours hours24 = hours17.plus((-25));
        org.joda.time.Hours hours25 = hours14.plus(hours17);
        int int26 = hours25.size();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "PT-7H" + "'", str15, "PT-7H");
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
    }

    @Test
    public void test0904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0904");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.Hours hours2 = hours0.dividedBy((int) (byte) -1);
        org.joda.time.Hours hours4 = hours2.minus(6);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours4);
    }

    @Test
    public void test0905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0905");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((int) (short) 100);
        int int2 = hours1.getHours();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
    }

    @Test
    public void test0906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0906");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours7 = hours0.minus((int) 'a');
        org.joda.time.Hours hours8 = org.joda.time.Hours.ZERO;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        boolean boolean10 = hours7.equals((java.lang.Object) hours8);
        org.joda.time.Hours hours12 = hours8.multipliedBy((int) (short) 100);
        org.joda.time.Hours hours13 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours8);
        org.joda.time.Hours hours14 = org.joda.time.Hours.ONE;
        int int15 = hours14.getHours();
        org.joda.time.Hours hours17 = hours14.plus(10);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        org.joda.time.Duration duration22 = hours18.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod23 = hours18.toMutablePeriod();
        org.joda.time.Hours hours24 = org.joda.time.Hours.EIGHT;
        int int26 = hours24.getValue((int) (short) 0);
        java.lang.String str27 = hours24.toString();
        boolean boolean28 = hours18.isGreaterThan(hours24);
        org.joda.time.Hours hours30 = hours24.minus(10);
        org.joda.time.Hours hours31 = hours24.negated();
        org.joda.time.Hours hours33 = hours31.plus((int) (byte) 0);
        org.joda.time.DurationFieldType durationFieldType35 = hours31.getFieldType(0);
        boolean boolean36 = hours14.equals((java.lang.Object) durationFieldType35);
        int int37 = hours8.get(durationFieldType35);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(mutablePeriod23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 8 + "'", int26 == 8);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "PT8H" + "'", str27, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
    }

    @Test
    public void test0907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0907");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours12 = hours0.multipliedBy((int) '4');
        org.joda.time.Period period13 = hours0.toPeriod();
        org.joda.time.PeriodType periodType14 = hours0.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType15 = hours0.getFieldType();
        org.joda.time.MutablePeriod mutablePeriod16 = hours0.toMutablePeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
    }

    @Test
    public void test0908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0908");
        org.joda.time.Hours hours0 = org.joda.time.Hours.EIGHT;
        int int1 = hours0.size();
        org.joda.time.Hours hours3 = hours0.dividedBy(100);
        org.joda.time.Hours hours4 = hours3.negated();
        org.joda.time.Hours hours6 = org.joda.time.Hours.parseHours("PT16H");
        org.joda.time.Hours hours7 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours11 = hours8.minus(hours10);
        int int12 = hours7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours10);
        org.joda.time.MutablePeriod mutablePeriod13 = hours7.toMutablePeriod();
        org.joda.time.Hours hours14 = hours6.minus(hours7);
        org.joda.time.Hours hours15 = hours3.plus(hours6);
        org.joda.time.Hours hours17 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        int int23 = hours18.get(durationFieldType22);
        org.joda.time.Hours hours25 = hours18.minus((int) (short) 0);
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod27 = hours26.toMutablePeriod();
        org.joda.time.Hours hours28 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours29 = hours26.minus(hours28);
        org.joda.time.DurationFieldType durationFieldType30 = null;
        boolean boolean31 = hours28.isSupported(durationFieldType30);
        org.joda.time.Hours hours32 = hours25.minus(hours28);
        org.joda.time.Hours hours33 = hours17.plus(hours32);
        org.joda.time.Hours hours34 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod35 = hours34.toMutablePeriod();
        org.joda.time.Hours hours36 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours37 = hours34.minus(hours36);
        boolean boolean38 = hours32.isGreaterThan(hours36);
        org.joda.time.Hours hours40 = hours32.plus((-2));
        boolean boolean41 = hours6.equals((java.lang.Object) hours40);
        org.joda.time.Period period42 = hours6.toPeriod();
        org.joda.time.Hours hours43 = hours6.negated();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(hours43);
    }

    @Test
    public void test0909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0909");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.Hours hours2 = hours0.plus(1);
        org.joda.time.Hours hours4 = hours0.dividedBy((int) (byte) -1);
        int int5 = hours0.size();
        org.joda.time.Hours hours6 = org.joda.time.Hours.MIN_VALUE;
        org.joda.time.Hours hours8 = hours6.plus(0);
        org.joda.time.Hours hours9 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        int int14 = hours9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours12);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = hours9.isSupported(durationFieldType15);
        org.joda.time.Hours hours18 = hours9.minus((int) (short) -1);
        org.joda.time.PeriodType periodType19 = hours9.getPeriodType();
        int int20 = hours9.getHours();
        org.joda.time.DurationFieldType durationFieldType22 = hours9.getFieldType((int) (short) 0);
        boolean boolean23 = hours8.isSupported(durationFieldType22);
        int int24 = hours0.get(durationFieldType22);
        org.joda.time.Hours hours25 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod26 = hours25.toMutablePeriod();
        org.joda.time.Hours hours27 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours28 = hours25.minus(hours27);
        org.joda.time.DurationFieldType durationFieldType29 = null;
        int int30 = hours25.get(durationFieldType29);
        org.joda.time.Hours hours32 = hours25.minus((int) (short) 0);
        boolean boolean33 = hours0.equals((java.lang.Object) hours25);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 7 + "'", int20 == 7);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test0910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0910");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        int int4 = hours2.getValue((int) (short) 0);
        org.joda.time.Hours hours5 = hours1.minus(hours2);
        org.joda.time.Hours hours6 = hours0.minus(hours1);
        java.lang.String str7 = hours1.toString();
        org.joda.time.Hours hours9 = hours1.multipliedBy(14);
        java.lang.Class<?> wildcardClass10 = hours1.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 8 + "'", int4 == 8);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT7H" + "'", str7, "PT7H");
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0911");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Hours hours5 = hours2.plus(8);
        org.joda.time.Hours hours6 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = hours6.get(durationFieldType7);
        org.joda.time.DurationFieldType durationFieldType9 = hours6.getFieldType();
        boolean boolean10 = hours5.isSupported(durationFieldType9);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod13 = hours12.toMutablePeriod();
        org.joda.time.Hours hours14 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours15 = hours12.minus(hours14);
        int int16 = hours11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours14);
        org.joda.time.DurationFieldType durationFieldType17 = null;
        boolean boolean18 = hours11.isSupported(durationFieldType17);
        org.joda.time.Hours hours20 = hours11.minus((int) (short) -1);
        org.joda.time.PeriodType periodType21 = hours11.getPeriodType();
        org.joda.time.Hours hours22 = org.joda.time.Hours.EIGHT;
        int int24 = hours22.getValue((int) (short) 0);
        org.joda.time.Hours hours25 = hours11.minus(hours22);
        org.joda.time.Hours hours26 = hours5.minus(hours25);
        org.joda.time.DurationFieldType durationFieldType27 = hours26.getFieldType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 8 + "'", int24 == 8);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(durationFieldType27);
    }

    @Test
    public void test0912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0912");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours12 = hours0.multipliedBy((int) '4');
        org.joda.time.Period period13 = hours0.toPeriod();
        org.joda.time.PeriodType periodType14 = hours0.getPeriodType();
        org.joda.time.Hours hours15 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod17 = hours16.toMutablePeriod();
        org.joda.time.Hours hours18 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours19 = hours16.minus(hours18);
        int int20 = hours15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours18);
        org.joda.time.DurationFieldType durationFieldType21 = null;
        boolean boolean22 = hours15.isSupported(durationFieldType21);
        org.joda.time.Hours hours24 = hours15.minus((int) (short) -1);
        org.joda.time.PeriodType periodType25 = hours15.getPeriodType();
        int int26 = hours15.getHours();
        org.joda.time.DurationFieldType durationFieldType28 = hours15.getFieldType((int) (short) 0);
        int int29 = hours15.size();
        int int30 = hours15.size();
        org.joda.time.DurationFieldType durationFieldType31 = hours15.getFieldType();
        boolean boolean32 = hours0.equals((java.lang.Object) hours15);
        org.joda.time.Hours hours33 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours34 = hours33.negated();
        org.joda.time.Hours hours35 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours36 = org.joda.time.Hours.EIGHT;
        int int38 = hours36.getValue((int) (short) 0);
        org.joda.time.Hours hours39 = hours35.minus(hours36);
        org.joda.time.Hours hours40 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType41 = null;
        int int42 = hours40.get(durationFieldType41);
        org.joda.time.DurationFieldType durationFieldType43 = hours40.getFieldType();
        int int44 = hours35.get(durationFieldType43);
        boolean boolean45 = hours33.isSupported(durationFieldType43);
        int int46 = hours33.getHours();
        org.joda.time.Hours hours48 = hours33.dividedBy((int) ' ');
        org.joda.time.Hours hours49 = hours0.minus(hours48);
        org.joda.time.Hours hours50 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod51 = hours50.toMutablePeriod();
        org.joda.time.Hours hours52 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours53 = hours50.minus(hours52);
        org.joda.time.Hours hours54 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType55 = null;
        int int56 = hours54.get(durationFieldType55);
        org.joda.time.Hours hours58 = hours54.dividedBy(100);
        int int59 = hours54.size();
        org.joda.time.Period period60 = hours54.toPeriod();
        int int61 = hours50.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours54);
        boolean boolean62 = hours49.equals((java.lang.Object) hours54);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 7 + "'", int26 == 7);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 8 + "'", int38 == 8);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(durationFieldType43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 7 + "'", int44 == 7);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 3 + "'", int46 == 3);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(mutablePeriod51);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test0913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0913");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(2147483647);
        org.joda.time.Period period2 = hours1.toPeriod();
        org.joda.time.Duration duration3 = hours1.toStandardDuration();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(duration3);
    }

    @Test
    public void test0914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0914");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period1 = hours0.toPeriod();
        org.joda.time.Hours hours3 = hours0.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.THREE;
        org.joda.time.Period period6 = hours5.toPeriod();
        org.joda.time.Hours hours8 = hours5.plus((int) (byte) -1);
        org.joda.time.Hours hours9 = hours3.minus(hours5);
        org.joda.time.Hours hours11 = org.joda.time.Hours.hours((int) '4');
        org.joda.time.DurationFieldType durationFieldType12 = hours11.getFieldType();
        org.joda.time.Hours hours14 = hours11.plus(700);
        boolean boolean15 = hours9.isGreaterThan(hours14);
        org.joda.time.Hours hours17 = hours9.plus((int) '#');
        org.joda.time.Hours hours18 = org.joda.time.Hours.ONE;
        org.joda.time.Hours hours20 = hours18.plus(1);
        org.joda.time.Period period21 = hours18.toPeriod();
        org.joda.time.Duration duration22 = hours18.toStandardDuration();
        org.joda.time.PeriodType periodType23 = hours18.getPeriodType();
        boolean boolean24 = hours9.isLessThan(hours18);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test0915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0915");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        int int4 = hours2.getValue((int) (short) 0);
        org.joda.time.Hours hours5 = hours1.minus(hours2);
        org.joda.time.Hours hours6 = hours0.minus(hours1);
        int int7 = hours0.size();
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours9 = org.joda.time.Hours.EIGHT;
        int int11 = hours9.getValue((int) (short) 0);
        org.joda.time.Hours hours12 = hours8.minus(hours9);
        boolean boolean14 = hours9.equals((java.lang.Object) (short) 10);
        int int15 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours9);
        org.joda.time.Period period16 = hours9.toPeriod();
        org.joda.time.Hours hours18 = hours9.minus(6);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 8 + "'", int4 == 8);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 8 + "'", int11 == 8);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(hours18);
    }

    @Test
    public void test0916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0916");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(0);
        org.joda.time.Hours hours3 = hours1.multipliedBy((int) (short) 0);
        org.joda.time.Hours hours4 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        int int7 = hours5.getValue((int) (short) 0);
        org.joda.time.Hours hours8 = hours4.minus(hours5);
        boolean boolean10 = hours5.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours11 = null;
        org.joda.time.Hours hours12 = hours5.minus(hours11);
        org.joda.time.Hours hours13 = hours12.negated();
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod15 = hours14.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours17 = hours14.minus(hours16);
        org.joda.time.Duration duration18 = hours14.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod19 = hours14.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        int int22 = hours20.getValue((int) (short) 0);
        java.lang.String str23 = hours20.toString();
        boolean boolean24 = hours14.isGreaterThan(hours20);
        org.joda.time.Hours hours26 = hours20.minus(10);
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours28 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod29 = hours28.toMutablePeriod();
        org.joda.time.Hours hours30 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours31 = hours28.minus(hours30);
        int int32 = hours27.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours30);
        org.joda.time.Hours hours33 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours27);
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = hours27.get(durationFieldType34);
        boolean boolean36 = hours26.equals((java.lang.Object) hours27);
        java.lang.String str37 = hours26.toString();
        org.joda.time.DurationFieldType durationFieldType39 = hours26.getFieldType(0);
        boolean boolean40 = hours12.isGreaterThan(hours26);
        int int41 = hours12.getHours();
        org.joda.time.DurationFieldType durationFieldType42 = hours12.getFieldType();
        boolean boolean43 = hours3.isSupported(durationFieldType42);
        org.joda.time.Hours hours44 = hours3.negated();
        org.joda.time.Hours hours46 = hours3.dividedBy((int) (short) 100);
        org.joda.time.Hours hours48 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours49 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod50 = hours49.toMutablePeriod();
        org.joda.time.Hours hours51 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours52 = hours49.minus(hours51);
        org.joda.time.DurationFieldType durationFieldType53 = null;
        int int54 = hours49.get(durationFieldType53);
        org.joda.time.Hours hours56 = hours49.minus((int) (short) 0);
        org.joda.time.Hours hours57 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod58 = hours57.toMutablePeriod();
        org.joda.time.Hours hours59 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours60 = hours57.minus(hours59);
        org.joda.time.DurationFieldType durationFieldType61 = null;
        boolean boolean62 = hours59.isSupported(durationFieldType61);
        org.joda.time.Hours hours63 = hours56.minus(hours59);
        org.joda.time.Hours hours64 = hours48.plus(hours63);
        org.joda.time.Hours hours65 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours66 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod67 = hours66.toMutablePeriod();
        org.joda.time.Hours hours68 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours69 = hours66.minus(hours68);
        int int70 = hours65.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours68);
        org.joda.time.Hours hours71 = hours48.plus(hours68);
        org.joda.time.Hours hours72 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period73 = hours72.toPeriod();
        org.joda.time.Hours hours75 = hours72.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod76 = hours75.toMutablePeriod();
        org.joda.time.Hours hours77 = org.joda.time.Hours.THREE;
        org.joda.time.Period period78 = hours77.toPeriod();
        org.joda.time.Hours hours80 = hours77.plus((int) (byte) -1);
        org.joda.time.Hours hours81 = hours75.minus(hours77);
        org.joda.time.DurationFieldType durationFieldType82 = hours81.getFieldType();
        org.joda.time.Hours hours83 = hours71.plus(hours81);
        org.joda.time.Hours hours85 = hours83.multipliedBy((int) (byte) -1);
        boolean boolean86 = hours3.isGreaterThan(hours85);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 8 + "'", int7 == 8);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 8 + "'", int22 == 8);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "PT8H" + "'", str23, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "PT-2H" + "'", str37, "PT-2H");
        org.junit.Assert.assertNotNull(durationFieldType39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 8 + "'", int41 == 8);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(mutablePeriod50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(mutablePeriod58);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertNotNull(mutablePeriod67);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertNotNull(hours69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(hours71);
        org.junit.Assert.assertNotNull(hours72);
        org.junit.Assert.assertNotNull(period73);
        org.junit.Assert.assertNotNull(hours75);
        org.junit.Assert.assertNotNull(mutablePeriod76);
        org.junit.Assert.assertNotNull(hours77);
        org.junit.Assert.assertNotNull(period78);
        org.junit.Assert.assertNotNull(hours80);
        org.junit.Assert.assertNotNull(hours81);
        org.junit.Assert.assertNotNull(durationFieldType82);
        org.junit.Assert.assertNotNull(hours83);
        org.junit.Assert.assertNotNull(hours85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test0917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0917");
        org.joda.time.Hours hours0 = org.joda.time.Hours.TWO;
        org.joda.time.Hours hours1 = org.joda.time.Hours.MAX_VALUE;
        int int2 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours1);
        int int3 = hours1.size();
        org.joda.time.Hours hours4 = org.joda.time.Hours.ONE;
        org.joda.time.Hours hours6 = hours4.plus(1);
        boolean boolean7 = hours1.isGreaterThan(hours6);
        int int8 = hours6.getHours();
        org.joda.time.Hours hours10 = hours6.minus((-91));
        org.joda.time.Hours hours12 = hours6.dividedBy(8);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours12);
    }

    @Test
    public void test0918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0918");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.Hours hours10 = hours9.negated();
        org.joda.time.Hours hours12 = hours10.plus(16);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod14 = hours13.toMutablePeriod();
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours16 = hours13.minus(hours15);
        org.joda.time.Duration duration17 = hours13.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod18 = hours13.toMutablePeriod();
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        int int21 = hours19.getValue((int) (short) 0);
        java.lang.String str22 = hours19.toString();
        boolean boolean23 = hours13.isGreaterThan(hours19);
        org.joda.time.Hours hours25 = hours19.minus(10);
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod28 = hours27.toMutablePeriod();
        org.joda.time.Hours hours29 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours30 = hours27.minus(hours29);
        int int31 = hours26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours29);
        org.joda.time.Hours hours32 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours26);
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = hours26.get(durationFieldType33);
        boolean boolean35 = hours25.equals((java.lang.Object) hours26);
        org.joda.time.Hours hours36 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period37 = hours36.toPeriod();
        org.joda.time.Hours hours39 = hours36.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod40 = hours39.toMutablePeriod();
        org.joda.time.Hours hours41 = org.joda.time.Hours.THREE;
        org.joda.time.Period period42 = hours41.toPeriod();
        org.joda.time.Hours hours44 = hours41.plus((int) (byte) -1);
        org.joda.time.Hours hours45 = hours39.minus(hours41);
        org.joda.time.DurationFieldType durationFieldType46 = hours45.getFieldType();
        boolean boolean47 = hours26.isGreaterThan(hours45);
        org.joda.time.Hours hours48 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod49 = hours48.toMutablePeriod();
        org.joda.time.Hours hours50 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours51 = hours48.minus(hours50);
        org.joda.time.DurationFieldType durationFieldType52 = null;
        int int53 = hours48.get(durationFieldType52);
        org.joda.time.Hours hours55 = hours48.multipliedBy(1);
        int int56 = hours55.getHours();
        org.joda.time.DurationFieldType durationFieldType57 = hours55.getFieldType();
        boolean boolean58 = hours26.isGreaterThan(hours55);
        org.joda.time.Hours hours59 = org.joda.time.Hours.ONE;
        org.joda.time.Hours hours61 = hours59.plus(1);
        org.joda.time.Hours hours63 = hours59.dividedBy((int) (byte) -1);
        int int64 = hours59.size();
        org.joda.time.Hours hours65 = org.joda.time.Hours.MIN_VALUE;
        org.joda.time.Hours hours67 = hours65.plus(0);
        org.joda.time.Hours hours68 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours69 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod70 = hours69.toMutablePeriod();
        org.joda.time.Hours hours71 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours72 = hours69.minus(hours71);
        int int73 = hours68.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours71);
        org.joda.time.DurationFieldType durationFieldType74 = null;
        boolean boolean75 = hours68.isSupported(durationFieldType74);
        org.joda.time.Hours hours77 = hours68.minus((int) (short) -1);
        org.joda.time.PeriodType periodType78 = hours68.getPeriodType();
        int int79 = hours68.getHours();
        org.joda.time.DurationFieldType durationFieldType81 = hours68.getFieldType((int) (short) 0);
        boolean boolean82 = hours67.isSupported(durationFieldType81);
        int int83 = hours59.get(durationFieldType81);
        int int84 = hours26.get(durationFieldType81);
        boolean boolean85 = hours10.isGreaterThan(hours26);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType87 = hours10.getFieldType(32);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 32");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 8 + "'", int21 == 8);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "PT8H" + "'", str22, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(mutablePeriod40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(durationFieldType46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(mutablePeriod49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 7 + "'", int56 == 7);
        org.junit.Assert.assertNotNull(durationFieldType57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertNotNull(hours69);
        org.junit.Assert.assertNotNull(mutablePeriod70);
        org.junit.Assert.assertNotNull(hours71);
        org.junit.Assert.assertNotNull(hours72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(hours77);
        org.junit.Assert.assertNotNull(periodType78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 7 + "'", int79 == 7);
        org.junit.Assert.assertNotNull(durationFieldType81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 7 + "'", int84 == 7);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test0919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0919");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        int int23 = hours18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours21);
        org.joda.time.Hours hours24 = hours1.plus(hours21);
        org.joda.time.Hours hours25 = org.joda.time.Hours.EIGHT;
        int int27 = hours25.getValue((int) (short) 0);
        org.joda.time.Hours hours29 = hours25.minus((int) '4');
        boolean boolean30 = hours1.isGreaterThan(hours25);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 8 + "'", int27 == 8);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test0920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0920");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Hours hours9 = org.joda.time.Hours.hoursIn(readableInterval8);
        int int10 = hours7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours9);
        org.joda.time.DurationFieldType durationFieldType11 = null;
        int int12 = hours7.get(durationFieldType11);
        org.joda.time.Hours hours13 = hours7.negated();
        org.joda.time.Hours hours15 = hours13.plus((int) (short) -1);
        int int16 = hours13.getHours();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-7) + "'", int16 == (-7));
    }

    @Test
    public void test0921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0921");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        boolean boolean6 = hours1.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours7 = hours1.negated();
        org.joda.time.Hours hours9 = hours1.multipliedBy((int) (short) -1);
        org.joda.time.Period period10 = hours1.toPeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(period10);
    }

    @Test
    public void test0922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0922");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        boolean boolean6 = hours1.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours7 = null;
        org.joda.time.Hours hours8 = hours1.minus(hours7);
        org.joda.time.Hours hours9 = hours8.negated();
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.Duration duration14 = hours10.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod15 = hours10.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        int int18 = hours16.getValue((int) (short) 0);
        java.lang.String str19 = hours16.toString();
        boolean boolean20 = hours10.isGreaterThan(hours16);
        org.joda.time.Hours hours22 = hours16.minus(10);
        org.joda.time.Hours hours23 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod25 = hours24.toMutablePeriod();
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours27 = hours24.minus(hours26);
        int int28 = hours23.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours26);
        org.joda.time.Hours hours29 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours23);
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = hours23.get(durationFieldType30);
        boolean boolean32 = hours22.equals((java.lang.Object) hours23);
        java.lang.String str33 = hours22.toString();
        org.joda.time.DurationFieldType durationFieldType35 = hours22.getFieldType(0);
        boolean boolean36 = hours8.isGreaterThan(hours22);
        org.joda.time.Hours hours37 = org.joda.time.Hours.MAX_VALUE;
        int int38 = hours8.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours37);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType40 = hours37.getFieldType(17);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 17");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 8 + "'", int18 == 8);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "PT8H" + "'", str19, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "PT-2H" + "'", str33, "PT-2H");
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
    }

    @Test
    public void test0923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0923");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ZERO;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        int int6 = hours1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours4);
        org.joda.time.MutablePeriod mutablePeriod7 = hours1.toMutablePeriod();
        org.joda.time.Hours hours9 = hours1.minus(7);
        org.joda.time.Hours hours10 = hours0.minus(hours1);
        org.joda.time.Hours hours12 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod14 = hours13.toMutablePeriod();
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours16 = hours13.minus(hours15);
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = hours13.get(durationFieldType17);
        org.joda.time.Hours hours20 = hours13.minus((int) (short) 0);
        org.joda.time.Hours hours21 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod22 = hours21.toMutablePeriod();
        org.joda.time.Hours hours23 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours24 = hours21.minus(hours23);
        org.joda.time.DurationFieldType durationFieldType25 = null;
        boolean boolean26 = hours23.isSupported(durationFieldType25);
        org.joda.time.Hours hours27 = hours20.minus(hours23);
        org.joda.time.Hours hours28 = hours12.plus(hours27);
        org.joda.time.Hours hours29 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours30 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod31 = hours30.toMutablePeriod();
        org.joda.time.Hours hours32 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours33 = hours30.minus(hours32);
        int int34 = hours29.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours32);
        org.joda.time.Hours hours35 = hours12.plus(hours32);
        org.joda.time.Hours hours36 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod37 = hours36.toMutablePeriod();
        org.joda.time.Hours hours38 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours39 = hours36.minus(hours38);
        org.joda.time.DurationFieldType durationFieldType40 = null;
        int int41 = hours36.get(durationFieldType40);
        org.joda.time.Hours hours43 = hours36.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval44 = null;
        org.joda.time.Hours hours45 = org.joda.time.Hours.hoursIn(readableInterval44);
        int int46 = hours43.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours45);
        boolean boolean47 = hours32.isGreaterThan(hours43);
        org.joda.time.Hours hours49 = hours32.multipliedBy(16);
        org.joda.time.Hours hours51 = hours32.multipliedBy((int) (short) 0);
        org.joda.time.Period period52 = hours51.toPeriod();
        org.joda.time.Hours hours53 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours54 = org.joda.time.Hours.EIGHT;
        int int56 = hours54.getValue((int) (short) 0);
        org.joda.time.Hours hours57 = hours53.minus(hours54);
        org.joda.time.Hours hours58 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType59 = null;
        int int60 = hours58.get(durationFieldType59);
        org.joda.time.DurationFieldType durationFieldType61 = hours58.getFieldType();
        int int62 = hours53.get(durationFieldType61);
        boolean boolean63 = hours51.isSupported(durationFieldType61);
        org.joda.time.Hours hours64 = hours1.minus(hours51);
        org.joda.time.Period period65 = hours64.toPeriod();
        // The following exception was thrown during execution in test generation
        try {
            int int67 = hours64.getValue(10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 8 + "'", int56 == 8);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(durationFieldType61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 7 + "'", int62 == 7);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertNotNull(period65);
    }

    @Test
    public void test0924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0924");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod13 = hours12.toMutablePeriod();
        org.joda.time.Hours hours14 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours15 = hours12.minus(hours14);
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = hours12.get(durationFieldType16);
        org.joda.time.Hours hours19 = hours12.minus((int) (short) 0);
        org.joda.time.Hours hours20 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours12);
        org.joda.time.Hours hours21 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours22 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod23 = hours22.toMutablePeriod();
        org.joda.time.Hours hours24 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours25 = hours22.minus(hours24);
        int int26 = hours21.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours24);
        org.joda.time.DurationFieldType durationFieldType27 = null;
        boolean boolean28 = hours21.isSupported(durationFieldType27);
        org.joda.time.Hours hours30 = hours21.minus((int) (short) -1);
        org.joda.time.Hours hours31 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod32 = hours31.toMutablePeriod();
        org.joda.time.Hours hours33 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours34 = hours31.minus(hours33);
        org.joda.time.Hours hours36 = hours33.plus(8);
        org.joda.time.Hours hours37 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType38 = null;
        int int39 = hours37.get(durationFieldType38);
        org.joda.time.DurationFieldType durationFieldType40 = hours37.getFieldType();
        boolean boolean41 = hours36.isSupported(durationFieldType40);
        int int42 = hours30.get(durationFieldType40);
        org.joda.time.Hours hours43 = hours12.plus(hours30);
        org.joda.time.Hours hours44 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours45 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod46 = hours45.toMutablePeriod();
        org.joda.time.Hours hours47 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours48 = hours45.minus(hours47);
        int int49 = hours44.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours47);
        org.joda.time.DurationFieldType durationFieldType50 = null;
        boolean boolean51 = hours44.isSupported(durationFieldType50);
        org.joda.time.Hours hours53 = hours44.multipliedBy((int) (short) 10);
        org.joda.time.Hours hours54 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours55 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType56 = null;
        int int57 = hours55.get(durationFieldType56);
        boolean boolean58 = hours54.equals((java.lang.Object) durationFieldType56);
        org.joda.time.Hours hours59 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours60 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod61 = hours60.toMutablePeriod();
        org.joda.time.Hours hours62 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours63 = hours60.minus(hours62);
        int int64 = hours59.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours62);
        org.joda.time.Hours hours66 = hours62.multipliedBy(0);
        org.joda.time.Hours hours67 = hours54.plus(hours66);
        org.joda.time.DurationFieldType durationFieldType68 = hours67.getFieldType();
        boolean boolean69 = hours44.equals((java.lang.Object) durationFieldType68);
        int int70 = hours30.get(durationFieldType68);
        boolean boolean71 = hours11.isSupported(durationFieldType68);
        boolean boolean72 = hours0.isSupported(durationFieldType68);
        org.joda.time.Hours hours73 = org.joda.time.Hours.EIGHT;
        int int74 = hours73.size();
        org.joda.time.MutablePeriod mutablePeriod75 = hours73.toMutablePeriod();
        org.joda.time.Hours hours76 = hours73.negated();
        java.lang.Class<?> wildcardClass77 = hours76.getClass();
        boolean boolean78 = hours0.equals((java.lang.Object) wildcardClass77);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(mutablePeriod23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(durationFieldType40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 8 + "'", int42 == 8);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(mutablePeriod46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertNotNull(mutablePeriod61);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertNotNull(durationFieldType68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 8 + "'", int70 == 8);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(hours73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod75);
        org.junit.Assert.assertNotNull(hours76);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test0925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0925");
        org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT92H");
        org.junit.Assert.assertNotNull(hours1);
    }

    @Test
    public void test0926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0926");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = hours8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = hours8.getFieldType();
        int int12 = hours7.get(durationFieldType11);
        org.joda.time.PeriodType periodType13 = hours7.getPeriodType();
        org.joda.time.Hours hours15 = hours7.multipliedBy(8);
        org.joda.time.Hours hours17 = hours7.dividedBy((-25));
        org.joda.time.Hours hours18 = null;
        org.joda.time.Hours hours19 = hours7.minus(hours18);
        org.joda.time.Duration duration20 = hours19.toStandardDuration();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 7 + "'", int12 == 7);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(duration20);
    }

    @Test
    public void test0927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0927");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        boolean boolean5 = hours2.isSupported(durationFieldType4);
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        int int9 = hours7.getValue((int) (short) 0);
        org.joda.time.Hours hours10 = hours6.minus(hours7);
        boolean boolean11 = hours2.isLessThan(hours7);
        org.joda.time.Period period12 = hours2.toPeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8 + "'", int9 == 8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(period12);
    }

    @Test
    public void test0928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0928");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.MutablePeriod mutablePeriod6 = hours0.toMutablePeriod();
        org.joda.time.Hours hours8 = hours0.multipliedBy((int) (byte) 100);
        org.joda.time.Hours hours9 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        int int14 = hours9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours12);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = hours9.isSupported(durationFieldType15);
        org.joda.time.PeriodType periodType17 = hours9.getPeriodType();
        org.joda.time.Hours hours18 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        int int22 = hours20.getValue((int) (short) 0);
        org.joda.time.Hours hours23 = hours19.minus(hours20);
        org.joda.time.Hours hours24 = hours18.minus(hours19);
        int int25 = hours18.size();
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours27 = org.joda.time.Hours.EIGHT;
        int int29 = hours27.getValue((int) (short) 0);
        org.joda.time.Hours hours30 = hours26.minus(hours27);
        boolean boolean32 = hours27.equals((java.lang.Object) (short) 10);
        int int33 = hours18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours27);
        org.joda.time.Hours hours34 = hours9.plus(hours18);
        int int35 = hours18.getHours();
        boolean boolean36 = hours8.equals((java.lang.Object) int35);
        int int37 = hours8.getHours();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 8 + "'", int22 == 8);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 8 + "'", int29 == 8);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 6 + "'", int35 == 6);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 700 + "'", int37 == 700);
    }

    @Test
    public void test0929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0929");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        boolean boolean22 = hours16.isGreaterThan(hours20);
        org.joda.time.Hours hours23 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours25 = org.joda.time.Hours.EIGHT;
        int int27 = hours25.getValue((int) (short) 0);
        org.joda.time.Hours hours28 = hours24.minus(hours25);
        org.joda.time.Hours hours29 = hours23.minus(hours24);
        org.joda.time.Hours hours31 = hours24.dividedBy(1);
        org.joda.time.Duration duration32 = hours24.toStandardDuration();
        boolean boolean33 = hours20.isGreaterThan(hours24);
        org.joda.time.Hours hours34 = hours20.negated();
        org.joda.time.Hours hours35 = hours34.negated();
        java.lang.Class<?> wildcardClass36 = hours34.getClass();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 8 + "'", int27 == 8);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0930");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        boolean boolean22 = hours16.isGreaterThan(hours20);
        org.joda.time.Hours hours23 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours25 = org.joda.time.Hours.EIGHT;
        int int27 = hours25.getValue((int) (short) 0);
        org.joda.time.Hours hours28 = hours24.minus(hours25);
        org.joda.time.Hours hours29 = hours23.minus(hours24);
        org.joda.time.Hours hours31 = hours24.dividedBy(1);
        org.joda.time.Duration duration32 = hours24.toStandardDuration();
        boolean boolean33 = hours20.isGreaterThan(hours24);
        org.joda.time.Hours hours35 = hours20.multipliedBy(5);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 8 + "'", int27 == 8);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(hours35);
    }

    @Test
    public void test0931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0931");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        org.joda.time.DurationFieldType durationFieldType5 = null;
        int int6 = hours1.get(durationFieldType5);
        org.joda.time.Hours hours8 = hours1.minus((int) (short) 0);
        org.joda.time.Hours hours9 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours1);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod12 = hours11.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours14 = hours11.minus(hours13);
        int int15 = hours10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours13);
        org.joda.time.DurationFieldType durationFieldType16 = null;
        boolean boolean17 = hours10.isSupported(durationFieldType16);
        org.joda.time.Hours hours19 = hours10.minus((int) (short) -1);
        org.joda.time.Hours hours20 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod21 = hours20.toMutablePeriod();
        org.joda.time.Hours hours22 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours23 = hours20.minus(hours22);
        org.joda.time.Hours hours25 = hours22.plus(8);
        org.joda.time.Hours hours26 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = hours26.get(durationFieldType27);
        org.joda.time.DurationFieldType durationFieldType29 = hours26.getFieldType();
        boolean boolean30 = hours25.isSupported(durationFieldType29);
        int int31 = hours19.get(durationFieldType29);
        org.joda.time.Hours hours32 = hours1.plus(hours19);
        org.joda.time.Hours hours33 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours34 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod35 = hours34.toMutablePeriod();
        org.joda.time.Hours hours36 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours37 = hours34.minus(hours36);
        int int38 = hours33.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours36);
        org.joda.time.DurationFieldType durationFieldType39 = null;
        boolean boolean40 = hours33.isSupported(durationFieldType39);
        org.joda.time.Hours hours42 = hours33.multipliedBy((int) (short) 10);
        org.joda.time.Hours hours43 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours44 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType45 = null;
        int int46 = hours44.get(durationFieldType45);
        boolean boolean47 = hours43.equals((java.lang.Object) durationFieldType45);
        org.joda.time.Hours hours48 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours49 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod50 = hours49.toMutablePeriod();
        org.joda.time.Hours hours51 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours52 = hours49.minus(hours51);
        int int53 = hours48.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours51);
        org.joda.time.Hours hours55 = hours51.multipliedBy(0);
        org.joda.time.Hours hours56 = hours43.plus(hours55);
        org.joda.time.DurationFieldType durationFieldType57 = hours56.getFieldType();
        boolean boolean58 = hours33.equals((java.lang.Object) durationFieldType57);
        int int59 = hours19.get(durationFieldType57);
        boolean boolean60 = hours0.isSupported(durationFieldType57);
        org.joda.time.Hours hours61 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod62 = hours61.toMutablePeriod();
        org.joda.time.Hours hours63 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours64 = hours61.minus(hours63);
        org.joda.time.Duration duration65 = hours61.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod66 = hours61.toMutablePeriod();
        org.joda.time.Hours hours67 = org.joda.time.Hours.EIGHT;
        int int69 = hours67.getValue((int) (short) 0);
        java.lang.String str70 = hours67.toString();
        boolean boolean71 = hours61.isGreaterThan(hours67);
        org.joda.time.Hours hours73 = hours67.minus(10);
        org.joda.time.Hours hours74 = hours67.negated();
        org.joda.time.Hours hours76 = hours74.plus((int) (byte) 0);
        org.joda.time.DurationFieldType durationFieldType78 = hours74.getFieldType(0);
        int int79 = hours0.get(durationFieldType78);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType81 = hours0.getFieldType((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 97");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 8 + "'", int31 == 8);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(mutablePeriod50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertNotNull(durationFieldType57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 8 + "'", int59 == 8);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(mutablePeriod62);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertNotNull(mutablePeriod66);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 8 + "'", int69 == 8);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "PT8H" + "'", str70, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(hours73);
        org.junit.Assert.assertNotNull(hours74);
        org.junit.Assert.assertNotNull(hours76);
        org.junit.Assert.assertNotNull(durationFieldType78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 7 + "'", int79 == 7);
    }

    @Test
    public void test0932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0932");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(100);
        org.joda.time.Period period2 = hours1.toPeriod();
        org.joda.time.Hours hours4 = hours1.minus(8);
        org.joda.time.Hours hours5 = org.joda.time.Hours.THREE;
        org.joda.time.Period period6 = hours5.toPeriod();
        org.joda.time.Hours hours8 = hours5.plus((int) (byte) -1);
        org.joda.time.Hours hours10 = hours8.minus((int) (byte) 100);
        boolean boolean11 = hours1.equals((java.lang.Object) hours10);
        org.joda.time.MutablePeriod mutablePeriod12 = hours1.toMutablePeriod();
        org.joda.time.Hours hours14 = org.joda.time.Hours.parseHours("PT16H");
        org.joda.time.Hours hours15 = hours1.minus(hours14);
        int int16 = hours1.getHours();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
    }

    @Test
    public void test0933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0933");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        int int4 = hours2.getValue((int) (short) 0);
        org.joda.time.Hours hours5 = hours1.minus(hours2);
        org.joda.time.Hours hours6 = hours0.minus(hours1);
        java.lang.String str7 = hours1.toString();
        org.joda.time.Hours hours9 = hours1.plus(8);
        org.joda.time.DurationFieldType durationFieldType10 = hours1.getFieldType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 8 + "'", int4 == 8);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT7H" + "'", str7, "PT7H");
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(durationFieldType10);
    }

    @Test
    public void test0934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0934");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours3 = hours1.minus(8);
        org.joda.time.Hours hours4 = org.joda.time.Hours.ONE;
        org.joda.time.Hours hours6 = hours4.plus(1);
        org.joda.time.Hours hours8 = hours6.minus((int) (byte) 10);
        org.joda.time.Hours hours9 = hours6.negated();
        boolean boolean10 = hours1.isLessThan(hours6);
        java.lang.Class<?> wildcardClass11 = hours1.getClass();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0935");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        int int4 = hours2.getValue((int) (short) 0);
        org.joda.time.Hours hours5 = hours1.minus(hours2);
        org.joda.time.Hours hours6 = hours0.minus(hours1);
        java.lang.String str7 = hours1.toString();
        int int8 = hours1.getHours();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 8 + "'", int4 == 8);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT7H" + "'", str7, "PT7H");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 7 + "'", int8 == 7);
    }

    @Test
    public void test0936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0936");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = hours0.get(durationFieldType1);
        org.joda.time.DurationFieldType durationFieldType3 = hours0.getFieldType();
        org.joda.time.DurationFieldType durationFieldType4 = hours0.getFieldType();
        org.joda.time.Period period5 = hours0.toPeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod7 = hours6.toMutablePeriod();
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours9 = hours6.minus(hours8);
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = hours6.get(durationFieldType10);
        org.joda.time.Hours hours13 = hours6.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval14 = null;
        org.joda.time.Hours hours15 = org.joda.time.Hours.hoursIn(readableInterval14);
        int int16 = hours13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours15);
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours18 = org.joda.time.Hours.EIGHT;
        int int20 = hours18.getValue((int) (short) 0);
        org.joda.time.Hours hours21 = hours17.minus(hours18);
        org.joda.time.Hours hours22 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType23 = null;
        int int24 = hours22.get(durationFieldType23);
        org.joda.time.DurationFieldType durationFieldType25 = hours22.getFieldType();
        int int26 = hours17.get(durationFieldType25);
        boolean boolean27 = hours15.isSupported(durationFieldType25);
        int int28 = hours0.get(durationFieldType25);
        org.joda.time.MutablePeriod mutablePeriod29 = hours0.toMutablePeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 8 + "'", int20 == 8);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 7 + "'", int26 == 7);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod29);
    }

    @Test
    public void test0937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0937");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = hours8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = hours8.getFieldType();
        int int12 = hours7.get(durationFieldType11);
        org.joda.time.Hours hours13 = org.joda.time.Hours.ONE;
        int int14 = hours13.getHours();
        org.joda.time.Hours hours16 = hours13.plus(10);
        org.joda.time.Hours hours17 = hours7.minus(hours16);
        org.joda.time.Hours hours19 = hours17.multipliedBy((-4));
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType21 = hours19.getFieldType(7);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 7");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 7 + "'", int12 == 7);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours19);
    }

    @Test
    public void test0938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0938");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.MutablePeriod mutablePeriod6 = hours0.toMutablePeriod();
        org.joda.time.Duration duration7 = hours0.toStandardDuration();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(duration7);
    }

    @Test
    public void test0939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0939");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        java.lang.String str5 = hours0.toString();
        org.joda.time.Hours hours7 = hours0.minus((-6));
        org.joda.time.Hours hours9 = hours0.multipliedBy(7);
        org.joda.time.Hours hours11 = hours9.minus(2147483647);
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod14 = hours13.toMutablePeriod();
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours16 = hours13.minus(hours15);
        int int17 = hours12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours15);
        org.joda.time.DurationFieldType durationFieldType18 = null;
        boolean boolean19 = hours12.isSupported(durationFieldType18);
        org.joda.time.Hours hours21 = hours12.minus((int) (short) -1);
        org.joda.time.PeriodType periodType22 = hours12.getPeriodType();
        int int23 = hours12.getHours();
        org.joda.time.DurationFieldType durationFieldType25 = hours12.getFieldType((int) (short) 0);
        int int26 = hours11.get(durationFieldType25);
        org.joda.time.DurationFieldType durationFieldType27 = hours11.getFieldType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "PT7H" + "'", str5, "PT7H");
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 7 + "'", int23 == 7);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-2147483598) + "'", int26 == (-2147483598));
        org.junit.Assert.assertNotNull(durationFieldType27);
    }

    @Test
    public void test0940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0940");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        int int23 = hours18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours21);
        org.joda.time.Hours hours24 = hours1.plus(hours21);
        org.joda.time.Hours hours25 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period26 = hours25.toPeriod();
        org.joda.time.Hours hours28 = hours25.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod29 = hours28.toMutablePeriod();
        org.joda.time.Hours hours30 = org.joda.time.Hours.THREE;
        org.joda.time.Period period31 = hours30.toPeriod();
        org.joda.time.Hours hours33 = hours30.plus((int) (byte) -1);
        org.joda.time.Hours hours34 = hours28.minus(hours30);
        org.joda.time.DurationFieldType durationFieldType35 = hours34.getFieldType();
        org.joda.time.Hours hours36 = hours24.plus(hours34);
        org.joda.time.Hours hours38 = hours36.multipliedBy((int) (byte) -1);
        org.joda.time.Hours hours40 = hours36.plus(6);
        org.joda.time.Hours hours41 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours40);
        int int42 = hours40.getHours();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 26 + "'", int42 == 26);
    }

    @Test
    public void test0941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0941");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.Hours hours2 = hours0.dividedBy((int) (byte) -1);
        org.joda.time.DurationFieldType durationFieldType3 = hours2.getFieldType();
        org.joda.time.Period period4 = hours2.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod5 = hours2.toMutablePeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
    }

    @Test
    public void test0942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0942");
        org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT16H");
        org.joda.time.Period period2 = hours1.toPeriod();
        org.joda.time.Hours hours4 = hours1.minus((int) (byte) -1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.ONE;
        org.joda.time.Hours hours7 = hours5.dividedBy((int) (byte) -1);
        org.joda.time.DurationFieldType durationFieldType9 = hours5.getFieldType(0);
        boolean boolean10 = hours1.isSupported(durationFieldType9);
        org.joda.time.Hours hours12 = hours1.multipliedBy((-2));
        org.joda.time.Hours hours14 = hours12.dividedBy(9);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType16 = hours12.getFieldType(108);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 108");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours14);
    }

    @Test
    public void test0943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0943");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.Hours hours10 = hours9.negated();
        org.joda.time.Hours hours11 = hours9.negated();
        int int12 = hours11.getHours();
        org.joda.time.DurationFieldType durationFieldType14 = hours11.getFieldType(0);
        java.lang.Class<?> wildcardClass15 = hours11.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-8) + "'", int12 == (-8));
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0944");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        boolean boolean22 = hours16.isGreaterThan(hours20);
        org.joda.time.Hours hours23 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours25 = org.joda.time.Hours.EIGHT;
        int int27 = hours25.getValue((int) (short) 0);
        org.joda.time.Hours hours28 = hours24.minus(hours25);
        org.joda.time.Hours hours29 = hours23.minus(hours24);
        org.joda.time.Hours hours31 = hours24.dividedBy(1);
        org.joda.time.Duration duration32 = hours24.toStandardDuration();
        boolean boolean33 = hours20.isGreaterThan(hours24);
        org.joda.time.Hours hours34 = hours20.negated();
        org.joda.time.Hours hours35 = hours34.negated();
        org.joda.time.Hours hours37 = hours35.multipliedBy((int) 'a');
        org.joda.time.Hours hours38 = hours37.negated();
        org.joda.time.Hours hours39 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours38);
        org.joda.time.Hours hours41 = hours39.plus(3);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 8 + "'", int27 == 8);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours41);
    }

    @Test
    public void test0945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0945");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        org.joda.time.DurationFieldType durationFieldType5 = null;
        int int6 = hours1.get(durationFieldType5);
        org.joda.time.Hours hours8 = hours1.minus((int) (short) 0);
        org.joda.time.Hours hours9 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours1);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod12 = hours11.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours14 = hours11.minus(hours13);
        int int15 = hours10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours13);
        org.joda.time.DurationFieldType durationFieldType16 = null;
        boolean boolean17 = hours10.isSupported(durationFieldType16);
        org.joda.time.Hours hours19 = hours10.minus((int) (short) -1);
        org.joda.time.Hours hours20 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod21 = hours20.toMutablePeriod();
        org.joda.time.Hours hours22 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours23 = hours20.minus(hours22);
        org.joda.time.Hours hours25 = hours22.plus(8);
        org.joda.time.Hours hours26 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = hours26.get(durationFieldType27);
        org.joda.time.DurationFieldType durationFieldType29 = hours26.getFieldType();
        boolean boolean30 = hours25.isSupported(durationFieldType29);
        int int31 = hours19.get(durationFieldType29);
        org.joda.time.Hours hours32 = hours1.plus(hours19);
        org.joda.time.Hours hours33 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours34 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod35 = hours34.toMutablePeriod();
        org.joda.time.Hours hours36 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours37 = hours34.minus(hours36);
        int int38 = hours33.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours36);
        org.joda.time.DurationFieldType durationFieldType39 = null;
        boolean boolean40 = hours33.isSupported(durationFieldType39);
        org.joda.time.Hours hours42 = hours33.multipliedBy((int) (short) 10);
        org.joda.time.Hours hours43 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours44 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType45 = null;
        int int46 = hours44.get(durationFieldType45);
        boolean boolean47 = hours43.equals((java.lang.Object) durationFieldType45);
        org.joda.time.Hours hours48 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours49 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod50 = hours49.toMutablePeriod();
        org.joda.time.Hours hours51 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours52 = hours49.minus(hours51);
        int int53 = hours48.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours51);
        org.joda.time.Hours hours55 = hours51.multipliedBy(0);
        org.joda.time.Hours hours56 = hours43.plus(hours55);
        org.joda.time.DurationFieldType durationFieldType57 = hours56.getFieldType();
        boolean boolean58 = hours33.equals((java.lang.Object) durationFieldType57);
        int int59 = hours19.get(durationFieldType57);
        boolean boolean60 = hours0.isSupported(durationFieldType57);
        int int61 = hours0.size();
        org.joda.time.Period period62 = hours0.toPeriod();
        int int63 = hours0.size();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 8 + "'", int31 == 8);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(mutablePeriod50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertNotNull(durationFieldType57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 8 + "'", int59 == 8);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
    }

    @Test
    public void test0946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0946");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.ONE;
        int int9 = hours8.getHours();
        org.joda.time.Hours hours11 = hours8.plus(10);
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod13 = hours12.toMutablePeriod();
        org.joda.time.Hours hours14 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours15 = hours12.minus(hours14);
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = hours12.get(durationFieldType16);
        org.joda.time.Hours hours19 = hours12.multipliedBy(1);
        boolean boolean20 = hours8.isGreaterThan(hours12);
        org.joda.time.Hours hours21 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours22 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours23 = org.joda.time.Hours.EIGHT;
        int int25 = hours23.getValue((int) (short) 0);
        org.joda.time.Hours hours26 = hours22.minus(hours23);
        org.joda.time.Hours hours27 = hours21.minus(hours22);
        int int28 = hours21.size();
        org.joda.time.Hours hours29 = hours12.plus(hours21);
        org.joda.time.Hours hours30 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours31 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod32 = hours31.toMutablePeriod();
        org.joda.time.Hours hours33 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours34 = hours31.minus(hours33);
        int int35 = hours30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours33);
        org.joda.time.Hours hours37 = hours33.multipliedBy(0);
        org.joda.time.Duration duration38 = hours33.toStandardDuration();
        org.joda.time.Hours hours40 = hours33.dividedBy((int) (short) -1);
        int int41 = hours40.size();
        boolean boolean42 = hours29.isLessThan(hours40);
        boolean boolean43 = hours0.isGreaterThan(hours40);
        org.joda.time.Hours hours45 = org.joda.time.Hours.hours((int) '4');
        org.joda.time.DurationFieldType durationFieldType46 = hours45.getFieldType();
        org.joda.time.PeriodType periodType47 = hours45.getPeriodType();
        org.joda.time.Hours hours48 = hours45.negated();
        org.joda.time.Hours hours49 = hours40.plus(hours45);
        org.joda.time.DurationFieldType durationFieldType50 = hours49.getFieldType();
        // The following exception was thrown during execution in test generation
        try {
            int int52 = hours49.getValue(8);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 8");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 8 + "'", int25 == 8);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(durationFieldType46);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(durationFieldType50);
    }

    @Test
    public void test0947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0947");
        org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT16H");
        org.joda.time.Period period2 = hours1.toPeriod();
        org.joda.time.Hours hours4 = hours1.minus(7);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType6 = hours1.getFieldType((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(hours4);
    }

    @Test
    public void test0948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0948");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.multipliedBy(1);
        int int8 = hours7.getHours();
        org.joda.time.Hours hours10 = hours7.minus((int) ' ');
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = null;
        boolean boolean13 = hours10.isGreaterThan(hours12);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 7 + "'", int8 == 7);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test0949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0949");
        org.joda.time.Hours hours0 = org.joda.time.Hours.TWO;
        org.joda.time.Hours hours2 = hours0.plus(0);
        int int3 = hours0.size();
        java.lang.Class<?> wildcardClass4 = hours0.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0950");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.PeriodType periodType10 = hours0.getPeriodType();
        int int11 = hours0.getHours();
        org.joda.time.DurationFieldType durationFieldType13 = hours0.getFieldType((int) (short) 0);
        int int14 = hours0.size();
        int int15 = hours0.size();
        org.joda.time.Period period16 = hours0.toPeriod();
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod18 = hours17.toMutablePeriod();
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours20 = hours17.minus(hours19);
        boolean boolean21 = hours0.isGreaterThan(hours19);
        org.joda.time.Hours hours22 = org.joda.time.Hours.ONE;
        org.joda.time.Hours hours24 = hours22.plus(1);
        org.joda.time.Hours hours26 = hours22.dividedBy((int) (byte) -1);
        int int27 = hours22.size();
        int int28 = hours19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours22);
        org.joda.time.Hours hours30 = hours19.dividedBy(100);
        int int31 = hours30.getHours();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 7 + "'", int11 == 7);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
    }

    @Test
    public void test0951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0951");
        org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT700H");
        org.joda.time.Weeks weeks2 = hours1.toStandardWeeks();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(weeks2);
    }

    @Test
    public void test0952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0952");
        org.joda.time.Hours hours0 = org.joda.time.Hours.EIGHT;
        int int1 = hours0.size();
        org.joda.time.Hours hours3 = hours0.dividedBy(100);
        org.joda.time.Hours hours4 = hours3.negated();
        org.joda.time.Hours hours6 = org.joda.time.Hours.parseHours("PT16H");
        org.joda.time.Hours hours7 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours8 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours11 = hours8.minus(hours10);
        int int12 = hours7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours10);
        org.joda.time.MutablePeriod mutablePeriod13 = hours7.toMutablePeriod();
        org.joda.time.Hours hours14 = hours6.minus(hours7);
        org.joda.time.Hours hours15 = hours3.plus(hours6);
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours17 = org.joda.time.Hours.EIGHT;
        int int19 = hours17.getValue((int) (short) 0);
        org.joda.time.Hours hours20 = hours16.minus(hours17);
        boolean boolean22 = hours17.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours23 = null;
        org.joda.time.Hours hours24 = hours17.minus(hours23);
        org.joda.time.Hours hours25 = hours24.negated();
        org.joda.time.Hours hours26 = hours3.minus(hours24);
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours28 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod29 = hours28.toMutablePeriod();
        org.joda.time.Hours hours30 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours31 = hours28.minus(hours30);
        int int32 = hours27.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours30);
        org.joda.time.Hours hours34 = hours30.multipliedBy(0);
        org.joda.time.Hours hours36 = org.joda.time.Hours.hours(0);
        org.joda.time.Duration duration37 = hours36.toStandardDuration();
        org.joda.time.Hours hours39 = hours36.multipliedBy((int) (short) 1);
        java.lang.String str40 = hours36.toString();
        int int41 = hours30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours36);
        java.lang.String str42 = hours30.toString();
        org.joda.time.Hours hours43 = hours24.minus(hours30);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 8 + "'", int19 == 8);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "PT0H" + "'", str40, "PT0H");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "PT8H" + "'", str42, "PT8H");
        org.junit.Assert.assertNotNull(hours43);
    }

    @Test
    public void test0953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0953");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.multipliedBy((int) (short) 10);
        org.joda.time.MutablePeriod mutablePeriod10 = hours0.toMutablePeriod();
        org.joda.time.Hours hours12 = hours0.plus(13);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(hours12);
    }

    @Test
    public void test0954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0954");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Hours hours5 = hours2.plus(8);
        org.joda.time.Hours hours6 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = hours6.get(durationFieldType7);
        org.joda.time.DurationFieldType durationFieldType9 = hours6.getFieldType();
        boolean boolean10 = hours5.isSupported(durationFieldType9);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod13 = hours12.toMutablePeriod();
        org.joda.time.Hours hours14 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours15 = hours12.minus(hours14);
        int int16 = hours11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours14);
        org.joda.time.DurationFieldType durationFieldType17 = null;
        boolean boolean18 = hours11.isSupported(durationFieldType17);
        org.joda.time.Hours hours20 = hours11.minus((int) (short) -1);
        org.joda.time.PeriodType periodType21 = hours11.getPeriodType();
        org.joda.time.Hours hours22 = org.joda.time.Hours.EIGHT;
        int int24 = hours22.getValue((int) (short) 0);
        org.joda.time.Hours hours25 = hours11.minus(hours22);
        org.joda.time.Hours hours26 = hours5.minus(hours25);
        org.joda.time.Hours hours28 = org.joda.time.Hours.parseHours("PT8H");
        boolean boolean29 = hours26.isLessThan(hours28);
        int int30 = hours26.size();
        java.lang.Class<?> wildcardClass31 = hours26.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 8 + "'", int24 == 8);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0955");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval8 = null;
        org.joda.time.Hours hours9 = org.joda.time.Hours.hoursIn(readableInterval8);
        int int10 = hours7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours9);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        int int14 = hours12.getValue((int) (short) 0);
        org.joda.time.Hours hours15 = hours11.minus(hours12);
        org.joda.time.Hours hours16 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = hours16.get(durationFieldType17);
        org.joda.time.DurationFieldType durationFieldType19 = hours16.getFieldType();
        int int20 = hours11.get(durationFieldType19);
        boolean boolean21 = hours9.isSupported(durationFieldType19);
        org.joda.time.PeriodType periodType22 = hours9.getPeriodType();
        org.joda.time.Hours hours23 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod25 = hours24.toMutablePeriod();
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours27 = hours24.minus(hours26);
        int int28 = hours23.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours26);
        org.joda.time.Hours hours29 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours23);
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = hours23.get(durationFieldType30);
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = hours23.get(durationFieldType32);
        int int34 = hours23.getHours();
        boolean boolean35 = hours9.isLessThan(hours23);
        org.joda.time.Hours hours36 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod37 = hours36.toMutablePeriod();
        org.joda.time.Hours hours38 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours39 = hours36.minus(hours38);
        org.joda.time.Duration duration40 = hours36.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod41 = hours36.toMutablePeriod();
        org.joda.time.Period period42 = hours36.toPeriod();
        boolean boolean43 = hours9.equals((java.lang.Object) period42);
        java.lang.String str44 = hours9.toString();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 8 + "'", int14 == 8);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 7 + "'", int20 == 7);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 7 + "'", int34 == 7);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertNotNull(mutablePeriod41);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "PT0H" + "'", str44, "PT0H");
    }

    @Test
    public void test0956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0956");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.PeriodType periodType10 = hours0.getPeriodType();
        org.joda.time.Hours hours11 = org.joda.time.Hours.EIGHT;
        int int13 = hours11.getValue((int) (short) 0);
        org.joda.time.Hours hours14 = hours0.minus(hours11);
        org.joda.time.Hours hours16 = hours0.plus(7);
        org.joda.time.Hours hours17 = hours0.negated();
        org.joda.time.Hours hours19 = hours17.multipliedBy(100);
        org.joda.time.Hours hours20 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        int int23 = hours21.getValue((int) (short) 0);
        org.joda.time.Hours hours24 = hours20.minus(hours21);
        boolean boolean26 = hours21.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours27 = null;
        org.joda.time.Hours hours28 = hours21.minus(hours27);
        org.joda.time.Hours hours29 = hours28.negated();
        org.joda.time.Hours hours30 = hours17.plus(hours28);
        org.joda.time.Hours hours32 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours34 = hours32.multipliedBy((int) (byte) 100);
        org.joda.time.Hours hours35 = hours32.negated();
        org.joda.time.Hours hours36 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours37 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod38 = hours37.toMutablePeriod();
        org.joda.time.Hours hours39 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours40 = hours37.minus(hours39);
        int int41 = hours36.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours39);
        org.joda.time.Hours hours42 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours36);
        org.joda.time.Hours hours43 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod44 = hours43.toMutablePeriod();
        org.joda.time.Hours hours45 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours46 = hours43.minus(hours45);
        org.joda.time.Hours hours48 = hours45.plus(8);
        org.joda.time.Hours hours49 = hours36.minus(hours48);
        org.joda.time.Hours hours50 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours51 = org.joda.time.Hours.EIGHT;
        int int53 = hours51.getValue((int) (short) 0);
        org.joda.time.Hours hours54 = hours50.minus(hours51);
        org.joda.time.Hours hours55 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod56 = hours55.toMutablePeriod();
        org.joda.time.Hours hours57 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours58 = hours55.minus(hours57);
        org.joda.time.Hours hours60 = hours57.plus(8);
        org.joda.time.Hours hours61 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType62 = null;
        int int63 = hours61.get(durationFieldType62);
        org.joda.time.DurationFieldType durationFieldType64 = hours61.getFieldType();
        boolean boolean65 = hours60.isSupported(durationFieldType64);
        boolean boolean66 = hours50.isSupported(durationFieldType64);
        org.joda.time.Hours hours67 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period68 = hours67.toPeriod();
        org.joda.time.Hours hours70 = hours67.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod71 = hours70.toMutablePeriod();
        org.joda.time.Hours hours72 = org.joda.time.Hours.THREE;
        org.joda.time.Period period73 = hours72.toPeriod();
        org.joda.time.Hours hours75 = hours72.plus((int) (byte) -1);
        org.joda.time.Hours hours76 = hours70.minus(hours72);
        org.joda.time.Hours hours77 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod78 = hours77.toMutablePeriod();
        org.joda.time.Hours hours79 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours80 = hours77.minus(hours79);
        org.joda.time.DurationFieldType durationFieldType81 = null;
        int int82 = hours77.get(durationFieldType81);
        org.joda.time.Hours hours84 = hours77.minus((int) (short) 0);
        org.joda.time.Hours hours85 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType86 = null;
        int int87 = hours85.get(durationFieldType86);
        org.joda.time.DurationFieldType durationFieldType88 = hours85.getFieldType();
        int int89 = hours84.get(durationFieldType88);
        int int90 = hours72.get(durationFieldType88);
        boolean boolean91 = hours50.equals((java.lang.Object) hours72);
        boolean boolean92 = hours48.equals((java.lang.Object) hours72);
        org.joda.time.Duration duration93 = hours48.toStandardDuration();
        org.joda.time.Hours hours94 = hours32.minus(hours48);
        org.joda.time.Hours hours96 = hours48.dividedBy(5);
        org.joda.time.Hours hours97 = hours30.plus(hours96);
        java.lang.String str98 = hours97.toString();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 8 + "'", int13 == 8);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 8 + "'", int23 == 8);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(mutablePeriod44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 8 + "'", int53 == 8);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(mutablePeriod56);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(durationFieldType64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(hours70);
        org.junit.Assert.assertNotNull(mutablePeriod71);
        org.junit.Assert.assertNotNull(hours72);
        org.junit.Assert.assertNotNull(period73);
        org.junit.Assert.assertNotNull(hours75);
        org.junit.Assert.assertNotNull(hours76);
        org.junit.Assert.assertNotNull(hours77);
        org.junit.Assert.assertNotNull(mutablePeriod78);
        org.junit.Assert.assertNotNull(hours79);
        org.junit.Assert.assertNotNull(hours80);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertNotNull(hours84);
        org.junit.Assert.assertNotNull(hours85);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertNotNull(durationFieldType88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 7 + "'", int89 == 7);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 3 + "'", int90 == 3);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(duration93);
        org.junit.Assert.assertNotNull(hours94);
        org.junit.Assert.assertNotNull(hours96);
        org.junit.Assert.assertNotNull(hours97);
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "PT4H" + "'", str98, "PT4H");
    }

    @Test
    public void test0957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0957");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Hours hours4 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        int int7 = hours5.getValue((int) (short) 0);
        org.joda.time.Hours hours8 = hours4.minus(hours5);
        org.joda.time.Hours hours9 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = hours9.get(durationFieldType10);
        org.joda.time.DurationFieldType durationFieldType12 = hours9.getFieldType();
        int int13 = hours4.get(durationFieldType12);
        boolean boolean14 = hours3.isSupported(durationFieldType12);
        org.joda.time.Hours hours15 = hours3.negated();
        org.joda.time.Duration duration16 = hours15.toStandardDuration();
        // The following exception was thrown during execution in test generation
        try {
            int int18 = hours15.getValue((-4));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -4");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 8 + "'", int7 == 8);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 7 + "'", int13 == 7);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(duration16);
    }

    @Test
    public void test0958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0958");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours6 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = hours0.get(durationFieldType7);
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = hours0.get(durationFieldType9);
        int int11 = hours0.getHours();
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod13 = hours12.toMutablePeriod();
        org.joda.time.Hours hours14 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours15 = hours12.minus(hours14);
        org.joda.time.DurationFieldType durationFieldType16 = null;
        boolean boolean17 = hours14.isSupported(durationFieldType16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        int int21 = hours19.getValue((int) (short) 0);
        org.joda.time.Hours hours22 = hours18.minus(hours19);
        boolean boolean23 = hours14.isLessThan(hours19);
        org.joda.time.Hours hours24 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType25 = null;
        int int26 = hours24.get(durationFieldType25);
        org.joda.time.DurationFieldType durationFieldType27 = hours24.getFieldType();
        boolean boolean28 = hours14.isSupported(durationFieldType27);
        boolean boolean29 = hours0.isSupported(durationFieldType27);
        // The following exception was thrown during execution in test generation
        try {
            int int31 = hours0.getValue((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 35");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 7 + "'", int11 == 7);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 8 + "'", int21 == 8);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test0959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0959");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours12 = hours0.multipliedBy((int) '4');
        org.joda.time.Period period13 = hours0.toPeriod();
        org.joda.time.PeriodType periodType14 = hours0.getPeriodType();
        org.joda.time.Hours hours15 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours17 = org.joda.time.Hours.EIGHT;
        int int19 = hours17.getValue((int) (short) 0);
        org.joda.time.Hours hours20 = hours16.minus(hours17);
        org.joda.time.Hours hours21 = hours15.minus(hours16);
        int int22 = hours15.size();
        org.joda.time.Hours hours23 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours24 = org.joda.time.Hours.EIGHT;
        int int26 = hours24.getValue((int) (short) 0);
        org.joda.time.Hours hours27 = hours23.minus(hours24);
        boolean boolean29 = hours24.equals((java.lang.Object) (short) 10);
        int int30 = hours15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours24);
        org.joda.time.Period period31 = hours24.toPeriod();
        org.joda.time.Hours hours32 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours24);
        boolean boolean33 = hours0.equals((java.lang.Object) hours32);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 8 + "'", int19 == 8);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 8 + "'", int26 == 8);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test0960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0960");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period1 = hours0.toPeriod();
        org.joda.time.Hours hours3 = hours0.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.THREE;
        org.joda.time.Period period6 = hours5.toPeriod();
        org.joda.time.Hours hours8 = hours5.plus((int) (byte) -1);
        org.joda.time.Hours hours9 = hours3.minus(hours5);
        org.joda.time.PeriodType periodType10 = hours5.getPeriodType();
        org.joda.time.Hours hours11 = org.joda.time.Hours.ZERO;
        org.joda.time.Duration duration12 = hours11.toStandardDuration();
        boolean boolean13 = hours5.isLessThan(hours11);
        org.joda.time.Hours hours14 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours15 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod16 = hours15.toMutablePeriod();
        org.joda.time.Hours hours17 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours18 = hours15.minus(hours17);
        int int19 = hours14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours17);
        org.joda.time.Hours hours20 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours14);
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = hours14.get(durationFieldType21);
        org.joda.time.Hours hours23 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod24 = hours23.toMutablePeriod();
        org.joda.time.Hours hours25 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours26 = hours23.minus(hours25);
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = hours23.get(durationFieldType27);
        org.joda.time.Hours hours30 = hours23.minus((int) (short) 0);
        org.joda.time.Hours hours31 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod32 = hours31.toMutablePeriod();
        org.joda.time.Hours hours33 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours34 = hours31.minus(hours33);
        org.joda.time.DurationFieldType durationFieldType35 = null;
        boolean boolean36 = hours33.isSupported(durationFieldType35);
        org.joda.time.Hours hours37 = hours30.minus(hours33);
        org.joda.time.Period period38 = hours30.toPeriod();
        org.joda.time.Hours hours39 = hours14.plus(hours30);
        org.joda.time.Hours hours40 = hours5.minus(hours30);
        org.joda.time.Hours hours42 = hours40.plus((-7));
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours42);
    }

    @Test
    public void test0961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0961");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours6 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = hours0.get(durationFieldType7);
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = hours0.get(durationFieldType9);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType12 = hours0.getFieldType((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test0962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0962");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = hours8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = hours8.getFieldType();
        int int12 = hours7.get(durationFieldType11);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod14 = hours13.toMutablePeriod();
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours16 = hours13.minus(hours15);
        org.joda.time.Duration duration17 = hours13.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod18 = hours13.toMutablePeriod();
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        int int21 = hours19.getValue((int) (short) 0);
        java.lang.String str22 = hours19.toString();
        boolean boolean23 = hours13.isGreaterThan(hours19);
        org.joda.time.Hours hours25 = hours19.minus(10);
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod28 = hours27.toMutablePeriod();
        org.joda.time.Hours hours29 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours30 = hours27.minus(hours29);
        int int31 = hours26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours29);
        org.joda.time.Hours hours32 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours26);
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = hours26.get(durationFieldType33);
        boolean boolean35 = hours25.equals((java.lang.Object) hours26);
        org.joda.time.Hours hours37 = hours26.minus(100);
        org.joda.time.Hours hours38 = hours7.minus(hours26);
        org.joda.time.Hours hours40 = hours26.plus(8);
        org.joda.time.Hours hours42 = hours26.minus(26);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 7 + "'", int12 == 7);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 8 + "'", int21 == 8);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "PT8H" + "'", str22, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours42);
    }

    @Test
    public void test0963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0963");
        org.joda.time.Hours hours0 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours1 = hours0.negated();
        org.joda.time.DurationFieldType durationFieldType2 = hours0.getFieldType();
        java.lang.String str3 = hours0.toString();
        org.joda.time.Hours hours4 = org.joda.time.Hours.ZERO;
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod7 = hours6.toMutablePeriod();
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours9 = hours6.minus(hours8);
        int int10 = hours5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours8);
        org.joda.time.MutablePeriod mutablePeriod11 = hours5.toMutablePeriod();
        org.joda.time.Hours hours13 = hours5.minus(7);
        org.joda.time.Hours hours14 = hours4.minus(hours5);
        org.joda.time.Hours hours15 = hours0.minus(hours5);
        org.joda.time.Hours hours17 = org.joda.time.Hours.parseHours("PT16H");
        org.joda.time.Period period18 = hours17.toPeriod();
        org.joda.time.Hours hours20 = hours17.minus((int) (byte) -1);
        int int22 = hours17.getValue(0);
        org.joda.time.Hours hours23 = hours5.minus(hours17);
        org.joda.time.Duration duration24 = hours23.toStandardDuration();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT3H" + "'", str3, "PT3H");
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 16 + "'", int22 == 16);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(duration24);
    }

    @Test
    public void test0964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0964");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours7 = hours0.minus((int) 'a');
        org.joda.time.Hours hours8 = org.joda.time.Hours.ZERO;
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        boolean boolean10 = hours7.equals((java.lang.Object) hours8);
        org.joda.time.Hours hours12 = org.joda.time.Hours.hours((int) '4');
        org.joda.time.DurationFieldType durationFieldType13 = hours12.getFieldType();
        org.joda.time.Hours hours15 = hours12.plus(700);
        org.joda.time.Hours hours16 = null;
        org.joda.time.Hours hours17 = hours15.plus(hours16);
        boolean boolean18 = hours7.isGreaterThan(hours17);
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        org.joda.time.DurationFieldType durationFieldType23 = null;
        int int24 = hours19.get(durationFieldType23);
        org.joda.time.Hours hours26 = hours19.minus((int) (short) 0);
        org.joda.time.Hours hours27 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType28 = null;
        int int29 = hours27.get(durationFieldType28);
        org.joda.time.DurationFieldType durationFieldType30 = hours27.getFieldType();
        int int31 = hours26.get(durationFieldType30);
        org.joda.time.PeriodType periodType32 = hours26.getPeriodType();
        org.joda.time.Hours hours34 = hours26.multipliedBy(8);
        int int35 = hours17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours34);
        org.joda.time.Period period36 = hours34.toPeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 7 + "'", int31 == 7);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(period36);
    }

    @Test
    public void test0965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0965");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(0);
        org.joda.time.Hours hours3 = hours1.multipliedBy((int) (short) 0);
        org.joda.time.Hours hours4 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod6 = hours5.toMutablePeriod();
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours8 = hours5.minus(hours7);
        int int9 = hours4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours7);
        org.joda.time.DurationFieldType durationFieldType10 = null;
        boolean boolean11 = hours4.isSupported(durationFieldType10);
        org.joda.time.Hours hours13 = hours4.minus((int) (short) -1);
        org.joda.time.PeriodType periodType14 = hours4.getPeriodType();
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        int int17 = hours15.getValue((int) (short) 0);
        org.joda.time.Hours hours18 = hours4.minus(hours15);
        org.joda.time.Hours hours20 = hours4.plus(7);
        org.joda.time.Hours hours21 = hours4.negated();
        org.joda.time.Hours hours23 = hours21.multipliedBy(100);
        java.lang.Class<?> wildcardClass24 = hours21.getClass();
        boolean boolean25 = hours1.equals((java.lang.Object) hours21);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 8 + "'", int17 == 8);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test0966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0966");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        int int1 = hours0.getHours();
        org.joda.time.Hours hours3 = hours0.plus(10);
        org.joda.time.Hours hours4 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod5 = hours4.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours7 = hours4.minus(hours6);
        org.joda.time.Duration duration8 = hours4.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod9 = hours4.toMutablePeriod();
        org.joda.time.Hours hours10 = org.joda.time.Hours.EIGHT;
        int int12 = hours10.getValue((int) (short) 0);
        java.lang.String str13 = hours10.toString();
        boolean boolean14 = hours4.isGreaterThan(hours10);
        org.joda.time.Hours hours16 = hours10.minus(10);
        org.joda.time.Hours hours17 = hours10.negated();
        org.joda.time.Hours hours19 = hours17.plus((int) (byte) 0);
        org.joda.time.DurationFieldType durationFieldType21 = hours17.getFieldType(0);
        boolean boolean22 = hours0.equals((java.lang.Object) durationFieldType21);
        org.joda.time.Hours hours23 = org.joda.time.Hours.ZERO;
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours25 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod26 = hours25.toMutablePeriod();
        org.joda.time.Hours hours27 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours28 = hours25.minus(hours27);
        int int29 = hours24.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours27);
        org.joda.time.MutablePeriod mutablePeriod30 = hours24.toMutablePeriod();
        org.joda.time.Hours hours32 = hours24.minus(7);
        org.joda.time.Hours hours33 = hours23.minus(hours24);
        org.joda.time.Hours hours35 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours36 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod37 = hours36.toMutablePeriod();
        org.joda.time.Hours hours38 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours39 = hours36.minus(hours38);
        org.joda.time.DurationFieldType durationFieldType40 = null;
        int int41 = hours36.get(durationFieldType40);
        org.joda.time.Hours hours43 = hours36.minus((int) (short) 0);
        org.joda.time.Hours hours44 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod45 = hours44.toMutablePeriod();
        org.joda.time.Hours hours46 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours47 = hours44.minus(hours46);
        org.joda.time.DurationFieldType durationFieldType48 = null;
        boolean boolean49 = hours46.isSupported(durationFieldType48);
        org.joda.time.Hours hours50 = hours43.minus(hours46);
        org.joda.time.Hours hours51 = hours35.plus(hours50);
        org.joda.time.Hours hours52 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours53 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod54 = hours53.toMutablePeriod();
        org.joda.time.Hours hours55 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours56 = hours53.minus(hours55);
        int int57 = hours52.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours55);
        org.joda.time.Hours hours58 = hours35.plus(hours55);
        org.joda.time.Hours hours59 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod60 = hours59.toMutablePeriod();
        org.joda.time.Hours hours61 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours62 = hours59.minus(hours61);
        org.joda.time.DurationFieldType durationFieldType63 = null;
        int int64 = hours59.get(durationFieldType63);
        org.joda.time.Hours hours66 = hours59.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval67 = null;
        org.joda.time.Hours hours68 = org.joda.time.Hours.hoursIn(readableInterval67);
        int int69 = hours66.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours68);
        boolean boolean70 = hours55.isGreaterThan(hours66);
        org.joda.time.Hours hours72 = hours55.multipliedBy(16);
        org.joda.time.Hours hours74 = hours55.multipliedBy((int) (short) 0);
        org.joda.time.Period period75 = hours74.toPeriod();
        org.joda.time.Hours hours76 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours77 = org.joda.time.Hours.EIGHT;
        int int79 = hours77.getValue((int) (short) 0);
        org.joda.time.Hours hours80 = hours76.minus(hours77);
        org.joda.time.Hours hours81 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType82 = null;
        int int83 = hours81.get(durationFieldType82);
        org.joda.time.DurationFieldType durationFieldType84 = hours81.getFieldType();
        int int85 = hours76.get(durationFieldType84);
        boolean boolean86 = hours74.isSupported(durationFieldType84);
        org.joda.time.Hours hours87 = hours24.minus(hours74);
        org.joda.time.Hours hours89 = hours74.plus(92);
        int int90 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours74);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 8 + "'", int12 == 8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "PT8H" + "'", str13, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(mutablePeriod45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(mutablePeriod54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(mutablePeriod60);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(hours72);
        org.junit.Assert.assertNotNull(hours74);
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertNotNull(hours76);
        org.junit.Assert.assertNotNull(hours77);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 8 + "'", int79 == 8);
        org.junit.Assert.assertNotNull(hours80);
        org.junit.Assert.assertNotNull(hours81);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNotNull(durationFieldType84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 7 + "'", int85 == 7);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(hours87);
        org.junit.Assert.assertNotNull(hours89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 1 + "'", int90 == 1);
    }

    @Test
    public void test0967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0967");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours12 = hours6.minus(10);
        java.lang.String str13 = hours12.toString();
        org.joda.time.Hours hours15 = hours12.minus(7);
        org.joda.time.Hours hours17 = hours12.dividedBy(12);
        org.joda.time.Hours hours18 = hours17.negated();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "PT-2H" + "'", str13, "PT-2H");
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
    }

    @Test
    public void test0968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0968");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        boolean boolean6 = hours1.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours7 = null;
        org.joda.time.Hours hours8 = hours1.minus(hours7);
        org.joda.time.Hours hours9 = hours8.negated();
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.Duration duration14 = hours10.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod15 = hours10.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        int int18 = hours16.getValue((int) (short) 0);
        java.lang.String str19 = hours16.toString();
        boolean boolean20 = hours10.isGreaterThan(hours16);
        org.joda.time.Hours hours22 = hours16.minus(10);
        org.joda.time.Hours hours23 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod25 = hours24.toMutablePeriod();
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours27 = hours24.minus(hours26);
        int int28 = hours23.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours26);
        org.joda.time.Hours hours29 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours23);
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = hours23.get(durationFieldType30);
        boolean boolean32 = hours22.equals((java.lang.Object) hours23);
        java.lang.String str33 = hours22.toString();
        org.joda.time.DurationFieldType durationFieldType35 = hours22.getFieldType(0);
        boolean boolean36 = hours8.isGreaterThan(hours22);
        org.joda.time.Hours hours37 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours38 = org.joda.time.Hours.EIGHT;
        int int40 = hours38.getValue((int) (short) 0);
        org.joda.time.Hours hours41 = hours37.minus(hours38);
        boolean boolean43 = hours38.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours44 = null;
        org.joda.time.Hours hours45 = hours38.minus(hours44);
        org.joda.time.Hours hours46 = hours45.negated();
        org.joda.time.Hours hours47 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod48 = hours47.toMutablePeriod();
        org.joda.time.Hours hours49 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours50 = hours47.minus(hours49);
        org.joda.time.Duration duration51 = hours47.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod52 = hours47.toMutablePeriod();
        org.joda.time.Hours hours53 = org.joda.time.Hours.EIGHT;
        int int55 = hours53.getValue((int) (short) 0);
        java.lang.String str56 = hours53.toString();
        boolean boolean57 = hours47.isGreaterThan(hours53);
        org.joda.time.Hours hours59 = hours53.minus(10);
        org.joda.time.Hours hours60 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours61 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod62 = hours61.toMutablePeriod();
        org.joda.time.Hours hours63 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours64 = hours61.minus(hours63);
        int int65 = hours60.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours63);
        org.joda.time.Hours hours66 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours60);
        org.joda.time.DurationFieldType durationFieldType67 = null;
        int int68 = hours60.get(durationFieldType67);
        boolean boolean69 = hours59.equals((java.lang.Object) hours60);
        java.lang.String str70 = hours59.toString();
        org.joda.time.DurationFieldType durationFieldType72 = hours59.getFieldType(0);
        boolean boolean73 = hours45.isGreaterThan(hours59);
        org.joda.time.Hours hours74 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours59);
        org.joda.time.Hours hours75 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod76 = hours75.toMutablePeriod();
        org.joda.time.Hours hours77 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours78 = hours75.minus(hours77);
        org.joda.time.DurationFieldType durationFieldType79 = null;
        boolean boolean80 = hours77.isSupported(durationFieldType79);
        org.joda.time.Hours hours81 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours82 = org.joda.time.Hours.EIGHT;
        int int84 = hours82.getValue((int) (short) 0);
        org.joda.time.Hours hours85 = hours81.minus(hours82);
        boolean boolean86 = hours77.isLessThan(hours82);
        org.joda.time.Hours hours87 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType88 = null;
        int int89 = hours87.get(durationFieldType88);
        org.joda.time.DurationFieldType durationFieldType90 = hours87.getFieldType();
        boolean boolean91 = hours77.isSupported(durationFieldType90);
        int int92 = hours59.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours77);
        org.joda.time.Hours hours93 = hours8.plus(hours59);
        org.joda.time.Hours hours94 = org.joda.time.Hours.ONE;
        org.joda.time.Hours hours96 = hours94.dividedBy((int) (byte) -1);
        org.joda.time.DurationFieldType durationFieldType97 = hours96.getFieldType();
        boolean boolean98 = hours8.isSupported(durationFieldType97);
        int int99 = hours8.size();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 8 + "'", int18 == 8);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "PT8H" + "'", str19, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "PT-2H" + "'", str33, "PT-2H");
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 8 + "'", int40 == 8);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(mutablePeriod48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertNotNull(mutablePeriod52);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 8 + "'", int55 == 8);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "PT8H" + "'", str56, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(mutablePeriod62);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "PT-2H" + "'", str70, "PT-2H");
        org.junit.Assert.assertNotNull(durationFieldType72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(hours74);
        org.junit.Assert.assertNotNull(hours75);
        org.junit.Assert.assertNotNull(mutablePeriod76);
        org.junit.Assert.assertNotNull(hours77);
        org.junit.Assert.assertNotNull(hours78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(hours81);
        org.junit.Assert.assertNotNull(hours82);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 8 + "'", int84 == 8);
        org.junit.Assert.assertNotNull(hours85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(hours87);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
        org.junit.Assert.assertNotNull(durationFieldType90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertNotNull(hours93);
        org.junit.Assert.assertNotNull(hours94);
        org.junit.Assert.assertNotNull(hours96);
        org.junit.Assert.assertNotNull(durationFieldType97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
        org.junit.Assert.assertTrue("'" + int99 + "' != '" + 1 + "'", int99 == 1);
    }

    @Test
    public void test0969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0969");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.multipliedBy((int) (short) 10);
        org.joda.time.Period period10 = hours0.toPeriod();
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod13 = hours12.toMutablePeriod();
        org.joda.time.Hours hours14 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours15 = hours12.minus(hours14);
        int int16 = hours11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours14);
        org.joda.time.Hours hours17 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours11);
        org.joda.time.Hours hours19 = hours17.multipliedBy((int) (byte) 10);
        boolean boolean20 = hours0.isLessThan(hours19);
        org.joda.time.Period period21 = hours0.toPeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(period21);
    }

    @Test
    public void test0970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0970");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        int int1 = hours0.getHours();
        org.joda.time.Hours hours3 = hours0.plus(10);
        int int4 = hours0.size();
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod7 = hours6.toMutablePeriod();
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours9 = hours6.minus(hours8);
        int int10 = hours5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours8);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod12 = hours11.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours14 = hours11.minus(hours13);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = hours11.get(durationFieldType15);
        org.joda.time.Hours hours18 = hours11.minus((int) (short) 0);
        org.joda.time.Hours hours19 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = hours19.get(durationFieldType20);
        org.joda.time.DurationFieldType durationFieldType22 = hours19.getFieldType();
        int int23 = hours18.get(durationFieldType22);
        org.joda.time.Hours hours24 = hours18.negated();
        boolean boolean25 = hours8.isGreaterThan(hours24);
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod27 = hours26.toMutablePeriod();
        org.joda.time.Hours hours28 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours29 = hours26.minus(hours28);
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = hours26.get(durationFieldType30);
        org.joda.time.Hours hours33 = hours26.multipliedBy(1);
        org.joda.time.Hours hours34 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod35 = hours34.toMutablePeriod();
        org.joda.time.Hours hours36 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours37 = hours34.minus(hours36);
        org.joda.time.DurationFieldType durationFieldType38 = null;
        int int39 = hours34.get(durationFieldType38);
        org.joda.time.Hours hours41 = hours34.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval42 = null;
        org.joda.time.Hours hours43 = org.joda.time.Hours.hoursIn(readableInterval42);
        int int44 = hours41.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours43);
        org.joda.time.Hours hours45 = hours26.minus(hours41);
        org.joda.time.Hours hours46 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours47 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod48 = hours47.toMutablePeriod();
        org.joda.time.Hours hours49 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours50 = hours47.minus(hours49);
        int int51 = hours46.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours49);
        org.joda.time.DurationFieldType durationFieldType52 = null;
        boolean boolean53 = hours46.isSupported(durationFieldType52);
        org.joda.time.Hours hours55 = hours46.minus((int) (short) -1);
        boolean boolean56 = hours45.isLessThan(hours46);
        org.joda.time.Hours hours57 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours58 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod59 = hours58.toMutablePeriod();
        org.joda.time.Hours hours60 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours61 = hours58.minus(hours60);
        int int62 = hours57.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours60);
        org.joda.time.DurationFieldType durationFieldType63 = null;
        boolean boolean64 = hours57.isSupported(durationFieldType63);
        org.joda.time.Hours hours66 = hours57.minus((int) (short) -1);
        org.joda.time.PeriodType periodType67 = hours57.getPeriodType();
        org.joda.time.Hours hours68 = org.joda.time.Hours.EIGHT;
        int int70 = hours68.getValue((int) (short) 0);
        org.joda.time.Hours hours71 = hours57.minus(hours68);
        org.joda.time.Hours hours73 = hours57.plus(7);
        org.joda.time.Hours hours74 = hours57.negated();
        org.joda.time.Hours hours75 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod76 = hours75.toMutablePeriod();
        org.joda.time.Hours hours77 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours78 = hours75.minus(hours77);
        org.joda.time.DurationFieldType durationFieldType79 = null;
        int int80 = hours75.get(durationFieldType79);
        org.joda.time.Hours hours82 = hours75.minus((int) (short) 0);
        org.joda.time.Hours hours83 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType84 = null;
        int int85 = hours83.get(durationFieldType84);
        org.joda.time.DurationFieldType durationFieldType86 = hours83.getFieldType();
        int int87 = hours82.get(durationFieldType86);
        int int88 = hours57.get(durationFieldType86);
        boolean boolean89 = hours45.isSupported(durationFieldType86);
        int int90 = hours24.get(durationFieldType86);
        int int91 = hours0.get(durationFieldType86);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 7 + "'", int23 == 7);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(mutablePeriod48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(mutablePeriod59);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertNotNull(periodType67);
        org.junit.Assert.assertNotNull(hours68);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 8 + "'", int70 == 8);
        org.junit.Assert.assertNotNull(hours71);
        org.junit.Assert.assertNotNull(hours73);
        org.junit.Assert.assertNotNull(hours74);
        org.junit.Assert.assertNotNull(hours75);
        org.junit.Assert.assertNotNull(mutablePeriod76);
        org.junit.Assert.assertNotNull(hours77);
        org.junit.Assert.assertNotNull(hours78);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertNotNull(hours82);
        org.junit.Assert.assertNotNull(hours83);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertNotNull(durationFieldType86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 7 + "'", int87 == 7);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 7 + "'", int88 == 7);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-7) + "'", int90 == (-7));
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 1 + "'", int91 == 1);
    }

    @Test
    public void test0971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0971");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        boolean boolean22 = hours16.isGreaterThan(hours20);
        org.joda.time.Hours hours23 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours16);
        int int24 = hours23.size();
        org.joda.time.Hours hours26 = hours23.plus((int) (short) 0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(hours26);
    }

    @Test
    public void test0972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0972");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((int) (short) 1);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours6 = hours3.minus(hours5);
        int int7 = hours2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours5);
        org.joda.time.DurationFieldType durationFieldType8 = null;
        boolean boolean9 = hours2.isSupported(durationFieldType8);
        org.joda.time.Hours hours11 = hours2.minus((int) (short) -1);
        org.joda.time.Hours hours12 = hours11.negated();
        org.joda.time.Hours hours14 = hours12.plus(16);
        int int15 = hours1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours12);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
    }

    @Test
    public void test0973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0973");
        org.joda.time.Hours hours0 = org.joda.time.Hours.MIN_VALUE;
        org.joda.time.Hours hours1 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = hours1.get(durationFieldType2);
        org.joda.time.DurationFieldType durationFieldType4 = hours1.getFieldType();
        org.joda.time.DurationFieldType durationFieldType5 = hours1.getFieldType();
        int int6 = hours0.get(durationFieldType5);
        org.joda.time.Hours hours8 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours9 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod10 = hours9.toMutablePeriod();
        org.joda.time.Hours hours11 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours12 = hours9.minus(hours11);
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = hours9.get(durationFieldType13);
        org.joda.time.Hours hours16 = hours9.minus((int) (short) 0);
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod18 = hours17.toMutablePeriod();
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours20 = hours17.minus(hours19);
        org.joda.time.DurationFieldType durationFieldType21 = null;
        boolean boolean22 = hours19.isSupported(durationFieldType21);
        org.joda.time.Hours hours23 = hours16.minus(hours19);
        org.joda.time.Hours hours24 = hours8.plus(hours23);
        org.joda.time.Hours hours25 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod26 = hours25.toMutablePeriod();
        org.joda.time.Hours hours27 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours28 = hours25.minus(hours27);
        boolean boolean29 = hours23.isGreaterThan(hours27);
        org.joda.time.Hours hours30 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod31 = hours30.toMutablePeriod();
        org.joda.time.Hours hours32 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours33 = hours30.minus(hours32);
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = hours30.get(durationFieldType34);
        org.joda.time.Hours hours37 = hours30.minus((int) (short) 0);
        org.joda.time.Hours hours38 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours30);
        org.joda.time.Hours hours39 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours40 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod41 = hours40.toMutablePeriod();
        org.joda.time.Hours hours42 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours43 = hours40.minus(hours42);
        int int44 = hours39.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours42);
        org.joda.time.DurationFieldType durationFieldType45 = null;
        boolean boolean46 = hours39.isSupported(durationFieldType45);
        org.joda.time.Hours hours48 = hours39.minus((int) (short) -1);
        org.joda.time.Hours hours49 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod50 = hours49.toMutablePeriod();
        org.joda.time.Hours hours51 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours52 = hours49.minus(hours51);
        org.joda.time.Hours hours54 = hours51.plus(8);
        org.joda.time.Hours hours55 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType56 = null;
        int int57 = hours55.get(durationFieldType56);
        org.joda.time.DurationFieldType durationFieldType58 = hours55.getFieldType();
        boolean boolean59 = hours54.isSupported(durationFieldType58);
        int int60 = hours48.get(durationFieldType58);
        org.joda.time.Hours hours61 = hours30.plus(hours48);
        org.joda.time.Hours hours62 = hours27.plus(hours30);
        org.joda.time.Hours hours64 = hours62.dividedBy(100);
        org.joda.time.Hours hours65 = hours0.plus(hours64);
        org.joda.time.Hours hours67 = hours64.dividedBy((-2));
        org.joda.time.Hours hours68 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours67);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-2147483648) + "'", int6 == (-2147483648));
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(mutablePeriod41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(mutablePeriod50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(durationFieldType58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 8 + "'", int60 == 8);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertNotNull(hours68);
    }

    @Test
    public void test0974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0974");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        boolean boolean7 = hours0.isSupported(durationFieldType6);
        org.joda.time.Hours hours9 = hours0.minus((int) (short) -1);
        org.joda.time.PeriodType periodType10 = hours0.getPeriodType();
        int int11 = hours0.getHours();
        org.joda.time.DurationFieldType durationFieldType13 = hours0.getFieldType((int) (short) 0);
        int int14 = hours0.size();
        org.joda.time.Period period15 = hours0.toPeriod();
        org.joda.time.Hours hours17 = org.joda.time.Hours.parseHours("PT16H");
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        int int23 = hours18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours21);
        org.joda.time.MutablePeriod mutablePeriod24 = hours18.toMutablePeriod();
        org.joda.time.Hours hours25 = hours17.minus(hours18);
        org.joda.time.Hours hours27 = hours18.multipliedBy((int) (short) 0);
        org.joda.time.PeriodType periodType28 = hours27.getPeriodType();
        org.joda.time.Hours hours29 = hours27.negated();
        boolean boolean30 = hours0.isGreaterThan(hours29);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 7 + "'", int11 == 7);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test0975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0975");
        org.joda.time.Hours hours0 = org.joda.time.Hours.TWO;
        org.joda.time.Hours hours1 = org.joda.time.Hours.MAX_VALUE;
        int int2 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours1);
        org.joda.time.Hours hours3 = hours1.negated();
        org.joda.time.Hours hours5 = hours1.multipliedBy(0);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours5);
    }

    @Test
    public void test0976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0976");
        org.joda.time.Hours hours0 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours1 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = hours1.get(durationFieldType2);
        boolean boolean4 = hours0.equals((java.lang.Object) durationFieldType2);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod7 = hours6.toMutablePeriod();
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours9 = hours6.minus(hours8);
        int int10 = hours5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours8);
        org.joda.time.Hours hours12 = hours8.multipliedBy(0);
        org.joda.time.Hours hours13 = hours0.plus(hours12);
        org.joda.time.Hours hours15 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod17 = hours16.toMutablePeriod();
        org.joda.time.Hours hours18 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours19 = hours16.minus(hours18);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = hours16.get(durationFieldType20);
        org.joda.time.Hours hours23 = hours16.minus((int) (short) 0);
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod25 = hours24.toMutablePeriod();
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours27 = hours24.minus(hours26);
        org.joda.time.DurationFieldType durationFieldType28 = null;
        boolean boolean29 = hours26.isSupported(durationFieldType28);
        org.joda.time.Hours hours30 = hours23.minus(hours26);
        org.joda.time.Hours hours31 = hours15.plus(hours30);
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod33 = hours32.toMutablePeriod();
        org.joda.time.Hours hours34 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours35 = hours32.minus(hours34);
        boolean boolean36 = hours30.isGreaterThan(hours34);
        org.joda.time.Hours hours37 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours30);
        int int38 = hours12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours30);
        org.joda.time.Hours hours39 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod40 = hours39.toMutablePeriod();
        org.joda.time.Hours hours41 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours42 = hours39.minus(hours41);
        org.joda.time.DurationFieldType durationFieldType43 = null;
        int int44 = hours39.get(durationFieldType43);
        org.joda.time.Hours hours46 = hours39.multipliedBy(1);
        int int47 = hours46.getHours();
        org.joda.time.DurationFieldType durationFieldType48 = hours46.getFieldType();
        org.joda.time.Hours hours49 = hours30.plus(hours46);
        org.joda.time.Hours hours51 = hours46.multipliedBy((int) (byte) 1);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(mutablePeriod40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 7 + "'", int47 == 7);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours51);
    }

    @Test
    public void test0977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0977");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        int int4 = hours2.getValue((int) (short) 0);
        org.joda.time.Hours hours5 = hours1.minus(hours2);
        org.joda.time.Hours hours6 = hours0.minus(hours1);
        int int7 = hours0.size();
        org.joda.time.PeriodType periodType8 = hours0.getPeriodType();
        org.joda.time.Hours hours9 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        int int14 = hours9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours12);
        org.joda.time.MutablePeriod mutablePeriod15 = hours9.toMutablePeriod();
        org.joda.time.Hours hours17 = hours9.multipliedBy((int) (byte) 100);
        boolean boolean18 = hours0.isGreaterThan(hours9);
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        int int22 = hours20.getValue((int) (short) 0);
        org.joda.time.Hours hours23 = hours19.minus(hours20);
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod25 = hours24.toMutablePeriod();
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours27 = hours24.minus(hours26);
        org.joda.time.Hours hours29 = hours26.plus(8);
        org.joda.time.Hours hours30 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType31 = null;
        int int32 = hours30.get(durationFieldType31);
        org.joda.time.DurationFieldType durationFieldType33 = hours30.getFieldType();
        boolean boolean34 = hours29.isSupported(durationFieldType33);
        boolean boolean35 = hours19.isSupported(durationFieldType33);
        org.joda.time.Hours hours36 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType37 = null;
        int int38 = hours36.get(durationFieldType37);
        org.joda.time.DurationFieldType durationFieldType39 = hours36.getFieldType();
        org.joda.time.DurationFieldType durationFieldType40 = hours36.getFieldType();
        boolean boolean41 = hours19.isSupported(durationFieldType40);
        org.joda.time.Hours hours42 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period43 = hours42.toPeriod();
        org.joda.time.Hours hours45 = hours42.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod46 = hours45.toMutablePeriod();
        org.joda.time.Hours hours47 = org.joda.time.Hours.THREE;
        org.joda.time.Period period48 = hours47.toPeriod();
        org.joda.time.Hours hours50 = hours47.plus((int) (byte) -1);
        org.joda.time.Hours hours51 = hours45.minus(hours47);
        org.joda.time.DurationFieldType durationFieldType52 = hours51.getFieldType();
        int int53 = hours19.get(durationFieldType52);
        boolean boolean54 = hours9.isLessThan(hours19);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 8 + "'", int4 == 8);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 8 + "'", int22 == 8);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(durationFieldType39);
        org.junit.Assert.assertNotNull(durationFieldType40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(mutablePeriod46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 7 + "'", int53 == 7);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test0978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0978");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        int int4 = hours2.getValue((int) (short) 0);
        org.joda.time.Hours hours5 = hours1.minus(hours2);
        org.joda.time.Hours hours6 = hours0.minus(hours1);
        org.joda.time.Hours hours8 = hours1.multipliedBy((int) (byte) 10);
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        java.lang.String str10 = hours8.toString();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 8 + "'", int4 == 8);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT70H" + "'", str10, "PT70H");
    }

    @Test
    public void test0979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0979");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = hours0.get(durationFieldType4);
        org.joda.time.Hours hours7 = hours0.minus((int) (short) 0);
        org.joda.time.Hours hours8 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = hours8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = hours8.getFieldType();
        int int12 = hours7.get(durationFieldType11);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod14 = hours13.toMutablePeriod();
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours16 = hours13.minus(hours15);
        org.joda.time.Duration duration17 = hours13.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod18 = hours13.toMutablePeriod();
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        int int21 = hours19.getValue((int) (short) 0);
        java.lang.String str22 = hours19.toString();
        boolean boolean23 = hours13.isGreaterThan(hours19);
        org.joda.time.Hours hours25 = hours19.minus(10);
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod28 = hours27.toMutablePeriod();
        org.joda.time.Hours hours29 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours30 = hours27.minus(hours29);
        int int31 = hours26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours29);
        org.joda.time.Hours hours32 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours26);
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = hours26.get(durationFieldType33);
        boolean boolean35 = hours25.equals((java.lang.Object) hours26);
        org.joda.time.Hours hours37 = hours26.minus(100);
        org.joda.time.Hours hours38 = hours7.minus(hours26);
        org.joda.time.Hours hours40 = hours7.dividedBy((int) '4');
        org.joda.time.Hours hours42 = hours7.minus(8);
        org.joda.time.Hours hours43 = hours7.negated();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 7 + "'", int12 == 7);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 8 + "'", int21 == 8);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "PT8H" + "'", str22, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
    }

    @Test
    public void test0980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0980");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        java.lang.String str2 = hours0.toString();
        org.joda.time.Hours hours4 = hours0.multipliedBy((int) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType6 = hours0.getFieldType(16);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 16");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "PT7H" + "'", str2, "PT7H");
        org.junit.Assert.assertNotNull(hours4);
    }

    @Test
    public void test0981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0981");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        boolean boolean22 = hours16.isGreaterThan(hours20);
        org.joda.time.Hours hours23 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours25 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours26 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod27 = hours26.toMutablePeriod();
        org.joda.time.Hours hours28 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours29 = hours26.minus(hours28);
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = hours26.get(durationFieldType30);
        org.joda.time.Hours hours33 = hours26.minus((int) (short) 0);
        org.joda.time.Hours hours34 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod35 = hours34.toMutablePeriod();
        org.joda.time.Hours hours36 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours37 = hours34.minus(hours36);
        org.joda.time.DurationFieldType durationFieldType38 = null;
        boolean boolean39 = hours36.isSupported(durationFieldType38);
        org.joda.time.Hours hours40 = hours33.minus(hours36);
        org.joda.time.Hours hours41 = hours25.plus(hours40);
        int int42 = hours23.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours40);
        org.joda.time.MutablePeriod mutablePeriod43 = hours40.toMutablePeriod();
        boolean boolean44 = hours16.isLessThan(hours40);
        int int45 = hours40.getHours();
        org.joda.time.DurationFieldType durationFieldType46 = hours40.getFieldType();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType46);
    }

    @Test
    public void test0982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0982");
        org.joda.time.Hours hours0 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours1 = hours0.negated();
        org.joda.time.DurationFieldType durationFieldType2 = hours0.getFieldType();
        java.lang.String str3 = hours0.toString();
        org.joda.time.Hours hours4 = org.joda.time.Hours.ZERO;
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod7 = hours6.toMutablePeriod();
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours9 = hours6.minus(hours8);
        int int10 = hours5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours8);
        org.joda.time.MutablePeriod mutablePeriod11 = hours5.toMutablePeriod();
        org.joda.time.Hours hours13 = hours5.minus(7);
        org.joda.time.Hours hours14 = hours4.minus(hours5);
        org.joda.time.Hours hours15 = hours0.minus(hours5);
        org.joda.time.Hours hours17 = org.joda.time.Hours.parseHours("PT16H");
        org.joda.time.Period period18 = hours17.toPeriod();
        org.joda.time.Hours hours20 = hours17.minus((int) (byte) -1);
        int int22 = hours17.getValue(0);
        org.joda.time.Hours hours23 = hours5.minus(hours17);
        org.joda.time.Hours hours25 = hours17.minus((int) 'a');
        org.joda.time.PeriodType periodType26 = hours17.getPeriodType();
        org.joda.time.Hours hours28 = hours17.plus((int) (byte) 10);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT3H" + "'", str3, "PT3H");
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 16 + "'", int22 == 16);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(hours28);
    }

    @Test
    public void test0983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0983");
        org.joda.time.Hours hours0 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours1 = hours0.negated();
        org.joda.time.DurationFieldType durationFieldType2 = hours0.getFieldType();
        java.lang.String str3 = hours0.toString();
        org.joda.time.Hours hours4 = org.joda.time.Hours.ZERO;
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod7 = hours6.toMutablePeriod();
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours9 = hours6.minus(hours8);
        int int10 = hours5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours8);
        org.joda.time.MutablePeriod mutablePeriod11 = hours5.toMutablePeriod();
        org.joda.time.Hours hours13 = hours5.minus(7);
        org.joda.time.Hours hours14 = hours4.minus(hours5);
        org.joda.time.Hours hours15 = hours0.minus(hours5);
        org.joda.time.Hours hours17 = org.joda.time.Hours.parseHours("PT16H");
        org.joda.time.Period period18 = hours17.toPeriod();
        org.joda.time.Hours hours20 = hours17.minus((int) (byte) -1);
        int int22 = hours17.getValue(0);
        org.joda.time.Hours hours23 = hours5.minus(hours17);
        org.joda.time.Hours hours25 = hours5.plus(0);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT3H" + "'", str3, "PT3H");
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 16 + "'", int22 == 16);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours25);
    }

    @Test
    public void test0984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0984");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Duration duration4 = hours0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod5 = hours0.toMutablePeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.EIGHT;
        int int8 = hours6.getValue((int) (short) 0);
        java.lang.String str9 = hours6.toString();
        boolean boolean10 = hours0.isGreaterThan(hours6);
        org.joda.time.Hours hours12 = hours0.multipliedBy((int) '4');
        org.joda.time.ReadablePeriod readablePeriod13 = null;
        org.joda.time.Hours hours14 = org.joda.time.Hours.standardHoursIn(readablePeriod13);
        org.joda.time.DurationFieldType durationFieldType15 = hours14.getFieldType();
        boolean boolean16 = hours12.isSupported(durationFieldType15);
        org.joda.time.Hours hours17 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod18 = hours17.toMutablePeriod();
        org.joda.time.Hours hours19 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours20 = hours17.minus(hours19);
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = hours17.get(durationFieldType21);
        org.joda.time.Hours hours24 = hours17.multipliedBy(1);
        org.joda.time.Hours hours25 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod26 = hours25.toMutablePeriod();
        org.joda.time.Hours hours27 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours28 = hours25.minus(hours27);
        org.joda.time.DurationFieldType durationFieldType29 = null;
        int int30 = hours25.get(durationFieldType29);
        org.joda.time.Hours hours32 = hours25.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval33 = null;
        org.joda.time.Hours hours34 = org.joda.time.Hours.hoursIn(readableInterval33);
        int int35 = hours32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours34);
        org.joda.time.Hours hours36 = hours17.minus(hours32);
        org.joda.time.Hours hours37 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours38 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod39 = hours38.toMutablePeriod();
        org.joda.time.Hours hours40 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours41 = hours38.minus(hours40);
        int int42 = hours37.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours40);
        org.joda.time.DurationFieldType durationFieldType43 = null;
        boolean boolean44 = hours37.isSupported(durationFieldType43);
        org.joda.time.Hours hours46 = hours37.minus((int) (short) -1);
        org.joda.time.PeriodType periodType47 = hours37.getPeriodType();
        org.joda.time.Hours hours48 = org.joda.time.Hours.EIGHT;
        int int50 = hours48.getValue((int) (short) 0);
        org.joda.time.Hours hours51 = hours37.minus(hours48);
        org.joda.time.Hours hours53 = hours37.plus(7);
        org.joda.time.Hours hours54 = hours37.negated();
        org.joda.time.Hours hours55 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod56 = hours55.toMutablePeriod();
        org.joda.time.Hours hours57 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours58 = hours55.minus(hours57);
        org.joda.time.DurationFieldType durationFieldType59 = null;
        int int60 = hours55.get(durationFieldType59);
        org.joda.time.Hours hours62 = hours55.minus((int) (short) 0);
        org.joda.time.Hours hours63 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType64 = null;
        int int65 = hours63.get(durationFieldType64);
        org.joda.time.DurationFieldType durationFieldType66 = hours63.getFieldType();
        int int67 = hours62.get(durationFieldType66);
        int int68 = hours37.get(durationFieldType66);
        org.joda.time.Hours hours69 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours70 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod71 = hours70.toMutablePeriod();
        org.joda.time.Hours hours72 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours73 = hours70.minus(hours72);
        int int74 = hours69.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours72);
        org.joda.time.Hours hours75 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours69);
        org.joda.time.DurationFieldType durationFieldType76 = null;
        int int77 = hours69.get(durationFieldType76);
        org.joda.time.DurationFieldType durationFieldType78 = null;
        int int79 = hours69.get(durationFieldType78);
        org.joda.time.Hours hours81 = hours69.minus(0);
        org.joda.time.DurationFieldType durationFieldType82 = hours81.getFieldType();
        boolean boolean83 = hours37.isSupported(durationFieldType82);
        boolean boolean84 = hours32.isSupported(durationFieldType82);
        int int85 = hours12.get(durationFieldType82);
        org.joda.time.Hours hours87 = hours12.plus(6);
        org.joda.time.Hours hours88 = hours12.negated();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT8H" + "'", str9, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(mutablePeriod39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 8 + "'", int50 == 8);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(mutablePeriod56);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(durationFieldType66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 7 + "'", int67 == 7);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 7 + "'", int68 == 7);
        org.junit.Assert.assertNotNull(hours69);
        org.junit.Assert.assertNotNull(hours70);
        org.junit.Assert.assertNotNull(mutablePeriod71);
        org.junit.Assert.assertNotNull(hours72);
        org.junit.Assert.assertNotNull(hours73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(hours75);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(hours81);
        org.junit.Assert.assertNotNull(durationFieldType82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 364 + "'", int85 == 364);
        org.junit.Assert.assertNotNull(hours87);
        org.junit.Assert.assertNotNull(hours88);
    }

    @Test
    public void test0985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0985");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        boolean boolean6 = hours1.equals((java.lang.Object) (short) 10);
        org.joda.time.Hours hours7 = null;
        org.joda.time.Hours hours8 = hours1.minus(hours7);
        org.joda.time.Hours hours9 = hours8.negated();
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.Duration duration14 = hours10.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod15 = hours10.toMutablePeriod();
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        int int18 = hours16.getValue((int) (short) 0);
        java.lang.String str19 = hours16.toString();
        boolean boolean20 = hours10.isGreaterThan(hours16);
        org.joda.time.Hours hours22 = hours16.minus(10);
        org.joda.time.Hours hours23 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod25 = hours24.toMutablePeriod();
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours27 = hours24.minus(hours26);
        int int28 = hours23.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours26);
        org.joda.time.Hours hours29 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours23);
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = hours23.get(durationFieldType30);
        boolean boolean32 = hours22.equals((java.lang.Object) hours23);
        java.lang.String str33 = hours22.toString();
        org.joda.time.DurationFieldType durationFieldType35 = hours22.getFieldType(0);
        boolean boolean36 = hours8.isGreaterThan(hours22);
        int int37 = hours8.getHours();
        org.joda.time.MutablePeriod mutablePeriod38 = hours8.toMutablePeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 8 + "'", int18 == 8);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "PT8H" + "'", str19, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "PT-2H" + "'", str33, "PT-2H");
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 8 + "'", int37 == 8);
        org.junit.Assert.assertNotNull(mutablePeriod38);
    }

    @Test
    public void test0986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0986");
        org.joda.time.Hours hours0 = org.joda.time.Hours.EIGHT;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = hours0.get(durationFieldType1);
        org.joda.time.Hours hours3 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours4 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType5 = null;
        int int6 = hours4.get(durationFieldType5);
        boolean boolean7 = hours3.equals((java.lang.Object) durationFieldType5);
        org.joda.time.Duration duration8 = hours3.toStandardDuration();
        boolean boolean9 = hours0.equals((java.lang.Object) duration8);
        int int10 = hours0.size();
        org.joda.time.Hours hours11 = org.joda.time.Hours.EIGHT;
        int int12 = hours11.size();
        org.joda.time.Hours hours14 = hours11.dividedBy(100);
        org.joda.time.Hours hours15 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours16 = org.joda.time.Hours.EIGHT;
        int int18 = hours16.getValue((int) (short) 0);
        org.joda.time.Hours hours19 = hours15.minus(hours16);
        org.joda.time.Hours hours20 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours21 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours22 = org.joda.time.Hours.EIGHT;
        int int24 = hours22.getValue((int) (short) 0);
        org.joda.time.Hours hours25 = hours21.minus(hours22);
        org.joda.time.Hours hours26 = hours20.minus(hours21);
        int int27 = hours20.size();
        org.joda.time.Duration duration28 = hours20.toStandardDuration();
        boolean boolean29 = hours16.isGreaterThan(hours20);
        org.joda.time.MutablePeriod mutablePeriod30 = hours20.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType31 = hours20.getFieldType();
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.Period period33 = hours32.toPeriod();
        org.joda.time.Hours hours35 = hours32.dividedBy(1);
        org.joda.time.MutablePeriod mutablePeriod36 = hours35.toMutablePeriod();
        org.joda.time.Hours hours37 = org.joda.time.Hours.THREE;
        org.joda.time.Period period38 = hours37.toPeriod();
        org.joda.time.Hours hours40 = hours37.plus((int) (byte) -1);
        org.joda.time.Hours hours41 = hours35.minus(hours37);
        org.joda.time.Hours hours42 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod43 = hours42.toMutablePeriod();
        org.joda.time.Hours hours44 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours45 = hours42.minus(hours44);
        org.joda.time.DurationFieldType durationFieldType46 = null;
        int int47 = hours42.get(durationFieldType46);
        org.joda.time.Hours hours49 = hours42.minus((int) (short) 0);
        org.joda.time.Hours hours50 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType51 = null;
        int int52 = hours50.get(durationFieldType51);
        org.joda.time.DurationFieldType durationFieldType53 = hours50.getFieldType();
        int int54 = hours49.get(durationFieldType53);
        int int55 = hours37.get(durationFieldType53);
        int int56 = hours20.get(durationFieldType53);
        boolean boolean57 = hours11.isLessThan(hours20);
        org.joda.time.Hours hours59 = hours20.minus((-2));
        int int60 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours20);
        org.joda.time.MutablePeriod mutablePeriod61 = hours20.toMutablePeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 8 + "'", int18 == 8);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 8 + "'", int24 == 8);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(mutablePeriod36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(durationFieldType53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 7 + "'", int54 == 7);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 3 + "'", int55 == 3);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 6 + "'", int56 == 6);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod61);
    }

    @Test
    public void test0987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0987");
        org.joda.time.Hours hours0 = org.joda.time.Hours.MAX_VALUE;
        org.joda.time.Hours hours2 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours3 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod4 = hours3.toMutablePeriod();
        org.joda.time.Hours hours5 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours6 = hours3.minus(hours5);
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = hours3.get(durationFieldType7);
        org.joda.time.Hours hours10 = hours3.minus((int) (short) 0);
        org.joda.time.Hours hours11 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod12 = hours11.toMutablePeriod();
        org.joda.time.Hours hours13 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours14 = hours11.minus(hours13);
        org.joda.time.DurationFieldType durationFieldType15 = null;
        boolean boolean16 = hours13.isSupported(durationFieldType15);
        org.joda.time.Hours hours17 = hours10.minus(hours13);
        org.joda.time.Hours hours18 = hours2.plus(hours17);
        int int19 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours17);
        org.joda.time.MutablePeriod mutablePeriod20 = hours17.toMutablePeriod();
        org.joda.time.Duration duration21 = hours17.toStandardDuration();
        org.joda.time.Hours hours22 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours17);
        org.joda.time.Period period23 = hours22.toPeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(period23);
    }

    @Test
    public void test0988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0988");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Hours hours4 = hours2.negated();
        org.joda.time.DurationFieldType durationFieldType5 = hours4.getFieldType();
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod7 = hours6.toMutablePeriod();
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours9 = hours6.minus(hours8);
        org.joda.time.Hours hours10 = hours8.negated();
        int int11 = hours10.getHours();
        int int12 = hours4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours10);
        org.joda.time.Hours hours13 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod14 = hours13.toMutablePeriod();
        org.joda.time.Hours hours15 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours16 = hours13.minus(hours15);
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = hours13.get(durationFieldType17);
        org.joda.time.Hours hours20 = hours13.minus((int) (short) 0);
        org.joda.time.ReadableInterval readableInterval21 = null;
        org.joda.time.Hours hours22 = org.joda.time.Hours.hoursIn(readableInterval21);
        int int23 = hours20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours22);
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours25 = org.joda.time.Hours.EIGHT;
        int int27 = hours25.getValue((int) (short) 0);
        org.joda.time.Hours hours28 = hours24.minus(hours25);
        org.joda.time.Hours hours29 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = hours29.get(durationFieldType30);
        org.joda.time.DurationFieldType durationFieldType32 = hours29.getFieldType();
        int int33 = hours24.get(durationFieldType32);
        boolean boolean34 = hours22.isSupported(durationFieldType32);
        org.joda.time.PeriodType periodType35 = hours22.getPeriodType();
        int int36 = hours22.getHours();
        org.joda.time.Hours hours37 = hours4.minus(hours22);
        // The following exception was thrown during execution in test generation
        try {
            int int39 = hours37.getValue((-25));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -25");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-8) + "'", int11 == (-8));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 8 + "'", int27 == 8);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 7 + "'", int33 == 7);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(hours37);
    }

    @Test
    public void test0989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0989");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod6 = hours5.toMutablePeriod();
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours8 = hours5.minus(hours7);
        org.joda.time.Hours hours10 = hours7.plus(8);
        org.joda.time.Hours hours11 = hours1.minus(hours7);
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod13 = hours12.toMutablePeriod();
        org.joda.time.Hours hours14 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours15 = hours12.minus(hours14);
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = hours12.get(durationFieldType16);
        int int18 = hours12.getHours();
        boolean boolean19 = hours1.isLessThan(hours12);
        org.joda.time.Hours hours20 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod21 = hours20.toMutablePeriod();
        org.joda.time.Hours hours22 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours23 = hours20.minus(hours22);
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours25 = org.joda.time.Hours.EIGHT;
        int int27 = hours25.getValue((int) (short) 0);
        org.joda.time.Hours hours28 = hours24.minus(hours25);
        org.joda.time.Hours hours29 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = hours29.get(durationFieldType30);
        org.joda.time.DurationFieldType durationFieldType32 = hours29.getFieldType();
        int int33 = hours24.get(durationFieldType32);
        boolean boolean34 = hours23.isSupported(durationFieldType32);
        org.joda.time.Hours hours36 = hours23.dividedBy((-2147483648));
        boolean boolean37 = hours12.isGreaterThan(hours23);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 7 + "'", int18 == 7);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 8 + "'", int27 == 8);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 7 + "'", int33 == 7);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test0990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0990");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod6 = hours5.toMutablePeriod();
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours8 = hours5.minus(hours7);
        org.joda.time.Hours hours10 = hours7.plus(8);
        org.joda.time.Hours hours11 = hours1.minus(hours7);
        int int12 = hours11.size();
        org.joda.time.Hours hours13 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours14 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = hours14.get(durationFieldType15);
        boolean boolean17 = hours13.equals((java.lang.Object) durationFieldType15);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        int int23 = hours18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours21);
        org.joda.time.Hours hours25 = hours21.multipliedBy(0);
        org.joda.time.Hours hours26 = hours13.plus(hours25);
        org.joda.time.Hours hours28 = hours26.minus((int) (byte) 100);
        int int29 = hours11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours26);
        java.lang.Class<?> wildcardClass30 = hours26.getClass();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0991");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = hours0.get(durationFieldType1);
        org.joda.time.Hours hours4 = hours0.dividedBy(100);
        org.joda.time.Hours hours6 = hours4.minus(0);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours6);
    }

    @Test
    public void test0992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0992");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod1 = hours0.toMutablePeriod();
        org.joda.time.Hours hours2 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours3 = hours0.minus(hours2);
        org.joda.time.Hours hours5 = hours2.plus(8);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Hours hours7 = hours5.dividedBy(0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: / by zero");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours5);
    }

    @Test
    public void test0993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0993");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.EIGHT;
        int int3 = hours1.getValue((int) (short) 0);
        org.joda.time.Hours hours4 = hours0.minus(hours1);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours7 = org.joda.time.Hours.EIGHT;
        int int9 = hours7.getValue((int) (short) 0);
        org.joda.time.Hours hours10 = hours6.minus(hours7);
        org.joda.time.Hours hours11 = hours5.minus(hours6);
        int int12 = hours5.size();
        org.joda.time.Duration duration13 = hours5.toStandardDuration();
        boolean boolean14 = hours1.isGreaterThan(hours5);
        org.joda.time.Hours hours16 = hours5.plus((int) (byte) -1);
        org.joda.time.Hours hours18 = hours16.multipliedBy((int) (short) 1);
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours20 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod21 = hours20.toMutablePeriod();
        org.joda.time.Hours hours22 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours23 = hours20.minus(hours22);
        int int24 = hours19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours22);
        org.joda.time.DurationFieldType durationFieldType25 = null;
        boolean boolean26 = hours19.isSupported(durationFieldType25);
        org.joda.time.Hours hours28 = hours19.minus((int) (short) -1);
        org.joda.time.PeriodType periodType29 = hours19.getPeriodType();
        org.joda.time.Hours hours30 = org.joda.time.Hours.EIGHT;
        int int32 = hours30.getValue((int) (short) 0);
        org.joda.time.Hours hours33 = hours19.minus(hours30);
        org.joda.time.Hours hours35 = hours19.plus(7);
        int int36 = hours19.size();
        org.joda.time.Hours hours37 = org.joda.time.Hours.TWO;
        org.joda.time.Hours hours39 = hours37.plus(0);
        org.joda.time.Hours hours40 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours41 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod42 = hours41.toMutablePeriod();
        org.joda.time.Hours hours43 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours44 = hours41.minus(hours43);
        int int45 = hours40.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours43);
        org.joda.time.DurationFieldType durationFieldType46 = null;
        boolean boolean47 = hours40.isSupported(durationFieldType46);
        org.joda.time.Hours hours49 = hours40.minus((int) (short) -1);
        org.joda.time.Hours hours50 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod51 = hours50.toMutablePeriod();
        org.joda.time.Hours hours52 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours53 = hours50.minus(hours52);
        org.joda.time.Hours hours55 = hours52.plus(8);
        org.joda.time.Hours hours56 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType57 = null;
        int int58 = hours56.get(durationFieldType57);
        org.joda.time.DurationFieldType durationFieldType59 = hours56.getFieldType();
        boolean boolean60 = hours55.isSupported(durationFieldType59);
        int int61 = hours49.get(durationFieldType59);
        org.joda.time.Hours hours62 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours63 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod64 = hours63.toMutablePeriod();
        org.joda.time.Hours hours65 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours66 = hours63.minus(hours65);
        int int67 = hours62.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours65);
        org.joda.time.DurationFieldType durationFieldType68 = null;
        boolean boolean69 = hours62.isSupported(durationFieldType68);
        org.joda.time.Hours hours71 = hours62.multipliedBy((int) (short) 10);
        org.joda.time.Hours hours72 = hours49.plus(hours62);
        org.joda.time.DurationFieldType durationFieldType73 = hours72.getFieldType();
        boolean boolean74 = hours39.isSupported(durationFieldType73);
        org.joda.time.Hours hours76 = org.joda.time.Hours.hours(0);
        org.joda.time.Hours hours77 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod78 = hours77.toMutablePeriod();
        org.joda.time.Hours hours79 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours80 = hours77.minus(hours79);
        org.joda.time.DurationFieldType durationFieldType81 = null;
        boolean boolean82 = hours79.isSupported(durationFieldType81);
        org.joda.time.Hours hours83 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours84 = org.joda.time.Hours.EIGHT;
        int int86 = hours84.getValue((int) (short) 0);
        org.joda.time.Hours hours87 = hours83.minus(hours84);
        boolean boolean88 = hours79.isLessThan(hours84);
        org.joda.time.Hours hours89 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType90 = null;
        int int91 = hours89.get(durationFieldType90);
        org.joda.time.DurationFieldType durationFieldType92 = hours89.getFieldType();
        boolean boolean93 = hours79.isSupported(durationFieldType92);
        int int94 = hours76.get(durationFieldType92);
        boolean boolean95 = hours39.isSupported(durationFieldType92);
        boolean boolean96 = hours19.isSupported(durationFieldType92);
        boolean boolean97 = hours16.isGreaterThan(hours19);
        org.joda.time.MutablePeriod mutablePeriod98 = hours19.toMutablePeriod();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8 + "'", int9 == 8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 8 + "'", int32 == 8);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(mutablePeriod51);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(hours53);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(durationFieldType59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 8 + "'", int61 == 8);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertNotNull(mutablePeriod64);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(hours71);
        org.junit.Assert.assertNotNull(hours72);
        org.junit.Assert.assertNotNull(durationFieldType73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(hours76);
        org.junit.Assert.assertNotNull(hours77);
        org.junit.Assert.assertNotNull(mutablePeriod78);
        org.junit.Assert.assertNotNull(hours79);
        org.junit.Assert.assertNotNull(hours80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(hours83);
        org.junit.Assert.assertNotNull(hours84);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 8 + "'", int86 == 8);
        org.junit.Assert.assertNotNull(hours87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(hours89);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
        org.junit.Assert.assertNotNull(durationFieldType92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 0 + "'", int94 == 0);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertNotNull(mutablePeriod98);
    }

    @Test
    public void test0994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0994");
        org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("PT16H");
        org.joda.time.Period period2 = hours1.toPeriod();
        org.joda.time.Hours hours4 = hours1.minus((int) (byte) -1);
        org.joda.time.Period period5 = hours1.toPeriod();
        org.joda.time.Hours hours6 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = hours6.get(durationFieldType7);
        org.joda.time.DurationFieldType durationFieldType9 = hours6.getFieldType();
        org.joda.time.DurationFieldType durationFieldType10 = hours6.getFieldType();
        boolean boolean11 = hours1.isLessThan(hours6);
        org.joda.time.Hours hours12 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod13 = hours12.toMutablePeriod();
        org.joda.time.Hours hours14 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours15 = hours12.minus(hours14);
        org.joda.time.Duration duration16 = hours12.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod17 = hours12.toMutablePeriod();
        org.joda.time.Hours hours18 = org.joda.time.Hours.EIGHT;
        int int20 = hours18.getValue((int) (short) 0);
        java.lang.String str21 = hours18.toString();
        boolean boolean22 = hours12.isGreaterThan(hours18);
        org.joda.time.Hours hours24 = hours18.minus(10);
        org.joda.time.Hours hours25 = hours18.negated();
        org.joda.time.Duration duration26 = hours18.toStandardDuration();
        org.joda.time.Hours hours27 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours28 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod29 = hours28.toMutablePeriod();
        org.joda.time.Hours hours30 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours31 = hours28.minus(hours30);
        int int32 = hours27.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours30);
        org.joda.time.DurationFieldType durationFieldType33 = null;
        boolean boolean34 = hours27.isSupported(durationFieldType33);
        org.joda.time.Hours hours36 = hours27.minus((int) (short) -1);
        org.joda.time.Hours hours37 = hours36.negated();
        org.joda.time.Hours hours39 = hours37.plus(16);
        org.joda.time.DurationFieldType durationFieldType40 = hours37.getFieldType();
        boolean boolean41 = hours18.isSupported(durationFieldType40);
        boolean boolean42 = hours6.equals((java.lang.Object) hours18);
        org.joda.time.Hours hours43 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours44 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod45 = hours44.toMutablePeriod();
        org.joda.time.Hours hours46 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours47 = hours44.minus(hours46);
        int int48 = hours43.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours46);
        org.joda.time.Hours hours49 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours43);
        org.joda.time.DurationFieldType durationFieldType50 = null;
        int int51 = hours43.get(durationFieldType50);
        org.joda.time.DurationFieldType durationFieldType52 = null;
        int int53 = hours43.get(durationFieldType52);
        int int54 = hours43.getHours();
        org.joda.time.Hours hours55 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod56 = hours55.toMutablePeriod();
        org.joda.time.Hours hours57 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours58 = hours55.minus(hours57);
        org.joda.time.DurationFieldType durationFieldType59 = null;
        boolean boolean60 = hours57.isSupported(durationFieldType59);
        org.joda.time.Hours hours61 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours62 = org.joda.time.Hours.EIGHT;
        int int64 = hours62.getValue((int) (short) 0);
        org.joda.time.Hours hours65 = hours61.minus(hours62);
        boolean boolean66 = hours57.isLessThan(hours62);
        org.joda.time.Hours hours67 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType68 = null;
        int int69 = hours67.get(durationFieldType68);
        org.joda.time.DurationFieldType durationFieldType70 = hours67.getFieldType();
        boolean boolean71 = hours57.isSupported(durationFieldType70);
        boolean boolean72 = hours43.isSupported(durationFieldType70);
        org.joda.time.Hours hours73 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod74 = hours73.toMutablePeriod();
        org.joda.time.Hours hours75 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours76 = hours73.minus(hours75);
        org.joda.time.DurationFieldType durationFieldType77 = null;
        int int78 = hours73.get(durationFieldType77);
        org.joda.time.Hours hours80 = hours73.multipliedBy(1);
        int int81 = hours80.getHours();
        org.joda.time.Hours hours83 = hours80.minus((int) ' ');
        boolean boolean84 = hours43.isLessThan(hours80);
        org.joda.time.Hours hours85 = hours18.plus(hours80);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 8 + "'", int20 == 8);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "PT8H" + "'", str21, "PT8H");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(durationFieldType40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(mutablePeriod45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 7 + "'", int54 == 7);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertNotNull(mutablePeriod56);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 8 + "'", int64 == 8);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(hours67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(durationFieldType70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(hours73);
        org.junit.Assert.assertNotNull(mutablePeriod74);
        org.junit.Assert.assertNotNull(hours75);
        org.junit.Assert.assertNotNull(hours76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(hours80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 7 + "'", int81 == 7);
        org.junit.Assert.assertNotNull(hours83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(hours85);
    }

    @Test
    public void test0995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0995");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours19 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod20 = hours19.toMutablePeriod();
        org.joda.time.Hours hours21 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours22 = hours19.minus(hours21);
        int int23 = hours18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours21);
        org.joda.time.Hours hours24 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours18);
        org.joda.time.Hours hours25 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod26 = hours25.toMutablePeriod();
        org.joda.time.Hours hours27 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours28 = hours25.minus(hours27);
        org.joda.time.Hours hours30 = hours27.plus(8);
        org.joda.time.Hours hours31 = hours18.minus(hours30);
        org.joda.time.Hours hours32 = hours31.negated();
        boolean boolean33 = hours16.isLessThan(hours31);
        org.joda.time.DurationFieldType durationFieldType34 = hours16.getFieldType();
        int int35 = hours16.getHours();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
    }

    @Test
    public void test0996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0996");
        org.joda.time.Hours hours0 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours1 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod2 = hours1.toMutablePeriod();
        org.joda.time.Hours hours3 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours4 = hours1.minus(hours3);
        int int5 = hours0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours3);
        org.joda.time.Hours hours6 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours0);
        org.joda.time.Hours hours7 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod8 = hours7.toMutablePeriod();
        org.joda.time.Hours hours9 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours10 = hours7.minus(hours9);
        org.joda.time.DurationFieldType durationFieldType11 = null;
        int int12 = hours7.get(durationFieldType11);
        org.joda.time.Hours hours14 = hours7.minus((int) (short) 0);
        org.joda.time.Hours hours15 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = hours15.get(durationFieldType16);
        org.joda.time.DurationFieldType durationFieldType18 = hours15.getFieldType();
        int int19 = hours14.get(durationFieldType18);
        org.joda.time.Hours hours20 = org.joda.time.Hours.ONE;
        int int21 = hours20.getHours();
        org.joda.time.Hours hours23 = hours20.plus(10);
        org.joda.time.Hours hours24 = hours14.minus(hours23);
        org.joda.time.Hours hours25 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours24);
        boolean boolean26 = hours0.isLessThan(hours25);
        org.joda.time.Hours hours27 = hours25.negated();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 7 + "'", int19 == 7);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(hours27);
    }

    @Test
    public void test0997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0997");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(100);
        org.joda.time.Period period2 = hours1.toPeriod();
        org.joda.time.Hours hours4 = hours1.minus(8);
        org.joda.time.Hours hours5 = org.joda.time.Hours.THREE;
        org.joda.time.Period period6 = hours5.toPeriod();
        org.joda.time.Hours hours8 = hours5.plus((int) (byte) -1);
        org.joda.time.Hours hours10 = hours8.minus((int) (byte) 100);
        boolean boolean11 = hours1.equals((java.lang.Object) hours10);
        org.joda.time.Hours hours12 = hours1.negated();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(hours12);
    }

    @Test
    public void test0998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0998");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(9);
        org.junit.Assert.assertNotNull(hours1);
    }

    @Test
    public void test0999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0999");
        org.joda.time.Hours hours0 = org.joda.time.Hours.THREE;
        org.joda.time.Hours hours1 = org.joda.time.Hours.ONE;
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = hours1.get(durationFieldType2);
        boolean boolean4 = hours0.equals((java.lang.Object) durationFieldType2);
        org.joda.time.Hours hours5 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours6 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod7 = hours6.toMutablePeriod();
        org.joda.time.Hours hours8 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours9 = hours6.minus(hours8);
        int int10 = hours5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours8);
        org.joda.time.Hours hours12 = hours8.multipliedBy(0);
        org.joda.time.Hours hours13 = hours0.plus(hours12);
        org.joda.time.Hours hours15 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours16 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod17 = hours16.toMutablePeriod();
        org.joda.time.Hours hours18 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours19 = hours16.minus(hours18);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = hours16.get(durationFieldType20);
        org.joda.time.Hours hours23 = hours16.minus((int) (short) 0);
        org.joda.time.Hours hours24 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod25 = hours24.toMutablePeriod();
        org.joda.time.Hours hours26 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours27 = hours24.minus(hours26);
        org.joda.time.DurationFieldType durationFieldType28 = null;
        boolean boolean29 = hours26.isSupported(durationFieldType28);
        org.joda.time.Hours hours30 = hours23.minus(hours26);
        org.joda.time.Hours hours31 = hours15.plus(hours30);
        org.joda.time.Hours hours32 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod33 = hours32.toMutablePeriod();
        org.joda.time.Hours hours34 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours35 = hours32.minus(hours34);
        boolean boolean36 = hours30.isGreaterThan(hours34);
        org.joda.time.Hours hours37 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours30);
        int int38 = hours12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours30);
        org.joda.time.Hours hours39 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod40 = hours39.toMutablePeriod();
        org.joda.time.Hours hours41 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours42 = hours39.minus(hours41);
        org.joda.time.DurationFieldType durationFieldType43 = null;
        int int44 = hours39.get(durationFieldType43);
        org.joda.time.Hours hours46 = hours39.multipliedBy(1);
        int int47 = hours46.getHours();
        org.joda.time.DurationFieldType durationFieldType48 = hours46.getFieldType();
        org.joda.time.Hours hours49 = hours30.plus(hours46);
        org.joda.time.Hours hours51 = hours46.dividedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType52 = hours46.getFieldType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(mutablePeriod40);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 7 + "'", int47 == 7);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(durationFieldType52);
    }

    @Test
    public void test1000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test1000");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours2 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod3 = hours2.toMutablePeriod();
        org.joda.time.Hours hours4 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours5 = hours2.minus(hours4);
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = hours2.get(durationFieldType6);
        org.joda.time.Hours hours9 = hours2.minus((int) (short) 0);
        org.joda.time.Hours hours10 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod11 = hours10.toMutablePeriod();
        org.joda.time.Hours hours12 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours13 = hours10.minus(hours12);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = hours12.isSupported(durationFieldType14);
        org.joda.time.Hours hours16 = hours9.minus(hours12);
        org.joda.time.Hours hours17 = hours1.plus(hours16);
        org.joda.time.Hours hours18 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod19 = hours18.toMutablePeriod();
        org.joda.time.Hours hours20 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours21 = hours18.minus(hours20);
        boolean boolean22 = hours16.isGreaterThan(hours20);
        java.lang.String str23 = hours16.toString();
        org.joda.time.Hours hours25 = hours16.minus((-25));
        org.joda.time.Hours hours27 = org.joda.time.Hours.hours(8);
        org.joda.time.Hours hours28 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod29 = hours28.toMutablePeriod();
        org.joda.time.Hours hours30 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours31 = hours28.minus(hours30);
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = hours28.get(durationFieldType32);
        org.joda.time.Hours hours35 = hours28.minus((int) (short) 0);
        org.joda.time.Hours hours36 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod37 = hours36.toMutablePeriod();
        org.joda.time.Hours hours38 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours39 = hours36.minus(hours38);
        org.joda.time.DurationFieldType durationFieldType40 = null;
        boolean boolean41 = hours38.isSupported(durationFieldType40);
        org.joda.time.Hours hours42 = hours35.minus(hours38);
        org.joda.time.Hours hours43 = hours27.plus(hours42);
        org.joda.time.Hours hours44 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours43);
        org.joda.time.Hours hours45 = org.joda.time.Hours.SEVEN;
        org.joda.time.Hours hours46 = org.joda.time.Hours.SEVEN;
        org.joda.time.MutablePeriod mutablePeriod47 = hours46.toMutablePeriod();
        org.joda.time.Hours hours48 = org.joda.time.Hours.EIGHT;
        org.joda.time.Hours hours49 = hours46.minus(hours48);
        int int50 = hours45.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours48);
        org.joda.time.Hours hours51 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) hours45);
        java.lang.String str52 = hours51.toString();
        int int53 = hours43.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours51);
        org.joda.time.Hours hours54 = hours16.minus(hours43);
        org.joda.time.Period period55 = hours43.toPeriod();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "PT-1H" + "'", str23, "PT-1H");
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(mutablePeriod47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "PT7H" + "'", str52, "PT7H");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(period55);
    }
}

