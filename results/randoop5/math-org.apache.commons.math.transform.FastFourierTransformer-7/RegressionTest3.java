import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest3 {

    public static boolean debug = false;

    @Test
    public void test1501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1501");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.inversetransform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray16 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer11.transform2(doubleArray16);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer19 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray24 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray24);
        org.apache.commons.math.complex.Complex[] complexArray26 = fastFourierTransformer19.transform2(doubleArray24);
        org.apache.commons.math.complex.Complex[] complexArray28 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray26, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray26);
        org.apache.commons.math.complex.Complex[] complexArray31 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray26, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer11.transform2(complexArray31);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer33 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer34 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray39 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer34.transform2(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray43 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray41, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray41);
        org.apache.commons.math.complex.Complex[] complexArray45 = fastFourierTransformer33.inversetransform(complexArray41);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer46 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray51 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray51);
        org.apache.commons.math.complex.Complex[] complexArray53 = fastFourierTransformer46.transform2(doubleArray51);
        org.apache.commons.math.complex.Complex[] complexArray54 = fastFourierTransformer33.transform(complexArray53);
        double[] doubleArray59 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray59);
        double[] doubleArray62 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray59, (double) 10.0f);
        double[] doubleArray64 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray62, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray65 = fastFourierTransformer33.inversetransform2(doubleArray64);
        org.apache.commons.math.complex.Complex[] complexArray66 = fastFourierTransformer11.transform(doubleArray64);
        org.apache.commons.math.complex.Complex[] complexArray67 = fastFourierTransformer0.inversetransform2(doubleArray64);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction68 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray72 = fastFourierTransformer0.inversetransform(univariateRealFunction68, (double) (short) 1, (double) 1L, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [1.0, 1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray26);
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(complexArray31);
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(complexArray54);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(complexArray66);
        org.junit.Assert.assertNotNull(complexArray67);
    }

    @Test
    public void test1502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1502");
        org.apache.commons.math.transform.FastFourierTransformer.verifyInterval((double) 1.0f, (double) 100.0f);
    }

    @Test
    public void test1503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1503");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        double[] doubleArray16 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray13, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer8.transform(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray19 = fastFourierTransformer0.transform2(doubleArray16);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer20 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray25 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray25);
        org.apache.commons.math.complex.Complex[] complexArray27 = fastFourierTransformer20.transform2(doubleArray25);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer28 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray33 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray33);
        org.apache.commons.math.complex.Complex[] complexArray35 = fastFourierTransformer28.transform2(doubleArray33);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer36 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray41 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray41);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer36.transform2(doubleArray41);
        org.apache.commons.math.complex.Complex[] complexArray45 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray43, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray43);
        org.apache.commons.math.complex.Complex[] complexArray48 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray43, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer28.transform2(complexArray48);
        double[] doubleArray54 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray54);
        double[] doubleArray57 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray54, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray58 = fastFourierTransformer28.transform(doubleArray54);
        org.apache.commons.math.complex.Complex[] complexArray59 = fastFourierTransformer20.transform(complexArray58);
        double[] doubleArray64 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray64);
        double[] doubleArray67 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray64, (double) 10.0f);
        double[] doubleArray69 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray67, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray70 = fastFourierTransformer20.transform2(doubleArray67);
        double[] doubleArray72 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray67, 100.0d);
        double[] doubleArray74 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray67, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray75 = fastFourierTransformer0.transform2(doubleArray74);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction76 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray80 = fastFourierTransformer0.transform2(univariateRealFunction76, (double) 100L, (double) 1L, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [100.0, 1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray19);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray27);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray35);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(complexArray48);
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(complexArray70);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(complexArray75);
    }

    @Test
    public void test1504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1504");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform(doubleArray26);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer31 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer32 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray37 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer32.transform2(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray39, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray39);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer31.inversetransform(complexArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer44 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray49 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer44.transform2(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer31.transform(complexArray51);
        org.apache.commons.math.complex.Complex[] complexArray53 = fastFourierTransformer0.transform2(complexArray52);
        double[] doubleArray58 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray58);
        double[] doubleArray61 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray58, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer0.inversetransform2(doubleArray61);
        double[] doubleArray68 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray68);
        double[] doubleArray71 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray68, 0.0d);
        org.apache.commons.math.complex.Complex[] complexArray72 = fastFourierTransformer0.inversetransform(doubleArray71);
        java.lang.Class<?> wildcardClass73 = doubleArray71.getClass();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray72);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1505");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer22.transform(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer0.transform(doubleArray30);
        double[] doubleArray38 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray38);
        double[] doubleArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray38, (double) 10.0f);
        double[] doubleArray43 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray41, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray44 = fastFourierTransformer0.inversetransform(doubleArray43);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer45 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray50 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray50);
        double[] doubleArray53 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray50, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray53);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer45.inversetransform(doubleArray53);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer56 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray61 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer56.transform2(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray65 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray63, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray66 = fastFourierTransformer45.inversetransform(complexArray65);
        org.apache.commons.math.complex.Complex[] complexArray67 = fastFourierTransformer0.transform2(complexArray66);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction68 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray72 = fastFourierTransformer0.inversetransform(univariateRealFunction68, (double) (byte) 1, (double) (byte) 1, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [1.0, 1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(complexArray66);
        org.junit.Assert.assertNotNull(complexArray67);
    }

    @Test
    public void test1506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1506");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer16 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray21 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer16.transform2(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray23);
        org.apache.commons.math.complex.Complex[] complexArray28 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray29 = fastFourierTransformer8.transform2(complexArray28);
        double[] doubleArray34 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray34);
        double[] doubleArray37 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray34, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray38 = fastFourierTransformer8.transform(doubleArray34);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer0.transform(complexArray38);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer40 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray45 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray45);
        org.apache.commons.math.complex.Complex[] complexArray47 = fastFourierTransformer40.transform2(doubleArray45);
        org.apache.commons.math.complex.Complex[] complexArray49 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray47, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray51 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray49, (double) (byte) 100);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer0.inversetransform(complexArray49);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer53 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray58 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray58);
        org.apache.commons.math.complex.Complex[] complexArray60 = fastFourierTransformer53.transform2(doubleArray58);
        org.apache.commons.math.complex.Complex[] complexArray62 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray60, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray60);
        org.apache.commons.math.complex.Complex[] complexArray65 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray60, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray67 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray60, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray68 = fastFourierTransformer0.inversetransform(complexArray60);
        double[] doubleArray73 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray73);
        double[] doubleArray76 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray73, (double) 10.0f);
        double[] doubleArray78 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray76, (double) 10L);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray76);
        org.apache.commons.math.complex.Complex[] complexArray80 = fastFourierTransformer0.inversetransform(doubleArray76);
        org.apache.commons.math.complex.Complex[] complexArray82 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray80, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray82);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray38);
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(complexArray67);
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray80);
        org.junit.Assert.assertNotNull(complexArray82);
    }

    @Test
    public void test1507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1507");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer0.transform(complexArray15);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer19 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer20 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray25 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray25);
        org.apache.commons.math.complex.Complex[] complexArray27 = fastFourierTransformer20.transform2(doubleArray25);
        org.apache.commons.math.complex.Complex[] complexArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray27, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray27);
        org.apache.commons.math.complex.Complex[] complexArray31 = fastFourierTransformer19.inversetransform(complexArray27);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer32 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray37 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer32.transform2(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray40 = fastFourierTransformer19.transform(complexArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer41 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray46 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray46);
        org.apache.commons.math.complex.Complex[] complexArray48 = fastFourierTransformer41.transform2(doubleArray46);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer49 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray54 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray54);
        org.apache.commons.math.complex.Complex[] complexArray56 = fastFourierTransformer49.transform2(doubleArray54);
        org.apache.commons.math.complex.Complex[] complexArray58 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray56, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray56);
        org.apache.commons.math.complex.Complex[] complexArray61 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray56, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray62 = fastFourierTransformer41.transform2(complexArray61);
        double[] doubleArray67 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray67);
        double[] doubleArray70 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray67, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray71 = fastFourierTransformer41.transform2(doubleArray70);
        org.apache.commons.math.complex.Complex[] complexArray72 = fastFourierTransformer19.inversetransform2(doubleArray70);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray70);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray70);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray70);
        org.apache.commons.math.complex.Complex[] complexArray76 = fastFourierTransformer0.transform(doubleArray70);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction77 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray81 = fastFourierTransformer0.transform(univariateRealFunction77, (double) 1L, (double) 1L, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [1.0, 1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray27);
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(complexArray31);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray40);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray48);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray56);
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(complexArray61);
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray71);
        org.junit.Assert.assertNotNull(complexArray72);
        org.junit.Assert.assertNotNull(complexArray76);
    }

    @Test
    public void test1508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1508");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        double[] doubleArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray18, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer0.inversetransform(doubleArray18);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer24 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray29 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray29);
        double[] doubleArray32 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray29, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray32);
        org.apache.commons.math.complex.Complex[] complexArray34 = fastFourierTransformer24.inversetransform(doubleArray32);
        org.apache.commons.math.complex.Complex[] complexArray35 = fastFourierTransformer0.inversetransform(doubleArray32);
        double[] doubleArray40 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray40);
        double[] doubleArray43 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray40, 0.0d);
        double[] doubleArray45 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray43, (double) (byte) 100);
        org.apache.commons.math.complex.Complex[] complexArray46 = fastFourierTransformer0.transform(doubleArray45);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction47 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer0.inversetransform2(univariateRealFunction47, (double) 0L, (-1.0d), 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [0.0, -1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(complexArray35);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray46);
    }

    @Test
    public void test1509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1509");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform(doubleArray26);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer31 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer32 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray37 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer32.transform2(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray39, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray39);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer31.inversetransform(complexArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer44 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray49 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer44.transform2(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer31.transform(complexArray51);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer53 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray58 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray58);
        org.apache.commons.math.complex.Complex[] complexArray60 = fastFourierTransformer53.transform2(doubleArray58);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer61 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray66 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray66);
        org.apache.commons.math.complex.Complex[] complexArray68 = fastFourierTransformer61.transform2(doubleArray66);
        org.apache.commons.math.complex.Complex[] complexArray70 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray68, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray68);
        org.apache.commons.math.complex.Complex[] complexArray73 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray68, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray74 = fastFourierTransformer53.transform2(complexArray73);
        double[] doubleArray79 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray79);
        double[] doubleArray82 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray79, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray83 = fastFourierTransformer53.transform2(doubleArray82);
        org.apache.commons.math.complex.Complex[] complexArray84 = fastFourierTransformer31.inversetransform2(doubleArray82);
        org.apache.commons.math.complex.Complex[] complexArray85 = fastFourierTransformer0.transform2(complexArray84);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction86 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray90 = fastFourierTransformer0.transform(univariateRealFunction86, (double) 1, (double) (-1.0f), 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [1.0, -1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(complexArray70);
        org.junit.Assert.assertNotNull(complexArray73);
        org.junit.Assert.assertNotNull(complexArray74);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray83);
        org.junit.Assert.assertNotNull(complexArray84);
        org.junit.Assert.assertNotNull(complexArray85);
    }

    @Test
    public void test1510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1510");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, (double) (byte) 0, (double) (byte) 0, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1511");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        org.apache.commons.math.complex.Complex[] complexArray29 = fastFourierTransformer22.transform2(doubleArray27);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer30 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray35 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray35);
        org.apache.commons.math.complex.Complex[] complexArray37 = fastFourierTransformer30.transform2(doubleArray35);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer38 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray43 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray43);
        org.apache.commons.math.complex.Complex[] complexArray45 = fastFourierTransformer38.transform2(doubleArray43);
        org.apache.commons.math.complex.Complex[] complexArray47 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray45, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray45);
        org.apache.commons.math.complex.Complex[] complexArray50 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray45, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer30.transform2(complexArray50);
        double[] doubleArray56 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray56);
        double[] doubleArray59 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray56, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray60 = fastFourierTransformer30.transform(doubleArray56);
        org.apache.commons.math.complex.Complex[] complexArray61 = fastFourierTransformer22.transform(complexArray60);
        org.apache.commons.math.complex.Complex[] complexArray63 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray60, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray64 = fastFourierTransformer0.inversetransform2(complexArray63);
        double[] doubleArray69 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray69);
        double[] doubleArray72 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray69, 0.0d);
        double[] doubleArray74 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray72, (double) (byte) 100);
        org.apache.commons.math.complex.Complex[] complexArray75 = fastFourierTransformer0.inversetransform2(doubleArray72);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray75);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray37);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(complexArray61);
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(complexArray64);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray75);
    }

    @Test
    public void test1512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1512");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer9 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray14 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray14);
        org.apache.commons.math.complex.Complex[] complexArray16 = fastFourierTransformer9.transform2(doubleArray14);
        org.apache.commons.math.complex.Complex[] complexArray18 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray16, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray16);
        org.apache.commons.math.complex.Complex[] complexArray21 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray16, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray22 = fastFourierTransformer1.transform2(complexArray21);
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray31 = fastFourierTransformer1.transform(doubleArray27);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray31);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer0.transform2(complexArray31);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer34 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray39 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer34.transform2(doubleArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer42 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray47 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray47);
        org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer42.transform2(doubleArray47);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer50 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray55 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray55);
        org.apache.commons.math.complex.Complex[] complexArray57 = fastFourierTransformer50.transform2(doubleArray55);
        org.apache.commons.math.complex.Complex[] complexArray59 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray57, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray57);
        org.apache.commons.math.complex.Complex[] complexArray62 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray57, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer42.transform2(complexArray62);
        double[] doubleArray68 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray68);
        double[] doubleArray71 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray68, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray72 = fastFourierTransformer42.transform(doubleArray68);
        org.apache.commons.math.complex.Complex[] complexArray73 = fastFourierTransformer34.transform(complexArray72);
        double[] doubleArray78 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray78);
        double[] doubleArray81 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray78, (double) 10.0f);
        double[] doubleArray83 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray81, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray84 = fastFourierTransformer34.transform2(doubleArray81);
        org.apache.commons.math.complex.Complex[] complexArray85 = fastFourierTransformer0.transform2(doubleArray81);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction86 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray90 = fastFourierTransformer0.transform(univariateRealFunction86, (double) 10, (double) '4', (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray16);
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(complexArray22);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray31);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray57);
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray72);
        org.junit.Assert.assertNotNull(complexArray73);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray84);
        org.junit.Assert.assertNotNull(complexArray85);
    }

    @Test
    public void test1513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1513");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.transform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray16 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer11.transform2(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray18, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray18);
        org.apache.commons.math.complex.Complex[] complexArray23 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray18, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray18, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray26 = fastFourierTransformer0.inversetransform2(complexArray25);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer27 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer28 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray33 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray33);
        org.apache.commons.math.complex.Complex[] complexArray35 = fastFourierTransformer28.transform2(doubleArray33);
        org.apache.commons.math.complex.Complex[] complexArray37 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray35, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray35);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer27.inversetransform(complexArray35);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray35);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer0.inversetransform(complexArray35);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer42 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray47 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray47);
        org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer42.transform2(doubleArray47);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer50 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray55 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray55);
        org.apache.commons.math.complex.Complex[] complexArray57 = fastFourierTransformer50.transform2(doubleArray55);
        org.apache.commons.math.complex.Complex[] complexArray59 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray57, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray57);
        org.apache.commons.math.complex.Complex[] complexArray62 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray57, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer42.transform2(complexArray62);
        double[] doubleArray68 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray68);
        double[] doubleArray71 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray68, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray72 = fastFourierTransformer42.transform(doubleArray68);
        double[] doubleArray77 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray77);
        double[] doubleArray80 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray77, (double) 10.0f);
        double[] doubleArray82 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray80, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray83 = fastFourierTransformer42.transform2(doubleArray82);
        org.apache.commons.math.complex.Complex[] complexArray84 = fastFourierTransformer0.transform(complexArray83);
        java.lang.Class<?> wildcardClass85 = fastFourierTransformer0.getClass();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray26);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray35);
        org.junit.Assert.assertNotNull(complexArray37);
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray57);
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray72);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray83);
        org.junit.Assert.assertNotNull(complexArray84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1514");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.transform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray16 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer11.transform2(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray19 = fastFourierTransformer0.inversetransform2(complexArray18);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer20 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray25 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray25);
        double[] doubleArray28 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray25, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray28);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer20.inversetransform(doubleArray28);
        org.apache.commons.math.complex.Complex[] complexArray31 = fastFourierTransformer0.transform(doubleArray28);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer32 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray37 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer32.transform2(doubleArray37);
        double[] doubleArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray37, (double) 10.0f);
        double[] doubleArray43 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray37, (double) 10L);
        double[] doubleArray45 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray43, (double) (byte) 0);
        org.apache.commons.math.complex.Complex[] complexArray46 = fastFourierTransformer0.transform2(doubleArray45);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction47 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer0.inversetransform2(univariateRealFunction47, (double) (-1), (double) '#', 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray19);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(complexArray31);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray46);
    }

    @Test
    public void test1515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1515");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer22.transform(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer0.transform(doubleArray30);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer34 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray39 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer34.transform2(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray43 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray41, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray41);
        org.apache.commons.math.complex.Complex[] complexArray46 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray41, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray47 = fastFourierTransformer0.inversetransform2(complexArray41);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer48 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray53 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray53);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer48.transform2(doubleArray53);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer56 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray61 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer56.transform2(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray65 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray63, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray63);
        org.apache.commons.math.complex.Complex[] complexArray68 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray63, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray69 = fastFourierTransformer48.transform2(complexArray68);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer70 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray75 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray75);
        double[] doubleArray78 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray75, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray78);
        org.apache.commons.math.complex.Complex[] complexArray80 = fastFourierTransformer70.transform(doubleArray78);
        org.apache.commons.math.complex.Complex[] complexArray81 = fastFourierTransformer48.transform(doubleArray78);
        org.apache.commons.math.complex.Complex[] complexArray82 = fastFourierTransformer0.inversetransform2(doubleArray78);
        double[] doubleArray87 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray87);
        double[] doubleArray90 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray87, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray90);
        org.apache.commons.math.complex.Complex[] complexArray92 = fastFourierTransformer0.inversetransform2(doubleArray90);
        double[] doubleArray94 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray90, (double) '#');
        double[] doubleArray96 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray90, 1.0d);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray46);
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(complexArray69);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray80);
        org.junit.Assert.assertNotNull(complexArray81);
        org.junit.Assert.assertNotNull(complexArray82);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[-350.0, 33950.0, 350.0, 3500.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[-350.0, 33950.0, 350.0, 3500.0]");
        org.junit.Assert.assertNotNull(complexArray92);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[-350.0, 33950.0, 350.0, 3500.0]");
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray96), "[-350.0, 33950.0, 350.0, 3500.0]");
    }

    @Test
    public void test1516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1516");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.transform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray16 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer11.transform2(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray19 = fastFourierTransformer0.inversetransform2(complexArray18);
        double[] doubleArray24 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray24);
        double[] doubleArray27 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray24, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray31 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) (byte) 10);
        double[] doubleArray33 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray31, (double) (byte) 0);
        org.apache.commons.math.complex.Complex[] complexArray34 = fastFourierTransformer0.transform(doubleArray33);
        org.apache.commons.math.complex.Complex[] complexArray36 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray34, 0.0d);
        org.apache.commons.math.complex.Complex[] complexArray38 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray36, (double) '4');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray36);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray19);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(complexArray36);
        org.junit.Assert.assertNotNull(complexArray38);
    }

    @Test
    public void test1517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1517");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        double[] doubleArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray18, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer0.inversetransform(doubleArray18);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer24 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray29 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray29);
        double[] doubleArray32 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray29, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray32);
        org.apache.commons.math.complex.Complex[] complexArray34 = fastFourierTransformer24.inversetransform(doubleArray32);
        org.apache.commons.math.complex.Complex[] complexArray35 = fastFourierTransformer0.inversetransform(doubleArray32);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer36 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray41 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray41);
        double[] doubleArray44 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray41, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray44);
        org.apache.commons.math.complex.Complex[] complexArray46 = fastFourierTransformer36.transform(doubleArray44);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer47 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray52 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray52);
        org.apache.commons.math.complex.Complex[] complexArray54 = fastFourierTransformer47.transform2(doubleArray52);
        org.apache.commons.math.complex.Complex[] complexArray56 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray54, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray54);
        org.apache.commons.math.complex.Complex[] complexArray59 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray54, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray61 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray54, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray62 = fastFourierTransformer36.inversetransform2(complexArray61);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray61);
        org.apache.commons.math.complex.Complex[] complexArray64 = fastFourierTransformer0.inversetransform2(complexArray61);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction65 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray69 = fastFourierTransformer0.transform2(univariateRealFunction65, (double) 10, (double) 100L, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(complexArray35);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray46);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray54);
        org.junit.Assert.assertNotNull(complexArray56);
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(complexArray61);
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(complexArray64);
    }

    @Test
    public void test1518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1518");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer22.transform(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer0.transform(doubleArray30);
        double[] doubleArray38 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray38);
        double[] doubleArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray38, (double) 10.0f);
        double[] doubleArray43 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray41, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray44 = fastFourierTransformer0.inversetransform(doubleArray43);
        double[] doubleArray49 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray49);
        double[] doubleArray52 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray49, 0.0d);
        double[] doubleArray54 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray52, (double) (byte) 100);
        double[] doubleArray56 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray52, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray57 = fastFourierTransformer0.transform2(doubleArray56);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction58 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray62 = fastFourierTransformer0.inversetransform2(univariateRealFunction58, (double) (-1L), (double) (byte) 10, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray57);
    }

    @Test
    public void test1519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1519");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        double[] doubleArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray8, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray11 = fastFourierTransformer0.inversetransform(doubleArray10);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer12 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray17 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray17);
        org.apache.commons.math.complex.Complex[] complexArray19 = fastFourierTransformer12.transform2(doubleArray17);
        org.apache.commons.math.complex.Complex[] complexArray21 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray19, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray22 = fastFourierTransformer0.inversetransform2(complexArray21);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer23 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer24 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray29 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray29);
        org.apache.commons.math.complex.Complex[] complexArray31 = fastFourierTransformer24.transform2(doubleArray29);
        org.apache.commons.math.complex.Complex[] complexArray33 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray31, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray31);
        org.apache.commons.math.complex.Complex[] complexArray35 = fastFourierTransformer23.inversetransform(complexArray31);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer36 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray41 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray41);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer36.transform2(doubleArray41);
        org.apache.commons.math.complex.Complex[] complexArray44 = fastFourierTransformer23.transform(complexArray43);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer45 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer46 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray51 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray51);
        org.apache.commons.math.complex.Complex[] complexArray53 = fastFourierTransformer46.transform2(doubleArray51);
        org.apache.commons.math.complex.Complex[] complexArray55 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray53, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray53);
        org.apache.commons.math.complex.Complex[] complexArray57 = fastFourierTransformer45.inversetransform(complexArray53);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer58 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray63 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray63);
        org.apache.commons.math.complex.Complex[] complexArray65 = fastFourierTransformer58.transform2(doubleArray63);
        org.apache.commons.math.complex.Complex[] complexArray66 = fastFourierTransformer45.transform(complexArray65);
        org.apache.commons.math.complex.Complex[] complexArray67 = fastFourierTransformer23.inversetransform(complexArray65);
        org.apache.commons.math.complex.Complex[] complexArray69 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray67, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray70 = fastFourierTransformer0.inversetransform(complexArray67);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer71 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray76 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray76);
        double[] doubleArray79 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray76, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray79);
        org.apache.commons.math.complex.Complex[] complexArray81 = fastFourierTransformer71.inversetransform(doubleArray79);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray79);
        org.apache.commons.math.complex.Complex[] complexArray83 = fastFourierTransformer0.transform2(doubleArray79);
        double[] doubleArray84 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray85 = fastFourierTransformer0.inversetransform(doubleArray84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray11);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray19);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(complexArray22);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray31);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(complexArray35);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(complexArray57);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(complexArray66);
        org.junit.Assert.assertNotNull(complexArray67);
        org.junit.Assert.assertNotNull(complexArray69);
        org.junit.Assert.assertNotNull(complexArray70);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray81);
        org.junit.Assert.assertNotNull(complexArray83);
    }

    @Test
    public void test1520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1520");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        double[] doubleArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray18, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer0.inversetransform(doubleArray18);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer24 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray29 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray29);
        double[] doubleArray32 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray29, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray32);
        org.apache.commons.math.complex.Complex[] complexArray34 = fastFourierTransformer24.inversetransform(doubleArray32);
        org.apache.commons.math.complex.Complex[] complexArray35 = fastFourierTransformer0.inversetransform(doubleArray32);
        double[] doubleArray40 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray40);
        double[] doubleArray43 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray40, 0.0d);
        double[] doubleArray45 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray43, (double) (byte) 100);
        org.apache.commons.math.complex.Complex[] complexArray46 = fastFourierTransformer0.transform(doubleArray45);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction47 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer0.inversetransform2(univariateRealFunction47, 0.0d, (double) 0L, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(complexArray35);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray46);
    }

    @Test
    public void test1521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1521");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer16 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray21 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer16.transform2(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray23);
        org.apache.commons.math.complex.Complex[] complexArray28 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray29 = fastFourierTransformer8.transform2(complexArray28);
        double[] doubleArray34 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray34);
        double[] doubleArray37 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray34, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray38 = fastFourierTransformer8.transform(doubleArray34);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer0.transform(complexArray38);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer40 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray45 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray45);
        org.apache.commons.math.complex.Complex[] complexArray47 = fastFourierTransformer40.transform2(doubleArray45);
        org.apache.commons.math.complex.Complex[] complexArray49 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray47, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray51 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray49, (double) (byte) 100);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer0.inversetransform(complexArray49);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer53 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray58 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray58);
        org.apache.commons.math.complex.Complex[] complexArray60 = fastFourierTransformer53.transform2(doubleArray58);
        org.apache.commons.math.complex.Complex[] complexArray62 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray60, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray60);
        org.apache.commons.math.complex.Complex[] complexArray65 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray60, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray67 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray60, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray68 = fastFourierTransformer0.inversetransform(complexArray60);
        double[] doubleArray73 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray73);
        double[] doubleArray76 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray73, (double) 10.0f);
        double[] doubleArray78 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray76, (double) 10L);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray76);
        org.apache.commons.math.complex.Complex[] complexArray80 = fastFourierTransformer0.inversetransform(doubleArray76);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer81 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray86 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray86);
        double[] doubleArray89 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray86, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray89);
        org.apache.commons.math.complex.Complex[] complexArray91 = fastFourierTransformer81.transform(doubleArray89);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray91);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray91);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray91);
        org.apache.commons.math.complex.Complex[] complexArray95 = fastFourierTransformer0.inversetransform2(complexArray91);
        org.apache.commons.math.complex.Complex[] complexArray97 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray95, (double) (byte) 1);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray95);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray38);
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(complexArray67);
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray80);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray91);
        org.junit.Assert.assertNotNull(complexArray95);
        org.junit.Assert.assertNotNull(complexArray97);
    }

    @Test
    public void test1522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1522");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        double[] doubleArray9 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray6, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray9);
        org.apache.commons.math.complex.Complex[] complexArray11 = fastFourierTransformer1.inversetransform(doubleArray9);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.transform2(complexArray11);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer14 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray19 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray19);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer14.transform2(doubleArray19);
        org.apache.commons.math.complex.Complex[] complexArray23 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray21, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray24 = fastFourierTransformer13.inversetransform(complexArray21);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer25 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray30 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer25.transform2(doubleArray30);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer33 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray38 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray38);
        org.apache.commons.math.complex.Complex[] complexArray40 = fastFourierTransformer33.transform2(doubleArray38);
        org.apache.commons.math.complex.Complex[] complexArray42 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray40, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray40);
        org.apache.commons.math.complex.Complex[] complexArray45 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray40, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray46 = fastFourierTransformer25.transform2(complexArray45);
        double[] doubleArray51 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray51);
        double[] doubleArray54 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray51, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer25.transform(doubleArray51);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer56 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer57 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray62 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray62);
        org.apache.commons.math.complex.Complex[] complexArray64 = fastFourierTransformer57.transform2(doubleArray62);
        org.apache.commons.math.complex.Complex[] complexArray66 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray64, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray64);
        org.apache.commons.math.complex.Complex[] complexArray68 = fastFourierTransformer56.inversetransform(complexArray64);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer69 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray74 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray74);
        org.apache.commons.math.complex.Complex[] complexArray76 = fastFourierTransformer69.transform2(doubleArray74);
        org.apache.commons.math.complex.Complex[] complexArray77 = fastFourierTransformer56.transform(complexArray76);
        org.apache.commons.math.complex.Complex[] complexArray78 = fastFourierTransformer25.transform2(complexArray77);
        double[] doubleArray83 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray83);
        double[] doubleArray86 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray83, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray86);
        org.apache.commons.math.complex.Complex[] complexArray88 = fastFourierTransformer25.inversetransform2(doubleArray86);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray86);
        double[] doubleArray91 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray86, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray92 = fastFourierTransformer13.transform2(doubleArray91);
        org.apache.commons.math.complex.Complex[] complexArray93 = fastFourierTransformer0.inversetransform2(doubleArray91);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction94 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray98 = fastFourierTransformer0.inversetransform(univariateRealFunction94, (double) 100L, (double) (byte) 1, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [100.0, 1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray11);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(complexArray24);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray40);
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(complexArray46);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray64);
        org.junit.Assert.assertNotNull(complexArray66);
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray76);
        org.junit.Assert.assertNotNull(complexArray77);
        org.junit.Assert.assertNotNull(complexArray78);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-1000.0, 97000.0, 1000.0, 10000.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-1000.0, 97000.0, 1000.0, 10000.0]");
        org.junit.Assert.assertNotNull(complexArray88);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[-1000.0, 97000.0, 1000.0, 10000.0]");
        org.junit.Assert.assertNotNull(complexArray92);
        org.junit.Assert.assertNotNull(complexArray93);
    }

    @Test
    public void test1523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1523");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray11 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer12 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray17 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray17);
        org.apache.commons.math.complex.Complex[] complexArray19 = fastFourierTransformer12.transform2(doubleArray17);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer20 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray25 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray25);
        org.apache.commons.math.complex.Complex[] complexArray27 = fastFourierTransformer20.transform2(doubleArray25);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer28 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray33 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray33);
        org.apache.commons.math.complex.Complex[] complexArray35 = fastFourierTransformer28.transform2(doubleArray33);
        org.apache.commons.math.complex.Complex[] complexArray37 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray35, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray35);
        org.apache.commons.math.complex.Complex[] complexArray40 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray35, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer20.transform2(complexArray40);
        double[] doubleArray46 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray46);
        double[] doubleArray49 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray46, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray50 = fastFourierTransformer20.transform(doubleArray46);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer12.transform(complexArray50);
        org.apache.commons.math.complex.Complex[] complexArray53 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray51, (double) (short) -1);
        org.apache.commons.math.complex.Complex[] complexArray54 = fastFourierTransformer0.inversetransform(complexArray53);
        double[] doubleArray59 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray59);
        double[] doubleArray62 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray59, (double) 10.0f);
        double[] doubleArray64 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray62, (double) 10L);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray64);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray64);
        org.apache.commons.math.complex.Complex[] complexArray67 = fastFourierTransformer0.inversetransform2(doubleArray64);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer68 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray73 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray73);
        double[] doubleArray76 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray73, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray76);
        org.apache.commons.math.complex.Complex[] complexArray78 = fastFourierTransformer68.transform(doubleArray76);
        org.apache.commons.math.complex.Complex[] complexArray79 = fastFourierTransformer0.transform2(doubleArray76);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction80 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray84 = fastFourierTransformer0.transform2(univariateRealFunction80, 1.0d, (double) (short) 1, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray11);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray19);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray27);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray35);
        org.junit.Assert.assertNotNull(complexArray37);
        org.junit.Assert.assertNotNull(complexArray40);
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(complexArray54);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray67);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray78);
        org.junit.Assert.assertNotNull(complexArray79);
    }

    @Test
    public void test1524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1524");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer22.transform(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer0.transform(doubleArray30);
        double[] doubleArray38 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray38);
        double[] doubleArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray38, (double) 10.0f);
        double[] doubleArray43 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray41, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray44 = fastFourierTransformer0.inversetransform(doubleArray43);
        double[] doubleArray49 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray49);
        double[] doubleArray52 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray49, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray53 = fastFourierTransformer0.inversetransform2(doubleArray49);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer54 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer55 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray60 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray60);
        org.apache.commons.math.complex.Complex[] complexArray62 = fastFourierTransformer55.transform2(doubleArray60);
        org.apache.commons.math.complex.Complex[] complexArray64 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray62, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray62);
        org.apache.commons.math.complex.Complex[] complexArray66 = fastFourierTransformer54.inversetransform(complexArray62);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer67 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray72 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray72);
        org.apache.commons.math.complex.Complex[] complexArray74 = fastFourierTransformer67.transform2(doubleArray72);
        org.apache.commons.math.complex.Complex[] complexArray76 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray74, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray74);
        org.apache.commons.math.complex.Complex[] complexArray79 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray74, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray81 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray74, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray82 = fastFourierTransformer54.transform(complexArray74);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer83 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray88 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray88);
        org.apache.commons.math.complex.Complex[] complexArray90 = fastFourierTransformer83.transform2(doubleArray88);
        org.apache.commons.math.complex.Complex[] complexArray91 = fastFourierTransformer54.transform2(doubleArray88);
        org.apache.commons.math.complex.Complex[] complexArray92 = fastFourierTransformer0.inversetransform(complexArray91);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction93 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray97 = fastFourierTransformer0.transform2(univariateRealFunction93, (double) 10L, (double) ' ', (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(complexArray64);
        org.junit.Assert.assertNotNull(complexArray66);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray74);
        org.junit.Assert.assertNotNull(complexArray76);
        org.junit.Assert.assertNotNull(complexArray79);
        org.junit.Assert.assertNotNull(complexArray81);
        org.junit.Assert.assertNotNull(complexArray82);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray90);
        org.junit.Assert.assertNotNull(complexArray91);
        org.junit.Assert.assertNotNull(complexArray92);
    }

    @Test
    public void test1525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1525");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray11 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer12 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray20, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray20);
        org.apache.commons.math.complex.Complex[] complexArray24 = fastFourierTransformer12.inversetransform(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer25 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray30 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer25.transform2(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer12.transform(complexArray32);
        org.apache.commons.math.complex.Complex[] complexArray34 = fastFourierTransformer0.transform2(complexArray32);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer35 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray40 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray42 = fastFourierTransformer35.transform2(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray44 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray42, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray46 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray44, (double) (byte) 100);
        org.apache.commons.math.complex.Complex[] complexArray48 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray46, (double) (byte) 0);
        org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer0.inversetransform(complexArray46);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray49);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray11);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray22);
        org.junit.Assert.assertNotNull(complexArray24);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(complexArray46);
        org.junit.Assert.assertNotNull(complexArray48);
        org.junit.Assert.assertNotNull(complexArray49);
    }

    @Test
    public void test1526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1526");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer22.transform(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer0.transform(doubleArray30);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer34 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray39 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer34.transform2(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray43 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray41, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray41);
        org.apache.commons.math.complex.Complex[] complexArray46 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray41, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray47 = fastFourierTransformer0.inversetransform2(complexArray41);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer48 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray53 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray53);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer48.transform2(doubleArray53);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer56 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray61 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer56.transform2(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray65 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray63, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray63);
        org.apache.commons.math.complex.Complex[] complexArray68 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray63, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray69 = fastFourierTransformer48.transform2(complexArray68);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer70 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray75 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray75);
        double[] doubleArray78 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray75, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray78);
        org.apache.commons.math.complex.Complex[] complexArray80 = fastFourierTransformer70.transform(doubleArray78);
        org.apache.commons.math.complex.Complex[] complexArray81 = fastFourierTransformer48.transform(doubleArray78);
        org.apache.commons.math.complex.Complex[] complexArray82 = fastFourierTransformer0.inversetransform2(doubleArray78);
        double[] doubleArray87 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray87);
        double[] doubleArray90 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray87, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray90);
        org.apache.commons.math.complex.Complex[] complexArray92 = fastFourierTransformer0.inversetransform2(doubleArray90);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction93 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray97 = fastFourierTransformer0.inversetransform2(univariateRealFunction93, (double) 'a', (double) (byte) 100, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray46);
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(complexArray69);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray80);
        org.junit.Assert.assertNotNull(complexArray81);
        org.junit.Assert.assertNotNull(complexArray82);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray92);
    }

    @Test
    public void test1527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1527");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer22.transform(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer0.transform(doubleArray30);
        double[] doubleArray38 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray38);
        double[] doubleArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray38, (double) 10.0f);
        double[] doubleArray43 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray41, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray44 = fastFourierTransformer0.inversetransform(doubleArray43);
        double[] doubleArray49 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray49);
        double[] doubleArray52 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray49, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray53 = fastFourierTransformer0.inversetransform2(doubleArray49);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer54 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray59 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray59);
        org.apache.commons.math.complex.Complex[] complexArray61 = fastFourierTransformer54.transform2(doubleArray59);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer62 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray67 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray67);
        org.apache.commons.math.complex.Complex[] complexArray69 = fastFourierTransformer62.transform2(doubleArray67);
        org.apache.commons.math.complex.Complex[] complexArray71 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray69, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray69);
        org.apache.commons.math.complex.Complex[] complexArray74 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray69, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray75 = fastFourierTransformer54.transform2(complexArray74);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer76 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray81 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray81);
        double[] doubleArray84 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray81, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray84);
        org.apache.commons.math.complex.Complex[] complexArray86 = fastFourierTransformer76.transform(doubleArray84);
        org.apache.commons.math.complex.Complex[] complexArray87 = fastFourierTransformer54.transform(doubleArray84);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray87);
        org.apache.commons.math.complex.Complex[] complexArray89 = fastFourierTransformer0.inversetransform(complexArray87);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction90 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray94 = fastFourierTransformer0.inversetransform(univariateRealFunction90, (double) (short) 1, (double) (short) 100, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray61);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray69);
        org.junit.Assert.assertNotNull(complexArray71);
        org.junit.Assert.assertNotNull(complexArray74);
        org.junit.Assert.assertNotNull(complexArray75);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray86);
        org.junit.Assert.assertNotNull(complexArray87);
        org.junit.Assert.assertNotNull(complexArray89);
    }

    @Test
    public void test1528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1528");
        double[] doubleArray4 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray4);
        double[] doubleArray7 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray4, (double) (byte) 100);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray4);
        double[] doubleArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray4, (double) ' ');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray10);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[-3200.0, 310400.0, 3200.0, 32000.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-3200.0, 310400.0, 3200.0, 32000.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-3200.0, 310400.0, 3200.0, 32000.0]");
    }

    @Test
    public void test1529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1529");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.inversetransform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray16 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer11.transform2(doubleArray16);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer19 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray24 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray24);
        org.apache.commons.math.complex.Complex[] complexArray26 = fastFourierTransformer19.transform2(doubleArray24);
        org.apache.commons.math.complex.Complex[] complexArray28 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray26, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray26);
        org.apache.commons.math.complex.Complex[] complexArray31 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray26, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer11.transform2(complexArray31);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer33 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer34 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray39 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer34.transform2(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray43 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray41, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray41);
        org.apache.commons.math.complex.Complex[] complexArray45 = fastFourierTransformer33.inversetransform(complexArray41);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer46 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray51 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray51);
        org.apache.commons.math.complex.Complex[] complexArray53 = fastFourierTransformer46.transform2(doubleArray51);
        org.apache.commons.math.complex.Complex[] complexArray54 = fastFourierTransformer33.transform(complexArray53);
        double[] doubleArray59 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray59);
        double[] doubleArray62 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray59, (double) 10.0f);
        double[] doubleArray64 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray62, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray65 = fastFourierTransformer33.inversetransform2(doubleArray64);
        org.apache.commons.math.complex.Complex[] complexArray66 = fastFourierTransformer11.transform(doubleArray64);
        org.apache.commons.math.complex.Complex[] complexArray67 = fastFourierTransformer0.inversetransform2(doubleArray64);
        double[] doubleArray69 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray64, 0.0d);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray69);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray69);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray26);
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(complexArray31);
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(complexArray54);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(complexArray66);
        org.junit.Assert.assertNotNull(complexArray67);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-0.0, 0.0, 0.0, 0.0]");
    }

    @Test
    public void test1530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1530");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer22.transform(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer0.transform(doubleArray30);
        double[] doubleArray38 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray38);
        double[] doubleArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray38, (double) 10.0f);
        double[] doubleArray43 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray41, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray44 = fastFourierTransformer0.inversetransform(doubleArray43);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer45 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray50 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray50);
        double[] doubleArray53 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray50, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray53);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer45.inversetransform(doubleArray53);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer56 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray61 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer56.transform2(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray65 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray63, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray66 = fastFourierTransformer45.inversetransform(complexArray65);
        org.apache.commons.math.complex.Complex[] complexArray67 = fastFourierTransformer0.transform2(complexArray66);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction68 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray72 = fastFourierTransformer0.transform2(univariateRealFunction68, (double) (-1L), (double) 0.0f, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(complexArray66);
        org.junit.Assert.assertNotNull(complexArray67);
    }

    @Test
    public void test1531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1531");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer9 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray14 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray14);
        org.apache.commons.math.complex.Complex[] complexArray16 = fastFourierTransformer9.transform2(doubleArray14);
        org.apache.commons.math.complex.Complex[] complexArray18 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray16, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray16);
        org.apache.commons.math.complex.Complex[] complexArray21 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray16, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray22 = fastFourierTransformer1.transform2(complexArray21);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer23 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray28 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray28);
        double[] doubleArray31 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray28, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray31);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer23.transform(doubleArray31);
        org.apache.commons.math.complex.Complex[] complexArray34 = fastFourierTransformer1.transform(doubleArray31);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer35 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray40 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray42 = fastFourierTransformer35.transform2(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray44 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray42, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray42);
        org.apache.commons.math.complex.Complex[] complexArray47 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray42, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray48 = fastFourierTransformer1.inversetransform2(complexArray42);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer49 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray54 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray54);
        org.apache.commons.math.complex.Complex[] complexArray56 = fastFourierTransformer49.transform2(doubleArray54);
        org.apache.commons.math.complex.Complex[] complexArray58 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray56, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray56);
        org.apache.commons.math.complex.Complex[] complexArray61 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray56, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray63 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray56, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray64 = fastFourierTransformer1.inversetransform(complexArray63);
        org.apache.commons.math.complex.Complex[] complexArray66 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray63, (double) (byte) 1);
        org.apache.commons.math.complex.Complex[] complexArray67 = fastFourierTransformer0.inversetransform2(complexArray66);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer68 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray73 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray73);
        org.apache.commons.math.complex.Complex[] complexArray75 = fastFourierTransformer68.transform2(doubleArray73);
        double[] doubleArray77 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray73, (double) (short) 0);
        org.apache.commons.math.complex.Complex[] complexArray78 = fastFourierTransformer0.transform(doubleArray77);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction79 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray83 = fastFourierTransformer0.transform(univariateRealFunction79, (double) ' ', (double) 0, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [32.0, 0.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray16);
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(complexArray22);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(complexArray48);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray56);
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(complexArray61);
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(complexArray64);
        org.junit.Assert.assertNotNull(complexArray66);
        org.junit.Assert.assertNotNull(complexArray67);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray75);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray78);
    }

    @Test
    public void test1532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1532");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, 10.0d, 1.0d, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [10.0, 1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1533");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.transform.FastFourierTransformer.verifyInterval((double) 1L, (double) 0L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [1.0, 0.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1534");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray11 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer12 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray20, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray20);
        org.apache.commons.math.complex.Complex[] complexArray24 = fastFourierTransformer12.inversetransform(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer25 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray30 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer25.transform2(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer12.transform(complexArray32);
        org.apache.commons.math.complex.Complex[] complexArray34 = fastFourierTransformer0.transform2(complexArray32);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer35 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray40 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray42 = fastFourierTransformer35.transform2(doubleArray40);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer43 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray48 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray48);
        org.apache.commons.math.complex.Complex[] complexArray50 = fastFourierTransformer43.transform2(doubleArray48);
        org.apache.commons.math.complex.Complex[] complexArray52 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray50, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray50);
        org.apache.commons.math.complex.Complex[] complexArray55 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray50, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray56 = fastFourierTransformer35.transform2(complexArray55);
        double[] doubleArray61 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray61);
        double[] doubleArray64 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray61, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray65 = fastFourierTransformer35.transform2(doubleArray64);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray64);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray64);
        org.apache.commons.math.complex.Complex[] complexArray68 = fastFourierTransformer0.inversetransform2(doubleArray64);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction69 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray73 = fastFourierTransformer0.inversetransform(univariateRealFunction69, (double) 1L, (double) 10.0f, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray11);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray22);
        org.junit.Assert.assertNotNull(complexArray24);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(complexArray56);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(complexArray68);
    }

    @Test
    public void test1535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1535");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.inversetransform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray16 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer11.transform2(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray18, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.inversetransform(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        org.apache.commons.math.complex.Complex[] complexArray29 = fastFourierTransformer22.transform2(doubleArray27);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer30 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray35 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray35);
        org.apache.commons.math.complex.Complex[] complexArray37 = fastFourierTransformer30.transform2(doubleArray35);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer38 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray43 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray43);
        org.apache.commons.math.complex.Complex[] complexArray45 = fastFourierTransformer38.transform2(doubleArray43);
        org.apache.commons.math.complex.Complex[] complexArray47 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray45, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray45);
        org.apache.commons.math.complex.Complex[] complexArray50 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray45, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer30.transform2(complexArray50);
        double[] doubleArray56 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray56);
        double[] doubleArray59 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray56, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray60 = fastFourierTransformer30.transform(doubleArray56);
        org.apache.commons.math.complex.Complex[] complexArray61 = fastFourierTransformer22.transform(complexArray60);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer62 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray67 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray67);
        org.apache.commons.math.complex.Complex[] complexArray69 = fastFourierTransformer62.transform2(doubleArray67);
        double[] doubleArray71 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray67, (double) (short) -1);
        double[] doubleArray73 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray67, (double) (-1.0f));
        org.apache.commons.math.complex.Complex[] complexArray74 = fastFourierTransformer22.transform2(doubleArray67);
        org.apache.commons.math.complex.Complex[] complexArray76 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray74, (double) (-1L));
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray74);
        org.apache.commons.math.complex.Complex[] complexArray78 = fastFourierTransformer0.transform2(complexArray74);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray74);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray37);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(complexArray61);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray69);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray74);
        org.junit.Assert.assertNotNull(complexArray76);
        org.junit.Assert.assertNotNull(complexArray78);
    }

    @Test
    public void test1536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1536");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer22.transform(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer0.transform(doubleArray30);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer34 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray39 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer34.transform2(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray43 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray41, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray41);
        org.apache.commons.math.complex.Complex[] complexArray46 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray41, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray47 = fastFourierTransformer0.inversetransform2(complexArray41);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer48 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer49 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray54 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray54);
        org.apache.commons.math.complex.Complex[] complexArray56 = fastFourierTransformer49.transform2(doubleArray54);
        org.apache.commons.math.complex.Complex[] complexArray58 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray56, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray59 = fastFourierTransformer48.inversetransform(complexArray56);
        org.apache.commons.math.complex.Complex[] complexArray60 = fastFourierTransformer0.inversetransform2(complexArray59);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer61 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray66 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray66);
        org.apache.commons.math.complex.Complex[] complexArray68 = fastFourierTransformer61.transform2(doubleArray66);
        org.apache.commons.math.complex.Complex[] complexArray70 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray68, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray71 = fastFourierTransformer0.inversetransform2(complexArray68);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction72 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray76 = fastFourierTransformer0.transform2(univariateRealFunction72, 0.0d, (double) 'a', (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray46);
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray56);
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(complexArray70);
        org.junit.Assert.assertNotNull(complexArray71);
    }

    @Test
    public void test1537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1537");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        double[] doubleArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray18, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer0.inversetransform(doubleArray18);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer24 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer25 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray30 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer25.transform2(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray34 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray32, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray32);
        org.apache.commons.math.complex.Complex[] complexArray36 = fastFourierTransformer24.inversetransform(complexArray32);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer37 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray42 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray42);
        org.apache.commons.math.complex.Complex[] complexArray44 = fastFourierTransformer37.transform2(doubleArray42);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer45 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray50 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray50);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer45.transform2(doubleArray50);
        org.apache.commons.math.complex.Complex[] complexArray54 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray52, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray52);
        org.apache.commons.math.complex.Complex[] complexArray57 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray52, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray58 = fastFourierTransformer37.transform2(complexArray57);
        double[] doubleArray63 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray63);
        double[] doubleArray66 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray63, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray67 = fastFourierTransformer37.transform(doubleArray63);
        org.apache.commons.math.complex.Complex[] complexArray68 = fastFourierTransformer24.transform(doubleArray63);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray63);
        org.apache.commons.math.complex.Complex[] complexArray70 = fastFourierTransformer0.inversetransform2(doubleArray63);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer71 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray76 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray76);
        org.apache.commons.math.complex.Complex[] complexArray78 = fastFourierTransformer71.transform2(doubleArray76);
        org.apache.commons.math.complex.Complex[] complexArray79 = fastFourierTransformer0.inversetransform(doubleArray76);
        double[] doubleArray81 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray76, (double) '4');
        java.lang.Class<?> wildcardClass82 = doubleArray76.getClass();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(complexArray36);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(complexArray54);
        org.junit.Assert.assertNotNull(complexArray57);
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray67);
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(complexArray70);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-52.0, 5044.0, 52.0, 520.0]");
        org.junit.Assert.assertNotNull(complexArray78);
        org.junit.Assert.assertNotNull(complexArray79);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-52.0, 5044.0, 52.0, 520.0]");
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1538");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, (double) 10, (double) 1.0f, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [10.0, 1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1539");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.transform.FastFourierTransformer.verifyInterval((double) 1, (double) 0.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [1.0, 0.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1540");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        org.apache.commons.math.complex.Complex[] complexArray29 = fastFourierTransformer22.transform2(doubleArray27);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer30 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray35 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray35);
        org.apache.commons.math.complex.Complex[] complexArray37 = fastFourierTransformer30.transform2(doubleArray35);
        org.apache.commons.math.complex.Complex[] complexArray39 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray37, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray37);
        org.apache.commons.math.complex.Complex[] complexArray42 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray37, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer22.transform2(complexArray42);
        double[] doubleArray48 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray48);
        double[] doubleArray51 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray48, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer22.transform2(doubleArray51);
        org.apache.commons.math.complex.Complex[] complexArray53 = fastFourierTransformer0.inversetransform2(doubleArray51);
        double[] doubleArray55 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray51, (double) (short) -1);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray51);
        double[] doubleArray58 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray51, (double) (short) -1);
        java.lang.Class<?> wildcardClass59 = doubleArray58.getClass();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray37);
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test1541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1541");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.transform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray16 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer11.transform2(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray19 = fastFourierTransformer0.inversetransform2(complexArray18);
        double[] doubleArray24 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray24);
        double[] doubleArray27 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray24, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray31 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) (byte) 10);
        double[] doubleArray33 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray31, (double) (byte) 0);
        org.apache.commons.math.complex.Complex[] complexArray34 = fastFourierTransformer0.transform(doubleArray33);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer35 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray40 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray40);
        double[] doubleArray43 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray40, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray43);
        org.apache.commons.math.complex.Complex[] complexArray45 = fastFourierTransformer35.transform(doubleArray43);
        org.apache.commons.math.complex.Complex[] complexArray46 = fastFourierTransformer0.inversetransform2(complexArray45);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction47 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer0.inversetransform2(univariateRealFunction47, (double) ' ', (double) 10, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [32.0, 10.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray19);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(complexArray46);
    }

    @Test
    public void test1542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1542");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        double[] doubleArray17 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray17);
        double[] doubleArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray17, (double) 10.0f);
        double[] doubleArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray20, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer0.transform(doubleArray20);
        double[] doubleArray28 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray28);
        double[] doubleArray31 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray28, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray31);
        double[] doubleArray34 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray31, 10.0d);
        org.apache.commons.math.complex.Complex[] complexArray35 = fastFourierTransformer0.transform2(doubleArray31);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer36 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray41 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray41);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer36.transform2(doubleArray41);
        org.apache.commons.math.complex.Complex[] complexArray45 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray43, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray43);
        org.apache.commons.math.complex.Complex[] complexArray48 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray43, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer0.transform2(complexArray43);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer50 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer51 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray56 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray56);
        org.apache.commons.math.complex.Complex[] complexArray58 = fastFourierTransformer51.transform2(doubleArray56);
        org.apache.commons.math.complex.Complex[] complexArray60 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray58, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray58);
        org.apache.commons.math.complex.Complex[] complexArray62 = fastFourierTransformer50.inversetransform(complexArray58);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer63 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray68 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray68);
        org.apache.commons.math.complex.Complex[] complexArray70 = fastFourierTransformer63.transform2(doubleArray68);
        double[] doubleArray72 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray68, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray73 = fastFourierTransformer50.inversetransform(doubleArray68);
        org.apache.commons.math.complex.Complex[] complexArray74 = fastFourierTransformer0.inversetransform(doubleArray68);
        double[] doubleArray79 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray79);
        double[] doubleArray82 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray79, (double) 10.0f);
        double[] doubleArray84 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray82, (double) 10L);
        double[] doubleArray86 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray82, (double) (byte) 100);
        org.apache.commons.math.complex.Complex[] complexArray87 = fastFourierTransformer0.inversetransform(doubleArray82);
        double[] doubleArray89 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray82, (double) 10);
        double[] doubleArray91 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray89, (double) (-1L));
        double[] doubleArray93 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray89, (double) 100.0f);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray35);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(complexArray48);
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray70);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray73);
        org.junit.Assert.assertNotNull(complexArray74);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[1.0E7, -9.7E8, -1.0E7, -1.0E8]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[1.0E7, -9.7E8, -1.0E7, -1.0E8]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0E7, -9.7E8, -1.0E7, -1.0E8]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[1.0E7, -9.7E8, -1.0E7, -1.0E8]");
        org.junit.Assert.assertNotNull(complexArray87);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[1.0E7, -9.7E8, -1.0E7, -1.0E8]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[1.0E7, -9.7E8, -1.0E7, -1.0E8]");
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[1.0E7, -9.7E8, -1.0E7, -1.0E8]");
    }

    @Test
    public void test1543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1543");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer22.transform(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer0.transform(doubleArray30);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer34 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray39 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer34.transform2(doubleArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer42 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray47 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray47);
        org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer42.transform2(doubleArray47);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer50 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray55 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray55);
        org.apache.commons.math.complex.Complex[] complexArray57 = fastFourierTransformer50.transform2(doubleArray55);
        org.apache.commons.math.complex.Complex[] complexArray59 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray57, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray57);
        org.apache.commons.math.complex.Complex[] complexArray62 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray57, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer42.transform2(complexArray62);
        double[] doubleArray68 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray68);
        double[] doubleArray71 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray68, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray72 = fastFourierTransformer42.transform(doubleArray68);
        org.apache.commons.math.complex.Complex[] complexArray73 = fastFourierTransformer34.transform(complexArray72);
        org.apache.commons.math.complex.Complex[] complexArray75 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray72, (double) (-1.0f));
        org.apache.commons.math.complex.Complex[] complexArray76 = fastFourierTransformer0.inversetransform2(complexArray72);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer77 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray82 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray82);
        org.apache.commons.math.complex.Complex[] complexArray84 = fastFourierTransformer77.transform2(doubleArray82);
        double[] doubleArray89 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray89);
        double[] doubleArray92 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray89, (double) 10.0f);
        double[] doubleArray94 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray92, (double) 10L);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray94);
        double[] doubleArray97 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray94, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray98 = fastFourierTransformer77.transform2(doubleArray94);
        org.apache.commons.math.complex.Complex[] complexArray99 = fastFourierTransformer0.transform(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray57);
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray72);
        org.junit.Assert.assertNotNull(complexArray73);
        org.junit.Assert.assertNotNull(complexArray75);
        org.junit.Assert.assertNotNull(complexArray76);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray84);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray97), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(complexArray98);
        org.junit.Assert.assertNotNull(complexArray99);
    }

    @Test
    public void test1544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1544");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer16 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray21 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer16.transform2(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray23);
        org.apache.commons.math.complex.Complex[] complexArray28 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray29 = fastFourierTransformer8.transform2(complexArray28);
        double[] doubleArray34 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray34);
        double[] doubleArray37 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray34, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray38 = fastFourierTransformer8.transform(doubleArray34);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer0.transform(complexArray38);
        double[] doubleArray44 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray44);
        double[] doubleArray47 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray44, (double) 10.0f);
        double[] doubleArray49 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray47, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray50 = fastFourierTransformer0.transform2(doubleArray47);
        double[] doubleArray52 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray47, 100.0d);
        double[] doubleArray54 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray47, (double) 1L);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray47);
        double[] doubleArray57 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray47, (double) 10);
        double[] doubleArray59 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray47, (double) 100.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray59);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray38);
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0E7, 9.7E8, 1.0E7, 1.0E8]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0E7, 9.7E8, 1.0E7, 1.0E8]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0E7, 9.7E8, 1.0E7, 1.0E8]");
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0E7, 9.7E8, 1.0E7, 1.0E8]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0E7, 9.7E8, 1.0E7, 1.0E8]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0E7, 9.7E8, 1.0E7, 1.0E8]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0E7, 9.7E8, 1.0E7, 1.0E8]");
    }

    @Test
    public void test1545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1545");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.transform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray16 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer11.transform2(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray19 = fastFourierTransformer0.inversetransform2(complexArray18);
        double[] doubleArray24 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray24);
        double[] doubleArray27 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray24, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray31 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) (byte) 10);
        double[] doubleArray33 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray31, (double) (byte) 0);
        org.apache.commons.math.complex.Complex[] complexArray34 = fastFourierTransformer0.transform(doubleArray33);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction35 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer0.inversetransform2(univariateRealFunction35, (double) 100L, (double) (byte) -1, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray19);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray34);
    }

    @Test
    public void test1546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1546");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, 10.0d, (double) 1L, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1547");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.transform.FastFourierTransformer.verifyInterval((double) (byte) 10, (double) 0.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [10.0, 0.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1548");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.inversetransform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer12 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray17 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray17);
        org.apache.commons.math.complex.Complex[] complexArray19 = fastFourierTransformer12.transform2(doubleArray17);
        org.apache.commons.math.complex.Complex[] complexArray21 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray19, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray19);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer11.inversetransform(complexArray19);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer24 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray29 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray29);
        org.apache.commons.math.complex.Complex[] complexArray31 = fastFourierTransformer24.transform2(doubleArray29);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer11.transform(complexArray31);
        double[] doubleArray37 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray37);
        double[] doubleArray40 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray37, (double) 10.0f);
        double[] doubleArray42 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray40, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer11.inversetransform2(doubleArray42);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer44 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer45 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray50 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray50);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer45.transform2(doubleArray50);
        org.apache.commons.math.complex.Complex[] complexArray54 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray52, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray52);
        org.apache.commons.math.complex.Complex[] complexArray56 = fastFourierTransformer44.inversetransform(complexArray52);
        double[] doubleArray61 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray61);
        double[] doubleArray64 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray61, 0.0d);
        org.apache.commons.math.complex.Complex[] complexArray65 = fastFourierTransformer44.transform2(doubleArray64);
        org.apache.commons.math.complex.Complex[] complexArray66 = fastFourierTransformer11.inversetransform(complexArray65);
        org.apache.commons.math.complex.Complex[] complexArray67 = fastFourierTransformer0.inversetransform2(complexArray66);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray19);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray31);
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(complexArray54);
        org.junit.Assert.assertNotNull(complexArray56);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(complexArray66);
        org.junit.Assert.assertNotNull(complexArray67);
    }

    @Test
    public void test1549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1549");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, (double) 100.0f, (double) 1L, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [100.0, 1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1550");
        org.apache.commons.math.transform.FastFourierTransformer.verifyInterval((double) 1.0f, (double) (short) 100);
    }

    @Test
    public void test1551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1551");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform2(doubleArray29);
        double[] doubleArray35 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray35);
        double[] doubleArray38 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray35, (double) (byte) 100);
        double[] doubleArray40 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray35, (double) 0);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray35);
        org.apache.commons.math.complex.Complex[] complexArray42 = fastFourierTransformer0.transform2(doubleArray35);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer43 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer44 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray49 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer44.transform2(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray53 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray51, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray51);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer43.inversetransform(complexArray51);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer56 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray61 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer56.transform2(doubleArray61);
        double[] doubleArray65 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray61, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray66 = fastFourierTransformer43.inversetransform(doubleArray61);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer67 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray72 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray72);
        double[] doubleArray75 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray72, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray75);
        org.apache.commons.math.complex.Complex[] complexArray77 = fastFourierTransformer67.inversetransform(doubleArray75);
        org.apache.commons.math.complex.Complex[] complexArray78 = fastFourierTransformer43.inversetransform(doubleArray75);
        org.apache.commons.math.complex.Complex[] complexArray79 = fastFourierTransformer0.inversetransform2(complexArray78);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer80 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray85 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray85);
        double[] doubleArray88 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray85, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray88);
        org.apache.commons.math.complex.Complex[] complexArray90 = fastFourierTransformer80.inversetransform(doubleArray88);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray90);
        org.apache.commons.math.complex.Complex[] complexArray93 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray90, (double) (byte) 100);
        org.apache.commons.math.complex.Complex[] complexArray95 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray90, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray96 = fastFourierTransformer0.transform2(complexArray90);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray96);
        java.lang.Class<?> wildcardClass98 = complexArray96.getClass();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray66);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray77);
        org.junit.Assert.assertNotNull(complexArray78);
        org.junit.Assert.assertNotNull(complexArray79);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray90);
        org.junit.Assert.assertNotNull(complexArray93);
        org.junit.Assert.assertNotNull(complexArray95);
        org.junit.Assert.assertNotNull(complexArray96);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1552");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        double[] doubleArray17 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray17);
        double[] doubleArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray17, (double) 10.0f);
        double[] doubleArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray20, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer0.transform(doubleArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer24 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer25 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray30 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer25.transform2(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray34 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray32, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray32);
        org.apache.commons.math.complex.Complex[] complexArray36 = fastFourierTransformer24.inversetransform(complexArray32);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer37 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray42 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray42);
        org.apache.commons.math.complex.Complex[] complexArray44 = fastFourierTransformer37.transform2(doubleArray42);
        double[] doubleArray46 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray42, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray47 = fastFourierTransformer24.inversetransform(doubleArray42);
        org.apache.commons.math.complex.Complex[] complexArray49 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray47, (-1.0d));
        org.apache.commons.math.complex.Complex[] complexArray50 = fastFourierTransformer0.inversetransform(complexArray49);
        double[] doubleArray55 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray55);
        double[] doubleArray58 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray55, 0.0d);
        double[] doubleArray60 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray58, (double) (byte) 100);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray60);
        org.apache.commons.math.complex.Complex[] complexArray62 = fastFourierTransformer0.transform2(doubleArray60);
        org.apache.commons.math.complex.Complex[] complexArray64 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray62, (double) (short) 100);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(complexArray36);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(complexArray64);
    }

    @Test
    public void test1553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1553");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer9 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray14 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray14);
        org.apache.commons.math.complex.Complex[] complexArray16 = fastFourierTransformer9.transform2(doubleArray14);
        org.apache.commons.math.complex.Complex[] complexArray18 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray16, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray16);
        org.apache.commons.math.complex.Complex[] complexArray21 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray16, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray22 = fastFourierTransformer1.transform2(complexArray21);
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray31 = fastFourierTransformer1.transform(doubleArray27);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray31);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer0.transform2(complexArray31);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer34 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray39 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer34.transform2(doubleArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer42 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray47 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray47);
        double[] doubleArray50 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray47, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray50);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer42.transform(doubleArray50);
        org.apache.commons.math.complex.Complex[] complexArray53 = fastFourierTransformer34.transform2(doubleArray50);
        org.apache.commons.math.complex.Complex[] complexArray54 = fastFourierTransformer0.transform2(doubleArray50);
        double[] doubleArray55 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray56 = fastFourierTransformer0.transform(doubleArray55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray16);
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(complexArray22);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray31);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(complexArray54);
    }

    @Test
    public void test1554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1554");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer22.transform(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer0.transform(doubleArray30);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer34 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray39 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer34.transform2(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray43 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray41, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray41);
        org.apache.commons.math.complex.Complex[] complexArray46 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray41, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray47 = fastFourierTransformer0.inversetransform2(complexArray41);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer48 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray53 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray53);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer48.transform2(doubleArray53);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer56 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray61 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer56.transform2(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray65 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray63, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray63);
        org.apache.commons.math.complex.Complex[] complexArray68 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray63, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray69 = fastFourierTransformer48.transform2(complexArray68);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer70 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray75 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray75);
        double[] doubleArray78 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray75, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray78);
        org.apache.commons.math.complex.Complex[] complexArray80 = fastFourierTransformer70.transform(doubleArray78);
        org.apache.commons.math.complex.Complex[] complexArray81 = fastFourierTransformer48.transform(doubleArray78);
        org.apache.commons.math.complex.Complex[] complexArray82 = fastFourierTransformer0.inversetransform2(doubleArray78);
        double[] doubleArray87 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray87);
        double[] doubleArray90 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray87, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray90);
        org.apache.commons.math.complex.Complex[] complexArray92 = fastFourierTransformer0.inversetransform2(doubleArray90);
        double[] doubleArray94 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray90, (double) (-1.0f));
        double[] doubleArray96 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray94, 1.0d);
        double[] doubleArray98 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray94, (double) 0.0f);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray46);
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(complexArray69);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray80);
        org.junit.Assert.assertNotNull(complexArray81);
        org.junit.Assert.assertNotNull(complexArray82);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[0.0, -0.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[0.0, -0.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(complexArray92);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[0.0, -0.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray96), "[0.0, -0.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray98), "[0.0, -0.0, -0.0, -0.0]");
    }

    @Test
    public void test1555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1555");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer22.transform(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer0.transform(doubleArray30);
        double[] doubleArray38 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray38);
        double[] doubleArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray38, (double) 10.0f);
        double[] doubleArray43 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray41, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray44 = fastFourierTransformer0.inversetransform(doubleArray43);
        double[] doubleArray49 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray49);
        double[] doubleArray52 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray49, 0.0d);
        double[] doubleArray54 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray52, (double) (byte) 100);
        double[] doubleArray56 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray52, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray57 = fastFourierTransformer0.transform2(doubleArray56);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction58 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray62 = fastFourierTransformer0.transform(univariateRealFunction58, (double) 10.0f, (double) 0L, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray57);
    }

    @Test
    public void test1556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1556");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction22 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray26 = fastFourierTransformer0.transform(univariateRealFunction22, (double) (byte) 10, (double) '4', 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
    }

    @Test
    public void test1557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1557");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer23 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray28 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray28);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer23.transform2(doubleArray28);
        org.apache.commons.math.complex.Complex[] complexArray32 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray30, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray30);
        org.apache.commons.math.complex.Complex[] complexArray34 = fastFourierTransformer22.inversetransform(complexArray30);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer35 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray40 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray42 = fastFourierTransformer35.transform2(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray44 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray42, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray42);
        org.apache.commons.math.complex.Complex[] complexArray47 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray42, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray49 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray42, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray50 = fastFourierTransformer22.transform(complexArray42);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer0.transform(complexArray50);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer52 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray57 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray57);
        org.apache.commons.math.complex.Complex[] complexArray59 = fastFourierTransformer52.transform2(doubleArray57);
        org.apache.commons.math.complex.Complex[] complexArray61 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray59, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray59);
        org.apache.commons.math.complex.Complex[] complexArray64 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray59, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray65 = fastFourierTransformer0.transform(complexArray64);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer66 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray71 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray71);
        org.apache.commons.math.complex.Complex[] complexArray73 = fastFourierTransformer66.transform2(doubleArray71);
        org.apache.commons.math.complex.Complex[] complexArray75 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray73, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray73);
        org.apache.commons.math.complex.Complex[] complexArray78 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray73, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray80 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray73, (double) '#');
        org.apache.commons.math.complex.Complex[] complexArray81 = fastFourierTransformer0.transform(complexArray73);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction82 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray86 = fastFourierTransformer0.inversetransform(univariateRealFunction82, (double) 10, (double) (byte) 10, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(complexArray61);
        org.junit.Assert.assertNotNull(complexArray64);
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray73);
        org.junit.Assert.assertNotNull(complexArray75);
        org.junit.Assert.assertNotNull(complexArray78);
        org.junit.Assert.assertNotNull(complexArray80);
        org.junit.Assert.assertNotNull(complexArray81);
    }

    @Test
    public void test1558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1558");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer16 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray21 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer16.transform2(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray23);
        org.apache.commons.math.complex.Complex[] complexArray28 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray29 = fastFourierTransformer8.transform2(complexArray28);
        double[] doubleArray34 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray34);
        double[] doubleArray37 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray34, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray38 = fastFourierTransformer8.transform(doubleArray34);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer0.transform(complexArray38);
        double[] doubleArray44 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray44);
        double[] doubleArray47 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray44, (double) 10.0f);
        double[] doubleArray49 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray47, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray50 = fastFourierTransformer0.transform2(doubleArray47);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer51 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray56 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray56);
        org.apache.commons.math.complex.Complex[] complexArray58 = fastFourierTransformer51.transform2(doubleArray56);
        double[] doubleArray60 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray56, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray61 = fastFourierTransformer0.transform(doubleArray56);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction62 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray66 = fastFourierTransformer0.inversetransform(univariateRealFunction62, (double) 100, (double) 0.0f, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [100.0, 0.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray38);
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray61);
    }

    @Test
    public void test1559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1559");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform(doubleArray26);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer31 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray36 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray36);
        double[] doubleArray39 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray36, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer31.transform(doubleArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer42 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray47 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray47);
        org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer42.transform2(doubleArray47);
        double[] doubleArray51 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray47, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer31.inversetransform(doubleArray47);
        org.apache.commons.math.complex.Complex[] complexArray53 = fastFourierTransformer0.transform2(doubleArray47);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction54 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray58 = fastFourierTransformer0.inversetransform2(univariateRealFunction54, 0.0d, (double) 100.0f, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(complexArray53);
    }

    @Test
    public void test1560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1560");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform(doubleArray26);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer31 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer32 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray37 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer32.transform2(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray39, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray39);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer31.inversetransform(complexArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer44 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray49 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer44.transform2(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer31.transform(complexArray51);
        org.apache.commons.math.complex.Complex[] complexArray53 = fastFourierTransformer0.transform2(complexArray52);
        double[] doubleArray58 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray58);
        double[] doubleArray61 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray58, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer0.inversetransform2(doubleArray61);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray61);
        double[] doubleArray66 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray61, 100.0d);
        java.lang.Class<?> wildcardClass67 = doubleArray66.getClass();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1000.0, 97000.0, 1000.0, 10000.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1000.0, 97000.0, 1000.0, 10000.0]");
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-1000.0, 97000.0, 1000.0, 10000.0]");
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test1561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1561");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer22.transform(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer0.transform(doubleArray30);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer34 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray39 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer34.transform2(doubleArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer42 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray47 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray47);
        org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer42.transform2(doubleArray47);
        org.apache.commons.math.complex.Complex[] complexArray51 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray49, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray49);
        org.apache.commons.math.complex.Complex[] complexArray54 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray49, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer34.transform2(complexArray54);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer56 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray61 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray61);
        double[] doubleArray64 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray61, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray64);
        org.apache.commons.math.complex.Complex[] complexArray66 = fastFourierTransformer56.transform(doubleArray64);
        org.apache.commons.math.complex.Complex[] complexArray67 = fastFourierTransformer34.transform(doubleArray64);
        double[] doubleArray72 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray72);
        double[] doubleArray75 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray72, (double) 10.0f);
        double[] doubleArray77 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray75, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray78 = fastFourierTransformer34.inversetransform(doubleArray77);
        double[] doubleArray83 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray83);
        double[] doubleArray86 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray83, (double) 10.0f);
        double[] doubleArray88 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray83, (double) (short) 100);
        org.apache.commons.math.complex.Complex[] complexArray89 = fastFourierTransformer34.inversetransform(doubleArray83);
        org.apache.commons.math.complex.Complex[] complexArray90 = fastFourierTransformer0.inversetransform(doubleArray83);
        double[] doubleArray92 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray83, (double) (byte) 1);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray54);
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray66);
        org.junit.Assert.assertNotNull(complexArray67);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray78);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-1000.0, 97000.0, 1000.0, 10000.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-1000.0, 97000.0, 1000.0, 10000.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[-1000.0, 97000.0, 1000.0, 10000.0]");
        org.junit.Assert.assertNotNull(complexArray89);
        org.junit.Assert.assertNotNull(complexArray90);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[-1000.0, 97000.0, 1000.0, 10000.0]");
    }

    @Test
    public void test1562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1562");
        org.apache.commons.math.transform.FastFourierTransformer.verifyInterval((double) 10, (double) 'a');
    }

    @Test
    public void test1563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1563");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.transform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray16 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer11.transform2(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray18, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray18);
        org.apache.commons.math.complex.Complex[] complexArray23 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray18, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray18, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray26 = fastFourierTransformer0.inversetransform2(complexArray25);
        double[] doubleArray31 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray31);
        double[] doubleArray34 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray31, (double) 10.0f);
        double[] doubleArray36 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray34, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray37 = fastFourierTransformer0.transform(doubleArray34);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer38 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray43 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray43);
        org.apache.commons.math.complex.Complex[] complexArray45 = fastFourierTransformer38.transform2(doubleArray43);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer46 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray51 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray51);
        org.apache.commons.math.complex.Complex[] complexArray53 = fastFourierTransformer46.transform2(doubleArray51);
        org.apache.commons.math.complex.Complex[] complexArray55 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray53, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray53);
        org.apache.commons.math.complex.Complex[] complexArray58 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray53, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray59 = fastFourierTransformer38.transform2(complexArray58);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer60 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray65 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray65);
        double[] doubleArray68 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray65, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray68);
        org.apache.commons.math.complex.Complex[] complexArray70 = fastFourierTransformer60.transform(doubleArray68);
        org.apache.commons.math.complex.Complex[] complexArray71 = fastFourierTransformer38.transform(doubleArray68);
        double[] doubleArray76 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray76);
        double[] doubleArray79 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray76, (double) 10.0f);
        double[] doubleArray81 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray79, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray82 = fastFourierTransformer38.inversetransform(doubleArray81);
        double[] doubleArray87 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray87);
        double[] doubleArray90 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray87, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray91 = fastFourierTransformer38.inversetransform2(doubleArray87);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray87);
        org.apache.commons.math.complex.Complex[] complexArray93 = fastFourierTransformer0.transform(doubleArray87);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction94 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray98 = fastFourierTransformer0.inversetransform(univariateRealFunction94, (double) (byte) 100, (double) (byte) 1, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [100.0, 1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray26);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray37);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray70);
        org.junit.Assert.assertNotNull(complexArray71);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray82);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray91);
        org.junit.Assert.assertNotNull(complexArray93);
    }

    @Test
    public void test1564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1564");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.transform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer12 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray17 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray17);
        org.apache.commons.math.complex.Complex[] complexArray19 = fastFourierTransformer12.transform2(doubleArray17);
        org.apache.commons.math.complex.Complex[] complexArray21 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray19, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray19);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer11.inversetransform(complexArray19);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer24 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray29 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray29);
        org.apache.commons.math.complex.Complex[] complexArray31 = fastFourierTransformer24.transform2(doubleArray29);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer11.transform(complexArray31);
        double[] doubleArray37 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray37);
        double[] doubleArray40 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray37, (double) 10.0f);
        double[] doubleArray42 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray40, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer11.inversetransform2(doubleArray42);
        org.apache.commons.math.complex.Complex[] complexArray44 = fastFourierTransformer0.inversetransform2(doubleArray42);
        org.apache.commons.math.complex.Complex[] complexArray45 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray46 = fastFourierTransformer0.inversetransform(complexArray45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray19);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray31);
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray44);
    }

    @Test
    public void test1565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1565");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.transform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray16 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer11.transform2(doubleArray16);
        double[] doubleArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray16, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.inversetransform(doubleArray16);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        org.apache.commons.math.complex.Complex[] complexArray29 = fastFourierTransformer22.transform2(doubleArray27);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer30 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray35 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray35);
        org.apache.commons.math.complex.Complex[] complexArray37 = fastFourierTransformer30.transform2(doubleArray35);
        org.apache.commons.math.complex.Complex[] complexArray39 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray37, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray37);
        org.apache.commons.math.complex.Complex[] complexArray42 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray37, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer22.transform2(complexArray42);
        double[] doubleArray48 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray48);
        double[] doubleArray51 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray48, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer22.transform(doubleArray48);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer53 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray58 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray58);
        org.apache.commons.math.complex.Complex[] complexArray60 = fastFourierTransformer53.transform2(doubleArray58);
        double[] doubleArray62 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray58, (double) (short) -1);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer22.inversetransform(doubleArray58);
        org.apache.commons.math.complex.Complex[] complexArray64 = fastFourierTransformer0.transform2(complexArray63);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction65 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray69 = fastFourierTransformer0.transform(univariateRealFunction65, (double) 0.0f, (double) (byte) -1, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [0.0, -1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray37);
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0, -97.0, -1.0, -10.0]");
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[1.0, -97.0, -1.0, -10.0]");
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(complexArray64);
    }

    @Test
    public void test1566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1566");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer22.transform(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer0.transform(doubleArray30);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer34 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray39 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer34.transform2(doubleArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer42 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray47 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray47);
        org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer42.transform2(doubleArray47);
        org.apache.commons.math.complex.Complex[] complexArray51 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray49, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray49);
        org.apache.commons.math.complex.Complex[] complexArray54 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray49, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer34.transform2(complexArray54);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer56 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray61 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray61);
        double[] doubleArray64 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray61, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray64);
        org.apache.commons.math.complex.Complex[] complexArray66 = fastFourierTransformer56.transform(doubleArray64);
        org.apache.commons.math.complex.Complex[] complexArray67 = fastFourierTransformer34.transform(doubleArray64);
        double[] doubleArray72 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray72);
        double[] doubleArray75 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray72, (double) 10.0f);
        double[] doubleArray77 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray75, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray78 = fastFourierTransformer34.inversetransform(doubleArray77);
        double[] doubleArray83 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray83);
        double[] doubleArray86 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray83, (double) 10.0f);
        double[] doubleArray88 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray83, (double) (short) 100);
        org.apache.commons.math.complex.Complex[] complexArray89 = fastFourierTransformer34.inversetransform(doubleArray83);
        org.apache.commons.math.complex.Complex[] complexArray90 = fastFourierTransformer0.inversetransform(doubleArray83);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray54);
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray66);
        org.junit.Assert.assertNotNull(complexArray67);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray78);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-1000.0, 97000.0, 1000.0, 10000.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-1000.0, 97000.0, 1000.0, 10000.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[-1000.0, 97000.0, 1000.0, 10000.0]");
        org.junit.Assert.assertNotNull(complexArray89);
        org.junit.Assert.assertNotNull(complexArray90);
    }

    @Test
    public void test1567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1567");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.transform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray16 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer11.transform2(doubleArray16);
        double[] doubleArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray16, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.inversetransform(doubleArray16);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        double[] doubleArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray16, (double) '4');
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-5200.0, 504400.0, 5200.0, 52000.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-5200.0, 504400.0, 5200.0, 52000.0]");
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-5200.0, 504400.0, 5200.0, 52000.0]");
    }

    @Test
    public void test1568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1568");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, (double) 1.0f, (double) (-1.0f), (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1569");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.transform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray16 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer11.transform2(doubleArray16);
        double[] doubleArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray16, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.inversetransform(doubleArray16);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer22.transform(doubleArray30);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer33 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray38 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray38);
        org.apache.commons.math.complex.Complex[] complexArray40 = fastFourierTransformer33.transform2(doubleArray38);
        org.apache.commons.math.complex.Complex[] complexArray42 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray40, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray40);
        org.apache.commons.math.complex.Complex[] complexArray45 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray40, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray47 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray40, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray48 = fastFourierTransformer22.inversetransform2(complexArray47);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray47);
        org.apache.commons.math.complex.Complex[] complexArray50 = fastFourierTransformer0.transform2(complexArray47);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction51 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer0.inversetransform(univariateRealFunction51, (double) 10L, 10.0d, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [10.0, 10.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray40);
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(complexArray48);
        org.junit.Assert.assertNotNull(complexArray50);
    }

    @Test
    public void test1570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1570");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer16 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray21 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer16.transform2(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray23);
        org.apache.commons.math.complex.Complex[] complexArray28 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray29 = fastFourierTransformer8.transform2(complexArray28);
        double[] doubleArray34 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray34);
        double[] doubleArray37 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray34, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray38 = fastFourierTransformer8.transform(doubleArray34);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer0.transform(complexArray38);
        double[] doubleArray44 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray44);
        double[] doubleArray47 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray44, (double) 10.0f);
        double[] doubleArray49 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray47, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray50 = fastFourierTransformer0.transform2(doubleArray47);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer51 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray56 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray56);
        org.apache.commons.math.complex.Complex[] complexArray58 = fastFourierTransformer51.transform2(doubleArray56);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer59 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray64 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray64);
        org.apache.commons.math.complex.Complex[] complexArray66 = fastFourierTransformer59.transform2(doubleArray64);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer67 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray72 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray72);
        org.apache.commons.math.complex.Complex[] complexArray74 = fastFourierTransformer67.transform2(doubleArray72);
        org.apache.commons.math.complex.Complex[] complexArray76 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray74, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray74);
        org.apache.commons.math.complex.Complex[] complexArray79 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray74, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray80 = fastFourierTransformer59.transform2(complexArray79);
        double[] doubleArray85 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray85);
        double[] doubleArray88 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray85, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray89 = fastFourierTransformer59.transform(doubleArray85);
        org.apache.commons.math.complex.Complex[] complexArray90 = fastFourierTransformer51.transform(complexArray89);
        org.apache.commons.math.complex.Complex[] complexArray92 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray89, (double) (-1.0f));
        org.apache.commons.math.complex.Complex[] complexArray93 = fastFourierTransformer0.transform2(complexArray92);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction94 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray98 = fastFourierTransformer0.transform(univariateRealFunction94, (double) (byte) 100, (-1.0d), (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray38);
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray66);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray74);
        org.junit.Assert.assertNotNull(complexArray76);
        org.junit.Assert.assertNotNull(complexArray79);
        org.junit.Assert.assertNotNull(complexArray80);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray89);
        org.junit.Assert.assertNotNull(complexArray90);
        org.junit.Assert.assertNotNull(complexArray92);
        org.junit.Assert.assertNotNull(complexArray93);
    }

    @Test
    public void test1571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1571");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform(doubleArray26);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer31 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer32 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray37 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer32.transform2(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray39, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray39);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer31.inversetransform(complexArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer44 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray49 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer44.transform2(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer31.transform(complexArray51);
        org.apache.commons.math.complex.Complex[] complexArray53 = fastFourierTransformer0.transform2(complexArray52);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer54 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer55 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray60 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray60);
        org.apache.commons.math.complex.Complex[] complexArray62 = fastFourierTransformer55.transform2(doubleArray60);
        org.apache.commons.math.complex.Complex[] complexArray64 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray62, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray62);
        org.apache.commons.math.complex.Complex[] complexArray66 = fastFourierTransformer54.inversetransform(complexArray62);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer67 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray72 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray72);
        org.apache.commons.math.complex.Complex[] complexArray74 = fastFourierTransformer67.transform2(doubleArray72);
        org.apache.commons.math.complex.Complex[] complexArray75 = fastFourierTransformer54.transform(complexArray74);
        org.apache.commons.math.complex.Complex[] complexArray76 = fastFourierTransformer0.transform2(complexArray75);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer77 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray82 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray82);
        org.apache.commons.math.complex.Complex[] complexArray84 = fastFourierTransformer77.transform2(doubleArray82);
        org.apache.commons.math.complex.Complex[] complexArray86 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray84, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray84);
        org.apache.commons.math.complex.Complex[] complexArray89 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray84, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray91 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray84, (double) 1);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray84);
        org.apache.commons.math.complex.Complex[] complexArray93 = fastFourierTransformer0.inversetransform2(complexArray84);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray93);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(complexArray64);
        org.junit.Assert.assertNotNull(complexArray66);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray74);
        org.junit.Assert.assertNotNull(complexArray75);
        org.junit.Assert.assertNotNull(complexArray76);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray84);
        org.junit.Assert.assertNotNull(complexArray86);
        org.junit.Assert.assertNotNull(complexArray89);
        org.junit.Assert.assertNotNull(complexArray91);
        org.junit.Assert.assertNotNull(complexArray93);
    }

    @Test
    public void test1572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1572");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        double[] doubleArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray8, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray11 = fastFourierTransformer0.inversetransform(doubleArray10);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer12 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray17 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray17);
        org.apache.commons.math.complex.Complex[] complexArray19 = fastFourierTransformer12.transform2(doubleArray17);
        org.apache.commons.math.complex.Complex[] complexArray21 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray19, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray22 = fastFourierTransformer0.inversetransform2(complexArray21);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction23 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray27 = fastFourierTransformer0.inversetransform(univariateRealFunction23, (double) 0, (double) (-1.0f), 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [0.0, -1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray11);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray19);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(complexArray22);
    }

    @Test
    public void test1573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1573");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform(doubleArray26);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray34 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) (short) 1);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-10.0, 970.0, 10.0, 100.0]");
    }

    @Test
    public void test1574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1574");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, (double) 'a', (double) (byte) 0, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [97.0, 0.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1575");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
    }

    @Test
    public void test1576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1576");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        double[] doubleArray9 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray6, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray9);
        org.apache.commons.math.complex.Complex[] complexArray11 = fastFourierTransformer1.inversetransform(doubleArray9);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.transform2(complexArray11);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer21 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        org.apache.commons.math.complex.Complex[] complexArray28 = fastFourierTransformer21.transform2(doubleArray26);
        org.apache.commons.math.complex.Complex[] complexArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray28, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray28);
        org.apache.commons.math.complex.Complex[] complexArray33 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray28, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray34 = fastFourierTransformer13.transform2(complexArray33);
        double[] doubleArray39 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray39);
        double[] doubleArray42 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray39, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer13.transform(doubleArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer44 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer45 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray50 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray50);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer45.transform2(doubleArray50);
        org.apache.commons.math.complex.Complex[] complexArray54 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray52, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray52);
        org.apache.commons.math.complex.Complex[] complexArray56 = fastFourierTransformer44.inversetransform(complexArray52);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer57 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray62 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray62);
        org.apache.commons.math.complex.Complex[] complexArray64 = fastFourierTransformer57.transform2(doubleArray62);
        org.apache.commons.math.complex.Complex[] complexArray66 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray64, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray64);
        org.apache.commons.math.complex.Complex[] complexArray69 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray64, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray71 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray64, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray72 = fastFourierTransformer44.transform(complexArray64);
        org.apache.commons.math.complex.Complex[] complexArray73 = fastFourierTransformer13.inversetransform2(complexArray72);
        org.apache.commons.math.complex.Complex[] complexArray74 = fastFourierTransformer0.inversetransform(complexArray73);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer75 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray80 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray80);
        double[] doubleArray83 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray80, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray83);
        org.apache.commons.math.complex.Complex[] complexArray85 = fastFourierTransformer75.inversetransform(doubleArray83);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray85);
        org.apache.commons.math.complex.Complex[] complexArray88 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray85, (double) (byte) 100);
        org.apache.commons.math.complex.Complex[] complexArray89 = fastFourierTransformer0.transform2(complexArray88);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction90 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray94 = fastFourierTransformer0.transform(univariateRealFunction90, 10.0d, 0.0d, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray11);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(complexArray54);
        org.junit.Assert.assertNotNull(complexArray56);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray64);
        org.junit.Assert.assertNotNull(complexArray66);
        org.junit.Assert.assertNotNull(complexArray69);
        org.junit.Assert.assertNotNull(complexArray71);
        org.junit.Assert.assertNotNull(complexArray72);
        org.junit.Assert.assertNotNull(complexArray73);
        org.junit.Assert.assertNotNull(complexArray74);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray85);
        org.junit.Assert.assertNotNull(complexArray88);
        org.junit.Assert.assertNotNull(complexArray89);
    }

    @Test
    public void test1577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1577");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        double[] doubleArray17 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray17);
        double[] doubleArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray17, (double) 10.0f);
        double[] doubleArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray20, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer0.transform(doubleArray20);
        double[] doubleArray28 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray28);
        double[] doubleArray31 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray28, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray31);
        double[] doubleArray34 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray31, 10.0d);
        org.apache.commons.math.complex.Complex[] complexArray35 = fastFourierTransformer0.transform2(doubleArray31);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer36 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray41 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray41);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer36.transform2(doubleArray41);
        org.apache.commons.math.complex.Complex[] complexArray45 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray43, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray43);
        org.apache.commons.math.complex.Complex[] complexArray48 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray43, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer0.transform2(complexArray43);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer50 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray55 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray55);
        org.apache.commons.math.complex.Complex[] complexArray57 = fastFourierTransformer50.transform2(doubleArray55);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer58 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray63 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray63);
        org.apache.commons.math.complex.Complex[] complexArray65 = fastFourierTransformer58.transform2(doubleArray63);
        org.apache.commons.math.complex.Complex[] complexArray67 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray65, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray65);
        org.apache.commons.math.complex.Complex[] complexArray70 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray65, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray71 = fastFourierTransformer50.transform2(complexArray70);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer72 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray77 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray77);
        double[] doubleArray80 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray77, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray80);
        org.apache.commons.math.complex.Complex[] complexArray82 = fastFourierTransformer72.transform(doubleArray80);
        org.apache.commons.math.complex.Complex[] complexArray83 = fastFourierTransformer50.transform(doubleArray80);
        double[] doubleArray88 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray88);
        double[] doubleArray91 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray88, (double) 10.0f);
        double[] doubleArray93 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray91, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray94 = fastFourierTransformer50.inversetransform(doubleArray93);
        org.apache.commons.math.complex.Complex[] complexArray95 = fastFourierTransformer0.inversetransform2(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray35);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(complexArray48);
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray57);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(complexArray67);
        org.junit.Assert.assertNotNull(complexArray70);
        org.junit.Assert.assertNotNull(complexArray71);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray82);
        org.junit.Assert.assertNotNull(complexArray83);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray94);
        org.junit.Assert.assertNotNull(complexArray95);
    }

    @Test
    public void test1578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1578");
        org.apache.commons.math.transform.FastFourierTransformer.verifyInterval((double) 0.0f, (double) (short) 100);
    }

    @Test
    public void test1579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1579");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform(doubleArray26);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer31 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray36 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray36);
        org.apache.commons.math.complex.Complex[] complexArray38 = fastFourierTransformer31.transform2(doubleArray36);
        org.apache.commons.math.complex.Complex[] complexArray40 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray38, (double) 'a');
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer0.transform2(complexArray40);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer42 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray47 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray47);
        org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer42.transform2(doubleArray47);
        org.apache.commons.math.complex.Complex[] complexArray51 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray49, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray53 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray51, (double) (byte) 100);
        org.apache.commons.math.complex.Complex[] complexArray55 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray53, (double) 0);
        org.apache.commons.math.complex.Complex[] complexArray56 = fastFourierTransformer0.transform2(complexArray55);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer57 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer58 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray63 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray63);
        double[] doubleArray66 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray63, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray66);
        org.apache.commons.math.complex.Complex[] complexArray68 = fastFourierTransformer58.inversetransform(doubleArray66);
        org.apache.commons.math.complex.Complex[] complexArray69 = fastFourierTransformer57.transform2(complexArray68);
        org.apache.commons.math.complex.Complex[] complexArray70 = fastFourierTransformer0.transform2(complexArray68);
        double[] doubleArray75 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray75);
        double[] doubleArray78 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray75, (double) 10.0f);
        double[] doubleArray80 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray78, (double) 10L);
        double[] doubleArray82 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray78, (double) (byte) 100);
        double[] doubleArray84 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray82, (double) (byte) 1);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray84);
        double[] doubleArray87 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray84, (-1.0d));
        org.apache.commons.math.complex.Complex[] complexArray88 = fastFourierTransformer0.inversetransform2(doubleArray87);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer89 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray94 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray94);
        org.apache.commons.math.complex.Complex[] complexArray96 = fastFourierTransformer89.transform2(doubleArray94);
        double[] doubleArray98 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray94, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray99 = fastFourierTransformer0.transform2(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray38);
        org.junit.Assert.assertNotNull(complexArray40);
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(complexArray56);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(complexArray69);
        org.junit.Assert.assertNotNull(complexArray70);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[10000.0, -970000.0, -10000.0, -100000.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[10000.0, -970000.0, -10000.0, -100000.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[10000.0, -970000.0, -10000.0, -100000.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[10000.0, -970000.0, -10000.0, -100000.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[10000.0, -970000.0, -10000.0, -100000.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[10000.0, -970000.0, -10000.0, -100000.0]");
        org.junit.Assert.assertNotNull(complexArray88);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray96);
        org.junit.Assert.assertNotNull(doubleArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray98), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray99);
    }

    @Test
    public void test1580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1580");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer9 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray14 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray14);
        org.apache.commons.math.complex.Complex[] complexArray16 = fastFourierTransformer9.transform2(doubleArray14);
        org.apache.commons.math.complex.Complex[] complexArray18 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray16, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray16);
        org.apache.commons.math.complex.Complex[] complexArray21 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray16, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray22 = fastFourierTransformer1.transform2(complexArray21);
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray31 = fastFourierTransformer1.transform(doubleArray27);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray31);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer0.transform2(complexArray31);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer34 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer35 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray40 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray42 = fastFourierTransformer35.transform2(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray44 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray42, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray42);
        org.apache.commons.math.complex.Complex[] complexArray46 = fastFourierTransformer34.inversetransform(complexArray42);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer47 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray52 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray52);
        org.apache.commons.math.complex.Complex[] complexArray54 = fastFourierTransformer47.transform2(doubleArray52);
        org.apache.commons.math.complex.Complex[] complexArray56 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray54, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray54);
        org.apache.commons.math.complex.Complex[] complexArray59 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray54, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray61 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray54, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray62 = fastFourierTransformer34.transform(complexArray54);
        double[] doubleArray67 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray67);
        double[] doubleArray70 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray67, (double) 10.0f);
        double[] doubleArray72 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray70, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray73 = fastFourierTransformer34.transform2(doubleArray70);
        org.apache.commons.math.complex.Complex[] complexArray74 = fastFourierTransformer0.transform(doubleArray70);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer75 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray80 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray80);
        org.apache.commons.math.complex.Complex[] complexArray82 = fastFourierTransformer75.transform2(doubleArray80);
        double[] doubleArray84 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray80, (double) 10.0f);
        double[] doubleArray86 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray80, (double) 10L);
        double[] doubleArray88 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray86, (double) (byte) 0);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray88);
        double[] doubleArray91 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray88, (double) (-1));
        org.apache.commons.math.complex.Complex[] complexArray92 = fastFourierTransformer0.inversetransform2(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray16);
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(complexArray22);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray31);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(complexArray46);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray54);
        org.junit.Assert.assertNotNull(complexArray56);
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(complexArray61);
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray73);
        org.junit.Assert.assertNotNull(complexArray74);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[0.0, -0.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(complexArray82);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[0.0, -0.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[0.0, -0.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[0.0, -0.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[0.0, -0.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(complexArray92);
    }

    @Test
    public void test1581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1581");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray20, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray20);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray20, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray27 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray20, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray28 = fastFourierTransformer0.transform(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer29 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray34 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray34);
        org.apache.commons.math.complex.Complex[] complexArray36 = fastFourierTransformer29.transform2(doubleArray34);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer37 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray42 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray42);
        org.apache.commons.math.complex.Complex[] complexArray44 = fastFourierTransformer37.transform2(doubleArray42);
        org.apache.commons.math.complex.Complex[] complexArray46 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray44, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray44);
        org.apache.commons.math.complex.Complex[] complexArray49 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray44, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray50 = fastFourierTransformer29.transform2(complexArray49);
        double[] doubleArray55 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray55);
        double[] doubleArray58 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray55, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray59 = fastFourierTransformer29.transform(doubleArray55);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer60 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer61 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray66 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray66);
        org.apache.commons.math.complex.Complex[] complexArray68 = fastFourierTransformer61.transform2(doubleArray66);
        org.apache.commons.math.complex.Complex[] complexArray70 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray68, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray68);
        org.apache.commons.math.complex.Complex[] complexArray72 = fastFourierTransformer60.inversetransform(complexArray68);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer73 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray78 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray78);
        org.apache.commons.math.complex.Complex[] complexArray80 = fastFourierTransformer73.transform2(doubleArray78);
        org.apache.commons.math.complex.Complex[] complexArray81 = fastFourierTransformer60.transform(complexArray80);
        org.apache.commons.math.complex.Complex[] complexArray82 = fastFourierTransformer29.transform2(complexArray81);
        double[] doubleArray87 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray87);
        double[] doubleArray90 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray87, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray90);
        org.apache.commons.math.complex.Complex[] complexArray92 = fastFourierTransformer29.inversetransform2(doubleArray90);
        org.apache.commons.math.complex.Complex[] complexArray93 = fastFourierTransformer0.transform2(doubleArray90);
        double[] doubleArray95 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray90, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray90);
        double[] doubleArray98 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray90, (double) (byte) 0);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray98);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray22);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray27);
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray36);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(complexArray46);
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(complexArray70);
        org.junit.Assert.assertNotNull(complexArray72);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray80);
        org.junit.Assert.assertNotNull(complexArray81);
        org.junit.Assert.assertNotNull(complexArray82);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray92);
        org.junit.Assert.assertNotNull(complexArray93);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray95), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray98), "[-0.0, 0.0, 0.0, 0.0]");
    }

    @Test
    public void test1582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1582");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.inversetransform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray16 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer11.transform2(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray18, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.inversetransform(complexArray20);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction22 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray26 = fastFourierTransformer0.transform(univariateRealFunction22, 10.0d, (double) 0L, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [10.0, 0.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
    }

    @Test
    public void test1583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1583");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform(doubleArray26);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer31 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer32 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray37 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer32.transform2(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray39, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray39);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer31.inversetransform(complexArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer44 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray49 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer44.transform2(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer31.transform(complexArray51);
        org.apache.commons.math.complex.Complex[] complexArray53 = fastFourierTransformer0.transform2(complexArray52);
        double[] doubleArray58 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray58);
        double[] doubleArray61 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray58, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray61);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray61);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray61);
        double[] doubleArray66 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray61, (double) (-1L));
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray66);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray66);
        org.apache.commons.math.complex.Complex[] complexArray69 = fastFourierTransformer0.inversetransform(doubleArray66);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction70 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray74 = fastFourierTransformer0.inversetransform(univariateRealFunction70, (double) 1.0f, (double) 100, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(complexArray69);
    }

    @Test
    public void test1584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1584");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray11 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer12 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray17 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray17);
        org.apache.commons.math.complex.Complex[] complexArray19 = fastFourierTransformer12.transform2(doubleArray17);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer20 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray25 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray25);
        org.apache.commons.math.complex.Complex[] complexArray27 = fastFourierTransformer20.transform2(doubleArray25);
        org.apache.commons.math.complex.Complex[] complexArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray27, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray27);
        org.apache.commons.math.complex.Complex[] complexArray32 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray27, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer12.transform2(complexArray32);
        double[] doubleArray38 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray38);
        double[] doubleArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray38, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray41);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray41);
        double[] doubleArray45 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray41, (double) (byte) 10);
        double[] doubleArray47 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray45, (double) (byte) 0);
        org.apache.commons.math.complex.Complex[] complexArray48 = fastFourierTransformer12.transform2(doubleArray45);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer49 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer50 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray55 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray55);
        org.apache.commons.math.complex.Complex[] complexArray57 = fastFourierTransformer50.transform2(doubleArray55);
        org.apache.commons.math.complex.Complex[] complexArray59 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray57, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray57);
        org.apache.commons.math.complex.Complex[] complexArray61 = fastFourierTransformer49.inversetransform(complexArray57);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer62 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray67 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray67);
        org.apache.commons.math.complex.Complex[] complexArray69 = fastFourierTransformer62.transform2(doubleArray67);
        org.apache.commons.math.complex.Complex[] complexArray70 = fastFourierTransformer49.transform(complexArray69);
        org.apache.commons.math.complex.Complex[] complexArray71 = fastFourierTransformer12.inversetransform(complexArray69);
        double[] doubleArray76 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray76);
        double[] doubleArray79 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray76, (double) 10.0f);
        double[] doubleArray81 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray79, (double) 10L);
        double[] doubleArray83 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray79, (double) (byte) 100);
        org.apache.commons.math.complex.Complex[] complexArray84 = fastFourierTransformer12.inversetransform(doubleArray83);
        org.apache.commons.math.complex.Complex[] complexArray85 = fastFourierTransformer0.transform(doubleArray83);
        double[] doubleArray87 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray83, 100.0d);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray11);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray19);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray27);
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray48);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray57);
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(complexArray61);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray69);
        org.junit.Assert.assertNotNull(complexArray70);
        org.junit.Assert.assertNotNull(complexArray71);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1000000.0, 9.7E7, 1000000.0, 1.0E7]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-1000000.0, 9.7E7, 1000000.0, 1.0E7]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-1000000.0, 9.7E7, 1000000.0, 1.0E7]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-1000000.0, 9.7E7, 1000000.0, 1.0E7]");
        org.junit.Assert.assertNotNull(complexArray84);
        org.junit.Assert.assertNotNull(complexArray85);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[-1000000.0, 9.7E7, 1000000.0, 1.0E7]");
    }

    @Test
    public void test1585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1585");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        double[] doubleArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray18, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer0.inversetransform(doubleArray18);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction24 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray28 = fastFourierTransformer0.transform(univariateRealFunction24, (double) (short) 1, (double) 10, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray23);
    }

    @Test
    public void test1586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1586");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        double[] doubleArray17 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray17);
        double[] doubleArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray17, (double) 10.0f);
        double[] doubleArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray20, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer0.transform(doubleArray20);
        double[] doubleArray28 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray28);
        double[] doubleArray31 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray28, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray31);
        double[] doubleArray34 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray31, 10.0d);
        org.apache.commons.math.complex.Complex[] complexArray35 = fastFourierTransformer0.transform2(doubleArray31);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer36 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray41 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray41);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer36.transform2(doubleArray41);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer44 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray49 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer44.transform2(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray53 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray51, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray51);
        org.apache.commons.math.complex.Complex[] complexArray56 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray51, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray57 = fastFourierTransformer36.transform2(complexArray56);
        double[] doubleArray62 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray62);
        double[] doubleArray65 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray62, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray66 = fastFourierTransformer36.transform2(doubleArray65);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray66);
        org.apache.commons.math.complex.Complex[] complexArray68 = fastFourierTransformer0.inversetransform2(complexArray66);
        double[] doubleArray73 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray73);
        double[] doubleArray76 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray73, (double) 10.0f);
        double[] doubleArray78 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray76, (double) 10L);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray78);
        double[] doubleArray81 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray78, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray82 = fastFourierTransformer0.transform2(doubleArray81);
        org.apache.commons.math.complex.Complex[] complexArray83 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray84 = fastFourierTransformer0.inversetransform(complexArray83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray35);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(complexArray56);
        org.junit.Assert.assertNotNull(complexArray57);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray66);
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(complexArray82);
    }

    @Test
    public void test1587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1587");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, (double) 100L, (double) 0, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [100.0, 0.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1588");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        double[] doubleArray9 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray6, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray9);
        org.apache.commons.math.complex.Complex[] complexArray11 = fastFourierTransformer1.inversetransform(doubleArray9);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.transform2(complexArray11);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer14 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray19 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray19);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer14.transform2(doubleArray19);
        org.apache.commons.math.complex.Complex[] complexArray23 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray21, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray24 = fastFourierTransformer13.inversetransform(complexArray21);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer25 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray30 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer25.transform2(doubleArray30);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer33 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray38 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray38);
        org.apache.commons.math.complex.Complex[] complexArray40 = fastFourierTransformer33.transform2(doubleArray38);
        org.apache.commons.math.complex.Complex[] complexArray42 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray40, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray40);
        org.apache.commons.math.complex.Complex[] complexArray45 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray40, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray46 = fastFourierTransformer25.transform2(complexArray45);
        double[] doubleArray51 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray51);
        double[] doubleArray54 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray51, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer25.transform(doubleArray51);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer56 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer57 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray62 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray62);
        org.apache.commons.math.complex.Complex[] complexArray64 = fastFourierTransformer57.transform2(doubleArray62);
        org.apache.commons.math.complex.Complex[] complexArray66 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray64, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray64);
        org.apache.commons.math.complex.Complex[] complexArray68 = fastFourierTransformer56.inversetransform(complexArray64);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer69 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray74 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray74);
        org.apache.commons.math.complex.Complex[] complexArray76 = fastFourierTransformer69.transform2(doubleArray74);
        org.apache.commons.math.complex.Complex[] complexArray77 = fastFourierTransformer56.transform(complexArray76);
        org.apache.commons.math.complex.Complex[] complexArray78 = fastFourierTransformer25.transform2(complexArray77);
        double[] doubleArray83 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray83);
        double[] doubleArray86 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray83, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray86);
        org.apache.commons.math.complex.Complex[] complexArray88 = fastFourierTransformer25.inversetransform2(doubleArray86);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray86);
        double[] doubleArray91 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray86, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray92 = fastFourierTransformer13.transform2(doubleArray91);
        org.apache.commons.math.complex.Complex[] complexArray93 = fastFourierTransformer0.inversetransform2(doubleArray91);
        java.lang.Class<?> wildcardClass94 = doubleArray91.getClass();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray11);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(complexArray24);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray40);
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(complexArray46);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray64);
        org.junit.Assert.assertNotNull(complexArray66);
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray76);
        org.junit.Assert.assertNotNull(complexArray77);
        org.junit.Assert.assertNotNull(complexArray78);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-1000.0, 97000.0, 1000.0, 10000.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-1000.0, 97000.0, 1000.0, 10000.0]");
        org.junit.Assert.assertNotNull(complexArray88);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[-1000.0, 97000.0, 1000.0, 10000.0]");
        org.junit.Assert.assertNotNull(complexArray92);
        org.junit.Assert.assertNotNull(complexArray93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1589");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        double[] doubleArray31 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray29, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer0.inversetransform2(doubleArray31);
        double[] doubleArray37 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray37);
        double[] doubleArray40 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray37, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray42 = fastFourierTransformer0.inversetransform2(doubleArray37);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer43 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer44 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray49 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer44.transform2(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray53 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray51, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray51);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer43.inversetransform(complexArray51);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer56 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray61 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer56.transform2(doubleArray61);
        double[] doubleArray65 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray61, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray66 = fastFourierTransformer43.inversetransform(doubleArray61);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer67 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray72 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray72);
        double[] doubleArray75 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray72, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray75);
        org.apache.commons.math.complex.Complex[] complexArray77 = fastFourierTransformer67.inversetransform(doubleArray75);
        org.apache.commons.math.complex.Complex[] complexArray78 = fastFourierTransformer43.inversetransform(doubleArray75);
        org.apache.commons.math.complex.Complex[] complexArray79 = fastFourierTransformer0.transform(complexArray78);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction80 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray84 = fastFourierTransformer0.inversetransform2(univariateRealFunction80, (double) 10.0f, (double) 1, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [10.0, 1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray66);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray77);
        org.junit.Assert.assertNotNull(complexArray78);
        org.junit.Assert.assertNotNull(complexArray79);
    }

    @Test
    public void test1590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1590");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.transform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray16 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer11.transform2(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray18, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray18);
        org.apache.commons.math.complex.Complex[] complexArray23 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray18, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray18, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray26 = fastFourierTransformer0.inversetransform2(complexArray25);
        double[] doubleArray31 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray31);
        double[] doubleArray34 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray31, (double) 10.0f);
        double[] doubleArray36 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray34, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray37 = fastFourierTransformer0.transform(doubleArray34);
        double[] doubleArray42 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray42);
        double[] doubleArray45 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray42, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray45);
        double[] doubleArray48 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray45, 10.0d);
        org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer0.transform2(doubleArray48);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction50 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray54 = fastFourierTransformer0.transform2(univariateRealFunction50, 100.0d, 10.0d, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray26);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray37);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray49);
    }

    @Test
    public void test1591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1591");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer16 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray21 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer16.transform2(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray23);
        org.apache.commons.math.complex.Complex[] complexArray28 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray29 = fastFourierTransformer8.transform2(complexArray28);
        double[] doubleArray34 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray34);
        double[] doubleArray37 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray34, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray38 = fastFourierTransformer8.transform(doubleArray34);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer39 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray44 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray44);
        double[] doubleArray47 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray44, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray47);
        org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer39.transform(doubleArray47);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer50 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray55 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray55);
        org.apache.commons.math.complex.Complex[] complexArray57 = fastFourierTransformer50.transform2(doubleArray55);
        double[] doubleArray59 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray55, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray60 = fastFourierTransformer39.inversetransform(doubleArray55);
        org.apache.commons.math.complex.Complex[] complexArray61 = fastFourierTransformer8.transform2(doubleArray55);
        double[] doubleArray63 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray55, (double) (short) 100);
        org.apache.commons.math.complex.Complex[] complexArray64 = fastFourierTransformer0.transform2(doubleArray55);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer65 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray70 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray70);
        double[] doubleArray73 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray70, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray73);
        org.apache.commons.math.complex.Complex[] complexArray75 = fastFourierTransformer65.inversetransform(doubleArray73);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray75);
        org.apache.commons.math.complex.Complex[] complexArray77 = fastFourierTransformer0.inversetransform(complexArray75);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction78 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray82 = fastFourierTransformer0.inversetransform(univariateRealFunction78, (double) 1, (double) ' ', (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray38);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(complexArray57);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(complexArray61);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(complexArray64);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray75);
        org.junit.Assert.assertNotNull(complexArray77);
    }

    @Test
    public void test1592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1592");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform(doubleArray26);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer31 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer32 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray37 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer32.transform2(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray39, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray39);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer31.inversetransform(complexArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer44 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray49 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer44.transform2(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer31.transform(complexArray51);
        org.apache.commons.math.complex.Complex[] complexArray53 = fastFourierTransformer0.transform2(complexArray52);
        double[] doubleArray58 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray58);
        double[] doubleArray61 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray58, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer0.inversetransform2(doubleArray61);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer64 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer65 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray70 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray70);
        org.apache.commons.math.complex.Complex[] complexArray72 = fastFourierTransformer65.transform2(doubleArray70);
        org.apache.commons.math.complex.Complex[] complexArray74 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray72, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray72);
        org.apache.commons.math.complex.Complex[] complexArray76 = fastFourierTransformer64.inversetransform(complexArray72);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray76);
        org.apache.commons.math.complex.Complex[] complexArray79 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray76, (double) 1.0f);
        org.apache.commons.math.complex.Complex[] complexArray80 = fastFourierTransformer0.inversetransform2(complexArray76);
        java.lang.Class<?> wildcardClass81 = complexArray76.getClass();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray72);
        org.junit.Assert.assertNotNull(complexArray74);
        org.junit.Assert.assertNotNull(complexArray76);
        org.junit.Assert.assertNotNull(complexArray79);
        org.junit.Assert.assertNotNull(complexArray80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test1593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1593");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        double[] doubleArray17 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray17);
        double[] doubleArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray17, (double) 10.0f);
        double[] doubleArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray20, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer0.transform(doubleArray20);
        double[] doubleArray28 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray28);
        double[] doubleArray31 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray28, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray31);
        double[] doubleArray34 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray31, 10.0d);
        org.apache.commons.math.complex.Complex[] complexArray35 = fastFourierTransformer0.transform2(doubleArray31);
        double[] doubleArray40 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray40);
        double[] doubleArray43 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray40, (double) 10.0f);
        double[] doubleArray45 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray43, (double) (byte) -1);
        org.apache.commons.math.complex.Complex[] complexArray46 = fastFourierTransformer0.inversetransform(doubleArray43);
        java.lang.Class<?> wildcardClass47 = doubleArray43.getClass();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray35);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(complexArray46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1594");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.inversetransform(doubleArray8);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction11 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer0.transform(univariateRealFunction11, (double) 'a', (double) (byte) 1, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
    }

    @Test
    public void test1595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1595");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer23 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray28 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray28);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer23.transform2(doubleArray28);
        org.apache.commons.math.complex.Complex[] complexArray32 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray30, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray30);
        org.apache.commons.math.complex.Complex[] complexArray34 = fastFourierTransformer22.inversetransform(complexArray30);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer35 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray40 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray42 = fastFourierTransformer35.transform2(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer22.transform(complexArray42);
        org.apache.commons.math.complex.Complex[] complexArray44 = fastFourierTransformer0.inversetransform(complexArray42);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer45 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray50 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray50);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer45.transform2(doubleArray50);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer53 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray58 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray58);
        org.apache.commons.math.complex.Complex[] complexArray60 = fastFourierTransformer53.transform2(doubleArray58);
        org.apache.commons.math.complex.Complex[] complexArray62 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray60, (double) 'a');
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer45.transform(complexArray60);
        org.apache.commons.math.complex.Complex[] complexArray64 = fastFourierTransformer0.inversetransform(complexArray60);
        double[] doubleArray69 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray69);
        double[] doubleArray72 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray69, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray72);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray72);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray72);
        double[] doubleArray77 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray72, (double) (-1L));
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray77);
        org.apache.commons.math.complex.Complex[] complexArray79 = fastFourierTransformer0.inversetransform2(doubleArray77);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction80 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray84 = fastFourierTransformer0.inversetransform2(univariateRealFunction80, 10.0d, (double) 10L, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(complexArray64);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(complexArray79);
    }

    @Test
    public void test1596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1596");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, 100.0d, (double) 'a', (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [100.0, 97.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1597");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform2(doubleArray29);
        double[] doubleArray35 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray35);
        double[] doubleArray38 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray35, (double) (byte) 100);
        double[] doubleArray40 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray35, (double) 0);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray35);
        org.apache.commons.math.complex.Complex[] complexArray42 = fastFourierTransformer0.transform2(doubleArray35);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray35);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray42);
    }

    @Test
    public void test1598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1598");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer16 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray21 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer16.transform2(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray23);
        org.apache.commons.math.complex.Complex[] complexArray28 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray29 = fastFourierTransformer8.transform2(complexArray28);
        double[] doubleArray34 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray34);
        double[] doubleArray37 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray34, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray38 = fastFourierTransformer8.transform(doubleArray34);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer0.transform(complexArray38);
        double[] doubleArray44 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray44);
        double[] doubleArray47 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray44, (double) 10.0f);
        double[] doubleArray49 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray47, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray50 = fastFourierTransformer0.transform2(doubleArray47);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer51 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray56 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray56);
        org.apache.commons.math.complex.Complex[] complexArray58 = fastFourierTransformer51.transform2(doubleArray56);
        org.apache.commons.math.complex.Complex[] complexArray60 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray58, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray58);
        org.apache.commons.math.complex.Complex[] complexArray63 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray58, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray65 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray58, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray66 = fastFourierTransformer0.transform(complexArray58);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray58);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray38);
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(complexArray66);
    }

    @Test
    public void test1599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1599");
        org.apache.commons.math.transform.FastFourierTransformer.verifyInterval((double) 1, (double) 10);
    }

    @Test
    public void test1600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1600");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray20, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray20);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray20, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray27 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray20, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray28 = fastFourierTransformer0.transform(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer29 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray34 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray34);
        org.apache.commons.math.complex.Complex[] complexArray36 = fastFourierTransformer29.transform2(doubleArray34);
        org.apache.commons.math.complex.Complex[] complexArray37 = fastFourierTransformer0.transform2(doubleArray34);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer38 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer39 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray44 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray44);
        org.apache.commons.math.complex.Complex[] complexArray46 = fastFourierTransformer39.transform2(doubleArray44);
        org.apache.commons.math.complex.Complex[] complexArray48 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray46, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray46);
        org.apache.commons.math.complex.Complex[] complexArray50 = fastFourierTransformer38.inversetransform(complexArray46);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer51 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray56 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray56);
        org.apache.commons.math.complex.Complex[] complexArray58 = fastFourierTransformer51.transform2(doubleArray56);
        org.apache.commons.math.complex.Complex[] complexArray59 = fastFourierTransformer38.transform(complexArray58);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer60 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray65 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray65);
        org.apache.commons.math.complex.Complex[] complexArray67 = fastFourierTransformer60.transform2(doubleArray65);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer68 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray73 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray73);
        org.apache.commons.math.complex.Complex[] complexArray75 = fastFourierTransformer68.transform2(doubleArray73);
        org.apache.commons.math.complex.Complex[] complexArray77 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray75, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray75);
        org.apache.commons.math.complex.Complex[] complexArray80 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray75, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray81 = fastFourierTransformer60.transform2(complexArray80);
        double[] doubleArray86 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray86);
        double[] doubleArray89 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray86, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray90 = fastFourierTransformer60.transform2(doubleArray89);
        org.apache.commons.math.complex.Complex[] complexArray91 = fastFourierTransformer38.inversetransform2(doubleArray89);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray89);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray89);
        org.apache.commons.math.complex.Complex[] complexArray94 = fastFourierTransformer0.transform(doubleArray89);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction95 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray99 = fastFourierTransformer0.inversetransform2(univariateRealFunction95, (double) (short) 0, (double) 10.0f, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray22);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray27);
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray36);
        org.junit.Assert.assertNotNull(complexArray37);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray46);
        org.junit.Assert.assertNotNull(complexArray48);
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray67);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray75);
        org.junit.Assert.assertNotNull(complexArray77);
        org.junit.Assert.assertNotNull(complexArray80);
        org.junit.Assert.assertNotNull(complexArray81);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray90);
        org.junit.Assert.assertNotNull(complexArray91);
        org.junit.Assert.assertNotNull(complexArray94);
    }

    @Test
    public void test1601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1601");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.transform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray16 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer11.transform2(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray18, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray18);
        org.apache.commons.math.complex.Complex[] complexArray23 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray18, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray18, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray26 = fastFourierTransformer0.inversetransform2(complexArray25);
        double[] doubleArray31 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray31);
        double[] doubleArray34 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray31, (double) 10.0f);
        double[] doubleArray36 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray34, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray37 = fastFourierTransformer0.transform(doubleArray34);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer38 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray43 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray43);
        org.apache.commons.math.complex.Complex[] complexArray45 = fastFourierTransformer38.transform2(doubleArray43);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer46 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray51 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray51);
        org.apache.commons.math.complex.Complex[] complexArray53 = fastFourierTransformer46.transform2(doubleArray51);
        org.apache.commons.math.complex.Complex[] complexArray55 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray53, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray53);
        org.apache.commons.math.complex.Complex[] complexArray58 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray53, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray59 = fastFourierTransformer38.transform2(complexArray58);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer60 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray65 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray65);
        double[] doubleArray68 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray65, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray68);
        org.apache.commons.math.complex.Complex[] complexArray70 = fastFourierTransformer60.transform(doubleArray68);
        org.apache.commons.math.complex.Complex[] complexArray71 = fastFourierTransformer38.transform(doubleArray68);
        double[] doubleArray76 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray76);
        double[] doubleArray79 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray76, (double) 10.0f);
        double[] doubleArray81 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray79, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray82 = fastFourierTransformer38.inversetransform(doubleArray81);
        org.apache.commons.math.complex.Complex[] complexArray83 = fastFourierTransformer0.inversetransform2(doubleArray81);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer84 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray89 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray89);
        org.apache.commons.math.complex.Complex[] complexArray91 = fastFourierTransformer84.transform2(doubleArray89);
        double[] doubleArray93 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray89, (double) (short) -1);
        org.apache.commons.math.complex.Complex[] complexArray94 = fastFourierTransformer0.inversetransform2(doubleArray89);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray89);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray26);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray37);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray70);
        org.junit.Assert.assertNotNull(complexArray71);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray82);
        org.junit.Assert.assertNotNull(complexArray83);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[1.0, -97.0, -1.0, -10.0]");
        org.junit.Assert.assertNotNull(complexArray91);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[1.0, -97.0, -1.0, -10.0]");
        org.junit.Assert.assertNotNull(complexArray94);
    }

    @Test
    public void test1602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1602");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer16 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray21 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer16.transform2(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray23);
        org.apache.commons.math.complex.Complex[] complexArray28 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray29 = fastFourierTransformer8.transform2(complexArray28);
        double[] doubleArray34 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray34);
        double[] doubleArray37 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray34, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray38 = fastFourierTransformer8.transform(doubleArray34);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer39 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray44 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray44);
        double[] doubleArray47 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray44, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray47);
        org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer39.transform(doubleArray47);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer50 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray55 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray55);
        org.apache.commons.math.complex.Complex[] complexArray57 = fastFourierTransformer50.transform2(doubleArray55);
        double[] doubleArray59 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray55, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray60 = fastFourierTransformer39.inversetransform(doubleArray55);
        org.apache.commons.math.complex.Complex[] complexArray61 = fastFourierTransformer8.transform2(doubleArray55);
        double[] doubleArray63 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray55, (double) (short) 100);
        org.apache.commons.math.complex.Complex[] complexArray64 = fastFourierTransformer0.transform2(doubleArray55);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction65 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray69 = fastFourierTransformer0.transform2(univariateRealFunction65, (double) 10L, (double) 100.0f, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray38);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(complexArray57);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(complexArray61);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(complexArray64);
    }

    @Test
    public void test1603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1603");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer22.transform(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer0.transform(doubleArray30);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer34 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray39 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer34.transform2(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray43 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray41, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray41);
        org.apache.commons.math.complex.Complex[] complexArray46 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray41, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray47 = fastFourierTransformer0.inversetransform2(complexArray41);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer48 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer49 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray54 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray54);
        org.apache.commons.math.complex.Complex[] complexArray56 = fastFourierTransformer49.transform2(doubleArray54);
        org.apache.commons.math.complex.Complex[] complexArray58 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray56, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray59 = fastFourierTransformer48.inversetransform(complexArray56);
        org.apache.commons.math.complex.Complex[] complexArray60 = fastFourierTransformer0.inversetransform2(complexArray59);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer61 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray66 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray66);
        org.apache.commons.math.complex.Complex[] complexArray68 = fastFourierTransformer61.transform2(doubleArray66);
        org.apache.commons.math.complex.Complex[] complexArray70 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray68, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray71 = fastFourierTransformer0.inversetransform2(complexArray68);
        org.apache.commons.math.complex.Complex[] complexArray73 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray68, (double) (short) 10);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray46);
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray56);
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(complexArray70);
        org.junit.Assert.assertNotNull(complexArray71);
        org.junit.Assert.assertNotNull(complexArray73);
    }

    @Test
    public void test1604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1604");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer23 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray28 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray28);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer23.transform2(doubleArray28);
        org.apache.commons.math.complex.Complex[] complexArray32 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray30, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray30);
        org.apache.commons.math.complex.Complex[] complexArray34 = fastFourierTransformer22.inversetransform(complexArray30);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer35 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray40 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray42 = fastFourierTransformer35.transform2(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray44 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray42, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray42);
        org.apache.commons.math.complex.Complex[] complexArray47 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray42, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray49 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray42, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray50 = fastFourierTransformer22.transform(complexArray42);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer0.transform(complexArray50);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer52 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray57 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray57);
        double[] doubleArray60 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray57, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray60);
        org.apache.commons.math.complex.Complex[] complexArray62 = fastFourierTransformer52.transform(doubleArray60);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer63 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray68 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray68);
        org.apache.commons.math.complex.Complex[] complexArray70 = fastFourierTransformer63.transform2(doubleArray68);
        org.apache.commons.math.complex.Complex[] complexArray72 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray70, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray70);
        org.apache.commons.math.complex.Complex[] complexArray75 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray70, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray77 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray70, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray78 = fastFourierTransformer52.inversetransform2(complexArray77);
        org.apache.commons.math.complex.Complex[] complexArray79 = fastFourierTransformer0.inversetransform2(complexArray77);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer80 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray85 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray85);
        org.apache.commons.math.complex.Complex[] complexArray87 = fastFourierTransformer80.transform2(doubleArray85);
        double[] doubleArray89 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray85, (double) (short) -1);
        double[] doubleArray91 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray85, (double) (-1.0f));
        org.apache.commons.math.complex.Complex[] complexArray92 = fastFourierTransformer0.inversetransform2(doubleArray85);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction93 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray97 = fastFourierTransformer0.inversetransform(univariateRealFunction93, (double) '#', (double) (-1L), (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [35.0, -1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray70);
        org.junit.Assert.assertNotNull(complexArray72);
        org.junit.Assert.assertNotNull(complexArray75);
        org.junit.Assert.assertNotNull(complexArray77);
        org.junit.Assert.assertNotNull(complexArray78);
        org.junit.Assert.assertNotNull(complexArray79);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray87);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray92);
    }

    @Test
    public void test1605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1605");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer16 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray21 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer16.transform2(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray23);
        org.apache.commons.math.complex.Complex[] complexArray28 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray29 = fastFourierTransformer8.transform2(complexArray28);
        double[] doubleArray34 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray34);
        double[] doubleArray37 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray34, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray38 = fastFourierTransformer8.transform(doubleArray34);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer0.transform(complexArray38);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer40 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray45 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray45);
        org.apache.commons.math.complex.Complex[] complexArray47 = fastFourierTransformer40.transform2(doubleArray45);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer48 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray53 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray53);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer48.transform2(doubleArray53);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer56 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray61 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer56.transform2(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray65 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray63, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray63);
        org.apache.commons.math.complex.Complex[] complexArray68 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray63, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray69 = fastFourierTransformer48.transform2(complexArray68);
        double[] doubleArray74 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray74);
        double[] doubleArray77 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray74, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray78 = fastFourierTransformer48.transform(doubleArray74);
        org.apache.commons.math.complex.Complex[] complexArray79 = fastFourierTransformer40.transform(complexArray78);
        double[] doubleArray84 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray84);
        double[] doubleArray87 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray84, (double) 10.0f);
        double[] doubleArray89 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray87, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray90 = fastFourierTransformer40.transform2(doubleArray87);
        double[] doubleArray92 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray87, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray93 = fastFourierTransformer0.transform(doubleArray92);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray93);
        org.apache.commons.math.complex.Complex[] complexArray96 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray93, (double) 100L);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray38);
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(complexArray69);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray78);
        org.junit.Assert.assertNotNull(complexArray79);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(complexArray90);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(complexArray93);
        org.junit.Assert.assertNotNull(complexArray96);
    }

    @Test
    public void test1606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1606");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer16 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray21 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer16.transform2(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray23);
        org.apache.commons.math.complex.Complex[] complexArray28 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray29 = fastFourierTransformer8.transform2(complexArray28);
        double[] doubleArray34 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray34);
        double[] doubleArray37 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray34, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray38 = fastFourierTransformer8.transform(doubleArray34);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer0.transform(complexArray38);
        org.apache.commons.math.complex.Complex[] complexArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray38, (double) 1L);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray38);
        java.lang.Class<?> wildcardClass43 = complexArray38.getClass();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray38);
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test1607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1607");
        org.apache.commons.math.transform.FastFourierTransformer.verifyInterval((double) (-1L), 0.0d);
    }

    @Test
    public void test1608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1608");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.transform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray16 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer11.transform2(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray18, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray18);
        org.apache.commons.math.complex.Complex[] complexArray23 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray18, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray18, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray26 = fastFourierTransformer0.inversetransform2(complexArray25);
        double[] doubleArray31 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray31);
        double[] doubleArray34 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray31, (double) 10.0f);
        double[] doubleArray36 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray34, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray37 = fastFourierTransformer0.transform(doubleArray34);
        org.apache.commons.math.complex.Complex[] complexArray39 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray37, (double) (short) 1);
        org.apache.commons.math.complex.Complex[] complexArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray37, 10.0d);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray26);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray37);
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray41);
    }

    @Test
    public void test1609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1609");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, (double) (short) 100, (double) (short) 100, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [100.0, 100.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1610");
        double[] doubleArray4 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray4);
        double[] doubleArray7 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray4, (double) 10.0f);
        double[] doubleArray9 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray7, (double) 10L);
        double[] doubleArray11 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray9, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[-1000.0, 97000.0, 1000.0, 10000.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1000.0, 97000.0, 1000.0, 10000.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-1000.0, 97000.0, 1000.0, 10000.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1000.0, 97000.0, 1000.0, 10000.0]");
    }

    @Test
    public void test1611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1611");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, (double) 100, (double) (short) 10, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1612");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer23 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray28 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray28);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer23.transform2(doubleArray28);
        org.apache.commons.math.complex.Complex[] complexArray32 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray30, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray30);
        org.apache.commons.math.complex.Complex[] complexArray34 = fastFourierTransformer22.inversetransform(complexArray30);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer35 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray40 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray42 = fastFourierTransformer35.transform2(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray44 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray42, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray42);
        org.apache.commons.math.complex.Complex[] complexArray47 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray42, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray49 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray42, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray50 = fastFourierTransformer22.transform(complexArray42);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer0.transform(complexArray50);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer52 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray57 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray57);
        double[] doubleArray60 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray57, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray60);
        org.apache.commons.math.complex.Complex[] complexArray62 = fastFourierTransformer52.transform(doubleArray60);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer63 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray68 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray68);
        org.apache.commons.math.complex.Complex[] complexArray70 = fastFourierTransformer63.transform2(doubleArray68);
        org.apache.commons.math.complex.Complex[] complexArray72 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray70, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray70);
        org.apache.commons.math.complex.Complex[] complexArray75 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray70, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray77 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray70, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray78 = fastFourierTransformer52.inversetransform2(complexArray77);
        org.apache.commons.math.complex.Complex[] complexArray79 = fastFourierTransformer0.inversetransform2(complexArray77);
        double[] doubleArray84 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray84);
        double[] doubleArray87 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray84, (double) (byte) 100);
        org.apache.commons.math.complex.Complex[] complexArray88 = fastFourierTransformer0.inversetransform(doubleArray84);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction89 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray93 = fastFourierTransformer0.transform2(univariateRealFunction89, 0.0d, (double) (short) -1, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [0.0, -1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray70);
        org.junit.Assert.assertNotNull(complexArray72);
        org.junit.Assert.assertNotNull(complexArray75);
        org.junit.Assert.assertNotNull(complexArray77);
        org.junit.Assert.assertNotNull(complexArray78);
        org.junit.Assert.assertNotNull(complexArray79);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray88);
    }

    @Test
    public void test1613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1613");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer22.transform(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer0.transform(doubleArray30);
        double[] doubleArray38 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray38);
        double[] doubleArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray38, (double) 10.0f);
        double[] doubleArray43 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray41, (double) 10L);
        double[] doubleArray45 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray41, (double) (byte) 100);
        double[] doubleArray47 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray45, (double) 0L);
        org.apache.commons.math.complex.Complex[] complexArray48 = fastFourierTransformer0.transform(doubleArray47);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray48);
    }

    @Test
    public void test1614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1614");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform(doubleArray26);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer31 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer32 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray37 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer32.transform2(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray39, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray39);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer31.inversetransform(complexArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer44 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray49 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer44.transform2(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer31.transform(complexArray51);
        org.apache.commons.math.complex.Complex[] complexArray53 = fastFourierTransformer0.transform2(complexArray52);
        double[] doubleArray58 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray58);
        double[] doubleArray61 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray58, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer0.inversetransform2(doubleArray61);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer64 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray69 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray69);
        org.apache.commons.math.complex.Complex[] complexArray71 = fastFourierTransformer64.transform2(doubleArray69);
        org.apache.commons.math.complex.Complex[] complexArray73 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray71, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray71);
        org.apache.commons.math.complex.Complex[] complexArray76 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray71, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray78 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray71, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray79 = fastFourierTransformer0.inversetransform2(complexArray71);
        org.apache.commons.math.complex.Complex[] complexArray81 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray79, (double) (short) 100);
        java.lang.Class<?> wildcardClass82 = complexArray79.getClass();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray71);
        org.junit.Assert.assertNotNull(complexArray73);
        org.junit.Assert.assertNotNull(complexArray76);
        org.junit.Assert.assertNotNull(complexArray78);
        org.junit.Assert.assertNotNull(complexArray79);
        org.junit.Assert.assertNotNull(complexArray81);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1615");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform(doubleArray26);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction31 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray35 = fastFourierTransformer0.inversetransform(univariateRealFunction31, (double) (short) -1, (double) (-1.0f), 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
    }

    @Test
    public void test1616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1616");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.transform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray16 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer11.transform2(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray18, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray18);
        org.apache.commons.math.complex.Complex[] complexArray23 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray18, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray18, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray26 = fastFourierTransformer0.inversetransform2(complexArray25);
        double[] doubleArray31 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray31);
        double[] doubleArray34 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray31, (double) 10.0f);
        double[] doubleArray36 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray34, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray37 = fastFourierTransformer0.transform(doubleArray34);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction38 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray42 = fastFourierTransformer0.inversetransform2(univariateRealFunction38, (double) (byte) 100, (double) (byte) 1, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [100.0, 1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray26);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray37);
    }

    @Test
    public void test1617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1617");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer21 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        org.apache.commons.math.complex.Complex[] complexArray28 = fastFourierTransformer21.transform2(doubleArray26);
        org.apache.commons.math.complex.Complex[] complexArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray28, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray28);
        org.apache.commons.math.complex.Complex[] complexArray33 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray28, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray34 = fastFourierTransformer13.transform2(complexArray33);
        double[] doubleArray39 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray39);
        double[] doubleArray42 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray39, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer13.transform(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray44 = fastFourierTransformer0.transform(doubleArray39);
        double[] doubleArray49 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray49);
        double[] doubleArray52 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray49, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray52);
        double[] doubleArray55 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray52, 10.0d);
        org.apache.commons.math.complex.Complex[] complexArray56 = fastFourierTransformer0.transform(doubleArray52);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray56);
    }

    @Test
    public void test1618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1618");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.transform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray16 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer11.transform2(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray18, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray18);
        org.apache.commons.math.complex.Complex[] complexArray23 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray18, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray18, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray26 = fastFourierTransformer0.inversetransform2(complexArray25);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer27 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer28 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray33 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray33);
        org.apache.commons.math.complex.Complex[] complexArray35 = fastFourierTransformer28.transform2(doubleArray33);
        org.apache.commons.math.complex.Complex[] complexArray37 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray35, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray35);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer27.inversetransform(complexArray35);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray35);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer0.inversetransform(complexArray35);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer42 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray47 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray47);
        org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer42.transform2(doubleArray47);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer50 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray55 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray55);
        org.apache.commons.math.complex.Complex[] complexArray57 = fastFourierTransformer50.transform2(doubleArray55);
        org.apache.commons.math.complex.Complex[] complexArray59 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray57, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray57);
        org.apache.commons.math.complex.Complex[] complexArray62 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray57, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer42.transform2(complexArray62);
        double[] doubleArray68 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray68);
        double[] doubleArray71 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray68, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray72 = fastFourierTransformer42.transform(doubleArray68);
        double[] doubleArray77 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray77);
        double[] doubleArray80 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray77, (double) 10.0f);
        double[] doubleArray82 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray80, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray83 = fastFourierTransformer42.transform2(doubleArray82);
        org.apache.commons.math.complex.Complex[] complexArray84 = fastFourierTransformer0.transform(complexArray83);
        double[] doubleArray89 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray89);
        double[] doubleArray92 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray89, (double) 10.0f);
        double[] doubleArray94 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray92, (double) 10L);
        double[] doubleArray96 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray94, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray97 = fastFourierTransformer0.inversetransform(doubleArray96);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray26);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray35);
        org.junit.Assert.assertNotNull(complexArray37);
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray57);
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray72);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray83);
        org.junit.Assert.assertNotNull(complexArray84);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-1000.0, 97000.0, 1000.0, 10000.0]");
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[-1000.0, 97000.0, 1000.0, 10000.0]");
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[-1000.0, 97000.0, 1000.0, 10000.0]");
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray96), "[-1000.0, 97000.0, 1000.0, 10000.0]");
        org.junit.Assert.assertNotNull(complexArray97);
    }

    @Test
    public void test1619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1619");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.transform.FastFourierTransformer.verifyInterval(100.0d, 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [100.0, 0.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1620");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, 1.0d, (double) (short) 100, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1621");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer16 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray21 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer16.transform2(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray23);
        org.apache.commons.math.complex.Complex[] complexArray28 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray29 = fastFourierTransformer8.transform2(complexArray28);
        double[] doubleArray34 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray34);
        double[] doubleArray37 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray34, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray38 = fastFourierTransformer8.transform(doubleArray34);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer0.transform(complexArray38);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer40 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray45 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray45);
        org.apache.commons.math.complex.Complex[] complexArray47 = fastFourierTransformer40.transform2(doubleArray45);
        org.apache.commons.math.complex.Complex[] complexArray49 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray47, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray51 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray49, (double) (byte) 100);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer0.inversetransform(complexArray49);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer53 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray58 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray58);
        org.apache.commons.math.complex.Complex[] complexArray60 = fastFourierTransformer53.transform2(doubleArray58);
        org.apache.commons.math.complex.Complex[] complexArray62 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray60, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray60);
        org.apache.commons.math.complex.Complex[] complexArray65 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray60, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray67 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray60, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray68 = fastFourierTransformer0.inversetransform(complexArray60);
        double[] doubleArray73 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray73);
        double[] doubleArray76 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray73, (double) 10.0f);
        double[] doubleArray78 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray76, (double) 10L);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray76);
        org.apache.commons.math.complex.Complex[] complexArray80 = fastFourierTransformer0.inversetransform(doubleArray76);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer81 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray86 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray86);
        double[] doubleArray89 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray86, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray89);
        org.apache.commons.math.complex.Complex[] complexArray91 = fastFourierTransformer81.transform(doubleArray89);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray91);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray91);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray91);
        org.apache.commons.math.complex.Complex[] complexArray95 = fastFourierTransformer0.inversetransform2(complexArray91);
        org.apache.commons.math.complex.Complex[] complexArray97 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray91, (double) (short) 0);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray38);
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(complexArray67);
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray80);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray91);
        org.junit.Assert.assertNotNull(complexArray95);
        org.junit.Assert.assertNotNull(complexArray97);
    }

    @Test
    public void test1622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1622");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.transform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray16 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer11.transform2(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray18, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray18);
        org.apache.commons.math.complex.Complex[] complexArray23 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray18, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray18, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray26 = fastFourierTransformer0.inversetransform2(complexArray25);
        double[] doubleArray31 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray31);
        double[] doubleArray34 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray31, (double) 10.0f);
        double[] doubleArray36 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray34, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray37 = fastFourierTransformer0.transform(doubleArray34);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer38 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer39 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray44 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray44);
        org.apache.commons.math.complex.Complex[] complexArray46 = fastFourierTransformer39.transform2(doubleArray44);
        org.apache.commons.math.complex.Complex[] complexArray48 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray46, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray46);
        org.apache.commons.math.complex.Complex[] complexArray50 = fastFourierTransformer38.inversetransform(complexArray46);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer51 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray56 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray56);
        org.apache.commons.math.complex.Complex[] complexArray58 = fastFourierTransformer51.transform2(doubleArray56);
        org.apache.commons.math.complex.Complex[] complexArray59 = fastFourierTransformer38.transform(complexArray58);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer60 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer61 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray66 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray66);
        org.apache.commons.math.complex.Complex[] complexArray68 = fastFourierTransformer61.transform2(doubleArray66);
        org.apache.commons.math.complex.Complex[] complexArray70 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray68, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray68);
        org.apache.commons.math.complex.Complex[] complexArray72 = fastFourierTransformer60.inversetransform(complexArray68);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer73 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray78 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray78);
        org.apache.commons.math.complex.Complex[] complexArray80 = fastFourierTransformer73.transform2(doubleArray78);
        org.apache.commons.math.complex.Complex[] complexArray81 = fastFourierTransformer60.transform(complexArray80);
        org.apache.commons.math.complex.Complex[] complexArray82 = fastFourierTransformer38.inversetransform(complexArray80);
        org.apache.commons.math.complex.Complex[] complexArray84 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray80, 100.0d);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray80);
        org.apache.commons.math.complex.Complex[] complexArray86 = fastFourierTransformer0.transform2(complexArray80);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction87 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray91 = fastFourierTransformer0.transform(univariateRealFunction87, (double) 1L, (double) (short) 10, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray26);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray37);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray46);
        org.junit.Assert.assertNotNull(complexArray48);
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(complexArray70);
        org.junit.Assert.assertNotNull(complexArray72);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray80);
        org.junit.Assert.assertNotNull(complexArray81);
        org.junit.Assert.assertNotNull(complexArray82);
        org.junit.Assert.assertNotNull(complexArray84);
        org.junit.Assert.assertNotNull(complexArray86);
    }

    @Test
    public void test1623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1623");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer16 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray21 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer16.transform2(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray23);
        org.apache.commons.math.complex.Complex[] complexArray28 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray29 = fastFourierTransformer8.transform2(complexArray28);
        double[] doubleArray34 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray34);
        double[] doubleArray37 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray34, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray38 = fastFourierTransformer8.transform(doubleArray34);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer0.transform(complexArray38);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer40 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray45 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray45);
        org.apache.commons.math.complex.Complex[] complexArray47 = fastFourierTransformer40.transform2(doubleArray45);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer48 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray53 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray53);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer48.transform2(doubleArray53);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer56 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray61 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer56.transform2(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray65 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray63, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray63);
        org.apache.commons.math.complex.Complex[] complexArray68 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray63, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray69 = fastFourierTransformer48.transform2(complexArray68);
        double[] doubleArray74 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray74);
        double[] doubleArray77 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray74, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray78 = fastFourierTransformer48.transform(doubleArray74);
        org.apache.commons.math.complex.Complex[] complexArray79 = fastFourierTransformer40.transform(complexArray78);
        double[] doubleArray84 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray84);
        double[] doubleArray87 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray84, (double) 10.0f);
        double[] doubleArray89 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray87, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray90 = fastFourierTransformer40.transform2(doubleArray87);
        org.apache.commons.math.complex.Complex[] complexArray91 = fastFourierTransformer0.inversetransform(complexArray90);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction92 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray96 = fastFourierTransformer0.inversetransform2(univariateRealFunction92, (double) 100L, (double) (byte) 1, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [100.0, 1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray38);
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(complexArray69);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray78);
        org.junit.Assert.assertNotNull(complexArray79);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray90);
        org.junit.Assert.assertNotNull(complexArray91);
    }

    @Test
    public void test1624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1624");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer16 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray21 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer16.transform2(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray23);
        org.apache.commons.math.complex.Complex[] complexArray28 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray29 = fastFourierTransformer8.transform2(complexArray28);
        double[] doubleArray34 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray34);
        double[] doubleArray37 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray34, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray38 = fastFourierTransformer8.transform(doubleArray34);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer0.transform(complexArray38);
        double[] doubleArray44 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray44);
        double[] doubleArray47 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray44, (double) 10.0f);
        double[] doubleArray49 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray47, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray50 = fastFourierTransformer0.transform2(doubleArray47);
        org.apache.commons.math.complex.Complex[] complexArray52 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray50, (double) (byte) -1);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray38);
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(complexArray52);
    }

    @Test
    public void test1625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1625");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer22.transform(doubleArray30);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer33 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray38 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray38);
        org.apache.commons.math.complex.Complex[] complexArray40 = fastFourierTransformer33.transform2(doubleArray38);
        org.apache.commons.math.complex.Complex[] complexArray42 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray40, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray40);
        org.apache.commons.math.complex.Complex[] complexArray45 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray40, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray47 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray40, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray48 = fastFourierTransformer22.inversetransform2(complexArray47);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer49 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer50 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray55 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray55);
        org.apache.commons.math.complex.Complex[] complexArray57 = fastFourierTransformer50.transform2(doubleArray55);
        org.apache.commons.math.complex.Complex[] complexArray59 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray57, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray57);
        org.apache.commons.math.complex.Complex[] complexArray61 = fastFourierTransformer49.inversetransform(complexArray57);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray57);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer22.inversetransform(complexArray57);
        org.apache.commons.math.complex.Complex[] complexArray64 = fastFourierTransformer0.inversetransform2(complexArray57);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray57);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray40);
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(complexArray48);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray57);
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(complexArray61);
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(complexArray64);
    }

    @Test
    public void test1626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1626");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer16 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray21 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer16.transform2(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray23);
        org.apache.commons.math.complex.Complex[] complexArray28 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray29 = fastFourierTransformer8.transform2(complexArray28);
        double[] doubleArray34 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray34);
        double[] doubleArray37 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray34, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray38 = fastFourierTransformer8.transform(doubleArray34);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer0.transform(complexArray38);
        double[] doubleArray44 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray44);
        double[] doubleArray47 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray44, (double) 10.0f);
        double[] doubleArray49 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray47, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray50 = fastFourierTransformer0.transform2(doubleArray47);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer51 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray56 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray56);
        org.apache.commons.math.complex.Complex[] complexArray58 = fastFourierTransformer51.transform2(doubleArray56);
        double[] doubleArray60 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray56, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray61 = fastFourierTransformer0.transform(doubleArray56);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray61);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray61);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray61);
        org.apache.commons.math.complex.Complex[] complexArray66 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray61, 10.0d);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray38);
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray61);
        org.junit.Assert.assertNotNull(complexArray66);
    }

    @Test
    public void test1627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1627");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.transform(doubleArray8);
        double[] doubleArray15 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray15);
        double[] doubleArray18 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray15, (double) (byte) 100);
        double[] doubleArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray15, (double) 0);
        double[] doubleArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray15, 10.0d);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer0.transform2(doubleArray22);
        java.lang.Class<?> wildcardClass24 = complexArray23.getClass();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test1628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1628");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer22.transform(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer0.transform(doubleArray30);
        double[] doubleArray38 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray38);
        double[] doubleArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray38, (double) 10.0f);
        double[] doubleArray43 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray41, (double) 10L);
        double[] doubleArray45 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray41, (double) (byte) 100);
        double[] doubleArray47 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray45, (double) 0L);
        org.apache.commons.math.complex.Complex[] complexArray48 = fastFourierTransformer0.transform(doubleArray47);
        double[] doubleArray50 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray47, (double) ' ');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray50);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray48);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-0.0, 0.0, 0.0, 0.0]");
    }

    @Test
    public void test1629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1629");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer21 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        org.apache.commons.math.complex.Complex[] complexArray28 = fastFourierTransformer21.transform2(doubleArray26);
        org.apache.commons.math.complex.Complex[] complexArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray28, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray28);
        org.apache.commons.math.complex.Complex[] complexArray33 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray28, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray34 = fastFourierTransformer13.transform2(complexArray33);
        double[] doubleArray39 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray39);
        double[] doubleArray42 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray39, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer13.transform(doubleArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer44 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray49 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray49);
        double[] doubleArray52 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray49, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray52);
        org.apache.commons.math.complex.Complex[] complexArray54 = fastFourierTransformer44.transform(doubleArray52);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer55 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray60 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray60);
        org.apache.commons.math.complex.Complex[] complexArray62 = fastFourierTransformer55.transform2(doubleArray60);
        double[] doubleArray64 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray60, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray65 = fastFourierTransformer44.inversetransform(doubleArray60);
        org.apache.commons.math.complex.Complex[] complexArray66 = fastFourierTransformer13.transform2(doubleArray60);
        double[] doubleArray68 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray60, (double) (short) 100);
        org.apache.commons.math.complex.Complex[] complexArray69 = fastFourierTransformer0.transform2(doubleArray68);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction70 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray74 = fastFourierTransformer0.transform(univariateRealFunction70, (double) 100L, (double) (short) -1, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [100.0, -1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray54);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(complexArray66);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(complexArray69);
    }

    @Test
    public void test1630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1630");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform2(doubleArray29);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer31 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer32 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray37 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer32.transform2(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray39, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray39);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer31.inversetransform(complexArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer44 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray49 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer44.transform2(doubleArray49);
        double[] doubleArray53 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray49, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray54 = fastFourierTransformer31.inversetransform(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer0.transform2(complexArray54);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer56 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer57 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray62 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray62);
        org.apache.commons.math.complex.Complex[] complexArray64 = fastFourierTransformer57.transform2(doubleArray62);
        org.apache.commons.math.complex.Complex[] complexArray66 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray64, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray64);
        org.apache.commons.math.complex.Complex[] complexArray68 = fastFourierTransformer56.inversetransform(complexArray64);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer69 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray74 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray74);
        org.apache.commons.math.complex.Complex[] complexArray76 = fastFourierTransformer69.transform2(doubleArray74);
        org.apache.commons.math.complex.Complex[] complexArray78 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray76, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray76);
        org.apache.commons.math.complex.Complex[] complexArray81 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray76, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray83 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray76, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray84 = fastFourierTransformer56.transform(complexArray76);
        org.apache.commons.math.complex.Complex[] complexArray85 = fastFourierTransformer0.transform(complexArray84);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction86 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray90 = fastFourierTransformer0.inversetransform(univariateRealFunction86, (double) (byte) 0, (double) 1, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray54);
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray64);
        org.junit.Assert.assertNotNull(complexArray66);
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray76);
        org.junit.Assert.assertNotNull(complexArray78);
        org.junit.Assert.assertNotNull(complexArray81);
        org.junit.Assert.assertNotNull(complexArray83);
        org.junit.Assert.assertNotNull(complexArray84);
        org.junit.Assert.assertNotNull(complexArray85);
    }

    @Test
    public void test1631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1631");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer9 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray14 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray14);
        org.apache.commons.math.complex.Complex[] complexArray16 = fastFourierTransformer9.transform2(doubleArray14);
        org.apache.commons.math.complex.Complex[] complexArray18 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray16, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray16);
        org.apache.commons.math.complex.Complex[] complexArray21 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray16, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray22 = fastFourierTransformer1.transform2(complexArray21);
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray31 = fastFourierTransformer1.transform(doubleArray27);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray31);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer0.transform2(complexArray31);
        double[] doubleArray38 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray38);
        double[] doubleArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray38, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray41);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer0.inversetransform2(doubleArray41);
        double[] doubleArray48 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray48);
        double[] doubleArray51 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray48, (double) 10.0f);
        double[] doubleArray53 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray51, (double) 10L);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray51);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer0.transform(doubleArray51);
        double[] doubleArray60 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray60);
        double[] doubleArray63 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray60, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray63);
        double[] doubleArray66 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray63, 10.0d);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray66);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray66);
        org.apache.commons.math.complex.Complex[] complexArray69 = fastFourierTransformer0.transform2(doubleArray66);
        java.lang.Class<?> wildcardClass70 = doubleArray66.getClass();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray16);
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(complexArray22);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray31);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray69);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test1632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1632");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform(doubleArray26);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer31 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer32 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray37 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer32.transform2(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray39, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray39);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer31.inversetransform(complexArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer44 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray49 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer44.transform2(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer31.transform(complexArray51);
        org.apache.commons.math.complex.Complex[] complexArray53 = fastFourierTransformer0.transform2(complexArray52);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer54 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer55 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray60 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray60);
        org.apache.commons.math.complex.Complex[] complexArray62 = fastFourierTransformer55.transform2(doubleArray60);
        org.apache.commons.math.complex.Complex[] complexArray64 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray62, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray62);
        org.apache.commons.math.complex.Complex[] complexArray66 = fastFourierTransformer54.inversetransform(complexArray62);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer67 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray72 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray72);
        org.apache.commons.math.complex.Complex[] complexArray74 = fastFourierTransformer67.transform2(doubleArray72);
        org.apache.commons.math.complex.Complex[] complexArray75 = fastFourierTransformer54.transform(complexArray74);
        org.apache.commons.math.complex.Complex[] complexArray76 = fastFourierTransformer0.transform2(complexArray75);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction77 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray81 = fastFourierTransformer0.transform2(univariateRealFunction77, (double) 0L, (double) 10.0f, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(complexArray64);
        org.junit.Assert.assertNotNull(complexArray66);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray74);
        org.junit.Assert.assertNotNull(complexArray75);
        org.junit.Assert.assertNotNull(complexArray76);
    }

    @Test
    public void test1633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1633");
        org.apache.commons.math.transform.FastFourierTransformer.verifyInterval((double) (-1L), (double) 0);
    }

    @Test
    public void test1634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1634");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        double[] doubleArray9 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray6, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray9);
        org.apache.commons.math.complex.Complex[] complexArray11 = fastFourierTransformer1.inversetransform(doubleArray9);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.transform2(complexArray11);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer21 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        org.apache.commons.math.complex.Complex[] complexArray28 = fastFourierTransformer21.transform2(doubleArray26);
        org.apache.commons.math.complex.Complex[] complexArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray28, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray28);
        org.apache.commons.math.complex.Complex[] complexArray33 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray28, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray34 = fastFourierTransformer13.transform2(complexArray33);
        double[] doubleArray39 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray39);
        double[] doubleArray42 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray39, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer13.transform2(doubleArray42);
        double[] doubleArray48 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray48);
        double[] doubleArray51 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray48, (double) (byte) 100);
        double[] doubleArray53 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray48, (double) 0);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray48);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer13.transform2(doubleArray48);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray48);
        double[] doubleArray58 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray48, (double) (short) 10);
        org.apache.commons.math.complex.Complex[] complexArray59 = fastFourierTransformer0.transform(doubleArray58);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction60 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray64 = fastFourierTransformer0.transform(univariateRealFunction60, (double) (byte) 1, 10.0d, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray11);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray59);
    }

    @Test
    public void test1635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1635");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.transform.FastFourierTransformer.verifyInterval((double) 1, (double) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [1.0, 0.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1636");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer0.transform(complexArray15);
        double[] doubleArray23 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray23);
        double[] doubleArray26 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray23, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray31 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) (short) 1);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer0.inversetransform2(doubleArray26);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray32);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray32);
    }

    @Test
    public void test1637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1637");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer23 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray28 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray28);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer23.transform2(doubleArray28);
        org.apache.commons.math.complex.Complex[] complexArray32 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray30, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray30);
        org.apache.commons.math.complex.Complex[] complexArray34 = fastFourierTransformer22.inversetransform(complexArray30);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer35 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray40 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray42 = fastFourierTransformer35.transform2(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer22.transform(complexArray42);
        org.apache.commons.math.complex.Complex[] complexArray44 = fastFourierTransformer0.inversetransform(complexArray42);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer45 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray50 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray50);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer45.transform2(doubleArray50);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer53 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray58 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray58);
        org.apache.commons.math.complex.Complex[] complexArray60 = fastFourierTransformer53.transform2(doubleArray58);
        org.apache.commons.math.complex.Complex[] complexArray62 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray60, (double) 'a');
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer45.transform(complexArray60);
        org.apache.commons.math.complex.Complex[] complexArray64 = fastFourierTransformer0.inversetransform(complexArray60);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction65 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray69 = fastFourierTransformer0.inversetransform(univariateRealFunction65, (double) 1L, 10.0d, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(complexArray64);
    }

    @Test
    public void test1638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1638");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer22.transform(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer0.transform(doubleArray30);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer34 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray39 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer34.transform2(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray43 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray41, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray41);
        org.apache.commons.math.complex.Complex[] complexArray46 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray41, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray47 = fastFourierTransformer0.inversetransform2(complexArray41);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer48 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer49 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray54 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray54);
        org.apache.commons.math.complex.Complex[] complexArray56 = fastFourierTransformer49.transform2(doubleArray54);
        org.apache.commons.math.complex.Complex[] complexArray58 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray56, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray59 = fastFourierTransformer48.inversetransform(complexArray56);
        org.apache.commons.math.complex.Complex[] complexArray60 = fastFourierTransformer0.inversetransform2(complexArray59);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer61 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray66 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray66);
        org.apache.commons.math.complex.Complex[] complexArray68 = fastFourierTransformer61.transform2(doubleArray66);
        org.apache.commons.math.complex.Complex[] complexArray70 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray68, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray71 = fastFourierTransformer0.inversetransform2(complexArray68);
        double[] doubleArray72 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray73 = fastFourierTransformer0.inversetransform2(doubleArray72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray46);
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray56);
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(complexArray70);
        org.junit.Assert.assertNotNull(complexArray71);
    }

    @Test
    public void test1639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1639");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer9 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray14 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray14);
        org.apache.commons.math.complex.Complex[] complexArray16 = fastFourierTransformer9.transform2(doubleArray14);
        org.apache.commons.math.complex.Complex[] complexArray18 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray16, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray16);
        org.apache.commons.math.complex.Complex[] complexArray21 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray16, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray22 = fastFourierTransformer1.transform2(complexArray21);
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray31 = fastFourierTransformer1.transform(doubleArray27);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray31);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer0.transform2(complexArray31);
        double[] doubleArray38 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray38);
        double[] doubleArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray38, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray41);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer0.inversetransform2(doubleArray41);
        double[] doubleArray48 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray48);
        double[] doubleArray51 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray48, (double) 10.0f);
        double[] doubleArray53 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray51, (double) 10L);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray51);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer0.transform(doubleArray51);
        double[] doubleArray60 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray60);
        double[] doubleArray63 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray60, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray63);
        double[] doubleArray66 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray63, 10.0d);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray66);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray66);
        org.apache.commons.math.complex.Complex[] complexArray69 = fastFourierTransformer0.transform2(doubleArray66);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction70 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray74 = fastFourierTransformer0.transform2(univariateRealFunction70, 0.0d, (double) 0L, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [0.0, 0.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray16);
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(complexArray22);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray31);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray69);
    }

    @Test
    public void test1640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1640");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.transform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray16 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer11.transform2(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray18, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray18);
        org.apache.commons.math.complex.Complex[] complexArray23 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray18, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray18, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray26 = fastFourierTransformer0.inversetransform2(complexArray25);
        double[] doubleArray31 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray31);
        double[] doubleArray34 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray31, (double) 10.0f);
        double[] doubleArray36 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray34, (double) 10L);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray36);
        double[] doubleArray39 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray36, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray40 = fastFourierTransformer0.inversetransform(doubleArray39);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction41 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray45 = fastFourierTransformer0.inversetransform(univariateRealFunction41, (double) (byte) 1, (double) 'a', (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray26);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(complexArray40);
    }

    @Test
    public void test1641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1641");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, (double) 1.0f, (double) (short) 0, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [1.0, 0.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1642");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, (double) (-1L), 100.0d, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1643");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer9 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray14 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray14);
        org.apache.commons.math.complex.Complex[] complexArray16 = fastFourierTransformer9.transform2(doubleArray14);
        org.apache.commons.math.complex.Complex[] complexArray18 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray16, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray16);
        org.apache.commons.math.complex.Complex[] complexArray21 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray16, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray22 = fastFourierTransformer1.transform2(complexArray21);
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray31 = fastFourierTransformer1.transform(doubleArray27);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray31);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer0.transform2(complexArray31);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer34 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray39 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer34.transform2(doubleArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer42 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray47 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray47);
        org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer42.transform2(doubleArray47);
        org.apache.commons.math.complex.Complex[] complexArray51 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray49, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray49);
        org.apache.commons.math.complex.Complex[] complexArray54 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray49, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer34.transform2(complexArray54);
        double[] doubleArray60 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray60);
        double[] doubleArray63 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray60, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray64 = fastFourierTransformer34.transform2(doubleArray63);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer65 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer66 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray71 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray71);
        org.apache.commons.math.complex.Complex[] complexArray73 = fastFourierTransformer66.transform2(doubleArray71);
        org.apache.commons.math.complex.Complex[] complexArray75 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray73, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray73);
        org.apache.commons.math.complex.Complex[] complexArray77 = fastFourierTransformer65.inversetransform(complexArray73);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer78 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray83 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray83);
        org.apache.commons.math.complex.Complex[] complexArray85 = fastFourierTransformer78.transform2(doubleArray83);
        double[] doubleArray87 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray83, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray88 = fastFourierTransformer65.inversetransform(doubleArray83);
        org.apache.commons.math.complex.Complex[] complexArray89 = fastFourierTransformer34.transform2(complexArray88);
        org.apache.commons.math.complex.Complex[] complexArray91 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray89, (double) 100.0f);
        org.apache.commons.math.complex.Complex[] complexArray92 = fastFourierTransformer0.transform(complexArray89);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction93 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray97 = fastFourierTransformer0.inversetransform2(univariateRealFunction93, 10.0d, 0.0d, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [10.0, 0.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray16);
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(complexArray22);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray31);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray54);
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray64);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray73);
        org.junit.Assert.assertNotNull(complexArray75);
        org.junit.Assert.assertNotNull(complexArray77);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray85);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray88);
        org.junit.Assert.assertNotNull(complexArray89);
        org.junit.Assert.assertNotNull(complexArray91);
        org.junit.Assert.assertNotNull(complexArray92);
    }

    @Test
    public void test1644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1644");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer22.transform(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer0.transform(doubleArray30);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer34 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray39 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer34.transform2(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray43 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray41, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray41);
        org.apache.commons.math.complex.Complex[] complexArray46 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray41, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray47 = fastFourierTransformer0.inversetransform2(complexArray41);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer48 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray53 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray53);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer48.transform2(doubleArray53);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer56 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray61 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer56.transform2(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray65 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray63, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray63);
        org.apache.commons.math.complex.Complex[] complexArray68 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray63, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray69 = fastFourierTransformer48.transform2(complexArray68);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer70 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray75 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray75);
        double[] doubleArray78 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray75, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray78);
        org.apache.commons.math.complex.Complex[] complexArray80 = fastFourierTransformer70.transform(doubleArray78);
        org.apache.commons.math.complex.Complex[] complexArray81 = fastFourierTransformer48.transform(doubleArray78);
        org.apache.commons.math.complex.Complex[] complexArray82 = fastFourierTransformer0.inversetransform2(doubleArray78);
        double[] doubleArray87 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray87);
        double[] doubleArray90 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray87, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray90);
        org.apache.commons.math.complex.Complex[] complexArray92 = fastFourierTransformer0.inversetransform2(doubleArray90);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction93 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray97 = fastFourierTransformer0.transform(univariateRealFunction93, (double) 'a', (double) 10.0f, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [97.0, 10.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray46);
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(complexArray69);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray80);
        org.junit.Assert.assertNotNull(complexArray81);
        org.junit.Assert.assertNotNull(complexArray82);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray92);
    }

    @Test
    public void test1645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1645");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray20, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray20);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray20, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray27 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray20, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray28 = fastFourierTransformer0.transform(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer29 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray34 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray34);
        org.apache.commons.math.complex.Complex[] complexArray36 = fastFourierTransformer29.transform2(doubleArray34);
        org.apache.commons.math.complex.Complex[] complexArray37 = fastFourierTransformer0.transform2(doubleArray34);
        double[] doubleArray39 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray34, (double) ' ');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray34);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray22);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray27);
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-32.0, 3104.0, 32.0, 320.0]");
        org.junit.Assert.assertNotNull(complexArray36);
        org.junit.Assert.assertNotNull(complexArray37);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-32.0, 3104.0, 32.0, 320.0]");
    }

    @Test
    public void test1646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1646");
        org.apache.commons.math.transform.FastFourierTransformer.verifyInterval((-1.0d), 0.0d);
    }

    @Test
    public void test1647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1647");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer23 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray28 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray28);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer23.transform2(doubleArray28);
        org.apache.commons.math.complex.Complex[] complexArray32 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray30, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray30);
        org.apache.commons.math.complex.Complex[] complexArray34 = fastFourierTransformer22.inversetransform(complexArray30);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer35 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray40 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray42 = fastFourierTransformer35.transform2(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray44 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray42, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray42);
        org.apache.commons.math.complex.Complex[] complexArray47 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray42, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray49 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray42, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray50 = fastFourierTransformer22.transform(complexArray42);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer0.transform(complexArray50);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer52 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray57 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray57);
        org.apache.commons.math.complex.Complex[] complexArray59 = fastFourierTransformer52.transform2(doubleArray57);
        org.apache.commons.math.complex.Complex[] complexArray61 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray59, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray59);
        org.apache.commons.math.complex.Complex[] complexArray64 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray59, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray65 = fastFourierTransformer0.transform(complexArray64);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer66 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray71 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray71);
        org.apache.commons.math.complex.Complex[] complexArray73 = fastFourierTransformer66.transform2(doubleArray71);
        org.apache.commons.math.complex.Complex[] complexArray75 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray73, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray73);
        org.apache.commons.math.complex.Complex[] complexArray78 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray73, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray80 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray73, (double) '#');
        org.apache.commons.math.complex.Complex[] complexArray81 = fastFourierTransformer0.transform(complexArray73);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction82 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray86 = fastFourierTransformer0.transform(univariateRealFunction82, (double) (short) 0, (double) (-1L), (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(complexArray61);
        org.junit.Assert.assertNotNull(complexArray64);
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray73);
        org.junit.Assert.assertNotNull(complexArray75);
        org.junit.Assert.assertNotNull(complexArray78);
        org.junit.Assert.assertNotNull(complexArray80);
        org.junit.Assert.assertNotNull(complexArray81);
    }

    @Test
    public void test1648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1648");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        double[] doubleArray17 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray17);
        double[] doubleArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray17, (double) 10.0f);
        double[] doubleArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray20, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer0.transform(doubleArray20);
        double[] doubleArray28 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray28);
        double[] doubleArray31 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray28, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray31);
        double[] doubleArray34 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray31, 10.0d);
        org.apache.commons.math.complex.Complex[] complexArray35 = fastFourierTransformer0.transform2(doubleArray31);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer36 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray41 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray41);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer36.transform2(doubleArray41);
        org.apache.commons.math.complex.Complex[] complexArray45 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray43, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray43);
        org.apache.commons.math.complex.Complex[] complexArray48 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray43, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer0.transform2(complexArray43);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction50 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray54 = fastFourierTransformer0.transform(univariateRealFunction50, 10.0d, (double) 10, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [10.0, 10.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray35);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(complexArray48);
        org.junit.Assert.assertNotNull(complexArray49);
    }

    @Test
    public void test1649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1649");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer16 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray21 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer16.transform2(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray23);
        org.apache.commons.math.complex.Complex[] complexArray28 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray29 = fastFourierTransformer8.transform2(complexArray28);
        double[] doubleArray34 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray34);
        double[] doubleArray37 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray34, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray38 = fastFourierTransformer8.transform(doubleArray34);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer0.transform(complexArray38);
        double[] doubleArray44 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray44);
        double[] doubleArray47 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray44, (double) 10.0f);
        double[] doubleArray49 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray47, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray50 = fastFourierTransformer0.transform2(doubleArray47);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer51 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray56 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray56);
        org.apache.commons.math.complex.Complex[] complexArray58 = fastFourierTransformer51.transform2(doubleArray56);
        double[] doubleArray60 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray56, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray61 = fastFourierTransformer0.transform(doubleArray56);
        double[] doubleArray66 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray66);
        double[] doubleArray69 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray66, (double) 10.0f);
        double[] doubleArray71 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray69, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray72 = fastFourierTransformer0.transform(doubleArray69);
        java.lang.Class<?> wildcardClass73 = fastFourierTransformer0.getClass();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray38);
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray61);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray72);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1650");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        org.apache.commons.math.complex.Complex[] complexArray29 = fastFourierTransformer22.transform2(doubleArray27);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer30 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray35 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray35);
        org.apache.commons.math.complex.Complex[] complexArray37 = fastFourierTransformer30.transform2(doubleArray35);
        org.apache.commons.math.complex.Complex[] complexArray39 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray37, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray37);
        org.apache.commons.math.complex.Complex[] complexArray42 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray37, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer22.transform2(complexArray42);
        org.apache.commons.math.complex.Complex[] complexArray45 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray42, (double) (byte) 1);
        org.apache.commons.math.complex.Complex[] complexArray46 = fastFourierTransformer0.transform(complexArray42);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer47 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray52 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray52);
        double[] doubleArray55 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray52, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray55);
        org.apache.commons.math.complex.Complex[] complexArray57 = fastFourierTransformer47.transform(doubleArray55);
        org.apache.commons.math.complex.Complex[] complexArray58 = fastFourierTransformer0.inversetransform2(doubleArray55);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer59 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray64 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray64);
        double[] doubleArray67 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray64, (double) 10.0f);
        double[] doubleArray69 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray67, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray70 = fastFourierTransformer59.inversetransform(doubleArray69);
        double[] doubleArray72 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray69, (double) (short) 0);
        org.apache.commons.math.complex.Complex[] complexArray73 = fastFourierTransformer0.transform2(doubleArray72);
        double[] doubleArray78 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray78);
        double[] doubleArray81 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray78, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray81);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray81);
        double[] doubleArray85 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray81, (double) (byte) 10);
        org.apache.commons.math.complex.Complex[] complexArray86 = fastFourierTransformer0.transform2(doubleArray81);
        double[] doubleArray91 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray91);
        double[] doubleArray94 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray91, 0.0d);
        double[] doubleArray96 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray94, (double) (byte) 100);
        org.apache.commons.math.complex.Complex[] complexArray97 = fastFourierTransformer0.inversetransform2(doubleArray94);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray97);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray37);
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(complexArray46);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray57);
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray70);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray73);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray86);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray96), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray97);
    }

    @Test
    public void test1651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1651");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, (double) (short) -1, (double) 10.0f, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1652");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, 100.0d, (double) (byte) -1, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [100.0, -1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1653");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer23 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray28 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray28);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer23.transform2(doubleArray28);
        org.apache.commons.math.complex.Complex[] complexArray32 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray30, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray30);
        org.apache.commons.math.complex.Complex[] complexArray34 = fastFourierTransformer22.inversetransform(complexArray30);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer35 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray40 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray42 = fastFourierTransformer35.transform2(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray44 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray42, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray42);
        org.apache.commons.math.complex.Complex[] complexArray47 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray42, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray49 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray42, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray50 = fastFourierTransformer22.transform(complexArray42);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer0.transform(complexArray50);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer52 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray57 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray57);
        double[] doubleArray60 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray57, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray60);
        org.apache.commons.math.complex.Complex[] complexArray62 = fastFourierTransformer52.transform(doubleArray60);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer63 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray68 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray68);
        org.apache.commons.math.complex.Complex[] complexArray70 = fastFourierTransformer63.transform2(doubleArray68);
        org.apache.commons.math.complex.Complex[] complexArray72 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray70, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray70);
        org.apache.commons.math.complex.Complex[] complexArray75 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray70, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray77 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray70, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray78 = fastFourierTransformer52.inversetransform2(complexArray77);
        org.apache.commons.math.complex.Complex[] complexArray79 = fastFourierTransformer0.inversetransform2(complexArray77);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer80 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray85 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray85);
        org.apache.commons.math.complex.Complex[] complexArray87 = fastFourierTransformer80.transform2(doubleArray85);
        double[] doubleArray89 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray85, (double) (short) -1);
        double[] doubleArray91 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray85, (double) (-1.0f));
        org.apache.commons.math.complex.Complex[] complexArray92 = fastFourierTransformer0.inversetransform2(doubleArray85);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction93 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray97 = fastFourierTransformer0.transform2(univariateRealFunction93, (double) (short) 1, 10.0d, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray70);
        org.junit.Assert.assertNotNull(complexArray72);
        org.junit.Assert.assertNotNull(complexArray75);
        org.junit.Assert.assertNotNull(complexArray77);
        org.junit.Assert.assertNotNull(complexArray78);
        org.junit.Assert.assertNotNull(complexArray79);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray87);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray92);
    }

    @Test
    public void test1654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1654");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        double[] doubleArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray8, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray11 = fastFourierTransformer0.inversetransform(doubleArray10);
        double[] doubleArray13 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray10, (double) (short) 0);
        double[] doubleArray15 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray13, 10.0d);
        double[] doubleArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray13, (double) 1);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray17);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray11);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-0.0, 0.0, 0.0, 0.0]");
    }

    @Test
    public void test1655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1655");
        double[] doubleArray4 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray4);
        double[] doubleArray7 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray4, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray4);
        double[] doubleArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray4, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-100.0, 9700.0, 100.0, 1000.0]");
    }

    @Test
    public void test1656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1656");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        double[] doubleArray12 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray12);
        double[] doubleArray15 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray12, (double) 10.0f);
        double[] doubleArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray15, (double) 10L);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray17);
        double[] doubleArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray17, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(doubleArray17);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        org.apache.commons.math.complex.Complex[] complexArray29 = fastFourierTransformer22.transform2(doubleArray27);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer30 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray35 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray35);
        org.apache.commons.math.complex.Complex[] complexArray37 = fastFourierTransformer30.transform2(doubleArray35);
        org.apache.commons.math.complex.Complex[] complexArray39 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray37, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray37);
        org.apache.commons.math.complex.Complex[] complexArray42 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray37, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer22.transform2(complexArray42);
        double[] doubleArray48 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray48);
        double[] doubleArray51 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray48, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer22.transform(doubleArray48);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer53 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer54 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray59 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray59);
        org.apache.commons.math.complex.Complex[] complexArray61 = fastFourierTransformer54.transform2(doubleArray59);
        org.apache.commons.math.complex.Complex[] complexArray63 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray61, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray61);
        org.apache.commons.math.complex.Complex[] complexArray65 = fastFourierTransformer53.inversetransform(complexArray61);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer66 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray71 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray71);
        org.apache.commons.math.complex.Complex[] complexArray73 = fastFourierTransformer66.transform2(doubleArray71);
        org.apache.commons.math.complex.Complex[] complexArray75 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray73, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray73);
        org.apache.commons.math.complex.Complex[] complexArray78 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray73, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray80 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray73, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray81 = fastFourierTransformer53.transform(complexArray73);
        org.apache.commons.math.complex.Complex[] complexArray82 = fastFourierTransformer22.inversetransform2(complexArray81);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer83 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray88 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray88);
        org.apache.commons.math.complex.Complex[] complexArray90 = fastFourierTransformer83.transform2(doubleArray88);
        double[] doubleArray92 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray88, (double) (short) -1);
        org.apache.commons.math.complex.Complex[] complexArray93 = fastFourierTransformer22.inversetransform2(doubleArray88);
        org.apache.commons.math.complex.Complex[] complexArray95 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray93, (double) (byte) 1);
        org.apache.commons.math.complex.Complex[] complexArray97 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray93, (double) (-1L));
        org.apache.commons.math.complex.Complex[] complexArray98 = fastFourierTransformer0.inversetransform2(complexArray97);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray37);
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray61);
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray73);
        org.junit.Assert.assertNotNull(complexArray75);
        org.junit.Assert.assertNotNull(complexArray78);
        org.junit.Assert.assertNotNull(complexArray80);
        org.junit.Assert.assertNotNull(complexArray81);
        org.junit.Assert.assertNotNull(complexArray82);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[1.0, -97.0, -1.0, -10.0]");
        org.junit.Assert.assertNotNull(complexArray90);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[1.0, -97.0, -1.0, -10.0]");
        org.junit.Assert.assertNotNull(complexArray93);
        org.junit.Assert.assertNotNull(complexArray95);
        org.junit.Assert.assertNotNull(complexArray97);
        org.junit.Assert.assertNotNull(complexArray98);
    }

    @Test
    public void test1657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1657");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray11 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer12 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray20, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray20);
        org.apache.commons.math.complex.Complex[] complexArray24 = fastFourierTransformer12.inversetransform(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer25 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray30 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer25.transform2(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer12.transform(complexArray32);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer34 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray39 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer34.transform2(doubleArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer42 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray47 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray47);
        org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer42.transform2(doubleArray47);
        org.apache.commons.math.complex.Complex[] complexArray51 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray49, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray49);
        org.apache.commons.math.complex.Complex[] complexArray54 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray49, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer34.transform2(complexArray54);
        double[] doubleArray60 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray60);
        double[] doubleArray63 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray60, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray64 = fastFourierTransformer34.transform2(doubleArray63);
        org.apache.commons.math.complex.Complex[] complexArray65 = fastFourierTransformer12.inversetransform2(doubleArray63);
        double[] doubleArray67 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray63, (double) (short) -1);
        org.apache.commons.math.complex.Complex[] complexArray68 = fastFourierTransformer0.inversetransform(doubleArray63);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer69 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray74 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray74);
        org.apache.commons.math.complex.Complex[] complexArray76 = fastFourierTransformer69.transform2(doubleArray74);
        org.apache.commons.math.complex.Complex[] complexArray78 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray76, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray80 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray78, (double) (byte) 100);
        org.apache.commons.math.complex.Complex[] complexArray82 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray80, (double) 0);
        org.apache.commons.math.complex.Complex[] complexArray83 = fastFourierTransformer0.inversetransform(complexArray82);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction84 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray88 = fastFourierTransformer0.inversetransform2(univariateRealFunction84, (double) 0, (double) 0, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray11);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray22);
        org.junit.Assert.assertNotNull(complexArray24);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray54);
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(complexArray64);
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray76);
        org.junit.Assert.assertNotNull(complexArray78);
        org.junit.Assert.assertNotNull(complexArray80);
        org.junit.Assert.assertNotNull(complexArray82);
        org.junit.Assert.assertNotNull(complexArray83);
    }

    @Test
    public void test1658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1658");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        double[] doubleArray17 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray17);
        double[] doubleArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray17, (double) 10.0f);
        double[] doubleArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray20, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer0.transform(doubleArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer24 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer25 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray30 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer25.transform2(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray34 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray32, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray32);
        org.apache.commons.math.complex.Complex[] complexArray36 = fastFourierTransformer24.inversetransform(complexArray32);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer37 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray42 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray42);
        org.apache.commons.math.complex.Complex[] complexArray44 = fastFourierTransformer37.transform2(doubleArray42);
        double[] doubleArray46 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray42, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray47 = fastFourierTransformer24.inversetransform(doubleArray42);
        org.apache.commons.math.complex.Complex[] complexArray49 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray47, (-1.0d));
        org.apache.commons.math.complex.Complex[] complexArray50 = fastFourierTransformer0.inversetransform(complexArray49);
        double[] doubleArray55 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray55);
        double[] doubleArray58 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray55, 0.0d);
        double[] doubleArray60 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray58, (double) (byte) 100);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray60);
        org.apache.commons.math.complex.Complex[] complexArray62 = fastFourierTransformer0.transform2(doubleArray60);
        double[] doubleArray67 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray67);
        double[] doubleArray70 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray67, (double) (byte) 100);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray67);
        org.apache.commons.math.complex.Complex[] complexArray72 = fastFourierTransformer0.inversetransform(doubleArray67);
        double[] doubleArray73 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray74 = fastFourierTransformer0.inversetransform(doubleArray73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(complexArray36);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray72);
    }

    @Test
    public void test1659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1659");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        org.apache.commons.math.complex.Complex[] complexArray29 = fastFourierTransformer22.transform2(doubleArray27);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer30 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray35 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray35);
        org.apache.commons.math.complex.Complex[] complexArray37 = fastFourierTransformer30.transform2(doubleArray35);
        org.apache.commons.math.complex.Complex[] complexArray39 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray37, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray37);
        org.apache.commons.math.complex.Complex[] complexArray42 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray37, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer22.transform2(complexArray42);
        double[] doubleArray48 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray48);
        double[] doubleArray51 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray48, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer22.transform2(doubleArray51);
        org.apache.commons.math.complex.Complex[] complexArray53 = fastFourierTransformer0.inversetransform2(doubleArray51);
        double[] doubleArray58 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray58);
        double[] doubleArray61 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray58, (double) (byte) 100);
        double[] doubleArray63 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray58, (double) 0);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray58);
        org.apache.commons.math.complex.Complex[] complexArray65 = fastFourierTransformer0.inversetransform2(doubleArray58);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction66 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray70 = fastFourierTransformer0.transform(univariateRealFunction66, (double) 100, (double) (short) 100, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [100.0, 100.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray37);
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray65);
    }

    @Test
    public void test1660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1660");
        org.apache.commons.math.transform.FastFourierTransformer.verifyInterval((double) (-1), (double) (byte) 10);
    }

    @Test
    public void test1661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1661");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform(doubleArray26);
        double[] doubleArray35 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray35);
        double[] doubleArray38 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray35, (double) 10.0f);
        double[] doubleArray40 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray38, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer0.transform2(doubleArray40);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer42 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray47 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray47);
        org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer42.transform2(doubleArray47);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer50 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray55 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray55);
        org.apache.commons.math.complex.Complex[] complexArray57 = fastFourierTransformer50.transform2(doubleArray55);
        org.apache.commons.math.complex.Complex[] complexArray59 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray57, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray57);
        org.apache.commons.math.complex.Complex[] complexArray62 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray57, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer42.transform2(complexArray62);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer64 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray69 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray69);
        double[] doubleArray72 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray69, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray72);
        org.apache.commons.math.complex.Complex[] complexArray74 = fastFourierTransformer64.transform(doubleArray72);
        org.apache.commons.math.complex.Complex[] complexArray75 = fastFourierTransformer42.transform(doubleArray72);
        double[] doubleArray80 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray80);
        double[] doubleArray83 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray80, (double) 10.0f);
        double[] doubleArray85 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray83, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray86 = fastFourierTransformer42.inversetransform(doubleArray85);
        double[] doubleArray91 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray91);
        double[] doubleArray94 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray91, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray95 = fastFourierTransformer42.inversetransform2(doubleArray91);
        org.apache.commons.math.complex.Complex[] complexArray96 = fastFourierTransformer0.inversetransform(complexArray95);
        org.apache.commons.math.complex.Complex[] complexArray98 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray96, (-1.0d));
        java.lang.Class<?> wildcardClass99 = complexArray98.getClass();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray57);
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray74);
        org.junit.Assert.assertNotNull(complexArray75);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray86);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray95);
        org.junit.Assert.assertNotNull(complexArray96);
        org.junit.Assert.assertNotNull(complexArray98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1662");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform2(doubleArray29);
        double[] doubleArray35 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray35);
        double[] doubleArray38 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray35, (double) (byte) 100);
        double[] doubleArray40 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray35, (double) 0);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray35);
        org.apache.commons.math.complex.Complex[] complexArray42 = fastFourierTransformer0.transform2(doubleArray35);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer43 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer44 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray49 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer44.transform2(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray53 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray51, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray51);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer43.inversetransform(complexArray51);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer56 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray61 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer56.transform2(doubleArray61);
        double[] doubleArray65 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray61, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray66 = fastFourierTransformer43.inversetransform(doubleArray61);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer67 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray72 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray72);
        double[] doubleArray75 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray72, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray75);
        org.apache.commons.math.complex.Complex[] complexArray77 = fastFourierTransformer67.inversetransform(doubleArray75);
        org.apache.commons.math.complex.Complex[] complexArray78 = fastFourierTransformer43.inversetransform(doubleArray75);
        org.apache.commons.math.complex.Complex[] complexArray79 = fastFourierTransformer0.inversetransform2(complexArray78);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer80 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray85 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray85);
        org.apache.commons.math.complex.Complex[] complexArray87 = fastFourierTransformer80.transform2(doubleArray85);
        double[] doubleArray89 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray85, (double) 10.0f);
        double[] doubleArray91 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray85, (double) 10L);
        double[] doubleArray93 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray91, (double) (byte) 0);
        org.apache.commons.math.complex.Complex[] complexArray94 = fastFourierTransformer0.transform(doubleArray91);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction95 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray99 = fastFourierTransformer0.transform(univariateRealFunction95, (double) 100, (double) '4', 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [100.0, 52.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray66);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray77);
        org.junit.Assert.assertNotNull(complexArray78);
        org.junit.Assert.assertNotNull(complexArray79);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray87);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray94);
    }

    @Test
    public void test1663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1663");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform(doubleArray26);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer31 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray36 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray36);
        org.apache.commons.math.complex.Complex[] complexArray38 = fastFourierTransformer31.transform2(doubleArray36);
        org.apache.commons.math.complex.Complex[] complexArray40 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray38, (double) 'a');
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer0.transform2(complexArray40);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer42 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray47 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray47);
        org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer42.transform2(doubleArray47);
        org.apache.commons.math.complex.Complex[] complexArray51 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray49, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray53 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray51, (double) (byte) 100);
        org.apache.commons.math.complex.Complex[] complexArray55 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray53, (double) 0);
        org.apache.commons.math.complex.Complex[] complexArray56 = fastFourierTransformer0.transform2(complexArray55);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction57 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray61 = fastFourierTransformer0.transform2(univariateRealFunction57, (double) (short) -1, (double) (-1L), (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [-1.0, -1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray38);
        org.junit.Assert.assertNotNull(complexArray40);
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(complexArray56);
    }

    @Test
    public void test1664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1664");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer16 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray21 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer16.transform2(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray23);
        org.apache.commons.math.complex.Complex[] complexArray28 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray29 = fastFourierTransformer8.transform2(complexArray28);
        double[] doubleArray34 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray34);
        double[] doubleArray37 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray34, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray38 = fastFourierTransformer8.transform(doubleArray34);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer0.transform(complexArray38);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction40 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray44 = fastFourierTransformer0.transform2(univariateRealFunction40, (double) 1L, (double) 1, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray38);
        org.junit.Assert.assertNotNull(complexArray39);
    }

    @Test
    public void test1665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1665");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.transform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray16 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer11.transform2(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray18, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray18);
        org.apache.commons.math.complex.Complex[] complexArray23 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray18, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray18, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray26 = fastFourierTransformer0.inversetransform2(complexArray25);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer27 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer28 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray33 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray33);
        org.apache.commons.math.complex.Complex[] complexArray35 = fastFourierTransformer28.transform2(doubleArray33);
        org.apache.commons.math.complex.Complex[] complexArray37 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray35, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray35);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer27.inversetransform(complexArray35);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray35);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer0.inversetransform(complexArray35);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction42 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray46 = fastFourierTransformer0.transform(univariateRealFunction42, (double) (byte) 0, (double) 1.0f, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray26);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray35);
        org.junit.Assert.assertNotNull(complexArray37);
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray41);
    }

    @Test
    public void test1666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1666");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, (double) (short) 1, (double) (short) -1, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1667");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer16 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray21 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer16.transform2(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray23);
        org.apache.commons.math.complex.Complex[] complexArray28 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray29 = fastFourierTransformer8.transform2(complexArray28);
        double[] doubleArray34 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray34);
        double[] doubleArray37 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray34, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray38 = fastFourierTransformer8.transform(doubleArray34);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer0.transform(complexArray38);
        double[] doubleArray44 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray44);
        double[] doubleArray47 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray44, (double) 10.0f);
        double[] doubleArray49 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray47, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray50 = fastFourierTransformer0.transform2(doubleArray47);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction51 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer0.inversetransform2(univariateRealFunction51, (-1.0d), (double) (byte) -1, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray38);
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray50);
    }

    @Test
    public void test1668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1668");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, 0.0d, (-1.0d), (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [0.0, -1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1669");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, (double) '#', (-1.0d), 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [35.0, -1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1670");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.transform.FastFourierTransformer.verifyInterval((double) (byte) 10, (double) 10L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [10.0, 10.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1671");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.transform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray16 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer11.transform2(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray19 = fastFourierTransformer0.inversetransform2(complexArray18);
        double[] doubleArray24 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray24);
        double[] doubleArray27 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray24, (double) 10.0f);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10L);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray29);
        org.apache.commons.math.complex.Complex[] complexArray31 = fastFourierTransformer0.inversetransform2(doubleArray29);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction32 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray36 = fastFourierTransformer0.inversetransform2(univariateRealFunction32, (double) (byte) -1, (double) 10, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray19);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray31);
    }

    @Test
    public void test1672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1672");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        double[] doubleArray17 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray17);
        double[] doubleArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray17, (double) 10.0f);
        double[] doubleArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray20, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer0.transform(doubleArray20);
        double[] doubleArray28 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray28);
        double[] doubleArray31 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray28, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray31);
        double[] doubleArray34 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray31, 10.0d);
        org.apache.commons.math.complex.Complex[] complexArray35 = fastFourierTransformer0.transform2(doubleArray31);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer36 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray41 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray41);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer36.transform2(doubleArray41);
        org.apache.commons.math.complex.Complex[] complexArray45 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray43, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray43);
        org.apache.commons.math.complex.Complex[] complexArray48 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray43, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer0.transform2(complexArray43);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction50 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray54 = fastFourierTransformer0.inversetransform2(univariateRealFunction50, 1.0d, (double) (short) 1, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [1.0, 1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray35);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(complexArray48);
        org.junit.Assert.assertNotNull(complexArray49);
    }

    @Test
    public void test1673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1673");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform2(doubleArray29);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer31 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer32 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray37 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer32.transform2(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray39, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray39);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer31.inversetransform(complexArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer44 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray49 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer44.transform2(doubleArray49);
        double[] doubleArray53 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray49, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray54 = fastFourierTransformer31.inversetransform(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer0.transform2(complexArray54);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer56 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer57 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray62 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray62);
        double[] doubleArray65 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray62, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray65);
        org.apache.commons.math.complex.Complex[] complexArray67 = fastFourierTransformer57.inversetransform(doubleArray65);
        org.apache.commons.math.complex.Complex[] complexArray68 = fastFourierTransformer56.transform2(complexArray67);
        org.apache.commons.math.complex.Complex[] complexArray69 = fastFourierTransformer0.transform2(complexArray67);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray69);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray69);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray54);
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray67);
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(complexArray69);
    }

    @Test
    public void test1674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1674");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, (double) (short) 100, (double) (short) 0, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1675");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray11 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer12 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray20, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray20);
        org.apache.commons.math.complex.Complex[] complexArray24 = fastFourierTransformer12.inversetransform(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer25 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray30 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer25.transform2(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer12.transform(complexArray32);
        org.apache.commons.math.complex.Complex[] complexArray34 = fastFourierTransformer0.transform2(complexArray32);
        double[] doubleArray39 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray39);
        double[] doubleArray42 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray39, (double) (byte) 100);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray44 = fastFourierTransformer0.inversetransform(doubleArray39);
        java.lang.Class<?> wildcardClass45 = fastFourierTransformer0.getClass();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray11);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray22);
        org.junit.Assert.assertNotNull(complexArray24);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test1676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1676");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform2(doubleArray29);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer31 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer32 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray37 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer32.transform2(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray39, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray39);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer31.inversetransform(complexArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer44 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray49 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer44.transform2(doubleArray49);
        double[] doubleArray53 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray49, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray54 = fastFourierTransformer31.inversetransform(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer0.transform2(complexArray54);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer56 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer57 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray62 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray62);
        org.apache.commons.math.complex.Complex[] complexArray64 = fastFourierTransformer57.transform2(doubleArray62);
        org.apache.commons.math.complex.Complex[] complexArray66 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray64, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray64);
        org.apache.commons.math.complex.Complex[] complexArray68 = fastFourierTransformer56.inversetransform(complexArray64);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer69 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray74 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray74);
        org.apache.commons.math.complex.Complex[] complexArray76 = fastFourierTransformer69.transform2(doubleArray74);
        org.apache.commons.math.complex.Complex[] complexArray78 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray76, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray76);
        org.apache.commons.math.complex.Complex[] complexArray81 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray76, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray83 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray76, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray84 = fastFourierTransformer56.transform(complexArray76);
        org.apache.commons.math.complex.Complex[] complexArray85 = fastFourierTransformer0.transform(complexArray84);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction86 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray90 = fastFourierTransformer0.transform(univariateRealFunction86, 0.0d, (double) 0.0f, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [0.0, 0.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray54);
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray64);
        org.junit.Assert.assertNotNull(complexArray66);
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray76);
        org.junit.Assert.assertNotNull(complexArray78);
        org.junit.Assert.assertNotNull(complexArray81);
        org.junit.Assert.assertNotNull(complexArray83);
        org.junit.Assert.assertNotNull(complexArray84);
        org.junit.Assert.assertNotNull(complexArray85);
    }

    @Test
    public void test1677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1677");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer16 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray21 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer16.transform2(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray23);
        org.apache.commons.math.complex.Complex[] complexArray28 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray29 = fastFourierTransformer8.transform2(complexArray28);
        double[] doubleArray34 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray34);
        double[] doubleArray37 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray34, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray38 = fastFourierTransformer8.transform(doubleArray34);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer0.transform(complexArray38);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer40 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray45 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray45);
        org.apache.commons.math.complex.Complex[] complexArray47 = fastFourierTransformer40.transform2(doubleArray45);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer48 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray53 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray53);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer48.transform2(doubleArray53);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer56 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray61 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer56.transform2(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray65 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray63, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray63);
        org.apache.commons.math.complex.Complex[] complexArray68 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray63, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray69 = fastFourierTransformer48.transform2(complexArray68);
        double[] doubleArray74 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray74);
        double[] doubleArray77 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray74, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray78 = fastFourierTransformer48.transform(doubleArray74);
        org.apache.commons.math.complex.Complex[] complexArray79 = fastFourierTransformer40.transform(complexArray78);
        org.apache.commons.math.complex.Complex[] complexArray81 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray79, (double) (-1));
        org.apache.commons.math.complex.Complex[] complexArray82 = fastFourierTransformer0.transform(complexArray81);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction83 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray87 = fastFourierTransformer0.inversetransform2(univariateRealFunction83, (double) (byte) 10, (-1.0d), (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [10.0, -1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray38);
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(complexArray69);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray78);
        org.junit.Assert.assertNotNull(complexArray79);
        org.junit.Assert.assertNotNull(complexArray81);
        org.junit.Assert.assertNotNull(complexArray82);
    }

    @Test
    public void test1678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1678");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform(doubleArray26);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer31 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer32 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray37 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer32.transform2(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray39, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray39);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer31.inversetransform(complexArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer44 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray49 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer44.transform2(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray53 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray51, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray51);
        org.apache.commons.math.complex.Complex[] complexArray56 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray51, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray58 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray51, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray59 = fastFourierTransformer31.transform(complexArray51);
        org.apache.commons.math.complex.Complex[] complexArray60 = fastFourierTransformer0.inversetransform2(complexArray59);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer61 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer62 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray67 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray67);
        org.apache.commons.math.complex.Complex[] complexArray69 = fastFourierTransformer62.transform2(doubleArray67);
        org.apache.commons.math.complex.Complex[] complexArray71 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray69, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray69);
        org.apache.commons.math.complex.Complex[] complexArray73 = fastFourierTransformer61.inversetransform(complexArray69);
        org.apache.commons.math.complex.Complex[] complexArray74 = fastFourierTransformer0.inversetransform2(complexArray73);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer75 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray80 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray80);
        org.apache.commons.math.complex.Complex[] complexArray82 = fastFourierTransformer75.transform2(doubleArray80);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer83 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray88 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray88);
        org.apache.commons.math.complex.Complex[] complexArray90 = fastFourierTransformer83.transform2(doubleArray88);
        org.apache.commons.math.complex.Complex[] complexArray92 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray90, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray90);
        org.apache.commons.math.complex.Complex[] complexArray95 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray90, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray96 = fastFourierTransformer75.transform2(complexArray95);
        org.apache.commons.math.complex.Complex[] complexArray97 = fastFourierTransformer0.inversetransform(complexArray95);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray97);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(complexArray56);
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray69);
        org.junit.Assert.assertNotNull(complexArray71);
        org.junit.Assert.assertNotNull(complexArray73);
        org.junit.Assert.assertNotNull(complexArray74);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray82);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray90);
        org.junit.Assert.assertNotNull(complexArray92);
        org.junit.Assert.assertNotNull(complexArray95);
        org.junit.Assert.assertNotNull(complexArray96);
        org.junit.Assert.assertNotNull(complexArray97);
    }

    @Test
    public void test1679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1679");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform(doubleArray26);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer31 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray36 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray36);
        double[] doubleArray39 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray36, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer31.transform(doubleArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer42 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray47 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray47);
        org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer42.transform2(doubleArray47);
        double[] doubleArray51 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray47, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer31.inversetransform(doubleArray47);
        org.apache.commons.math.complex.Complex[] complexArray53 = fastFourierTransformer0.transform2(doubleArray47);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer54 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray59 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray59);
        org.apache.commons.math.complex.Complex[] complexArray61 = fastFourierTransformer54.transform2(doubleArray59);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer62 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray67 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray67);
        org.apache.commons.math.complex.Complex[] complexArray69 = fastFourierTransformer62.transform2(doubleArray67);
        org.apache.commons.math.complex.Complex[] complexArray71 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray69, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray69);
        org.apache.commons.math.complex.Complex[] complexArray74 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray69, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray75 = fastFourierTransformer54.transform2(complexArray74);
        double[] doubleArray80 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray80);
        double[] doubleArray83 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray80, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray84 = fastFourierTransformer54.transform2(doubleArray83);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray84);
        org.apache.commons.math.complex.Complex[] complexArray86 = fastFourierTransformer0.inversetransform2(complexArray84);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction87 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray91 = fastFourierTransformer0.transform(univariateRealFunction87, (double) (short) -1, (double) 1L, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray61);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray69);
        org.junit.Assert.assertNotNull(complexArray71);
        org.junit.Assert.assertNotNull(complexArray74);
        org.junit.Assert.assertNotNull(complexArray75);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray84);
        org.junit.Assert.assertNotNull(complexArray86);
    }

    @Test
    public void test1680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1680");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer22.transform(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer0.transform(doubleArray30);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer34 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray39 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer34.transform2(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray43 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray41, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray41);
        org.apache.commons.math.complex.Complex[] complexArray46 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray41, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray47 = fastFourierTransformer0.inversetransform2(complexArray41);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer48 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray53 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray53);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer48.transform2(doubleArray53);
        org.apache.commons.math.complex.Complex[] complexArray57 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray55, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray55);
        org.apache.commons.math.complex.Complex[] complexArray60 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray55, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray62 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray55, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer0.inversetransform(complexArray62);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer64 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer65 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray70 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray70);
        org.apache.commons.math.complex.Complex[] complexArray72 = fastFourierTransformer65.transform2(doubleArray70);
        org.apache.commons.math.complex.Complex[] complexArray74 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray72, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray72);
        org.apache.commons.math.complex.Complex[] complexArray76 = fastFourierTransformer64.inversetransform(complexArray72);
        org.apache.commons.math.complex.Complex[] complexArray77 = fastFourierTransformer0.inversetransform2(complexArray72);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction78 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray82 = fastFourierTransformer0.inversetransform(univariateRealFunction78, (double) (-1L), (double) 1.0f, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray46);
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(complexArray57);
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray72);
        org.junit.Assert.assertNotNull(complexArray74);
        org.junit.Assert.assertNotNull(complexArray76);
        org.junit.Assert.assertNotNull(complexArray77);
    }

    @Test
    public void test1681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1681");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, (double) 1, (double) 100, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1682");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        double[] doubleArray31 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray29, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer0.inversetransform2(doubleArray31);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer33 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer34 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray39 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer34.transform2(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray43 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray41, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray41);
        org.apache.commons.math.complex.Complex[] complexArray45 = fastFourierTransformer33.inversetransform(complexArray41);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer46 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray51 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray51);
        org.apache.commons.math.complex.Complex[] complexArray53 = fastFourierTransformer46.transform2(doubleArray51);
        org.apache.commons.math.complex.Complex[] complexArray55 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray53, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray53);
        org.apache.commons.math.complex.Complex[] complexArray58 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray53, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray60 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray53, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray61 = fastFourierTransformer33.transform(complexArray53);
        org.apache.commons.math.complex.Complex[] complexArray62 = fastFourierTransformer0.inversetransform2(complexArray53);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer63 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray68 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray68);
        double[] doubleArray71 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray68, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray71);
        org.apache.commons.math.complex.Complex[] complexArray73 = fastFourierTransformer63.transform(doubleArray71);
        org.apache.commons.math.complex.Complex[] complexArray74 = fastFourierTransformer0.inversetransform2(complexArray73);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer75 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray80 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray80);
        org.apache.commons.math.complex.Complex[] complexArray82 = fastFourierTransformer75.transform2(doubleArray80);
        org.apache.commons.math.complex.Complex[] complexArray83 = fastFourierTransformer0.inversetransform(complexArray82);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer84 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray89 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray89);
        org.apache.commons.math.complex.Complex[] complexArray91 = fastFourierTransformer84.transform2(doubleArray89);
        double[] doubleArray93 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray89, (double) (short) -1);
        org.apache.commons.math.complex.Complex[] complexArray94 = fastFourierTransformer0.inversetransform2(doubleArray93);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(complexArray61);
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray73);
        org.junit.Assert.assertNotNull(complexArray74);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray82);
        org.junit.Assert.assertNotNull(complexArray83);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[1.0, -97.0, -1.0, -10.0]");
        org.junit.Assert.assertNotNull(complexArray91);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[1.0, -97.0, -1.0, -10.0]");
        org.junit.Assert.assertNotNull(complexArray94);
    }

    @Test
    public void test1683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1683");
        double[] doubleArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray2 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray0, (double) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1684");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, (double) 10.0f, (double) 100L, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1685");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        org.apache.commons.math.complex.Complex[] complexArray29 = fastFourierTransformer22.transform2(doubleArray27);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer30 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray35 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray35);
        org.apache.commons.math.complex.Complex[] complexArray37 = fastFourierTransformer30.transform2(doubleArray35);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer38 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray43 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray43);
        org.apache.commons.math.complex.Complex[] complexArray45 = fastFourierTransformer38.transform2(doubleArray43);
        org.apache.commons.math.complex.Complex[] complexArray47 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray45, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray45);
        org.apache.commons.math.complex.Complex[] complexArray50 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray45, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer30.transform2(complexArray50);
        double[] doubleArray56 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray56);
        double[] doubleArray59 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray56, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray60 = fastFourierTransformer30.transform(doubleArray56);
        org.apache.commons.math.complex.Complex[] complexArray61 = fastFourierTransformer22.transform(complexArray60);
        org.apache.commons.math.complex.Complex[] complexArray63 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray60, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray64 = fastFourierTransformer0.inversetransform2(complexArray63);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction65 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray69 = fastFourierTransformer0.transform2(univariateRealFunction65, (double) 1.0f, (double) '#', (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray37);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(complexArray61);
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(complexArray64);
    }

    @Test
    public void test1686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1686");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction22 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray26 = fastFourierTransformer0.inversetransform(univariateRealFunction22, (double) 0.0f, 0.0d, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
    }

    @Test
    public void test1687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1687");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray11 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer12 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray17 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray17);
        org.apache.commons.math.complex.Complex[] complexArray19 = fastFourierTransformer12.transform2(doubleArray17);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer20 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray25 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray25);
        org.apache.commons.math.complex.Complex[] complexArray27 = fastFourierTransformer20.transform2(doubleArray25);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer28 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray33 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray33);
        org.apache.commons.math.complex.Complex[] complexArray35 = fastFourierTransformer28.transform2(doubleArray33);
        org.apache.commons.math.complex.Complex[] complexArray37 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray35, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray35);
        org.apache.commons.math.complex.Complex[] complexArray40 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray35, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer20.transform2(complexArray40);
        double[] doubleArray46 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray46);
        double[] doubleArray49 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray46, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray50 = fastFourierTransformer20.transform(doubleArray46);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer12.transform(complexArray50);
        org.apache.commons.math.complex.Complex[] complexArray53 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray51, (double) (short) -1);
        org.apache.commons.math.complex.Complex[] complexArray54 = fastFourierTransformer0.inversetransform(complexArray53);
        double[] doubleArray59 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray59);
        double[] doubleArray62 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray59, (double) 10.0f);
        double[] doubleArray64 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray62, (double) 10L);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray64);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray64);
        org.apache.commons.math.complex.Complex[] complexArray67 = fastFourierTransformer0.inversetransform2(doubleArray64);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer68 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray73 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray73);
        double[] doubleArray76 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray73, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray76);
        org.apache.commons.math.complex.Complex[] complexArray78 = fastFourierTransformer68.transform(doubleArray76);
        org.apache.commons.math.complex.Complex[] complexArray79 = fastFourierTransformer0.transform2(doubleArray76);
        double[] doubleArray80 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray81 = fastFourierTransformer0.inversetransform2(doubleArray80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray11);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray19);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray27);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray35);
        org.junit.Assert.assertNotNull(complexArray37);
        org.junit.Assert.assertNotNull(complexArray40);
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(complexArray54);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray67);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray78);
        org.junit.Assert.assertNotNull(complexArray79);
    }

    @Test
    public void test1688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1688");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray20, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray20);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray20, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray27 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray20, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray28 = fastFourierTransformer0.transform(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer29 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray34 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray34);
        org.apache.commons.math.complex.Complex[] complexArray36 = fastFourierTransformer29.transform2(doubleArray34);
        org.apache.commons.math.complex.Complex[] complexArray37 = fastFourierTransformer0.transform2(doubleArray34);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer38 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray43 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray43);
        org.apache.commons.math.complex.Complex[] complexArray45 = fastFourierTransformer38.transform2(doubleArray43);
        org.apache.commons.math.complex.Complex[] complexArray47 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray45, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray45);
        org.apache.commons.math.complex.Complex[] complexArray50 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray45, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray52 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray45, (double) 1);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray45);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray45);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer0.inversetransform(complexArray45);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction56 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray60 = fastFourierTransformer0.inversetransform2(univariateRealFunction56, (double) (short) 100, (double) (byte) 0, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [100.0, 0.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray22);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray27);
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray36);
        org.junit.Assert.assertNotNull(complexArray37);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(complexArray55);
    }

    @Test
    public void test1689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1689");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.transform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray16 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer11.transform2(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray19 = fastFourierTransformer0.inversetransform2(complexArray18);
        double[] doubleArray24 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray24);
        double[] doubleArray27 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray24, (double) 10.0f);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10L);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray29);
        org.apache.commons.math.complex.Complex[] complexArray31 = fastFourierTransformer0.inversetransform2(doubleArray29);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer32 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer33 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray38 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray38);
        org.apache.commons.math.complex.Complex[] complexArray40 = fastFourierTransformer33.transform2(doubleArray38);
        org.apache.commons.math.complex.Complex[] complexArray42 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray40, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray40);
        org.apache.commons.math.complex.Complex[] complexArray44 = fastFourierTransformer32.inversetransform(complexArray40);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer45 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray50 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray50);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer45.transform2(doubleArray50);
        double[] doubleArray54 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray50, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer32.inversetransform(doubleArray50);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray50);
        org.apache.commons.math.complex.Complex[] complexArray57 = fastFourierTransformer0.transform(doubleArray50);
        double[] doubleArray62 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray62);
        double[] doubleArray65 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray62, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray65);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray65);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray65);
        double[] doubleArray70 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray65, (double) (short) 1);
        org.apache.commons.math.complex.Complex[] complexArray71 = fastFourierTransformer0.inversetransform2(doubleArray65);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction72 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray76 = fastFourierTransformer0.inversetransform(univariateRealFunction72, (double) 1.0f, (double) (short) 0, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray19);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray31);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray40);
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(complexArray57);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray71);
    }

    @Test
    public void test1690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1690");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer23 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray28 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray28);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer23.transform2(doubleArray28);
        org.apache.commons.math.complex.Complex[] complexArray32 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray30, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray30);
        org.apache.commons.math.complex.Complex[] complexArray34 = fastFourierTransformer22.inversetransform(complexArray30);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer35 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray40 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray42 = fastFourierTransformer35.transform2(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray44 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray42, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray42);
        org.apache.commons.math.complex.Complex[] complexArray47 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray42, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray49 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray42, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray50 = fastFourierTransformer22.transform(complexArray42);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer0.transform(complexArray50);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer52 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray57 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray57);
        org.apache.commons.math.complex.Complex[] complexArray59 = fastFourierTransformer52.transform2(doubleArray57);
        org.apache.commons.math.complex.Complex[] complexArray61 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray59, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray59);
        org.apache.commons.math.complex.Complex[] complexArray64 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray59, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray65 = fastFourierTransformer0.transform(complexArray64);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer66 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer67 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray72 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray72);
        org.apache.commons.math.complex.Complex[] complexArray74 = fastFourierTransformer67.transform2(doubleArray72);
        org.apache.commons.math.complex.Complex[] complexArray76 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray74, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray74);
        org.apache.commons.math.complex.Complex[] complexArray78 = fastFourierTransformer66.inversetransform(complexArray74);
        org.apache.commons.math.complex.Complex[] complexArray79 = fastFourierTransformer0.transform(complexArray78);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction80 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray84 = fastFourierTransformer0.transform2(univariateRealFunction80, (double) ' ', (double) (-1L), 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(complexArray61);
        org.junit.Assert.assertNotNull(complexArray64);
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray74);
        org.junit.Assert.assertNotNull(complexArray76);
        org.junit.Assert.assertNotNull(complexArray78);
        org.junit.Assert.assertNotNull(complexArray79);
    }

    @Test
    public void test1691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1691");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer22.transform(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer0.transform(doubleArray30);
        double[] doubleArray38 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray38);
        double[] doubleArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray38, (double) 10.0f);
        double[] doubleArray43 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray41, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray44 = fastFourierTransformer0.inversetransform(doubleArray43);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray43);
        double[] doubleArray47 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray43, 10.0d);
        java.lang.Class<?> wildcardClass48 = doubleArray43.getClass();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1000.0, 97000.0, 1000.0, 10000.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1000.0, 97000.0, 1000.0, 10000.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1000.0, 97000.0, 1000.0, 10000.0]");
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1000.0, 97000.0, 1000.0, 10000.0]");
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test1692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1692");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer23 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray28 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray28);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer23.transform2(doubleArray28);
        org.apache.commons.math.complex.Complex[] complexArray32 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray30, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray30);
        org.apache.commons.math.complex.Complex[] complexArray34 = fastFourierTransformer22.inversetransform(complexArray30);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer35 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray40 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray42 = fastFourierTransformer35.transform2(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray44 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray42, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray42);
        org.apache.commons.math.complex.Complex[] complexArray47 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray42, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray49 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray42, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray50 = fastFourierTransformer22.transform(complexArray42);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer0.transform(complexArray50);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer52 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray57 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray57);
        org.apache.commons.math.complex.Complex[] complexArray59 = fastFourierTransformer52.transform2(doubleArray57);
        org.apache.commons.math.complex.Complex[] complexArray61 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray59, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray59);
        org.apache.commons.math.complex.Complex[] complexArray64 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray59, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray65 = fastFourierTransformer0.transform(complexArray64);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer66 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer67 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray72 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray72);
        org.apache.commons.math.complex.Complex[] complexArray74 = fastFourierTransformer67.transform2(doubleArray72);
        org.apache.commons.math.complex.Complex[] complexArray76 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray74, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray74);
        org.apache.commons.math.complex.Complex[] complexArray78 = fastFourierTransformer66.inversetransform(complexArray74);
        org.apache.commons.math.complex.Complex[] complexArray79 = fastFourierTransformer0.transform(complexArray78);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray79);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray79);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(complexArray61);
        org.junit.Assert.assertNotNull(complexArray64);
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray74);
        org.junit.Assert.assertNotNull(complexArray76);
        org.junit.Assert.assertNotNull(complexArray78);
        org.junit.Assert.assertNotNull(complexArray79);
    }

    @Test
    public void test1693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1693");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        double[] doubleArray16 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray13, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer8.transform(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray19 = fastFourierTransformer0.transform2(doubleArray16);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer20 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray25 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray25);
        org.apache.commons.math.complex.Complex[] complexArray27 = fastFourierTransformer20.transform2(doubleArray25);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer28 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray33 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray33);
        org.apache.commons.math.complex.Complex[] complexArray35 = fastFourierTransformer28.transform2(doubleArray33);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer36 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray41 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray41);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer36.transform2(doubleArray41);
        org.apache.commons.math.complex.Complex[] complexArray45 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray43, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray43);
        org.apache.commons.math.complex.Complex[] complexArray48 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray43, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer28.transform2(complexArray48);
        double[] doubleArray54 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray54);
        double[] doubleArray57 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray54, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray58 = fastFourierTransformer28.transform(doubleArray54);
        org.apache.commons.math.complex.Complex[] complexArray59 = fastFourierTransformer20.transform(complexArray58);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer60 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray65 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray65);
        org.apache.commons.math.complex.Complex[] complexArray67 = fastFourierTransformer60.transform2(doubleArray65);
        double[] doubleArray69 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray65, (double) (short) -1);
        double[] doubleArray71 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray65, (double) (-1.0f));
        org.apache.commons.math.complex.Complex[] complexArray72 = fastFourierTransformer20.transform2(doubleArray65);
        org.apache.commons.math.complex.Complex[] complexArray74 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray72, (double) (-1L));
        org.apache.commons.math.complex.Complex[] complexArray75 = fastFourierTransformer0.inversetransform2(complexArray72);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray75);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray19);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray27);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray35);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(complexArray48);
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray67);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray72);
        org.junit.Assert.assertNotNull(complexArray74);
        org.junit.Assert.assertNotNull(complexArray75);
    }

    @Test
    public void test1694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1694");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.transform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray16 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer11.transform2(doubleArray16);
        double[] doubleArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray16, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.inversetransform(doubleArray16);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer22.transform(doubleArray30);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer33 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray38 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray38);
        org.apache.commons.math.complex.Complex[] complexArray40 = fastFourierTransformer33.transform2(doubleArray38);
        org.apache.commons.math.complex.Complex[] complexArray42 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray40, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray40);
        org.apache.commons.math.complex.Complex[] complexArray45 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray40, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray47 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray40, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray48 = fastFourierTransformer22.inversetransform2(complexArray47);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray47);
        org.apache.commons.math.complex.Complex[] complexArray50 = fastFourierTransformer0.transform2(complexArray47);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer51 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray56 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray56);
        org.apache.commons.math.complex.Complex[] complexArray58 = fastFourierTransformer51.transform2(doubleArray56);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer59 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray64 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray64);
        org.apache.commons.math.complex.Complex[] complexArray66 = fastFourierTransformer59.transform2(doubleArray64);
        org.apache.commons.math.complex.Complex[] complexArray68 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray66, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray66);
        org.apache.commons.math.complex.Complex[] complexArray71 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray66, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray72 = fastFourierTransformer51.transform2(complexArray71);
        double[] doubleArray77 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray77);
        double[] doubleArray80 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray77, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray81 = fastFourierTransformer51.transform2(doubleArray80);
        org.apache.commons.math.complex.Complex[] complexArray82 = fastFourierTransformer0.transform(doubleArray80);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction83 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray87 = fastFourierTransformer0.transform2(univariateRealFunction83, (double) (short) 100, (-1.0d), (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [100.0, -1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray40);
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(complexArray48);
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray66);
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(complexArray71);
        org.junit.Assert.assertNotNull(complexArray72);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray81);
        org.junit.Assert.assertNotNull(complexArray82);
    }

    @Test
    public void test1695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1695");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.transform.FastFourierTransformer.verifyInterval((double) (byte) -1, (double) (-1L));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [-1.0, -1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1696");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.transform.FastFourierTransformer.verifyInterval((double) 1, (double) 0L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [1.0, 0.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1697");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.transform.FastFourierTransformer.verifyInterval((double) 0.0f, 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [0.0, 0.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1698");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer22.transform(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer0.transform(doubleArray30);
        double[] doubleArray38 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray38);
        double[] doubleArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray38, (double) 10.0f);
        double[] doubleArray43 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray41, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray44 = fastFourierTransformer0.inversetransform(doubleArray43);
        double[] doubleArray49 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray49);
        double[] doubleArray52 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray49, (double) 10.0f);
        double[] doubleArray54 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray49, (double) (short) 100);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer0.inversetransform(doubleArray49);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1000.0, 97000.0, 1000.0, 10000.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1000.0, 97000.0, 1000.0, 10000.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1000.0, 97000.0, 1000.0, 10000.0]");
        org.junit.Assert.assertNotNull(complexArray55);
    }

    @Test
    public void test1699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1699");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, (double) 10.0f, (double) (-1), (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [10.0, -1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1700");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer23 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray28 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray28);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer23.transform2(doubleArray28);
        org.apache.commons.math.complex.Complex[] complexArray32 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray30, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray30);
        org.apache.commons.math.complex.Complex[] complexArray34 = fastFourierTransformer22.inversetransform(complexArray30);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer35 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray40 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray42 = fastFourierTransformer35.transform2(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer22.transform(complexArray42);
        org.apache.commons.math.complex.Complex[] complexArray44 = fastFourierTransformer0.inversetransform(complexArray42);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer45 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray50 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray50);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer45.transform2(doubleArray50);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer53 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray58 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray58);
        org.apache.commons.math.complex.Complex[] complexArray60 = fastFourierTransformer53.transform2(doubleArray58);
        org.apache.commons.math.complex.Complex[] complexArray62 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray60, (double) 'a');
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer45.transform(complexArray60);
        org.apache.commons.math.complex.Complex[] complexArray64 = fastFourierTransformer0.inversetransform(complexArray60);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray64);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray64);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(complexArray64);
    }

    @Test
    public void test1701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1701");
        double[] doubleArray5 = new double[] { (byte) 10, (short) -1, 10, 100L, 100L };
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not power of 2, consider padding for fix.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, -1.0, 10.0, 100.0, 100.0]");
    }

    @Test
    public void test1702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1702");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        double[] doubleArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray18, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer0.inversetransform(doubleArray18);
        double[] doubleArray28 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray28);
        double[] doubleArray31 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray28, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray31);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray31);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray31);
        double[] doubleArray36 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray31, (double) (-1L));
        org.apache.commons.math.complex.Complex[] complexArray37 = fastFourierTransformer0.transform2(doubleArray36);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer38 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer39 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray44 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray44);
        org.apache.commons.math.complex.Complex[] complexArray46 = fastFourierTransformer39.transform2(doubleArray44);
        org.apache.commons.math.complex.Complex[] complexArray48 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray46, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray46);
        org.apache.commons.math.complex.Complex[] complexArray50 = fastFourierTransformer38.inversetransform(complexArray46);
        double[] doubleArray55 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray55);
        double[] doubleArray58 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray55, (double) 10.0f);
        double[] doubleArray60 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray58, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray61 = fastFourierTransformer38.transform(doubleArray58);
        org.apache.commons.math.complex.Complex[] complexArray62 = fastFourierTransformer0.transform(complexArray61);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction63 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray67 = fastFourierTransformer0.inversetransform(univariateRealFunction63, (double) 0L, (double) (-1L), 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [0.0, -1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(complexArray37);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray46);
        org.junit.Assert.assertNotNull(complexArray48);
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray61);
        org.junit.Assert.assertNotNull(complexArray62);
    }

    @Test
    public void test1703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1703");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer16 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray21 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer16.transform2(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray23);
        org.apache.commons.math.complex.Complex[] complexArray28 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray29 = fastFourierTransformer8.transform2(complexArray28);
        double[] doubleArray34 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray34);
        double[] doubleArray37 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray34, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray38 = fastFourierTransformer8.transform(doubleArray34);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer0.transform(complexArray38);
        double[] doubleArray44 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray44);
        double[] doubleArray47 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray44, (double) 10.0f);
        double[] doubleArray49 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray47, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray50 = fastFourierTransformer0.transform2(doubleArray47);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer51 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray56 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray56);
        org.apache.commons.math.complex.Complex[] complexArray58 = fastFourierTransformer51.transform2(doubleArray56);
        double[] doubleArray60 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray56, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray61 = fastFourierTransformer0.transform(doubleArray56);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray61);
        org.apache.commons.math.complex.Complex[] complexArray64 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray61, (double) (byte) 10);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray61);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray38);
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray61);
        org.junit.Assert.assertNotNull(complexArray64);
    }

    @Test
    public void test1704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1704");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        double[] doubleArray16 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray13, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer8.transform(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray19 = fastFourierTransformer0.transform2(doubleArray16);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer20 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray25 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray25);
        org.apache.commons.math.complex.Complex[] complexArray27 = fastFourierTransformer20.transform2(doubleArray25);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer28 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray33 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray33);
        org.apache.commons.math.complex.Complex[] complexArray35 = fastFourierTransformer28.transform2(doubleArray33);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer36 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray41 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray41);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer36.transform2(doubleArray41);
        org.apache.commons.math.complex.Complex[] complexArray45 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray43, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray43);
        org.apache.commons.math.complex.Complex[] complexArray48 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray43, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer28.transform2(complexArray48);
        double[] doubleArray54 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray54);
        double[] doubleArray57 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray54, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray58 = fastFourierTransformer28.transform(doubleArray54);
        org.apache.commons.math.complex.Complex[] complexArray59 = fastFourierTransformer20.transform(complexArray58);
        double[] doubleArray64 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray64);
        double[] doubleArray67 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray64, (double) 10.0f);
        double[] doubleArray69 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray67, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray70 = fastFourierTransformer20.transform2(doubleArray67);
        double[] doubleArray72 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray67, 100.0d);
        double[] doubleArray74 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray67, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray75 = fastFourierTransformer0.transform2(doubleArray74);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer76 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray81 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray81);
        org.apache.commons.math.complex.Complex[] complexArray83 = fastFourierTransformer76.transform2(doubleArray81);
        org.apache.commons.math.complex.Complex[] complexArray85 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray83, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray83);
        org.apache.commons.math.complex.Complex[] complexArray88 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray83, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray90 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray83, (double) '#');
        org.apache.commons.math.complex.Complex[] complexArray91 = fastFourierTransformer0.inversetransform(complexArray83);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction92 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray96 = fastFourierTransformer0.transform2(univariateRealFunction92, (double) (-1), (double) (short) 1, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray19);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray27);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray35);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(complexArray48);
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(complexArray70);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(complexArray75);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray83);
        org.junit.Assert.assertNotNull(complexArray85);
        org.junit.Assert.assertNotNull(complexArray88);
        org.junit.Assert.assertNotNull(complexArray90);
        org.junit.Assert.assertNotNull(complexArray91);
    }

    @Test
    public void test1705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1705");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        double[] doubleArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray8, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray11 = fastFourierTransformer0.inversetransform(doubleArray10);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer12 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray17 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray17);
        org.apache.commons.math.complex.Complex[] complexArray19 = fastFourierTransformer12.transform2(doubleArray17);
        org.apache.commons.math.complex.Complex[] complexArray21 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray19, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray22 = fastFourierTransformer0.inversetransform2(complexArray21);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction23 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray27 = fastFourierTransformer0.inversetransform(univariateRealFunction23, (double) (short) 100, (double) 0.0f, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray11);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray19);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(complexArray22);
    }

    @Test
    public void test1706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1706");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer22.transform(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer0.transform(doubleArray30);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer34 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray39 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer34.transform2(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray43 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray41, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray41);
        org.apache.commons.math.complex.Complex[] complexArray46 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray41, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray47 = fastFourierTransformer0.inversetransform2(complexArray41);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer48 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer49 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray54 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray54);
        org.apache.commons.math.complex.Complex[] complexArray56 = fastFourierTransformer49.transform2(doubleArray54);
        org.apache.commons.math.complex.Complex[] complexArray58 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray56, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray59 = fastFourierTransformer48.inversetransform(complexArray56);
        org.apache.commons.math.complex.Complex[] complexArray60 = fastFourierTransformer0.inversetransform2(complexArray59);
        org.apache.commons.math.complex.Complex[] complexArray62 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray60, (double) (short) 1);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray60);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray46);
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray56);
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(complexArray62);
    }

    @Test
    public void test1707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1707");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        double[] doubleArray17 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray17);
        double[] doubleArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray17, (double) 10.0f);
        double[] doubleArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray20, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer0.transform(doubleArray20);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction24 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray28 = fastFourierTransformer0.inversetransform(univariateRealFunction24, (double) '4', (double) 0, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray23);
    }

    @Test
    public void test1708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1708");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform(doubleArray26);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer31 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray36 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray36);
        org.apache.commons.math.complex.Complex[] complexArray38 = fastFourierTransformer31.transform2(doubleArray36);
        org.apache.commons.math.complex.Complex[] complexArray40 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray38, (double) 'a');
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer0.transform2(complexArray40);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer42 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray47 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray47);
        org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer42.transform2(doubleArray47);
        org.apache.commons.math.complex.Complex[] complexArray51 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray49, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray53 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray51, (double) (byte) 100);
        org.apache.commons.math.complex.Complex[] complexArray55 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray53, (double) 0);
        org.apache.commons.math.complex.Complex[] complexArray56 = fastFourierTransformer0.transform2(complexArray55);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer57 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer58 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray63 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray63);
        double[] doubleArray66 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray63, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray66);
        org.apache.commons.math.complex.Complex[] complexArray68 = fastFourierTransformer58.inversetransform(doubleArray66);
        org.apache.commons.math.complex.Complex[] complexArray69 = fastFourierTransformer57.transform2(complexArray68);
        org.apache.commons.math.complex.Complex[] complexArray70 = fastFourierTransformer0.transform2(complexArray68);
        double[] doubleArray75 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray75);
        double[] doubleArray78 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray75, (double) 10.0f);
        double[] doubleArray80 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray78, (double) 10L);
        double[] doubleArray82 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray78, (double) (byte) 100);
        double[] doubleArray84 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray82, (double) (byte) 1);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray84);
        double[] doubleArray87 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray84, (-1.0d));
        org.apache.commons.math.complex.Complex[] complexArray88 = fastFourierTransformer0.inversetransform2(doubleArray87);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction89 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray93 = fastFourierTransformer0.inversetransform2(univariateRealFunction89, (double) '#', (double) (byte) 10, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [35.0, 10.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray38);
        org.junit.Assert.assertNotNull(complexArray40);
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(complexArray56);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(complexArray69);
        org.junit.Assert.assertNotNull(complexArray70);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[10000.0, -970000.0, -10000.0, -100000.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[10000.0, -970000.0, -10000.0, -100000.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[10000.0, -970000.0, -10000.0, -100000.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[10000.0, -970000.0, -10000.0, -100000.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[10000.0, -970000.0, -10000.0, -100000.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[10000.0, -970000.0, -10000.0, -100000.0]");
        org.junit.Assert.assertNotNull(complexArray88);
    }

    @Test
    public void test1709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1709");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, (double) (short) 1, (double) 0.0f, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1710");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform(doubleArray26);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer31 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer32 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray37 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer32.transform2(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray39, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray39);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer31.inversetransform(complexArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer44 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray49 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer44.transform2(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray53 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray51, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray51);
        org.apache.commons.math.complex.Complex[] complexArray56 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray51, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray58 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray51, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray59 = fastFourierTransformer31.transform(complexArray51);
        org.apache.commons.math.complex.Complex[] complexArray60 = fastFourierTransformer0.inversetransform2(complexArray59);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer61 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray66 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray66);
        org.apache.commons.math.complex.Complex[] complexArray68 = fastFourierTransformer61.transform2(doubleArray66);
        double[] doubleArray70 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray66, (double) (short) -1);
        org.apache.commons.math.complex.Complex[] complexArray71 = fastFourierTransformer0.inversetransform2(doubleArray66);
        org.apache.commons.math.complex.Complex[] complexArray73 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray71, (double) (byte) 1);
        org.apache.commons.math.complex.Complex[] complexArray75 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray73, (double) (short) -1);
        org.apache.commons.math.complex.Complex[] complexArray77 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray75, (double) (short) -1);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(complexArray56);
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[1.0, -97.0, -1.0, -10.0]");
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.0, -97.0, -1.0, -10.0]");
        org.junit.Assert.assertNotNull(complexArray71);
        org.junit.Assert.assertNotNull(complexArray73);
        org.junit.Assert.assertNotNull(complexArray75);
        org.junit.Assert.assertNotNull(complexArray77);
    }

    @Test
    public void test1711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1711");
        org.apache.commons.math.transform.FastFourierTransformer.verifyInterval((double) 0.0f, (double) 10L);
    }

    @Test
    public void test1712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1712");
        double[] doubleArray4 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray4);
        double[] doubleArray7 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray4, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray4);
        double[] doubleArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray4, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray10);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-100.0, 9700.0, 100.0, 1000.0]");
    }

    @Test
    public void test1713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1713");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, 10.0d, (double) (byte) 10, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1714");
        double[] doubleArray1 = new double[] { (-1.0f) };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray1);
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray1), "[-1.0]");
    }

    @Test
    public void test1715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1715");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, (double) (short) 1, (double) 100L, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1716");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        double[] doubleArray17 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray17);
        double[] doubleArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray17, (double) 10.0f);
        double[] doubleArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray20, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer0.transform(doubleArray20);
        double[] doubleArray28 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray28);
        double[] doubleArray31 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray28, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray31);
        double[] doubleArray34 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray31, 10.0d);
        org.apache.commons.math.complex.Complex[] complexArray35 = fastFourierTransformer0.transform2(doubleArray31);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer36 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray41 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray41);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer36.transform2(doubleArray41);
        org.apache.commons.math.complex.Complex[] complexArray45 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray43, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray43);
        org.apache.commons.math.complex.Complex[] complexArray48 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray43, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer0.transform2(complexArray43);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer50 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray55 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray55);
        org.apache.commons.math.complex.Complex[] complexArray57 = fastFourierTransformer50.transform2(doubleArray55);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer58 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray63 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray63);
        org.apache.commons.math.complex.Complex[] complexArray65 = fastFourierTransformer58.transform2(doubleArray63);
        org.apache.commons.math.complex.Complex[] complexArray67 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray65, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray65);
        org.apache.commons.math.complex.Complex[] complexArray70 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray65, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray71 = fastFourierTransformer50.transform2(complexArray70);
        org.apache.commons.math.complex.Complex[] complexArray73 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray70, (double) (byte) 1);
        org.apache.commons.math.complex.Complex[] complexArray74 = fastFourierTransformer0.inversetransform(complexArray73);
        double[] doubleArray79 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray79);
        double[] doubleArray82 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray79, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray79);
        org.apache.commons.math.complex.Complex[] complexArray84 = fastFourierTransformer0.transform(doubleArray79);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction85 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray89 = fastFourierTransformer0.inversetransform2(univariateRealFunction85, 1.0d, 0.0d, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray35);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(complexArray48);
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray57);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(complexArray67);
        org.junit.Assert.assertNotNull(complexArray70);
        org.junit.Assert.assertNotNull(complexArray71);
        org.junit.Assert.assertNotNull(complexArray73);
        org.junit.Assert.assertNotNull(complexArray74);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray84);
    }

    @Test
    public void test1717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1717");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer9 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray14 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray14);
        org.apache.commons.math.complex.Complex[] complexArray16 = fastFourierTransformer9.transform2(doubleArray14);
        org.apache.commons.math.complex.Complex[] complexArray18 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray16, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray16);
        org.apache.commons.math.complex.Complex[] complexArray21 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray16, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray22 = fastFourierTransformer1.transform2(complexArray21);
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray31 = fastFourierTransformer1.transform(doubleArray27);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray31);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer0.transform2(complexArray31);
        double[] doubleArray38 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray38);
        double[] doubleArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray38, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray41);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer0.inversetransform2(doubleArray41);
        double[] doubleArray48 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray48);
        double[] doubleArray51 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray48, (double) 10.0f);
        double[] doubleArray53 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray51, (double) 10L);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray51);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer0.transform(doubleArray51);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction56 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray60 = fastFourierTransformer0.transform(univariateRealFunction56, (double) ' ', 100.0d, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray16);
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(complexArray22);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray31);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray55);
    }

    @Test
    public void test1718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1718");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, (double) (short) 100, (double) 100L, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1719");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, (double) (byte) -1, (double) '#', (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1720");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.transform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray16 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer11.transform2(doubleArray16);
        double[] doubleArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray16, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.inversetransform(doubleArray16);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer22.transform(doubleArray30);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer33 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray38 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray38);
        org.apache.commons.math.complex.Complex[] complexArray40 = fastFourierTransformer33.transform2(doubleArray38);
        org.apache.commons.math.complex.Complex[] complexArray42 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray40, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray40);
        org.apache.commons.math.complex.Complex[] complexArray45 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray40, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray47 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray40, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray48 = fastFourierTransformer22.inversetransform2(complexArray47);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray47);
        org.apache.commons.math.complex.Complex[] complexArray50 = fastFourierTransformer0.transform2(complexArray47);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer51 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray56 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray56);
        org.apache.commons.math.complex.Complex[] complexArray58 = fastFourierTransformer51.transform2(doubleArray56);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer59 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray64 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray64);
        org.apache.commons.math.complex.Complex[] complexArray66 = fastFourierTransformer59.transform2(doubleArray64);
        org.apache.commons.math.complex.Complex[] complexArray68 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray66, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray66);
        org.apache.commons.math.complex.Complex[] complexArray71 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray66, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray72 = fastFourierTransformer51.transform2(complexArray71);
        double[] doubleArray77 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray77);
        double[] doubleArray80 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray77, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray81 = fastFourierTransformer51.transform2(doubleArray80);
        org.apache.commons.math.complex.Complex[] complexArray82 = fastFourierTransformer0.transform(doubleArray80);
        double[] doubleArray87 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray87);
        double[] doubleArray90 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray87, 0.0d);
        double[] doubleArray92 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray90, (double) (byte) 100);
        org.apache.commons.math.complex.Complex[] complexArray93 = fastFourierTransformer0.transform(doubleArray90);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction94 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray98 = fastFourierTransformer0.inversetransform(univariateRealFunction94, (double) 10, 0.0d, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [10.0, 0.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray40);
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(complexArray48);
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray66);
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(complexArray71);
        org.junit.Assert.assertNotNull(complexArray72);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray81);
        org.junit.Assert.assertNotNull(complexArray82);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray93);
    }

    @Test
    public void test1721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1721");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform(doubleArray26);
        double[] doubleArray35 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray35);
        double[] doubleArray38 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray35, (double) 10.0f);
        double[] doubleArray40 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray38, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer0.transform2(doubleArray40);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray41);
        java.lang.Class<?> wildcardClass43 = complexArray41.getClass();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test1722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1722");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform(doubleArray26);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer31 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray36 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray36);
        org.apache.commons.math.complex.Complex[] complexArray38 = fastFourierTransformer31.transform2(doubleArray36);
        org.apache.commons.math.complex.Complex[] complexArray40 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray38, (double) 'a');
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer0.transform2(complexArray40);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer42 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray47 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray47);
        org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer42.transform2(doubleArray47);
        org.apache.commons.math.complex.Complex[] complexArray51 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray49, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray53 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray51, (double) (byte) 100);
        org.apache.commons.math.complex.Complex[] complexArray55 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray53, (double) 0);
        org.apache.commons.math.complex.Complex[] complexArray56 = fastFourierTransformer0.transform2(complexArray55);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction57 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray61 = fastFourierTransformer0.inversetransform2(univariateRealFunction57, (double) (byte) 100, (double) 1L, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [100.0, 1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray38);
        org.junit.Assert.assertNotNull(complexArray40);
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(complexArray56);
    }

    @Test
    public void test1723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1723");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, (double) (-1.0f), (double) (byte) 100, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1724");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.inversetransform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer12 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray17 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray17);
        org.apache.commons.math.complex.Complex[] complexArray19 = fastFourierTransformer12.transform2(doubleArray17);
        org.apache.commons.math.complex.Complex[] complexArray21 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray19, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray19);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer11.inversetransform(complexArray19);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer24 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray29 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray29);
        org.apache.commons.math.complex.Complex[] complexArray31 = fastFourierTransformer24.transform2(doubleArray29);
        double[] doubleArray33 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray29, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray34 = fastFourierTransformer11.inversetransform(doubleArray29);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer35 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer36 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray41 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray41);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer36.transform2(doubleArray41);
        org.apache.commons.math.complex.Complex[] complexArray45 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray43, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray43);
        org.apache.commons.math.complex.Complex[] complexArray47 = fastFourierTransformer35.inversetransform(complexArray43);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer48 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray53 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray53);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer48.transform2(doubleArray53);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer56 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray61 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer56.transform2(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray65 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray63, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray63);
        org.apache.commons.math.complex.Complex[] complexArray68 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray63, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray69 = fastFourierTransformer48.transform2(complexArray68);
        double[] doubleArray74 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray74);
        double[] doubleArray77 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray74, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray78 = fastFourierTransformer48.transform(doubleArray74);
        org.apache.commons.math.complex.Complex[] complexArray79 = fastFourierTransformer35.transform(doubleArray74);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray74);
        org.apache.commons.math.complex.Complex[] complexArray81 = fastFourierTransformer11.inversetransform2(doubleArray74);
        org.apache.commons.math.complex.Complex[] complexArray82 = fastFourierTransformer0.transform2(complexArray81);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction83 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray87 = fastFourierTransformer0.transform(univariateRealFunction83, (double) 10.0f, (double) 100L, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray19);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray31);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(complexArray69);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray78);
        org.junit.Assert.assertNotNull(complexArray79);
        org.junit.Assert.assertNotNull(complexArray81);
        org.junit.Assert.assertNotNull(complexArray82);
    }

    @Test
    public void test1725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1725");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer22.transform(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer0.transform(doubleArray30);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer34 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray39 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer34.transform2(doubleArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer42 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray47 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray47);
        org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer42.transform2(doubleArray47);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer50 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray55 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray55);
        org.apache.commons.math.complex.Complex[] complexArray57 = fastFourierTransformer50.transform2(doubleArray55);
        org.apache.commons.math.complex.Complex[] complexArray59 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray57, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray57);
        org.apache.commons.math.complex.Complex[] complexArray62 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray57, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer42.transform2(complexArray62);
        double[] doubleArray68 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray68);
        double[] doubleArray71 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray68, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray72 = fastFourierTransformer42.transform(doubleArray68);
        org.apache.commons.math.complex.Complex[] complexArray73 = fastFourierTransformer34.transform(complexArray72);
        org.apache.commons.math.complex.Complex[] complexArray75 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray72, (double) (-1.0f));
        org.apache.commons.math.complex.Complex[] complexArray76 = fastFourierTransformer0.inversetransform2(complexArray72);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction77 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray81 = fastFourierTransformer0.transform2(univariateRealFunction77, (double) '4', 10.0d, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray57);
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray72);
        org.junit.Assert.assertNotNull(complexArray73);
        org.junit.Assert.assertNotNull(complexArray75);
        org.junit.Assert.assertNotNull(complexArray76);
    }

    @Test
    public void test1726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1726");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.transform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray16 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer11.transform2(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray19 = fastFourierTransformer0.inversetransform2(complexArray18);
        double[] doubleArray24 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray24);
        double[] doubleArray27 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray24, (double) 10.0f);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10L);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray29);
        org.apache.commons.math.complex.Complex[] complexArray31 = fastFourierTransformer0.inversetransform2(doubleArray29);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction32 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray36 = fastFourierTransformer0.inversetransform2(univariateRealFunction32, 0.0d, (double) (byte) 0, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [0.0, 0.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray19);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray31);
    }

    @Test
    public void test1727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1727");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray11 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer12 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray17 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray17);
        org.apache.commons.math.complex.Complex[] complexArray19 = fastFourierTransformer12.transform2(doubleArray17);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer20 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray25 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray25);
        org.apache.commons.math.complex.Complex[] complexArray27 = fastFourierTransformer20.transform2(doubleArray25);
        org.apache.commons.math.complex.Complex[] complexArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray27, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray27);
        org.apache.commons.math.complex.Complex[] complexArray32 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray27, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer12.transform2(complexArray32);
        double[] doubleArray38 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray38);
        double[] doubleArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray38, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray41);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray41);
        double[] doubleArray45 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray41, (double) (byte) 10);
        double[] doubleArray47 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray45, (double) (byte) 0);
        org.apache.commons.math.complex.Complex[] complexArray48 = fastFourierTransformer12.transform2(doubleArray45);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer49 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer50 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray55 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray55);
        org.apache.commons.math.complex.Complex[] complexArray57 = fastFourierTransformer50.transform2(doubleArray55);
        org.apache.commons.math.complex.Complex[] complexArray59 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray57, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray57);
        org.apache.commons.math.complex.Complex[] complexArray61 = fastFourierTransformer49.inversetransform(complexArray57);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer62 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray67 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray67);
        org.apache.commons.math.complex.Complex[] complexArray69 = fastFourierTransformer62.transform2(doubleArray67);
        org.apache.commons.math.complex.Complex[] complexArray70 = fastFourierTransformer49.transform(complexArray69);
        org.apache.commons.math.complex.Complex[] complexArray71 = fastFourierTransformer12.inversetransform(complexArray69);
        double[] doubleArray76 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray76);
        double[] doubleArray79 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray76, (double) 10.0f);
        double[] doubleArray81 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray79, (double) 10L);
        double[] doubleArray83 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray79, (double) (byte) 100);
        org.apache.commons.math.complex.Complex[] complexArray84 = fastFourierTransformer12.inversetransform(doubleArray83);
        org.apache.commons.math.complex.Complex[] complexArray85 = fastFourierTransformer0.transform(doubleArray83);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction86 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray90 = fastFourierTransformer0.transform2(univariateRealFunction86, (double) 10, 10.0d, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray11);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray19);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray27);
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray48);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray57);
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(complexArray61);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray69);
        org.junit.Assert.assertNotNull(complexArray70);
        org.junit.Assert.assertNotNull(complexArray71);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(complexArray84);
        org.junit.Assert.assertNotNull(complexArray85);
    }

    @Test
    public void test1728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1728");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray11 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer12 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray20, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray20);
        org.apache.commons.math.complex.Complex[] complexArray24 = fastFourierTransformer12.inversetransform(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer25 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray30 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer25.transform2(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer12.transform(complexArray32);
        org.apache.commons.math.complex.Complex[] complexArray34 = fastFourierTransformer0.transform2(complexArray32);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction35 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer0.transform2(univariateRealFunction35, (double) (byte) 100, (double) (byte) 10, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [100.0, 10.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray11);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray22);
        org.junit.Assert.assertNotNull(complexArray24);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(complexArray34);
    }

    @Test
    public void test1729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1729");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform(doubleArray26);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer31 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray36 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray36);
        double[] doubleArray39 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray36, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer31.transform(doubleArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer42 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray47 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray47);
        org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer42.transform2(doubleArray47);
        double[] doubleArray51 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray47, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer31.inversetransform(doubleArray47);
        org.apache.commons.math.complex.Complex[] complexArray53 = fastFourierTransformer0.transform2(doubleArray47);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer54 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer55 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray60 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray60);
        org.apache.commons.math.complex.Complex[] complexArray62 = fastFourierTransformer55.transform2(doubleArray60);
        org.apache.commons.math.complex.Complex[] complexArray64 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray62, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray62);
        org.apache.commons.math.complex.Complex[] complexArray66 = fastFourierTransformer54.inversetransform(complexArray62);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer67 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray72 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray72);
        org.apache.commons.math.complex.Complex[] complexArray74 = fastFourierTransformer67.transform2(doubleArray72);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer75 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray80 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray80);
        org.apache.commons.math.complex.Complex[] complexArray82 = fastFourierTransformer75.transform2(doubleArray80);
        org.apache.commons.math.complex.Complex[] complexArray84 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray82, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray82);
        org.apache.commons.math.complex.Complex[] complexArray87 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray82, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray88 = fastFourierTransformer67.transform2(complexArray87);
        double[] doubleArray93 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray93);
        double[] doubleArray96 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray93, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray97 = fastFourierTransformer67.transform(doubleArray93);
        org.apache.commons.math.complex.Complex[] complexArray98 = fastFourierTransformer54.transform(doubleArray93);
        org.apache.commons.math.complex.Complex[] complexArray99 = fastFourierTransformer0.transform2(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(complexArray64);
        org.junit.Assert.assertNotNull(complexArray66);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray74);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray82);
        org.junit.Assert.assertNotNull(complexArray84);
        org.junit.Assert.assertNotNull(complexArray87);
        org.junit.Assert.assertNotNull(complexArray88);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray96), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray97);
        org.junit.Assert.assertNotNull(complexArray98);
        org.junit.Assert.assertNotNull(complexArray99);
    }

    @Test
    public void test1730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1730");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform(doubleArray26);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer31 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer32 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray37 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer32.transform2(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray39, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray39);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer31.inversetransform(complexArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer44 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray49 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer44.transform2(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray53 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray51, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray51);
        org.apache.commons.math.complex.Complex[] complexArray56 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray51, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray58 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray51, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray59 = fastFourierTransformer31.transform(complexArray51);
        org.apache.commons.math.complex.Complex[] complexArray60 = fastFourierTransformer0.inversetransform2(complexArray59);
        double[] doubleArray65 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray65);
        org.apache.commons.math.complex.Complex[] complexArray67 = fastFourierTransformer0.transform(doubleArray65);
        double[] doubleArray72 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray72);
        double[] doubleArray75 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray72, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray75);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray75);
        double[] doubleArray79 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray75, (double) (byte) 10);
        double[] doubleArray81 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray79, (double) (byte) 0);
        org.apache.commons.math.complex.Complex[] complexArray82 = fastFourierTransformer0.transform(doubleArray81);
        double[] doubleArray83 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray84 = fastFourierTransformer0.transform2(doubleArray83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(complexArray56);
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray67);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray82);
    }

    @Test
    public void test1731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1731");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.transform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray16 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer11.transform2(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray19 = fastFourierTransformer0.inversetransform2(complexArray18);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer20 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer21 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        org.apache.commons.math.complex.Complex[] complexArray28 = fastFourierTransformer21.transform2(doubleArray26);
        org.apache.commons.math.complex.Complex[] complexArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray28, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray28);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer20.inversetransform(complexArray28);
        double[] doubleArray37 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray37);
        double[] doubleArray40 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray37, (double) 10.0f);
        double[] doubleArray42 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray40, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer20.transform(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray45 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray43, (-1.0d));
        org.apache.commons.math.complex.Complex[] complexArray46 = fastFourierTransformer0.transform2(complexArray43);
        double[] doubleArray51 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray51);
        double[] doubleArray54 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray51, (double) 10.0f);
        double[] doubleArray56 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray51, (double) (short) 100);
        org.apache.commons.math.complex.Complex[] complexArray57 = fastFourierTransformer0.inversetransform2(doubleArray51);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction58 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray62 = fastFourierTransformer0.transform2(univariateRealFunction58, 100.0d, (double) 0.0f, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray19);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(complexArray46);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1000.0, 97000.0, 1000.0, 10000.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1000.0, 97000.0, 1000.0, 10000.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1000.0, 97000.0, 1000.0, 10000.0]");
        org.junit.Assert.assertNotNull(complexArray57);
    }

    @Test
    public void test1732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1732");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, (double) (-1L), (double) (byte) 1, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1733");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform(doubleArray26);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer31 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer32 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray37 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer32.transform2(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray39, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray39);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer31.inversetransform(complexArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer44 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray49 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer44.transform2(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer31.transform(complexArray51);
        org.apache.commons.math.complex.Complex[] complexArray53 = fastFourierTransformer0.transform2(complexArray52);
        double[] doubleArray58 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray58);
        double[] doubleArray61 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray58, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer0.inversetransform2(doubleArray61);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer64 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer65 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray70 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray70);
        org.apache.commons.math.complex.Complex[] complexArray72 = fastFourierTransformer65.transform2(doubleArray70);
        org.apache.commons.math.complex.Complex[] complexArray74 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray72, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray72);
        org.apache.commons.math.complex.Complex[] complexArray76 = fastFourierTransformer64.inversetransform(complexArray72);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer77 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray82 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray82);
        org.apache.commons.math.complex.Complex[] complexArray84 = fastFourierTransformer77.transform2(doubleArray82);
        double[] doubleArray86 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray82, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray87 = fastFourierTransformer64.inversetransform(doubleArray82);
        org.apache.commons.math.complex.Complex[] complexArray88 = fastFourierTransformer0.transform(doubleArray82);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray82);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray82);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray82);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray82);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray72);
        org.junit.Assert.assertNotNull(complexArray74);
        org.junit.Assert.assertNotNull(complexArray76);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray84);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray87);
        org.junit.Assert.assertNotNull(complexArray88);
    }

    @Test
    public void test1734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1734");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.transform.FastFourierTransformer.verifyInterval(1.0d, (double) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [1.0, 0.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1735");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer14 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray19 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray19);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer14.transform2(doubleArray19);
        org.apache.commons.math.complex.Complex[] complexArray23 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray21, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray21);
        org.apache.commons.math.complex.Complex[] complexArray25 = fastFourierTransformer13.inversetransform(complexArray21);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer26 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray31 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray31);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer26.transform2(doubleArray31);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer34 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray39 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer34.transform2(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray43 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray41, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray41);
        org.apache.commons.math.complex.Complex[] complexArray46 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray41, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray47 = fastFourierTransformer26.transform2(complexArray46);
        double[] doubleArray52 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray52);
        double[] doubleArray55 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray52, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray56 = fastFourierTransformer26.transform(doubleArray52);
        org.apache.commons.math.complex.Complex[] complexArray57 = fastFourierTransformer13.transform(doubleArray52);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray52);
        org.apache.commons.math.complex.Complex[] complexArray59 = fastFourierTransformer0.transform(doubleArray52);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer60 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray65 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray65);
        org.apache.commons.math.complex.Complex[] complexArray67 = fastFourierTransformer60.transform2(doubleArray65);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer68 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray73 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray73);
        org.apache.commons.math.complex.Complex[] complexArray75 = fastFourierTransformer68.transform2(doubleArray73);
        org.apache.commons.math.complex.Complex[] complexArray77 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray75, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray75);
        org.apache.commons.math.complex.Complex[] complexArray80 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray75, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray81 = fastFourierTransformer60.transform2(complexArray80);
        double[] doubleArray86 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray86);
        double[] doubleArray89 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray86, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray90 = fastFourierTransformer60.transform2(doubleArray89);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray90);
        org.apache.commons.math.complex.Complex[] complexArray92 = fastFourierTransformer0.inversetransform2(complexArray90);
        org.apache.commons.math.complex.Complex[] complexArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray94 = fastFourierTransformer0.inversetransform(complexArray93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray46);
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray56);
        org.junit.Assert.assertNotNull(complexArray57);
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray67);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray75);
        org.junit.Assert.assertNotNull(complexArray77);
        org.junit.Assert.assertNotNull(complexArray80);
        org.junit.Assert.assertNotNull(complexArray81);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray90);
        org.junit.Assert.assertNotNull(complexArray92);
    }

    @Test
    public void test1736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1736");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer22.transform(doubleArray30);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer33 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray38 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray38);
        org.apache.commons.math.complex.Complex[] complexArray40 = fastFourierTransformer33.transform2(doubleArray38);
        org.apache.commons.math.complex.Complex[] complexArray42 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray40, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray40);
        org.apache.commons.math.complex.Complex[] complexArray45 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray40, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray47 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray40, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray48 = fastFourierTransformer22.inversetransform2(complexArray47);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer49 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer50 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray55 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray55);
        org.apache.commons.math.complex.Complex[] complexArray57 = fastFourierTransformer50.transform2(doubleArray55);
        org.apache.commons.math.complex.Complex[] complexArray59 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray57, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray57);
        org.apache.commons.math.complex.Complex[] complexArray61 = fastFourierTransformer49.inversetransform(complexArray57);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray57);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer22.inversetransform(complexArray57);
        org.apache.commons.math.complex.Complex[] complexArray64 = fastFourierTransformer0.inversetransform2(complexArray57);
        double[] doubleArray69 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray69);
        double[] doubleArray72 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray69, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray72);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray72);
        double[] doubleArray76 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray72, (double) (byte) 10);
        double[] doubleArray78 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray76, (double) (byte) 0);
        org.apache.commons.math.complex.Complex[] complexArray79 = fastFourierTransformer0.transform2(doubleArray76);
        org.apache.commons.math.complex.Complex[] complexArray81 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray79, (double) (byte) 10);
        org.apache.commons.math.complex.Complex[] complexArray83 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray81, (double) (byte) 1);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray40);
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(complexArray48);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray57);
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(complexArray61);
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(complexArray64);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray79);
        org.junit.Assert.assertNotNull(complexArray81);
        org.junit.Assert.assertNotNull(complexArray83);
    }

    @Test
    public void test1737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1737");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.transform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray16 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer11.transform2(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray19 = fastFourierTransformer0.inversetransform2(complexArray18);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer20 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray25 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray25);
        org.apache.commons.math.complex.Complex[] complexArray27 = fastFourierTransformer20.transform2(doubleArray25);
        org.apache.commons.math.complex.Complex[] complexArray28 = fastFourierTransformer0.transform(complexArray27);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer29 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray34 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray34);
        double[] doubleArray37 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray34, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer29.transform(doubleArray37);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer40 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer41 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray46 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray46);
        org.apache.commons.math.complex.Complex[] complexArray48 = fastFourierTransformer41.transform2(doubleArray46);
        org.apache.commons.math.complex.Complex[] complexArray50 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray48, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray48);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer40.inversetransform(complexArray48);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer53 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray58 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray58);
        org.apache.commons.math.complex.Complex[] complexArray60 = fastFourierTransformer53.transform2(doubleArray58);
        org.apache.commons.math.complex.Complex[] complexArray61 = fastFourierTransformer40.transform(complexArray60);
        double[] doubleArray66 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray66);
        double[] doubleArray69 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray66, (double) 10.0f);
        double[] doubleArray71 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray69, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray72 = fastFourierTransformer40.inversetransform2(doubleArray71);
        org.apache.commons.math.complex.Complex[] complexArray73 = fastFourierTransformer29.inversetransform2(doubleArray71);
        double[] doubleArray75 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray71, (-1.0d));
        double[] doubleArray77 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray75, (double) 0.0f);
        org.apache.commons.math.complex.Complex[] complexArray78 = fastFourierTransformer0.inversetransform(doubleArray75);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction79 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray83 = fastFourierTransformer0.transform(univariateRealFunction79, (double) (short) 100, (double) (short) -1, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray19);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray27);
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray48);
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(complexArray61);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[0.0, -0.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[0.0, -0.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[0.0, -0.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(complexArray72);
        org.junit.Assert.assertNotNull(complexArray73);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[0.0, -0.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[0.0, -0.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(complexArray78);
    }

    @Test
    public void test1738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1738");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer16 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray21 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer16.transform2(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray23);
        org.apache.commons.math.complex.Complex[] complexArray28 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray29 = fastFourierTransformer8.transform2(complexArray28);
        double[] doubleArray34 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray34);
        double[] doubleArray37 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray34, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray38 = fastFourierTransformer8.transform(doubleArray34);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer0.transform(complexArray38);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer40 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray45 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray45);
        org.apache.commons.math.complex.Complex[] complexArray47 = fastFourierTransformer40.transform2(doubleArray45);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer48 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray53 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray53);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer48.transform2(doubleArray53);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer56 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray61 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer56.transform2(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray65 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray63, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray63);
        org.apache.commons.math.complex.Complex[] complexArray68 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray63, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray69 = fastFourierTransformer48.transform2(complexArray68);
        double[] doubleArray74 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray74);
        double[] doubleArray77 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray74, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray78 = fastFourierTransformer48.transform(doubleArray74);
        org.apache.commons.math.complex.Complex[] complexArray79 = fastFourierTransformer40.transform(complexArray78);
        org.apache.commons.math.complex.Complex[] complexArray80 = fastFourierTransformer0.inversetransform(complexArray78);
        double[] doubleArray81 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray82 = fastFourierTransformer0.transform2(doubleArray81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray38);
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(complexArray69);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray78);
        org.junit.Assert.assertNotNull(complexArray79);
        org.junit.Assert.assertNotNull(complexArray80);
    }

    @Test
    public void test1739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1739");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer23 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray28 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray28);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer23.transform2(doubleArray28);
        org.apache.commons.math.complex.Complex[] complexArray32 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray30, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray30);
        org.apache.commons.math.complex.Complex[] complexArray34 = fastFourierTransformer22.inversetransform(complexArray30);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer35 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray40 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray42 = fastFourierTransformer35.transform2(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer22.transform(complexArray42);
        org.apache.commons.math.complex.Complex[] complexArray44 = fastFourierTransformer0.inversetransform(complexArray42);
        org.apache.commons.math.complex.Complex[] complexArray46 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray44, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray48 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray46, (double) '4');
        org.apache.commons.math.complex.Complex[] complexArray50 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray48, (double) 0);
        org.apache.commons.math.complex.Complex[] complexArray52 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray50, (double) (-1));
        java.lang.Class<?> wildcardClass53 = complexArray50.getClass();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(complexArray46);
        org.junit.Assert.assertNotNull(complexArray48);
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test1740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1740");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer9 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray14 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray14);
        org.apache.commons.math.complex.Complex[] complexArray16 = fastFourierTransformer9.transform2(doubleArray14);
        org.apache.commons.math.complex.Complex[] complexArray18 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray16, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray16);
        org.apache.commons.math.complex.Complex[] complexArray21 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray16, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray22 = fastFourierTransformer1.transform2(complexArray21);
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray31 = fastFourierTransformer1.transform(doubleArray27);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray31);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer0.transform2(complexArray31);
        double[] doubleArray38 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray38);
        double[] doubleArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray38, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray41);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer0.inversetransform2(doubleArray41);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction44 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray48 = fastFourierTransformer0.inversetransform(univariateRealFunction44, (double) (byte) 100, (double) 100, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [100.0, 100.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray16);
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(complexArray22);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray31);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray43);
    }

    @Test
    public void test1741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1741");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, 0.0d, (double) 'a', (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1742");
        org.apache.commons.math.transform.FastFourierTransformer.verifyInterval((double) (-1L), (double) 1.0f);
    }

    @Test
    public void test1743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1743");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer22.transform(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer0.transform(doubleArray30);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer34 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray39 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer34.transform2(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray43 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray41, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray41);
        org.apache.commons.math.complex.Complex[] complexArray46 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray41, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray47 = fastFourierTransformer0.inversetransform2(complexArray41);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer48 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray53 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray53);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer48.transform2(doubleArray53);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer56 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray61 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer56.transform2(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray65 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray63, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray63);
        org.apache.commons.math.complex.Complex[] complexArray68 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray63, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray69 = fastFourierTransformer48.transform2(complexArray68);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer70 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray75 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray75);
        double[] doubleArray78 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray75, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray78);
        org.apache.commons.math.complex.Complex[] complexArray80 = fastFourierTransformer70.transform(doubleArray78);
        org.apache.commons.math.complex.Complex[] complexArray81 = fastFourierTransformer48.transform(doubleArray78);
        org.apache.commons.math.complex.Complex[] complexArray82 = fastFourierTransformer0.inversetransform2(doubleArray78);
        double[] doubleArray87 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray87);
        double[] doubleArray90 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray87, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray90);
        org.apache.commons.math.complex.Complex[] complexArray92 = fastFourierTransformer0.inversetransform2(doubleArray90);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction93 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray97 = fastFourierTransformer0.transform2(univariateRealFunction93, (double) (short) 10, (-1.0d), (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray46);
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(complexArray69);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray80);
        org.junit.Assert.assertNotNull(complexArray81);
        org.junit.Assert.assertNotNull(complexArray82);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray92);
    }

    @Test
    public void test1744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1744");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform(doubleArray26);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray30);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray30);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
    }

    @Test
    public void test1745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1745");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.transform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer12 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray17 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray17);
        org.apache.commons.math.complex.Complex[] complexArray19 = fastFourierTransformer12.transform2(doubleArray17);
        org.apache.commons.math.complex.Complex[] complexArray21 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray19, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray19);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer11.inversetransform(complexArray19);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer24 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray29 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray29);
        org.apache.commons.math.complex.Complex[] complexArray31 = fastFourierTransformer24.transform2(doubleArray29);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer11.transform(complexArray31);
        double[] doubleArray37 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray37);
        double[] doubleArray40 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray37, (double) 10.0f);
        double[] doubleArray42 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray40, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer11.inversetransform2(doubleArray42);
        org.apache.commons.math.complex.Complex[] complexArray44 = fastFourierTransformer0.inversetransform2(doubleArray42);
        double[] doubleArray46 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray42, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray19);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray31);
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1000.0, 97000.0, 1000.0, 10000.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1000.0, 97000.0, 1000.0, 10000.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1000.0, 97000.0, 1000.0, 10000.0]");
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1000.0, 97000.0, 1000.0, 10000.0]");
    }

    @Test
    public void test1746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1746");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform2(doubleArray29);
        double[] doubleArray35 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray35);
        double[] doubleArray38 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray35, (double) (byte) 100);
        double[] doubleArray40 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray35, (double) 0);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray35);
        org.apache.commons.math.complex.Complex[] complexArray42 = fastFourierTransformer0.transform2(doubleArray35);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer43 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray48 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray48);
        double[] doubleArray51 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray48, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray51);
        org.apache.commons.math.complex.Complex[] complexArray53 = fastFourierTransformer43.transform(doubleArray51);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer54 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray59 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray59);
        org.apache.commons.math.complex.Complex[] complexArray61 = fastFourierTransformer54.transform2(doubleArray59);
        org.apache.commons.math.complex.Complex[] complexArray63 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray61, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray61);
        org.apache.commons.math.complex.Complex[] complexArray66 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray61, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray68 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray61, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray69 = fastFourierTransformer43.inversetransform2(complexArray68);
        double[] doubleArray74 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray74);
        double[] doubleArray77 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray74, (double) 10.0f);
        double[] doubleArray79 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray77, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray80 = fastFourierTransformer43.transform(doubleArray77);
        org.apache.commons.math.complex.Complex[] complexArray81 = fastFourierTransformer0.inversetransform2(doubleArray77);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction82 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray86 = fastFourierTransformer0.transform2(univariateRealFunction82, (double) (byte) 1, (double) 10, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray61);
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(complexArray66);
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(complexArray69);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray80);
        org.junit.Assert.assertNotNull(complexArray81);
    }

    @Test
    public void test1747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1747");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform(doubleArray26);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer31 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer32 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray37 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer32.transform2(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray39, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray39);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer31.inversetransform(complexArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer44 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray49 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer44.transform2(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer31.transform(complexArray51);
        org.apache.commons.math.complex.Complex[] complexArray53 = fastFourierTransformer0.transform2(complexArray52);
        double[] doubleArray58 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray58);
        double[] doubleArray61 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray58, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer0.inversetransform2(doubleArray61);
        double[] doubleArray68 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray68);
        double[] doubleArray71 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray68, 0.0d);
        org.apache.commons.math.complex.Complex[] complexArray72 = fastFourierTransformer0.inversetransform(doubleArray71);
        double[] doubleArray74 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray71, (double) 100L);
        double[] doubleArray76 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray74, (double) (short) 10);
        double[] doubleArray78 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray74, (double) 10.0f);
        double[] doubleArray80 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray74, (double) 10);
        double[] doubleArray82 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray74, (double) (-1.0f));
        double[] doubleArray84 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray74, (double) ' ');
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[0.0, -0.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[0.0, -0.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(complexArray72);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[0.0, -0.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[0.0, -0.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[0.0, -0.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[0.0, -0.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[0.0, -0.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[0.0, -0.0, -0.0, -0.0]");
    }

    @Test
    public void test1748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1748");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer16 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray21 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer16.transform2(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray23);
        org.apache.commons.math.complex.Complex[] complexArray28 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray29 = fastFourierTransformer8.transform2(complexArray28);
        double[] doubleArray34 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray34);
        double[] doubleArray37 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray34, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray38 = fastFourierTransformer8.transform(doubleArray34);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer0.transform(complexArray38);
        double[] doubleArray44 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray44);
        double[] doubleArray47 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray44, (double) 10.0f);
        double[] doubleArray49 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray47, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray50 = fastFourierTransformer0.transform2(doubleArray47);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer51 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray56 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray56);
        org.apache.commons.math.complex.Complex[] complexArray58 = fastFourierTransformer51.transform2(doubleArray56);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer59 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray64 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray64);
        org.apache.commons.math.complex.Complex[] complexArray66 = fastFourierTransformer59.transform2(doubleArray64);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer67 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray72 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray72);
        org.apache.commons.math.complex.Complex[] complexArray74 = fastFourierTransformer67.transform2(doubleArray72);
        org.apache.commons.math.complex.Complex[] complexArray76 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray74, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray74);
        org.apache.commons.math.complex.Complex[] complexArray79 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray74, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray80 = fastFourierTransformer59.transform2(complexArray79);
        double[] doubleArray85 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray85);
        double[] doubleArray88 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray85, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray89 = fastFourierTransformer59.transform(doubleArray85);
        org.apache.commons.math.complex.Complex[] complexArray90 = fastFourierTransformer51.transform(complexArray89);
        org.apache.commons.math.complex.Complex[] complexArray92 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray89, (double) (-1.0f));
        org.apache.commons.math.complex.Complex[] complexArray93 = fastFourierTransformer0.transform2(complexArray92);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray92);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray38);
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray66);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray74);
        org.junit.Assert.assertNotNull(complexArray76);
        org.junit.Assert.assertNotNull(complexArray79);
        org.junit.Assert.assertNotNull(complexArray80);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray89);
        org.junit.Assert.assertNotNull(complexArray90);
        org.junit.Assert.assertNotNull(complexArray92);
        org.junit.Assert.assertNotNull(complexArray93);
    }

    @Test
    public void test1749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1749");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.transform.FastFourierTransformer.verifyInterval((double) (byte) 10, (double) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [10.0, 0.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1750");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform(doubleArray26);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer31 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer32 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray37 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer32.transform2(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray39, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray39);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer31.inversetransform(complexArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer44 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray49 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer44.transform2(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer31.transform(complexArray51);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer53 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray58 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray58);
        org.apache.commons.math.complex.Complex[] complexArray60 = fastFourierTransformer53.transform2(doubleArray58);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer61 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray66 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray66);
        org.apache.commons.math.complex.Complex[] complexArray68 = fastFourierTransformer61.transform2(doubleArray66);
        org.apache.commons.math.complex.Complex[] complexArray70 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray68, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray68);
        org.apache.commons.math.complex.Complex[] complexArray73 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray68, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray74 = fastFourierTransformer53.transform2(complexArray73);
        double[] doubleArray79 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray79);
        double[] doubleArray82 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray79, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray83 = fastFourierTransformer53.transform2(doubleArray82);
        org.apache.commons.math.complex.Complex[] complexArray84 = fastFourierTransformer31.inversetransform2(doubleArray82);
        org.apache.commons.math.complex.Complex[] complexArray85 = fastFourierTransformer0.transform2(complexArray84);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction86 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray90 = fastFourierTransformer0.transform2(univariateRealFunction86, 100.0d, (double) 1.0f, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(complexArray70);
        org.junit.Assert.assertNotNull(complexArray73);
        org.junit.Assert.assertNotNull(complexArray74);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray83);
        org.junit.Assert.assertNotNull(complexArray84);
        org.junit.Assert.assertNotNull(complexArray85);
    }

    @Test
    public void test1751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1751");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray20, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray20);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray20, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray27 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray20, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray28 = fastFourierTransformer0.transform(complexArray20);
        double[] doubleArray33 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray33);
        double[] doubleArray36 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray33, (double) 10.0f);
        double[] doubleArray38 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray36, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer0.transform2(doubleArray36);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer40 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray45 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray45);
        org.apache.commons.math.complex.Complex[] complexArray47 = fastFourierTransformer40.transform2(doubleArray45);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer48 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray53 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray53);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer48.transform2(doubleArray53);
        org.apache.commons.math.complex.Complex[] complexArray57 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray55, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray55);
        org.apache.commons.math.complex.Complex[] complexArray60 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray55, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray61 = fastFourierTransformer40.transform2(complexArray60);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer62 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray67 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray67);
        double[] doubleArray70 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray67, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray70);
        org.apache.commons.math.complex.Complex[] complexArray72 = fastFourierTransformer62.transform(doubleArray70);
        org.apache.commons.math.complex.Complex[] complexArray73 = fastFourierTransformer40.transform(doubleArray70);
        double[] doubleArray78 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray78);
        double[] doubleArray81 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray78, (double) 10.0f);
        double[] doubleArray83 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray81, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray84 = fastFourierTransformer40.inversetransform(doubleArray83);
        double[] doubleArray89 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray89);
        double[] doubleArray92 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray89, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray93 = fastFourierTransformer40.inversetransform2(doubleArray89);
        org.apache.commons.math.complex.Complex[] complexArray94 = fastFourierTransformer0.inversetransform2(doubleArray89);
        double[] doubleArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray96 = fastFourierTransformer0.transform(doubleArray95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray22);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray27);
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(complexArray57);
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(complexArray61);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray72);
        org.junit.Assert.assertNotNull(complexArray73);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray84);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray93);
        org.junit.Assert.assertNotNull(complexArray94);
    }

    @Test
    public void test1752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1752");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer9 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray14 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray14);
        org.apache.commons.math.complex.Complex[] complexArray16 = fastFourierTransformer9.transform2(doubleArray14);
        org.apache.commons.math.complex.Complex[] complexArray18 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray16, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray16);
        org.apache.commons.math.complex.Complex[] complexArray21 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray16, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray22 = fastFourierTransformer1.transform2(complexArray21);
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray31 = fastFourierTransformer1.transform(doubleArray27);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray31);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer0.transform2(complexArray31);
        double[] doubleArray38 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray38);
        double[] doubleArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray38, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray41);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer0.inversetransform2(doubleArray41);
        double[] doubleArray48 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray48);
        double[] doubleArray51 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray48, (double) 10.0f);
        double[] doubleArray53 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray51, (double) 10L);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray51);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer0.transform(doubleArray51);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction56 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray60 = fastFourierTransformer0.inversetransform(univariateRealFunction56, 0.0d, 0.0d, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [0.0, 0.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray16);
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(complexArray22);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray31);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray55);
    }

    @Test
    public void test1753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1753");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        double[] doubleArray17 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray17);
        double[] doubleArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray17, (double) 10.0f);
        double[] doubleArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray20, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer0.transform(doubleArray20);
        double[] doubleArray28 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray28);
        double[] doubleArray31 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray28, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray31);
        double[] doubleArray34 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray31, 10.0d);
        org.apache.commons.math.complex.Complex[] complexArray35 = fastFourierTransformer0.transform2(doubleArray31);
        double[] doubleArray40 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray40);
        double[] doubleArray43 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray40, (double) 10.0f);
        double[] doubleArray45 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray43, (double) (byte) -1);
        org.apache.commons.math.complex.Complex[] complexArray46 = fastFourierTransformer0.inversetransform(doubleArray43);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction47 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer0.inversetransform(univariateRealFunction47, (double) 100.0f, (double) 10L, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray35);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(complexArray46);
    }

    @Test
    public void test1754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1754");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray11 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer12 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray17 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray17);
        org.apache.commons.math.complex.Complex[] complexArray19 = fastFourierTransformer12.transform2(doubleArray17);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer20 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray25 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray25);
        org.apache.commons.math.complex.Complex[] complexArray27 = fastFourierTransformer20.transform2(doubleArray25);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer28 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray33 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray33);
        org.apache.commons.math.complex.Complex[] complexArray35 = fastFourierTransformer28.transform2(doubleArray33);
        org.apache.commons.math.complex.Complex[] complexArray37 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray35, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray35);
        org.apache.commons.math.complex.Complex[] complexArray40 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray35, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer20.transform2(complexArray40);
        double[] doubleArray46 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray46);
        double[] doubleArray49 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray46, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray50 = fastFourierTransformer20.transform(doubleArray46);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer12.transform(complexArray50);
        org.apache.commons.math.complex.Complex[] complexArray53 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray51, (double) (short) -1);
        org.apache.commons.math.complex.Complex[] complexArray54 = fastFourierTransformer0.inversetransform(complexArray53);
        double[] doubleArray59 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray59);
        double[] doubleArray62 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray59, (double) 10.0f);
        double[] doubleArray64 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray62, (double) 10L);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray64);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray64);
        org.apache.commons.math.complex.Complex[] complexArray67 = fastFourierTransformer0.inversetransform2(doubleArray64);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer68 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray73 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray73);
        double[] doubleArray76 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray73, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray76);
        org.apache.commons.math.complex.Complex[] complexArray78 = fastFourierTransformer68.transform(doubleArray76);
        org.apache.commons.math.complex.Complex[] complexArray79 = fastFourierTransformer0.transform2(doubleArray76);
        java.lang.Class<?> wildcardClass80 = doubleArray76.getClass();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray11);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray19);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray27);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray35);
        org.junit.Assert.assertNotNull(complexArray37);
        org.junit.Assert.assertNotNull(complexArray40);
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(complexArray54);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray67);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray78);
        org.junit.Assert.assertNotNull(complexArray79);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test1755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1755");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform(doubleArray26);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer31 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer32 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray37 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer32.transform2(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray39, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray39);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer31.inversetransform(complexArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer44 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray49 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer44.transform2(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer31.transform(complexArray51);
        org.apache.commons.math.complex.Complex[] complexArray53 = fastFourierTransformer0.transform2(complexArray52);
        double[] doubleArray58 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray58);
        double[] doubleArray61 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray58, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray61);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray61);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray61);
        double[] doubleArray66 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray61, (double) (-1L));
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray66);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray66);
        org.apache.commons.math.complex.Complex[] complexArray69 = fastFourierTransformer0.inversetransform(doubleArray66);
        double[] doubleArray71 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray66, (double) 10.0f);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, -9700.0, -100.0, -1000.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, -9700.0, -100.0, -1000.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, -9700.0, -100.0, -1000.0]");
        org.junit.Assert.assertNotNull(complexArray69);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, -9700.0, -100.0, -1000.0]");
    }

    @Test
    public void test1756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1756");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform2(doubleArray29);
        double[] doubleArray35 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray35);
        double[] doubleArray38 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray35, (double) (byte) 100);
        double[] doubleArray40 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray35, (double) 0);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray35);
        org.apache.commons.math.complex.Complex[] complexArray42 = fastFourierTransformer0.transform2(doubleArray35);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer43 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray48 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray48);
        double[] doubleArray51 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray48, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray51);
        org.apache.commons.math.complex.Complex[] complexArray53 = fastFourierTransformer43.transform(doubleArray51);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer54 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray59 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray59);
        org.apache.commons.math.complex.Complex[] complexArray61 = fastFourierTransformer54.transform2(doubleArray59);
        org.apache.commons.math.complex.Complex[] complexArray63 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray61, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray61);
        org.apache.commons.math.complex.Complex[] complexArray66 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray61, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray68 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray61, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray69 = fastFourierTransformer43.inversetransform2(complexArray68);
        double[] doubleArray74 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray74);
        double[] doubleArray77 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray74, (double) 10.0f);
        double[] doubleArray79 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray77, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray80 = fastFourierTransformer43.transform(doubleArray77);
        org.apache.commons.math.complex.Complex[] complexArray81 = fastFourierTransformer0.inversetransform2(doubleArray77);
        double[] doubleArray83 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray77, (double) '4');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray61);
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(complexArray66);
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(complexArray69);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-5200.0, 504400.0, 5200.0, 52000.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-5200.0, 504400.0, 5200.0, 52000.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-5200.0, 504400.0, 5200.0, 52000.0]");
        org.junit.Assert.assertNotNull(complexArray80);
        org.junit.Assert.assertNotNull(complexArray81);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-5200.0, 504400.0, 5200.0, 52000.0]");
    }

    @Test
    public void test1757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1757");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.transform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray16 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer11.transform2(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray19 = fastFourierTransformer0.inversetransform2(complexArray18);
        double[] doubleArray24 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray24);
        double[] doubleArray27 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray24, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray31 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) (byte) 10);
        double[] doubleArray33 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray31, (double) (byte) 0);
        org.apache.commons.math.complex.Complex[] complexArray34 = fastFourierTransformer0.transform(doubleArray33);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer35 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray40 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray40);
        double[] doubleArray43 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray40, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray43);
        org.apache.commons.math.complex.Complex[] complexArray45 = fastFourierTransformer35.transform(doubleArray43);
        org.apache.commons.math.complex.Complex[] complexArray46 = fastFourierTransformer0.inversetransform2(complexArray45);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer47 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray52 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray52);
        org.apache.commons.math.complex.Complex[] complexArray54 = fastFourierTransformer47.transform2(doubleArray52);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer55 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray60 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray60);
        org.apache.commons.math.complex.Complex[] complexArray62 = fastFourierTransformer55.transform2(doubleArray60);
        org.apache.commons.math.complex.Complex[] complexArray64 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray62, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray62);
        org.apache.commons.math.complex.Complex[] complexArray67 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray62, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray68 = fastFourierTransformer47.transform2(complexArray67);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer69 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray74 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray74);
        double[] doubleArray77 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray74, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray77);
        org.apache.commons.math.complex.Complex[] complexArray79 = fastFourierTransformer69.transform(doubleArray77);
        org.apache.commons.math.complex.Complex[] complexArray80 = fastFourierTransformer47.transform(doubleArray77);
        org.apache.commons.math.complex.Complex[] complexArray81 = fastFourierTransformer0.transform(complexArray80);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction82 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray86 = fastFourierTransformer0.transform(univariateRealFunction82, (double) 1.0f, 0.0d, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [1.0, 0.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray19);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(complexArray46);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray54);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(complexArray64);
        org.junit.Assert.assertNotNull(complexArray67);
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray79);
        org.junit.Assert.assertNotNull(complexArray80);
        org.junit.Assert.assertNotNull(complexArray81);
    }

    @Test
    public void test1758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1758");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        org.apache.commons.math.complex.Complex[] complexArray29 = fastFourierTransformer22.transform2(doubleArray27);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer30 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray35 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray35);
        org.apache.commons.math.complex.Complex[] complexArray37 = fastFourierTransformer30.transform2(doubleArray35);
        org.apache.commons.math.complex.Complex[] complexArray39 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray37, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray37);
        org.apache.commons.math.complex.Complex[] complexArray42 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray37, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer22.transform2(complexArray42);
        org.apache.commons.math.complex.Complex[] complexArray45 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray42, (double) (byte) 1);
        org.apache.commons.math.complex.Complex[] complexArray46 = fastFourierTransformer0.transform(complexArray42);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer47 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray52 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray52);
        double[] doubleArray55 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray52, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray55);
        org.apache.commons.math.complex.Complex[] complexArray57 = fastFourierTransformer47.transform(doubleArray55);
        org.apache.commons.math.complex.Complex[] complexArray58 = fastFourierTransformer0.inversetransform2(doubleArray55);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer59 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray64 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray64);
        double[] doubleArray67 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray64, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray67);
        org.apache.commons.math.complex.Complex[] complexArray69 = fastFourierTransformer59.inversetransform(doubleArray67);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray69);
        org.apache.commons.math.complex.Complex[] complexArray72 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray69, (double) (byte) 100);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray69);
        org.apache.commons.math.complex.Complex[] complexArray74 = fastFourierTransformer0.transform2(complexArray69);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer75 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray80 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray80);
        double[] doubleArray83 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray80, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray83);
        org.apache.commons.math.complex.Complex[] complexArray85 = fastFourierTransformer75.transform(doubleArray83);
        double[] doubleArray87 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray83, (double) (byte) 100);
        double[] doubleArray89 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray87, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray90 = fastFourierTransformer0.transform(doubleArray87);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction91 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray95 = fastFourierTransformer0.inversetransform2(univariateRealFunction91, (double) (short) 10, (double) 0, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray37);
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(complexArray46);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray57);
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray69);
        org.junit.Assert.assertNotNull(complexArray72);
        org.junit.Assert.assertNotNull(complexArray74);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(complexArray85);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(complexArray90);
    }

    @Test
    public void test1759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1759");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        org.apache.commons.math.complex.Complex[] complexArray29 = fastFourierTransformer22.transform2(doubleArray27);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer30 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray35 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray35);
        org.apache.commons.math.complex.Complex[] complexArray37 = fastFourierTransformer30.transform2(doubleArray35);
        org.apache.commons.math.complex.Complex[] complexArray39 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray37, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray37);
        org.apache.commons.math.complex.Complex[] complexArray42 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray37, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer22.transform2(complexArray42);
        org.apache.commons.math.complex.Complex[] complexArray45 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray42, (double) (byte) 1);
        org.apache.commons.math.complex.Complex[] complexArray46 = fastFourierTransformer0.transform(complexArray42);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer47 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray52 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray52);
        double[] doubleArray55 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray52, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray55);
        org.apache.commons.math.complex.Complex[] complexArray57 = fastFourierTransformer47.transform(doubleArray55);
        org.apache.commons.math.complex.Complex[] complexArray58 = fastFourierTransformer0.inversetransform2(doubleArray55);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer59 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray64 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray64);
        double[] doubleArray67 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray64, (double) 10.0f);
        double[] doubleArray69 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray67, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray70 = fastFourierTransformer59.inversetransform(doubleArray69);
        double[] doubleArray72 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray69, (double) (short) 0);
        org.apache.commons.math.complex.Complex[] complexArray73 = fastFourierTransformer0.transform2(doubleArray72);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer74 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray79 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray79);
        double[] doubleArray82 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray79, (double) 10.0f);
        double[] doubleArray84 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray82, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray85 = fastFourierTransformer74.inversetransform(doubleArray84);
        org.apache.commons.math.complex.Complex[] complexArray86 = fastFourierTransformer0.transform2(complexArray85);
        org.apache.commons.math.complex.Complex[] complexArray88 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray85, 1.0d);
        org.apache.commons.math.complex.Complex[] complexArray90 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray88, (double) (-1L));
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray37);
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(complexArray46);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray57);
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray70);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray73);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray85);
        org.junit.Assert.assertNotNull(complexArray86);
        org.junit.Assert.assertNotNull(complexArray88);
        org.junit.Assert.assertNotNull(complexArray90);
    }

    @Test
    public void test1760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1760");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray20, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray20);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray20, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray27 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray20, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray28 = fastFourierTransformer0.transform(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer29 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray34 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray34);
        org.apache.commons.math.complex.Complex[] complexArray36 = fastFourierTransformer29.transform2(doubleArray34);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer37 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray42 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray42);
        org.apache.commons.math.complex.Complex[] complexArray44 = fastFourierTransformer37.transform2(doubleArray42);
        org.apache.commons.math.complex.Complex[] complexArray46 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray44, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray44);
        org.apache.commons.math.complex.Complex[] complexArray49 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray44, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray50 = fastFourierTransformer29.transform2(complexArray49);
        double[] doubleArray55 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray55);
        double[] doubleArray58 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray55, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray59 = fastFourierTransformer29.transform(doubleArray55);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer60 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer61 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray66 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray66);
        org.apache.commons.math.complex.Complex[] complexArray68 = fastFourierTransformer61.transform2(doubleArray66);
        org.apache.commons.math.complex.Complex[] complexArray70 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray68, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray68);
        org.apache.commons.math.complex.Complex[] complexArray72 = fastFourierTransformer60.inversetransform(complexArray68);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer73 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray78 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray78);
        org.apache.commons.math.complex.Complex[] complexArray80 = fastFourierTransformer73.transform2(doubleArray78);
        org.apache.commons.math.complex.Complex[] complexArray81 = fastFourierTransformer60.transform(complexArray80);
        org.apache.commons.math.complex.Complex[] complexArray82 = fastFourierTransformer29.transform2(complexArray81);
        double[] doubleArray87 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray87);
        double[] doubleArray90 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray87, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray90);
        org.apache.commons.math.complex.Complex[] complexArray92 = fastFourierTransformer29.inversetransform2(doubleArray90);
        org.apache.commons.math.complex.Complex[] complexArray93 = fastFourierTransformer0.transform2(doubleArray90);
        double[] doubleArray95 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray90, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray95);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray95);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray22);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray27);
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray36);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(complexArray46);
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(complexArray70);
        org.junit.Assert.assertNotNull(complexArray72);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray80);
        org.junit.Assert.assertNotNull(complexArray81);
        org.junit.Assert.assertNotNull(complexArray82);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[-970.0, 94090.0, 970.0, 9700.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[-970.0, 94090.0, 970.0, 9700.0]");
        org.junit.Assert.assertNotNull(complexArray92);
        org.junit.Assert.assertNotNull(complexArray93);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray95), "[-970.0, 94090.0, 970.0, 9700.0]");
    }

    @Test
    public void test1761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1761");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        org.apache.commons.math.complex.Complex[] complexArray29 = fastFourierTransformer22.transform2(doubleArray27);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer30 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray35 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray35);
        org.apache.commons.math.complex.Complex[] complexArray37 = fastFourierTransformer30.transform2(doubleArray35);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer38 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray43 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray43);
        org.apache.commons.math.complex.Complex[] complexArray45 = fastFourierTransformer38.transform2(doubleArray43);
        org.apache.commons.math.complex.Complex[] complexArray47 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray45, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray45);
        org.apache.commons.math.complex.Complex[] complexArray50 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray45, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer30.transform2(complexArray50);
        double[] doubleArray56 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray56);
        double[] doubleArray59 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray56, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray60 = fastFourierTransformer30.transform(doubleArray56);
        org.apache.commons.math.complex.Complex[] complexArray61 = fastFourierTransformer22.transform(complexArray60);
        org.apache.commons.math.complex.Complex[] complexArray63 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray60, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray64 = fastFourierTransformer0.inversetransform2(complexArray63);
        double[] doubleArray69 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray69);
        double[] doubleArray72 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray69, 0.0d);
        double[] doubleArray74 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray72, (double) (byte) 100);
        org.apache.commons.math.complex.Complex[] complexArray75 = fastFourierTransformer0.inversetransform2(doubleArray72);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction76 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray80 = fastFourierTransformer0.inversetransform(univariateRealFunction76, (double) (byte) -1, (double) 10, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray37);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(complexArray61);
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(complexArray64);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray75);
    }

    @Test
    public void test1762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1762");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, 10.0d, (double) 1, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [10.0, 1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1763");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        double[] doubleArray17 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray17);
        double[] doubleArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray17, (double) 10.0f);
        double[] doubleArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray20, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer0.transform(doubleArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer24 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer25 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray30 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer25.transform2(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray34 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray32, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray32);
        org.apache.commons.math.complex.Complex[] complexArray36 = fastFourierTransformer24.inversetransform(complexArray32);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer37 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray42 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray42);
        org.apache.commons.math.complex.Complex[] complexArray44 = fastFourierTransformer37.transform2(doubleArray42);
        double[] doubleArray46 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray42, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray47 = fastFourierTransformer24.inversetransform(doubleArray42);
        org.apache.commons.math.complex.Complex[] complexArray49 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray47, (-1.0d));
        org.apache.commons.math.complex.Complex[] complexArray50 = fastFourierTransformer0.inversetransform(complexArray49);
        double[] doubleArray55 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray55);
        double[] doubleArray58 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray55, 0.0d);
        double[] doubleArray60 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray58, (double) (byte) 100);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray60);
        org.apache.commons.math.complex.Complex[] complexArray62 = fastFourierTransformer0.transform2(doubleArray60);
        org.apache.commons.math.complex.Complex[] complexArray63 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray64 = fastFourierTransformer0.inversetransform2(complexArray63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(complexArray36);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray62);
    }

    @Test
    public void test1764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1764");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.transform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray16 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer11.transform2(doubleArray16);
        double[] doubleArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray16, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.inversetransform(doubleArray16);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        org.apache.commons.math.complex.Complex[] complexArray29 = fastFourierTransformer22.transform2(doubleArray27);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer30 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray35 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray35);
        org.apache.commons.math.complex.Complex[] complexArray37 = fastFourierTransformer30.transform2(doubleArray35);
        org.apache.commons.math.complex.Complex[] complexArray39 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray37, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray37);
        org.apache.commons.math.complex.Complex[] complexArray42 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray37, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer22.transform2(complexArray42);
        double[] doubleArray48 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray48);
        double[] doubleArray51 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray48, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer22.transform(doubleArray48);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer53 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray58 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray58);
        org.apache.commons.math.complex.Complex[] complexArray60 = fastFourierTransformer53.transform2(doubleArray58);
        double[] doubleArray62 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray58, (double) (short) -1);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer22.inversetransform(doubleArray58);
        org.apache.commons.math.complex.Complex[] complexArray64 = fastFourierTransformer0.transform2(complexArray63);
        org.apache.commons.math.complex.Complex[] complexArray66 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray64, (double) (short) 10);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray37);
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0, -97.0, -1.0, -10.0]");
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[1.0, -97.0, -1.0, -10.0]");
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(complexArray64);
        org.junit.Assert.assertNotNull(complexArray66);
    }

    @Test
    public void test1765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1765");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        double[] doubleArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray18, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer0.inversetransform(doubleArray18);
        double[] doubleArray28 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray28);
        double[] doubleArray31 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray28, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray31);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray31);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray31);
        double[] doubleArray36 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray31, (double) (-1L));
        org.apache.commons.math.complex.Complex[] complexArray37 = fastFourierTransformer0.transform2(doubleArray36);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer38 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray43 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray43);
        org.apache.commons.math.complex.Complex[] complexArray45 = fastFourierTransformer38.transform2(doubleArray43);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer46 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray51 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray51);
        org.apache.commons.math.complex.Complex[] complexArray53 = fastFourierTransformer46.transform2(doubleArray51);
        org.apache.commons.math.complex.Complex[] complexArray55 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray53, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray53);
        org.apache.commons.math.complex.Complex[] complexArray58 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray53, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray59 = fastFourierTransformer38.transform2(complexArray58);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer60 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer61 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray66 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray66);
        org.apache.commons.math.complex.Complex[] complexArray68 = fastFourierTransformer61.transform2(doubleArray66);
        org.apache.commons.math.complex.Complex[] complexArray70 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray68, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray68);
        org.apache.commons.math.complex.Complex[] complexArray72 = fastFourierTransformer60.inversetransform(complexArray68);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer73 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray78 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray78);
        org.apache.commons.math.complex.Complex[] complexArray80 = fastFourierTransformer73.transform2(doubleArray78);
        org.apache.commons.math.complex.Complex[] complexArray81 = fastFourierTransformer60.transform(complexArray80);
        double[] doubleArray86 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray86);
        double[] doubleArray89 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray86, (double) 10.0f);
        double[] doubleArray91 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray89, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray92 = fastFourierTransformer60.inversetransform2(doubleArray91);
        org.apache.commons.math.complex.Complex[] complexArray93 = fastFourierTransformer38.transform(doubleArray91);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray91);
        org.apache.commons.math.complex.Complex[] complexArray95 = fastFourierTransformer0.inversetransform2(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(complexArray37);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(complexArray70);
        org.junit.Assert.assertNotNull(complexArray72);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray80);
        org.junit.Assert.assertNotNull(complexArray81);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray92);
        org.junit.Assert.assertNotNull(complexArray93);
        org.junit.Assert.assertNotNull(complexArray95);
    }

    @Test
    public void test1766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1766");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.transform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray16 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer11.transform2(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray18, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray18);
        org.apache.commons.math.complex.Complex[] complexArray23 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray18, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray18, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray26 = fastFourierTransformer0.inversetransform2(complexArray25);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer27 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer28 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray33 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray33);
        org.apache.commons.math.complex.Complex[] complexArray35 = fastFourierTransformer28.transform2(doubleArray33);
        org.apache.commons.math.complex.Complex[] complexArray37 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray35, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray35);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer27.inversetransform(complexArray35);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray35);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer0.inversetransform(complexArray35);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction42 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray46 = fastFourierTransformer0.transform2(univariateRealFunction42, (double) (byte) 10, 0.0d, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [10.0, 0.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray26);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray35);
        org.junit.Assert.assertNotNull(complexArray37);
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray41);
    }

    @Test
    public void test1767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1767");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, (double) (short) 1, (double) 0L, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [1.0, 0.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1768");
        org.apache.commons.math.transform.FastFourierTransformer.verifyInterval(1.0d, (double) 100.0f);
    }

    @Test
    public void test1769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1769");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform(doubleArray26);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer31 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer32 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray37 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer32.transform2(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray39, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray39);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer31.inversetransform(complexArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer44 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray49 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer44.transform2(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer31.transform(complexArray51);
        org.apache.commons.math.complex.Complex[] complexArray53 = fastFourierTransformer0.transform2(complexArray52);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer54 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray59 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray59);
        double[] doubleArray62 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray59, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray62);
        org.apache.commons.math.complex.Complex[] complexArray64 = fastFourierTransformer54.transform(doubleArray62);
        org.apache.commons.math.complex.Complex[] complexArray65 = fastFourierTransformer0.inversetransform2(complexArray64);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction66 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray70 = fastFourierTransformer0.transform(univariateRealFunction66, (double) (short) 100, 0.0d, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [100.0, 0.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray64);
        org.junit.Assert.assertNotNull(complexArray65);
    }

    @Test
    public void test1770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1770");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.transform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray16 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer11.transform2(doubleArray16);
        double[] doubleArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray16, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.inversetransform(doubleArray16);
        double[] doubleArray23 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray16, (double) (short) 0);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-0.0, 0.0, 0.0, 0.0]");
    }

    @Test
    public void test1771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1771");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer22.transform(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer0.transform(doubleArray30);
        double[] doubleArray38 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray38);
        double[] doubleArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray38, (double) 10.0f);
        double[] doubleArray43 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray41, (double) (byte) -1);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray43);
        org.apache.commons.math.complex.Complex[] complexArray45 = fastFourierTransformer0.transform(doubleArray43);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer46 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer47 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray52 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray52);
        org.apache.commons.math.complex.Complex[] complexArray54 = fastFourierTransformer47.transform2(doubleArray52);
        org.apache.commons.math.complex.Complex[] complexArray56 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray54, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray54);
        org.apache.commons.math.complex.Complex[] complexArray58 = fastFourierTransformer46.inversetransform(complexArray54);
        double[] doubleArray63 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray63);
        double[] doubleArray66 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray63, (double) 10.0f);
        double[] doubleArray68 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray66, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray69 = fastFourierTransformer46.transform(doubleArray66);
        org.apache.commons.math.complex.Complex[] complexArray70 = fastFourierTransformer0.inversetransform(complexArray69);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction71 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray75 = fastFourierTransformer0.transform2(univariateRealFunction71, (double) 0.0f, (double) (short) -1, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [0.0, -1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray54);
        org.junit.Assert.assertNotNull(complexArray56);
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray69);
        org.junit.Assert.assertNotNull(complexArray70);
    }

    @Test
    public void test1772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1772");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        double[] doubleArray17 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray17);
        double[] doubleArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray17, (double) 10.0f);
        double[] doubleArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray20, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer0.transform(doubleArray20);
        double[] doubleArray28 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray28);
        double[] doubleArray31 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray28, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray31);
        double[] doubleArray34 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray31, 10.0d);
        org.apache.commons.math.complex.Complex[] complexArray35 = fastFourierTransformer0.transform2(doubleArray31);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer36 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray41 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray41);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer36.transform2(doubleArray41);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer44 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray49 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer44.transform2(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray53 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray51, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray51);
        org.apache.commons.math.complex.Complex[] complexArray56 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray51, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray57 = fastFourierTransformer36.transform2(complexArray56);
        double[] doubleArray62 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray62);
        double[] doubleArray65 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray62, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray66 = fastFourierTransformer36.transform2(doubleArray65);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray66);
        org.apache.commons.math.complex.Complex[] complexArray68 = fastFourierTransformer0.inversetransform2(complexArray66);
        double[] doubleArray73 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray73);
        double[] doubleArray76 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray73, (double) 10.0f);
        double[] doubleArray78 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray76, (double) 10L);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray78);
        double[] doubleArray81 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray78, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray82 = fastFourierTransformer0.transform2(doubleArray81);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction83 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray87 = fastFourierTransformer0.inversetransform(univariateRealFunction83, (double) 100, (double) 0L, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray35);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(complexArray56);
        org.junit.Assert.assertNotNull(complexArray57);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray66);
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(complexArray82);
    }

    @Test
    public void test1773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1773");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, (double) (short) 1, (double) (-1L), 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [1.0, -1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1774");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer22.transform(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer0.transform(doubleArray30);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer34 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray39 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer34.transform2(doubleArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer42 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray47 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray47);
        org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer42.transform2(doubleArray47);
        org.apache.commons.math.complex.Complex[] complexArray51 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray49, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray49);
        org.apache.commons.math.complex.Complex[] complexArray54 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray49, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer34.transform2(complexArray54);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer56 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray61 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray61);
        double[] doubleArray64 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray61, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray64);
        org.apache.commons.math.complex.Complex[] complexArray66 = fastFourierTransformer56.transform(doubleArray64);
        org.apache.commons.math.complex.Complex[] complexArray67 = fastFourierTransformer34.transform(doubleArray64);
        double[] doubleArray72 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray72);
        double[] doubleArray75 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray72, (double) 10.0f);
        double[] doubleArray77 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray75, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray78 = fastFourierTransformer34.inversetransform(doubleArray77);
        double[] doubleArray83 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray83);
        double[] doubleArray86 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray83, (double) 10.0f);
        double[] doubleArray88 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray83, (double) (short) 100);
        org.apache.commons.math.complex.Complex[] complexArray89 = fastFourierTransformer34.inversetransform(doubleArray83);
        org.apache.commons.math.complex.Complex[] complexArray90 = fastFourierTransformer0.inversetransform(doubleArray83);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction91 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray95 = fastFourierTransformer0.inversetransform2(univariateRealFunction91, 1.0d, (double) (-1), 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [1.0, -1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray54);
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray66);
        org.junit.Assert.assertNotNull(complexArray67);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray78);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-1000.0, 97000.0, 1000.0, 10000.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-1000.0, 97000.0, 1000.0, 10000.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[-1000.0, 97000.0, 1000.0, 10000.0]");
        org.junit.Assert.assertNotNull(complexArray89);
        org.junit.Assert.assertNotNull(complexArray90);
    }

    @Test
    public void test1775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1775");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray20, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray20);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray20, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray27 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray20, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray28 = fastFourierTransformer0.transform(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer29 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray34 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray34);
        org.apache.commons.math.complex.Complex[] complexArray36 = fastFourierTransformer29.transform2(doubleArray34);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer37 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray42 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray42);
        org.apache.commons.math.complex.Complex[] complexArray44 = fastFourierTransformer37.transform2(doubleArray42);
        org.apache.commons.math.complex.Complex[] complexArray46 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray44, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray44);
        org.apache.commons.math.complex.Complex[] complexArray49 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray44, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray50 = fastFourierTransformer29.transform2(complexArray49);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer51 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer52 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray57 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray57);
        org.apache.commons.math.complex.Complex[] complexArray59 = fastFourierTransformer52.transform2(doubleArray57);
        org.apache.commons.math.complex.Complex[] complexArray61 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray59, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray59);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer51.inversetransform(complexArray59);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer64 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray69 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray69);
        org.apache.commons.math.complex.Complex[] complexArray71 = fastFourierTransformer64.transform2(doubleArray69);
        org.apache.commons.math.complex.Complex[] complexArray72 = fastFourierTransformer51.transform(complexArray71);
        double[] doubleArray77 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray77);
        double[] doubleArray80 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray77, (double) 10.0f);
        double[] doubleArray82 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray80, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray83 = fastFourierTransformer51.inversetransform2(doubleArray82);
        org.apache.commons.math.complex.Complex[] complexArray84 = fastFourierTransformer29.transform(doubleArray82);
        org.apache.commons.math.complex.Complex[] complexArray85 = fastFourierTransformer0.inversetransform2(complexArray84);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction86 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray90 = fastFourierTransformer0.transform2(univariateRealFunction86, (double) 0.0f, (double) 100, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray22);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray27);
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray36);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(complexArray46);
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(complexArray61);
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray71);
        org.junit.Assert.assertNotNull(complexArray72);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray83);
        org.junit.Assert.assertNotNull(complexArray84);
        org.junit.Assert.assertNotNull(complexArray85);
    }

    @Test
    public void test1776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1776");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.transform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray16 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer11.transform2(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray19 = fastFourierTransformer0.inversetransform2(complexArray18);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer20 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer21 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        org.apache.commons.math.complex.Complex[] complexArray28 = fastFourierTransformer21.transform2(doubleArray26);
        org.apache.commons.math.complex.Complex[] complexArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray28, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray28);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer20.inversetransform(complexArray28);
        double[] doubleArray37 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray37);
        double[] doubleArray40 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray37, (double) 10.0f);
        double[] doubleArray42 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray40, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer20.transform(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray45 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray43, (-1.0d));
        org.apache.commons.math.complex.Complex[] complexArray46 = fastFourierTransformer0.transform2(complexArray43);
        double[] doubleArray51 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray51);
        double[] doubleArray54 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray51, (double) 10.0f);
        double[] doubleArray56 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray51, (double) (short) 100);
        org.apache.commons.math.complex.Complex[] complexArray57 = fastFourierTransformer0.inversetransform2(doubleArray51);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction58 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray62 = fastFourierTransformer0.transform(univariateRealFunction58, (double) 10L, (double) 10.0f, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray19);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(complexArray46);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1000.0, 97000.0, 1000.0, 10000.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1000.0, 97000.0, 1000.0, 10000.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1000.0, 97000.0, 1000.0, 10000.0]");
        org.junit.Assert.assertNotNull(complexArray57);
    }

    @Test
    public void test1777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1777");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.transform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray16 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer11.transform2(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray19 = fastFourierTransformer0.inversetransform2(complexArray18);
        double[] doubleArray24 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray24);
        double[] doubleArray27 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray24, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray31 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) (byte) 10);
        double[] doubleArray33 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray31, (double) (byte) 0);
        org.apache.commons.math.complex.Complex[] complexArray34 = fastFourierTransformer0.transform(doubleArray33);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer35 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray40 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray40);
        double[] doubleArray43 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray40, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray43);
        org.apache.commons.math.complex.Complex[] complexArray45 = fastFourierTransformer35.transform(doubleArray43);
        org.apache.commons.math.complex.Complex[] complexArray46 = fastFourierTransformer0.inversetransform2(complexArray45);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction47 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer0.transform2(univariateRealFunction47, (double) 0.0f, (double) 'a', 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray19);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(complexArray46);
    }

    @Test
    public void test1778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1778");
        double[] doubleArray0 = new double[] {};
        double[] doubleArray2 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray0, (double) '4');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not power of 2, consider padding for fix.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray0), "[]");
        org.junit.Assert.assertNotNull(doubleArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[]");
    }

    @Test
    public void test1779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1779");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.inversetransform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray10);
        org.apache.commons.math.complex.Complex[] complexArray13 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray10, (double) (byte) 100);
        org.apache.commons.math.complex.Complex[] complexArray15 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray10, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray10, (double) 0);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray13);
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
    }

    @Test
    public void test1780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1780");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray11 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer12 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray20, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray20);
        org.apache.commons.math.complex.Complex[] complexArray24 = fastFourierTransformer12.inversetransform(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer25 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray30 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer25.transform2(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer12.transform(complexArray32);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer34 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray39 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer34.transform2(doubleArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer42 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray47 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray47);
        org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer42.transform2(doubleArray47);
        org.apache.commons.math.complex.Complex[] complexArray51 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray49, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray49);
        org.apache.commons.math.complex.Complex[] complexArray54 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray49, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer34.transform2(complexArray54);
        double[] doubleArray60 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray60);
        double[] doubleArray63 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray60, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray64 = fastFourierTransformer34.transform2(doubleArray63);
        org.apache.commons.math.complex.Complex[] complexArray65 = fastFourierTransformer12.inversetransform2(doubleArray63);
        double[] doubleArray67 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray63, (double) (short) -1);
        org.apache.commons.math.complex.Complex[] complexArray68 = fastFourierTransformer0.inversetransform(doubleArray63);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction69 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray73 = fastFourierTransformer0.transform(univariateRealFunction69, (double) 100L, (double) 100, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [100.0, 100.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray11);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray22);
        org.junit.Assert.assertNotNull(complexArray24);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray54);
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(complexArray64);
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(complexArray68);
    }

    @Test
    public void test1781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1781");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, (double) 0, (double) '#', 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1782");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer23 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray28 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray28);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer23.transform2(doubleArray28);
        org.apache.commons.math.complex.Complex[] complexArray32 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray30, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray30);
        org.apache.commons.math.complex.Complex[] complexArray34 = fastFourierTransformer22.inversetransform(complexArray30);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer35 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray40 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray42 = fastFourierTransformer35.transform2(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray44 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray42, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray42);
        org.apache.commons.math.complex.Complex[] complexArray47 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray42, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray49 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray42, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray50 = fastFourierTransformer22.transform(complexArray42);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer0.transform(complexArray50);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer52 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray57 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray57);
        org.apache.commons.math.complex.Complex[] complexArray59 = fastFourierTransformer52.transform2(doubleArray57);
        org.apache.commons.math.complex.Complex[] complexArray61 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray59, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray59);
        org.apache.commons.math.complex.Complex[] complexArray64 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray59, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray65 = fastFourierTransformer0.transform(complexArray64);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction66 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray70 = fastFourierTransformer0.transform2(univariateRealFunction66, (double) (byte) 100, (double) (short) 0, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [100.0, 0.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(complexArray61);
        org.junit.Assert.assertNotNull(complexArray64);
        org.junit.Assert.assertNotNull(complexArray65);
    }

    @Test
    public void test1783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1783");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, (double) 1.0f, 10.0d, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1784");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer22.transform(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer0.transform(doubleArray30);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer34 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray39 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer34.transform2(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray43 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray41, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray41);
        org.apache.commons.math.complex.Complex[] complexArray46 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray41, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray47 = fastFourierTransformer0.inversetransform2(complexArray41);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer48 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray53 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray53);
        double[] doubleArray56 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray53, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray56);
        org.apache.commons.math.complex.Complex[] complexArray58 = fastFourierTransformer48.transform(doubleArray56);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer59 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer60 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray65 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray65);
        org.apache.commons.math.complex.Complex[] complexArray67 = fastFourierTransformer60.transform2(doubleArray65);
        org.apache.commons.math.complex.Complex[] complexArray69 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray67, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray67);
        org.apache.commons.math.complex.Complex[] complexArray71 = fastFourierTransformer59.inversetransform(complexArray67);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer72 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray77 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray77);
        org.apache.commons.math.complex.Complex[] complexArray79 = fastFourierTransformer72.transform2(doubleArray77);
        org.apache.commons.math.complex.Complex[] complexArray80 = fastFourierTransformer59.transform(complexArray79);
        double[] doubleArray85 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray85);
        double[] doubleArray88 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray85, (double) 10.0f);
        double[] doubleArray90 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray88, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray91 = fastFourierTransformer59.inversetransform2(doubleArray90);
        org.apache.commons.math.complex.Complex[] complexArray92 = fastFourierTransformer48.inversetransform2(doubleArray90);
        double[] doubleArray94 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray90, (-1.0d));
        double[] doubleArray96 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray94, (double) 0.0f);
        org.apache.commons.math.complex.Complex[] complexArray97 = fastFourierTransformer0.inversetransform(doubleArray96);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray96);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray46);
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray67);
        org.junit.Assert.assertNotNull(complexArray69);
        org.junit.Assert.assertNotNull(complexArray71);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray79);
        org.junit.Assert.assertNotNull(complexArray80);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[0.0, -0.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[0.0, -0.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[0.0, -0.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(complexArray91);
        org.junit.Assert.assertNotNull(complexArray92);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[0.0, -0.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray96), "[0.0, -0.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(complexArray97);
    }

    @Test
    public void test1785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1785");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer23 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray28 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray28);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer23.transform2(doubleArray28);
        org.apache.commons.math.complex.Complex[] complexArray32 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray30, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray30);
        org.apache.commons.math.complex.Complex[] complexArray34 = fastFourierTransformer22.inversetransform(complexArray30);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer35 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray40 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray42 = fastFourierTransformer35.transform2(doubleArray40);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer43 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray48 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray48);
        org.apache.commons.math.complex.Complex[] complexArray50 = fastFourierTransformer43.transform2(doubleArray48);
        org.apache.commons.math.complex.Complex[] complexArray52 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray50, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray50);
        org.apache.commons.math.complex.Complex[] complexArray55 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray50, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray56 = fastFourierTransformer35.transform2(complexArray55);
        double[] doubleArray61 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray61);
        double[] doubleArray64 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray61, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray65 = fastFourierTransformer35.transform(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray66 = fastFourierTransformer22.transform(doubleArray61);
        double[] doubleArray71 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray71);
        double[] doubleArray74 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray71, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray74);
        double[] doubleArray77 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray74, 10.0d);
        org.apache.commons.math.complex.Complex[] complexArray78 = fastFourierTransformer22.transform(doubleArray74);
        org.apache.commons.math.complex.Complex[] complexArray79 = fastFourierTransformer0.inversetransform(doubleArray74);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction80 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray84 = fastFourierTransformer0.transform(univariateRealFunction80, (double) '4', (double) (byte) 100, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(complexArray56);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(complexArray66);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray78);
        org.junit.Assert.assertNotNull(complexArray79);
    }

    @Test
    public void test1786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1786");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, (double) (-1L), (double) (short) 100, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1787");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray20, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray20);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray20, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray27 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray20, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray28 = fastFourierTransformer0.transform(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer29 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray34 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray34);
        org.apache.commons.math.complex.Complex[] complexArray36 = fastFourierTransformer29.transform2(doubleArray34);
        org.apache.commons.math.complex.Complex[] complexArray37 = fastFourierTransformer0.transform2(doubleArray34);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer38 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray43 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray43);
        org.apache.commons.math.complex.Complex[] complexArray45 = fastFourierTransformer38.transform2(doubleArray43);
        org.apache.commons.math.complex.Complex[] complexArray47 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray45, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray45);
        org.apache.commons.math.complex.Complex[] complexArray50 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray45, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray52 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray45, (double) 1);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray45);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray45);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer0.inversetransform(complexArray45);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction56 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray60 = fastFourierTransformer0.inversetransform2(univariateRealFunction56, (double) (byte) 10, (double) (-1L), (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [10.0, -1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray22);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray27);
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray36);
        org.junit.Assert.assertNotNull(complexArray37);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(complexArray55);
    }

    @Test
    public void test1788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1788");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer9 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray14 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray14);
        org.apache.commons.math.complex.Complex[] complexArray16 = fastFourierTransformer9.transform2(doubleArray14);
        org.apache.commons.math.complex.Complex[] complexArray18 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray16, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray16);
        org.apache.commons.math.complex.Complex[] complexArray21 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray16, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray22 = fastFourierTransformer1.transform2(complexArray21);
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray31 = fastFourierTransformer1.transform(doubleArray27);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray31);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer0.transform2(complexArray31);
        double[] doubleArray38 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray38);
        double[] doubleArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray38, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray41);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer0.inversetransform2(doubleArray41);
        org.apache.commons.math.complex.Complex[] complexArray45 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray43, 0.0d);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray43);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray43);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray16);
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(complexArray22);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray31);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray45);
    }

    @Test
    public void test1789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1789");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform(doubleArray26);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer31 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer32 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray37 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer32.transform2(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray39, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray39);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer31.inversetransform(complexArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer44 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray49 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer44.transform2(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer31.transform(complexArray51);
        org.apache.commons.math.complex.Complex[] complexArray53 = fastFourierTransformer0.transform2(complexArray52);
        double[] doubleArray58 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray58);
        double[] doubleArray61 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray58, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer0.inversetransform2(doubleArray61);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray61);
        double[] doubleArray66 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray61, 100.0d);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray61);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1000.0, 97000.0, 1000.0, 10000.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1000.0, 97000.0, 1000.0, 10000.0]");
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-1000.0, 97000.0, 1000.0, 10000.0]");
    }

    @Test
    public void test1790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1790");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.transform.FastFourierTransformer.verifyInterval((double) 10.0f, (-1.0d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [10.0, -1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1791");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform(doubleArray26);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer31 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer32 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray37 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer32.transform2(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray39, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray39);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer31.inversetransform(complexArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer44 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray49 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer44.transform2(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer31.transform(complexArray51);
        org.apache.commons.math.complex.Complex[] complexArray53 = fastFourierTransformer0.transform2(complexArray52);
        double[] doubleArray58 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray58);
        double[] doubleArray61 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray58, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer0.inversetransform2(doubleArray61);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer64 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray69 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray69);
        org.apache.commons.math.complex.Complex[] complexArray71 = fastFourierTransformer64.transform2(doubleArray69);
        org.apache.commons.math.complex.Complex[] complexArray73 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray71, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray71);
        org.apache.commons.math.complex.Complex[] complexArray76 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray71, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray78 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray71, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray79 = fastFourierTransformer0.inversetransform2(complexArray71);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray71);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray71);
        org.junit.Assert.assertNotNull(complexArray73);
        org.junit.Assert.assertNotNull(complexArray76);
        org.junit.Assert.assertNotNull(complexArray78);
        org.junit.Assert.assertNotNull(complexArray79);
    }

    @Test
    public void test1792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1792");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, 1.0d, (double) 1.0f, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1793");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        double[] doubleArray16 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray13, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer8.transform(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray19 = fastFourierTransformer0.transform2(doubleArray16);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction20 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray24 = fastFourierTransformer0.inversetransform2(univariateRealFunction20, (double) 10L, (double) 0, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [10.0, 0.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray19);
    }

    @Test
    public void test1794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1794");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer16 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray21 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer16.transform2(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray23);
        org.apache.commons.math.complex.Complex[] complexArray28 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray29 = fastFourierTransformer8.transform2(complexArray28);
        double[] doubleArray34 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray34);
        double[] doubleArray37 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray34, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray38 = fastFourierTransformer8.transform(doubleArray34);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer0.transform(complexArray38);
        double[] doubleArray44 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray44);
        double[] doubleArray47 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray44, (double) 10.0f);
        double[] doubleArray49 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray47, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray50 = fastFourierTransformer0.transform2(doubleArray47);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray50);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray38);
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray50);
    }

    @Test
    public void test1795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1795");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        double[] doubleArray31 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray29, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer0.inversetransform2(doubleArray31);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer33 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer34 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray39 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer34.transform2(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray43 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray41, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray41);
        org.apache.commons.math.complex.Complex[] complexArray45 = fastFourierTransformer33.inversetransform(complexArray41);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer46 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray51 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray51);
        org.apache.commons.math.complex.Complex[] complexArray53 = fastFourierTransformer46.transform2(doubleArray51);
        org.apache.commons.math.complex.Complex[] complexArray55 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray53, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray53);
        org.apache.commons.math.complex.Complex[] complexArray58 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray53, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray60 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray53, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray61 = fastFourierTransformer33.transform(complexArray53);
        org.apache.commons.math.complex.Complex[] complexArray62 = fastFourierTransformer0.inversetransform2(complexArray53);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer63 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray68 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray68);
        double[] doubleArray71 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray68, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray71);
        org.apache.commons.math.complex.Complex[] complexArray73 = fastFourierTransformer63.transform(doubleArray71);
        org.apache.commons.math.complex.Complex[] complexArray74 = fastFourierTransformer0.inversetransform2(complexArray73);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer75 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray80 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray80);
        org.apache.commons.math.complex.Complex[] complexArray82 = fastFourierTransformer75.transform2(doubleArray80);
        org.apache.commons.math.complex.Complex[] complexArray83 = fastFourierTransformer0.inversetransform(complexArray82);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer84 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray89 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray89);
        org.apache.commons.math.complex.Complex[] complexArray91 = fastFourierTransformer84.transform2(doubleArray89);
        double[] doubleArray93 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray89, (double) (short) -1);
        org.apache.commons.math.complex.Complex[] complexArray94 = fastFourierTransformer0.inversetransform2(doubleArray93);
        java.lang.Class<?> wildcardClass95 = fastFourierTransformer0.getClass();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(complexArray61);
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray73);
        org.junit.Assert.assertNotNull(complexArray74);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray82);
        org.junit.Assert.assertNotNull(complexArray83);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[1.0, -97.0, -1.0, -10.0]");
        org.junit.Assert.assertNotNull(complexArray91);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[1.0, -97.0, -1.0, -10.0]");
        org.junit.Assert.assertNotNull(complexArray94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1796");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.transform.FastFourierTransformer.verifyInterval((double) '#', (double) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [35.0, -1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1797");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        double[] doubleArray31 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray29, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer0.inversetransform2(doubleArray31);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer33 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer34 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray39 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer34.transform2(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray43 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray41, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray41);
        org.apache.commons.math.complex.Complex[] complexArray45 = fastFourierTransformer33.inversetransform(complexArray41);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer46 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray51 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray51);
        org.apache.commons.math.complex.Complex[] complexArray53 = fastFourierTransformer46.transform2(doubleArray51);
        org.apache.commons.math.complex.Complex[] complexArray55 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray53, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray53);
        org.apache.commons.math.complex.Complex[] complexArray58 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray53, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray60 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray53, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray61 = fastFourierTransformer33.transform(complexArray53);
        org.apache.commons.math.complex.Complex[] complexArray62 = fastFourierTransformer0.inversetransform2(complexArray53);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer63 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray68 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray68);
        double[] doubleArray71 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray68, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray71);
        org.apache.commons.math.complex.Complex[] complexArray73 = fastFourierTransformer63.transform(doubleArray71);
        org.apache.commons.math.complex.Complex[] complexArray74 = fastFourierTransformer0.inversetransform2(complexArray73);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction75 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray79 = fastFourierTransformer0.transform(univariateRealFunction75, (double) (byte) 10, (double) (short) 10, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(complexArray61);
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray73);
        org.junit.Assert.assertNotNull(complexArray74);
    }

    @Test
    public void test1798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1798");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.transform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray16 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer11.transform2(doubleArray16);
        double[] doubleArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray16, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.inversetransform(doubleArray16);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer23 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray28 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray28);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer23.transform2(doubleArray28);
        org.apache.commons.math.complex.Complex[] complexArray32 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray30, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer22.inversetransform(complexArray30);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer34 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer35 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray40 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray42 = fastFourierTransformer35.transform2(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray44 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray42, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray42);
        org.apache.commons.math.complex.Complex[] complexArray46 = fastFourierTransformer34.inversetransform(complexArray42);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer47 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray52 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray52);
        org.apache.commons.math.complex.Complex[] complexArray54 = fastFourierTransformer47.transform2(doubleArray52);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer34.transform(complexArray54);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer56 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray61 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer56.transform2(doubleArray61);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer64 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray69 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray69);
        org.apache.commons.math.complex.Complex[] complexArray71 = fastFourierTransformer64.transform2(doubleArray69);
        org.apache.commons.math.complex.Complex[] complexArray73 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray71, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray71);
        org.apache.commons.math.complex.Complex[] complexArray76 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray71, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray77 = fastFourierTransformer56.transform2(complexArray76);
        double[] doubleArray82 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray82);
        double[] doubleArray85 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray82, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray86 = fastFourierTransformer56.transform2(doubleArray85);
        org.apache.commons.math.complex.Complex[] complexArray87 = fastFourierTransformer34.inversetransform2(doubleArray85);
        double[] doubleArray89 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray85, (double) (short) -1);
        org.apache.commons.math.complex.Complex[] complexArray90 = fastFourierTransformer22.inversetransform(doubleArray85);
        org.apache.commons.math.complex.Complex[] complexArray91 = fastFourierTransformer0.inversetransform(doubleArray85);
        org.apache.commons.math.complex.Complex[] complexArray93 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray91, (double) (byte) -1);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray93);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(complexArray46);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray54);
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray71);
        org.junit.Assert.assertNotNull(complexArray73);
        org.junit.Assert.assertNotNull(complexArray76);
        org.junit.Assert.assertNotNull(complexArray77);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(complexArray86);
        org.junit.Assert.assertNotNull(complexArray87);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(complexArray90);
        org.junit.Assert.assertNotNull(complexArray91);
        org.junit.Assert.assertNotNull(complexArray93);
    }

    @Test
    public void test1799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1799");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        double[] doubleArray9 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray6, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray9);
        org.apache.commons.math.complex.Complex[] complexArray11 = fastFourierTransformer1.inversetransform(doubleArray9);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.transform2(complexArray11);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction13 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray17 = fastFourierTransformer0.inversetransform2(univariateRealFunction13, (double) 'a', (double) 0L, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray11);
        org.junit.Assert.assertNotNull(complexArray12);
    }

    @Test
    public void test1800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1800");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        double[] doubleArray17 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray17);
        double[] doubleArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray17, (double) 10.0f);
        double[] doubleArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray20, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer0.transform(doubleArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer24 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer25 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray30 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer25.transform2(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray34 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray32, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray32);
        org.apache.commons.math.complex.Complex[] complexArray36 = fastFourierTransformer24.inversetransform(complexArray32);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer37 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray42 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray42);
        org.apache.commons.math.complex.Complex[] complexArray44 = fastFourierTransformer37.transform2(doubleArray42);
        double[] doubleArray46 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray42, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray47 = fastFourierTransformer24.inversetransform(doubleArray42);
        org.apache.commons.math.complex.Complex[] complexArray49 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray47, (-1.0d));
        org.apache.commons.math.complex.Complex[] complexArray50 = fastFourierTransformer0.inversetransform(complexArray49);
        double[] doubleArray55 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray55);
        double[] doubleArray58 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray55, 0.0d);
        double[] doubleArray60 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray58, (double) (byte) 100);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray60);
        org.apache.commons.math.complex.Complex[] complexArray62 = fastFourierTransformer0.transform2(doubleArray60);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction63 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray67 = fastFourierTransformer0.inversetransform(univariateRealFunction63, (double) 1, (double) 100.0f, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(complexArray36);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray62);
    }

    @Test
    public void test1801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1801");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform(doubleArray26);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer31 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer32 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray37 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer32.transform2(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray39, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray39);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer31.inversetransform(complexArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer44 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray49 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer44.transform2(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray53 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray51, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray51);
        org.apache.commons.math.complex.Complex[] complexArray56 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray51, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray58 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray51, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray59 = fastFourierTransformer31.transform(complexArray51);
        org.apache.commons.math.complex.Complex[] complexArray60 = fastFourierTransformer0.inversetransform2(complexArray59);
        double[] doubleArray65 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray65);
        org.apache.commons.math.complex.Complex[] complexArray67 = fastFourierTransformer0.transform(doubleArray65);
        double[] doubleArray72 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray72);
        double[] doubleArray75 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray72, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray75);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray75);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray75);
        org.apache.commons.math.complex.Complex[] complexArray79 = fastFourierTransformer0.transform2(doubleArray75);
        java.lang.Class<?> wildcardClass80 = doubleArray75.getClass();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(complexArray56);
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray67);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray79);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test1802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1802");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer22.transform(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer0.transform(doubleArray30);
        double[] doubleArray38 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray38);
        double[] doubleArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray38, (double) 10.0f);
        double[] doubleArray43 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray41, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray44 = fastFourierTransformer0.inversetransform(doubleArray43);
        double[] doubleArray49 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray49);
        double[] doubleArray52 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray49, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray53 = fastFourierTransformer0.inversetransform2(doubleArray49);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer54 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer55 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray60 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray60);
        org.apache.commons.math.complex.Complex[] complexArray62 = fastFourierTransformer55.transform2(doubleArray60);
        org.apache.commons.math.complex.Complex[] complexArray64 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray62, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray62);
        org.apache.commons.math.complex.Complex[] complexArray66 = fastFourierTransformer54.inversetransform(complexArray62);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer67 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray72 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray72);
        org.apache.commons.math.complex.Complex[] complexArray74 = fastFourierTransformer67.transform2(doubleArray72);
        org.apache.commons.math.complex.Complex[] complexArray76 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray74, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray74);
        org.apache.commons.math.complex.Complex[] complexArray79 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray74, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray81 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray74, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray82 = fastFourierTransformer54.transform(complexArray74);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer83 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray88 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray88);
        org.apache.commons.math.complex.Complex[] complexArray90 = fastFourierTransformer83.transform2(doubleArray88);
        org.apache.commons.math.complex.Complex[] complexArray91 = fastFourierTransformer54.transform2(doubleArray88);
        org.apache.commons.math.complex.Complex[] complexArray92 = fastFourierTransformer0.inversetransform(complexArray91);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray91);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(complexArray64);
        org.junit.Assert.assertNotNull(complexArray66);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray74);
        org.junit.Assert.assertNotNull(complexArray76);
        org.junit.Assert.assertNotNull(complexArray79);
        org.junit.Assert.assertNotNull(complexArray81);
        org.junit.Assert.assertNotNull(complexArray82);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray90);
        org.junit.Assert.assertNotNull(complexArray91);
        org.junit.Assert.assertNotNull(complexArray92);
    }

    @Test
    public void test1803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1803");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer9 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray14 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray14);
        org.apache.commons.math.complex.Complex[] complexArray16 = fastFourierTransformer9.transform2(doubleArray14);
        org.apache.commons.math.complex.Complex[] complexArray18 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray16, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray16);
        org.apache.commons.math.complex.Complex[] complexArray21 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray16, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray22 = fastFourierTransformer1.transform2(complexArray21);
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray31 = fastFourierTransformer1.transform(doubleArray27);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray31);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer0.transform2(complexArray31);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer34 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray39 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer34.transform2(doubleArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer42 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray47 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray47);
        org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer42.transform2(doubleArray47);
        org.apache.commons.math.complex.Complex[] complexArray51 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray49, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray49);
        org.apache.commons.math.complex.Complex[] complexArray54 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray49, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer34.transform2(complexArray54);
        double[] doubleArray60 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray60);
        double[] doubleArray63 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray60, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray64 = fastFourierTransformer34.transform2(doubleArray63);
        double[] doubleArray69 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray69);
        double[] doubleArray72 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray69, (double) 10.0f);
        double[] doubleArray74 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray72, (double) 10L);
        double[] doubleArray76 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray72, (double) (byte) 100);
        org.apache.commons.math.complex.Complex[] complexArray77 = fastFourierTransformer34.transform(doubleArray72);
        org.apache.commons.math.complex.Complex[] complexArray78 = fastFourierTransformer0.transform(complexArray77);
        java.lang.Class<?> wildcardClass79 = complexArray78.getClass();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray16);
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(complexArray22);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray31);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray54);
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray64);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(complexArray77);
        org.junit.Assert.assertNotNull(complexArray78);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test1804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1804");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform2(doubleArray29);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction31 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray35 = fastFourierTransformer0.inversetransform(univariateRealFunction31, (-1.0d), (double) (short) 0, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
    }

    @Test
    public void test1805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1805");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.transform.FastFourierTransformer.verifyInterval((double) 100L, (double) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [100.0, 52.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1806");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.inversetransform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray16 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer11.transform2(doubleArray16);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer19 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray24 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray24);
        org.apache.commons.math.complex.Complex[] complexArray26 = fastFourierTransformer19.transform2(doubleArray24);
        org.apache.commons.math.complex.Complex[] complexArray28 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray26, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray26);
        org.apache.commons.math.complex.Complex[] complexArray31 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray26, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer11.transform2(complexArray31);
        double[] doubleArray37 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray37);
        double[] doubleArray40 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray37, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer11.transform2(doubleArray40);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer0.inversetransform2(doubleArray40);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction44 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray48 = fastFourierTransformer0.transform2(univariateRealFunction44, (double) 100.0f, (double) 10.0f, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [100.0, 10.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray26);
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(complexArray31);
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(complexArray43);
    }

    @Test
    public void test1807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1807");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        double[] doubleArray17 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray17);
        double[] doubleArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray17, (double) 10.0f);
        double[] doubleArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray20, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer0.transform(doubleArray20);
        double[] doubleArray28 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray28);
        double[] doubleArray31 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray28, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray31);
        double[] doubleArray34 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray31, 10.0d);
        org.apache.commons.math.complex.Complex[] complexArray35 = fastFourierTransformer0.transform2(doubleArray31);
        double[] doubleArray40 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray40);
        double[] doubleArray43 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray40, (double) 10.0f);
        double[] doubleArray45 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray43, (double) 10L);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray45);
        double[] doubleArray48 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray45, 100.0d);
        double[] doubleArray50 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray45, (double) ' ');
        double[] doubleArray52 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray45, (double) ' ');
        org.apache.commons.math.complex.Complex[] complexArray53 = fastFourierTransformer0.inversetransform2(doubleArray45);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction54 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray58 = fastFourierTransformer0.inversetransform2(univariateRealFunction54, (double) 0L, (double) (short) 1, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray35);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.024E7, 9.9328E8, 1.024E7, 1.024E8]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.024E7, 9.9328E8, 1.024E7, 1.024E8]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.024E7, 9.9328E8, 1.024E7, 1.024E8]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.024E7, 9.9328E8, 1.024E7, 1.024E8]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.024E7, 9.9328E8, 1.024E7, 1.024E8]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.024E7, 9.9328E8, 1.024E7, 1.024E8]");
        org.junit.Assert.assertNotNull(complexArray53);
    }

    @Test
    public void test1808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1808");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        org.apache.commons.math.complex.Complex[] complexArray29 = fastFourierTransformer22.transform2(doubleArray27);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer30 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray35 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray35);
        org.apache.commons.math.complex.Complex[] complexArray37 = fastFourierTransformer30.transform2(doubleArray35);
        org.apache.commons.math.complex.Complex[] complexArray39 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray37, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray37);
        org.apache.commons.math.complex.Complex[] complexArray42 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray37, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer22.transform2(complexArray42);
        double[] doubleArray48 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray48);
        double[] doubleArray51 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray48, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer22.transform2(doubleArray51);
        org.apache.commons.math.complex.Complex[] complexArray53 = fastFourierTransformer0.inversetransform2(doubleArray51);
        org.apache.commons.math.complex.Complex[] complexArray55 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray53, (double) (byte) 0);
        org.apache.commons.math.complex.Complex[] complexArray57 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray55, (double) (byte) 0);
        org.apache.commons.math.complex.Complex[] complexArray59 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray57, (double) (short) -1);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray37);
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(complexArray57);
        org.junit.Assert.assertNotNull(complexArray59);
    }

    @Test
    public void test1809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1809");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer22.transform(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer0.transform(doubleArray30);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer34 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray39 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer34.transform2(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray43 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray41, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray41);
        org.apache.commons.math.complex.Complex[] complexArray46 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray41, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray47 = fastFourierTransformer0.inversetransform2(complexArray41);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer48 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray53 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray53);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer48.transform2(doubleArray53);
        org.apache.commons.math.complex.Complex[] complexArray57 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray55, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray55);
        org.apache.commons.math.complex.Complex[] complexArray60 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray55, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray62 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray55, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer0.inversetransform(complexArray62);
        org.apache.commons.math.complex.Complex[] complexArray65 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray62, (double) (byte) 1);
        org.apache.commons.math.complex.Complex[] complexArray67 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray65, (double) (-1.0f));
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray46);
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(complexArray57);
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(complexArray67);
    }

    @Test
    public void test1810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1810");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.transform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray16 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer11.transform2(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray18, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray18);
        org.apache.commons.math.complex.Complex[] complexArray23 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray18, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray18, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray26 = fastFourierTransformer0.inversetransform2(complexArray25);
        double[] doubleArray31 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray31);
        double[] doubleArray34 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray31, (double) 10.0f);
        double[] doubleArray36 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray34, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray37 = fastFourierTransformer0.transform(doubleArray34);
        double[] doubleArray42 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray42);
        double[] doubleArray45 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray42, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray45);
        double[] doubleArray48 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray45, 10.0d);
        org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer0.transform2(doubleArray48);
        double[] doubleArray54 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray54);
        double[] doubleArray57 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray54, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray57);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray57);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray57);
        double[] doubleArray62 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray57, (double) (short) 1);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer0.inversetransform(doubleArray57);
        org.apache.commons.math.complex.Complex[] complexArray65 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray63, (double) 10L);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray26);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray37);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(complexArray65);
    }

    @Test
    public void test1811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1811");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.transform(doubleArray8);
        double[] doubleArray12 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray8, (double) (byte) 100);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1000.0, 97000.0, 1000.0, 10000.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1000.0, 97000.0, 1000.0, 10000.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1000.0, 97000.0, 1000.0, 10000.0]");
    }

    @Test
    public void test1812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1812");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer16 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray21 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer16.transform2(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray23);
        org.apache.commons.math.complex.Complex[] complexArray28 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray29 = fastFourierTransformer8.transform2(complexArray28);
        double[] doubleArray34 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray34);
        double[] doubleArray37 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray34, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray38 = fastFourierTransformer8.transform(doubleArray34);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer0.transform(complexArray38);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer40 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray45 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray45);
        org.apache.commons.math.complex.Complex[] complexArray47 = fastFourierTransformer40.transform2(doubleArray45);
        org.apache.commons.math.complex.Complex[] complexArray49 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray47, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray51 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray49, (double) (byte) 100);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer0.inversetransform(complexArray49);
        org.apache.commons.math.complex.Complex[] complexArray54 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray49, (double) 'a');
        org.apache.commons.math.complex.Complex[] complexArray56 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray54, (double) (short) 1);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray38);
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(complexArray54);
        org.junit.Assert.assertNotNull(complexArray56);
    }

    @Test
    public void test1813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1813");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer22.transform(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer0.transform(doubleArray30);
        double[] doubleArray38 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray38);
        double[] doubleArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray38, (double) 10.0f);
        double[] doubleArray43 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray41, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray44 = fastFourierTransformer0.inversetransform(doubleArray43);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer45 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray50 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray50);
        double[] doubleArray53 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray50, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray53);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer45.inversetransform(doubleArray53);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer56 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray61 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer56.transform2(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray65 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray63, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray66 = fastFourierTransformer45.inversetransform(complexArray65);
        org.apache.commons.math.complex.Complex[] complexArray67 = fastFourierTransformer0.transform2(complexArray66);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer68 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray73 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray73);
        org.apache.commons.math.complex.Complex[] complexArray75 = fastFourierTransformer68.transform2(doubleArray73);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer76 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray81 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray81);
        double[] doubleArray84 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray81, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray84);
        org.apache.commons.math.complex.Complex[] complexArray86 = fastFourierTransformer76.transform(doubleArray84);
        org.apache.commons.math.complex.Complex[] complexArray87 = fastFourierTransformer68.transform2(doubleArray84);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray84);
        org.apache.commons.math.complex.Complex[] complexArray89 = fastFourierTransformer0.inversetransform2(doubleArray84);
        java.lang.Class<?> wildcardClass90 = complexArray89.getClass();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(complexArray66);
        org.junit.Assert.assertNotNull(complexArray67);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray75);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray86);
        org.junit.Assert.assertNotNull(complexArray87);
        org.junit.Assert.assertNotNull(complexArray89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1814");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.transform.FastFourierTransformer.verifyInterval((double) (byte) 0, (double) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [0.0, -1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1815");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.transform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray16 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer11.transform2(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray18, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray18);
        org.apache.commons.math.complex.Complex[] complexArray23 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray18, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray18, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray26 = fastFourierTransformer0.inversetransform2(complexArray25);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer27 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer28 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray33 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray33);
        org.apache.commons.math.complex.Complex[] complexArray35 = fastFourierTransformer28.transform2(doubleArray33);
        org.apache.commons.math.complex.Complex[] complexArray37 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray35, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray35);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer27.inversetransform(complexArray35);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray35);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer0.inversetransform(complexArray35);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer42 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray47 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray47);
        org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer42.transform2(doubleArray47);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer50 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray55 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray55);
        org.apache.commons.math.complex.Complex[] complexArray57 = fastFourierTransformer50.transform2(doubleArray55);
        org.apache.commons.math.complex.Complex[] complexArray59 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray57, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray57);
        org.apache.commons.math.complex.Complex[] complexArray62 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray57, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer42.transform2(complexArray62);
        double[] doubleArray68 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray68);
        double[] doubleArray71 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray68, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray72 = fastFourierTransformer42.transform(doubleArray68);
        double[] doubleArray77 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray77);
        double[] doubleArray80 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray77, (double) 10.0f);
        double[] doubleArray82 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray80, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray83 = fastFourierTransformer42.transform2(doubleArray82);
        org.apache.commons.math.complex.Complex[] complexArray84 = fastFourierTransformer0.transform(complexArray83);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction85 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray89 = fastFourierTransformer0.transform2(univariateRealFunction85, (double) '4', (double) (short) 0, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray26);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray35);
        org.junit.Assert.assertNotNull(complexArray37);
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray57);
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray72);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray83);
        org.junit.Assert.assertNotNull(complexArray84);
    }

    @Test
    public void test1816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1816");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, (double) (short) -1, (double) (byte) -1, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [-1.0, -1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1817");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer23 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray28 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray28);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer23.transform2(doubleArray28);
        org.apache.commons.math.complex.Complex[] complexArray32 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray30, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray30);
        org.apache.commons.math.complex.Complex[] complexArray34 = fastFourierTransformer22.inversetransform(complexArray30);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer35 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray40 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray42 = fastFourierTransformer35.transform2(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray44 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray42, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray42);
        org.apache.commons.math.complex.Complex[] complexArray47 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray42, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray49 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray42, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray50 = fastFourierTransformer22.transform(complexArray42);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer0.transform(complexArray50);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer52 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray57 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray57);
        org.apache.commons.math.complex.Complex[] complexArray59 = fastFourierTransformer52.transform2(doubleArray57);
        org.apache.commons.math.complex.Complex[] complexArray61 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray59, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray59);
        org.apache.commons.math.complex.Complex[] complexArray64 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray59, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray65 = fastFourierTransformer0.transform(complexArray64);
        org.apache.commons.math.complex.Complex[] complexArray67 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray64, (double) (short) -1);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(complexArray61);
        org.junit.Assert.assertNotNull(complexArray64);
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(complexArray67);
    }

    @Test
    public void test1818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1818");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        double[] doubleArray17 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray17);
        double[] doubleArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray17, (double) 10.0f);
        double[] doubleArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray20, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer0.transform(doubleArray20);
        double[] doubleArray28 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray28);
        double[] doubleArray31 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray28, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray31);
        double[] doubleArray34 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray31, 10.0d);
        org.apache.commons.math.complex.Complex[] complexArray35 = fastFourierTransformer0.transform2(doubleArray31);
        double[] doubleArray40 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray40);
        double[] doubleArray43 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray40, (double) 10.0f);
        double[] doubleArray45 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray43, (double) 10L);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray45);
        double[] doubleArray48 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray45, 100.0d);
        double[] doubleArray50 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray45, (double) ' ');
        double[] doubleArray52 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray45, (double) ' ');
        org.apache.commons.math.complex.Complex[] complexArray53 = fastFourierTransformer0.inversetransform2(doubleArray45);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction54 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray58 = fastFourierTransformer0.inversetransform(univariateRealFunction54, (double) 10L, (double) 1.0f, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [10.0, 1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray35);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.024E7, 9.9328E8, 1.024E7, 1.024E8]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.024E7, 9.9328E8, 1.024E7, 1.024E8]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.024E7, 9.9328E8, 1.024E7, 1.024E8]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.024E7, 9.9328E8, 1.024E7, 1.024E8]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.024E7, 9.9328E8, 1.024E7, 1.024E8]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.024E7, 9.9328E8, 1.024E7, 1.024E8]");
        org.junit.Assert.assertNotNull(complexArray53);
    }

    @Test
    public void test1819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1819");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform(doubleArray26);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer31 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer32 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray37 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer32.transform2(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray39, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray39);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer31.inversetransform(complexArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer44 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray49 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer44.transform2(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray53 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray51, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray51);
        org.apache.commons.math.complex.Complex[] complexArray56 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray51, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray58 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray51, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray59 = fastFourierTransformer31.transform(complexArray51);
        org.apache.commons.math.complex.Complex[] complexArray60 = fastFourierTransformer0.inversetransform2(complexArray59);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer61 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer62 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray67 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray67);
        org.apache.commons.math.complex.Complex[] complexArray69 = fastFourierTransformer62.transform2(doubleArray67);
        org.apache.commons.math.complex.Complex[] complexArray71 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray69, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray69);
        org.apache.commons.math.complex.Complex[] complexArray73 = fastFourierTransformer61.inversetransform(complexArray69);
        org.apache.commons.math.complex.Complex[] complexArray74 = fastFourierTransformer0.inversetransform2(complexArray73);
        double[] doubleArray79 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray79);
        double[] doubleArray82 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray79, (double) 10.0f);
        double[] doubleArray84 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray79, (double) (short) 100);
        org.apache.commons.math.complex.Complex[] complexArray85 = fastFourierTransformer0.transform2(doubleArray84);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction86 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray90 = fastFourierTransformer0.inversetransform2(univariateRealFunction86, (double) 100L, (double) (byte) 0, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [100.0, 0.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(complexArray56);
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray69);
        org.junit.Assert.assertNotNull(complexArray71);
        org.junit.Assert.assertNotNull(complexArray73);
        org.junit.Assert.assertNotNull(complexArray74);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-1000.0, 97000.0, 1000.0, 10000.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-1000.0, 97000.0, 1000.0, 10000.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-1000.0, 97000.0, 1000.0, 10000.0]");
        org.junit.Assert.assertNotNull(complexArray85);
    }

    @Test
    public void test1820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1820");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray20, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray20);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray20, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray27 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray20, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray28 = fastFourierTransformer0.transform(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer29 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray34 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray34);
        org.apache.commons.math.complex.Complex[] complexArray36 = fastFourierTransformer29.transform2(doubleArray34);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer37 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray42 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray42);
        org.apache.commons.math.complex.Complex[] complexArray44 = fastFourierTransformer37.transform2(doubleArray42);
        org.apache.commons.math.complex.Complex[] complexArray46 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray44, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray44);
        org.apache.commons.math.complex.Complex[] complexArray49 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray44, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray50 = fastFourierTransformer29.transform2(complexArray49);
        double[] doubleArray55 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray55);
        double[] doubleArray58 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray55, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray59 = fastFourierTransformer29.transform(doubleArray55);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer60 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer61 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray66 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray66);
        org.apache.commons.math.complex.Complex[] complexArray68 = fastFourierTransformer61.transform2(doubleArray66);
        org.apache.commons.math.complex.Complex[] complexArray70 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray68, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray68);
        org.apache.commons.math.complex.Complex[] complexArray72 = fastFourierTransformer60.inversetransform(complexArray68);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer73 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray78 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray78);
        org.apache.commons.math.complex.Complex[] complexArray80 = fastFourierTransformer73.transform2(doubleArray78);
        org.apache.commons.math.complex.Complex[] complexArray81 = fastFourierTransformer60.transform(complexArray80);
        org.apache.commons.math.complex.Complex[] complexArray82 = fastFourierTransformer29.transform2(complexArray81);
        double[] doubleArray87 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray87);
        double[] doubleArray90 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray87, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray90);
        org.apache.commons.math.complex.Complex[] complexArray92 = fastFourierTransformer29.inversetransform2(doubleArray90);
        org.apache.commons.math.complex.Complex[] complexArray93 = fastFourierTransformer0.transform2(doubleArray90);
        double[] doubleArray95 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray90, (double) (byte) 1);
        double[] doubleArray97 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray90, (-1.0d));
        double[] doubleArray99 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray97, (double) 10L);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray22);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray27);
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray36);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(complexArray46);
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(complexArray70);
        org.junit.Assert.assertNotNull(complexArray72);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray80);
        org.junit.Assert.assertNotNull(complexArray81);
        org.junit.Assert.assertNotNull(complexArray82);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[100.0, -9700.0, -100.0, -1000.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[100.0, -9700.0, -100.0, -1000.0]");
        org.junit.Assert.assertNotNull(complexArray92);
        org.junit.Assert.assertNotNull(complexArray93);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray95), "[100.0, -9700.0, -100.0, -1000.0]");
        org.junit.Assert.assertNotNull(doubleArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray97), "[100.0, -9700.0, -100.0, -1000.0]");
        org.junit.Assert.assertNotNull(doubleArray99);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray99), "[100.0, -9700.0, -100.0, -1000.0]");
    }

    @Test
    public void test1821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1821");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform(doubleArray26);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer31 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray36 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray36);
        org.apache.commons.math.complex.Complex[] complexArray38 = fastFourierTransformer31.transform2(doubleArray36);
        org.apache.commons.math.complex.Complex[] complexArray40 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray38, (double) 'a');
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer0.transform2(complexArray40);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer42 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray47 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray47);
        org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer42.transform2(doubleArray47);
        org.apache.commons.math.complex.Complex[] complexArray51 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray49, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray53 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray51, (double) (byte) 100);
        org.apache.commons.math.complex.Complex[] complexArray55 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray53, (double) 0);
        org.apache.commons.math.complex.Complex[] complexArray56 = fastFourierTransformer0.transform2(complexArray55);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction57 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray61 = fastFourierTransformer0.inversetransform(univariateRealFunction57, (double) 100.0f, (double) (byte) -1, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [100.0, -1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray38);
        org.junit.Assert.assertNotNull(complexArray40);
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(complexArray56);
    }

    @Test
    public void test1822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1822");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.transform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer12 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray17 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray17);
        org.apache.commons.math.complex.Complex[] complexArray19 = fastFourierTransformer12.transform2(doubleArray17);
        org.apache.commons.math.complex.Complex[] complexArray21 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray19, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray19);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer11.inversetransform(complexArray19);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer24 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray29 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray29);
        org.apache.commons.math.complex.Complex[] complexArray31 = fastFourierTransformer24.transform2(doubleArray29);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer11.transform(complexArray31);
        double[] doubleArray37 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray37);
        double[] doubleArray40 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray37, (double) 10.0f);
        double[] doubleArray42 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray40, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer11.inversetransform2(doubleArray42);
        org.apache.commons.math.complex.Complex[] complexArray44 = fastFourierTransformer0.inversetransform2(doubleArray42);
        double[] doubleArray46 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray42, (-1.0d));
        double[] doubleArray48 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray46, (double) 0.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray19);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray31);
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, -0.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, -0.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, -0.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, -0.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[0.0, -0.0, -0.0, -0.0]");
    }

    @Test
    public void test1823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1823");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, (double) (-1.0f), 0.0d, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1824");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.transform.FastFourierTransformer.verifyInterval((double) 1, 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [1.0, 0.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1825");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer22.transform(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer0.transform(doubleArray30);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer34 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer35 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray40 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray42 = fastFourierTransformer35.transform2(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray44 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray42, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray42);
        org.apache.commons.math.complex.Complex[] complexArray46 = fastFourierTransformer34.inversetransform(complexArray42);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer47 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray52 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray52);
        org.apache.commons.math.complex.Complex[] complexArray54 = fastFourierTransformer47.transform2(doubleArray52);
        org.apache.commons.math.complex.Complex[] complexArray56 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray54, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray54);
        org.apache.commons.math.complex.Complex[] complexArray59 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray54, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray61 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray54, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray62 = fastFourierTransformer34.transform(complexArray54);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer63 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray68 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray68);
        org.apache.commons.math.complex.Complex[] complexArray70 = fastFourierTransformer63.transform2(doubleArray68);
        org.apache.commons.math.complex.Complex[] complexArray71 = fastFourierTransformer34.transform2(doubleArray68);
        org.apache.commons.math.complex.Complex[] complexArray72 = fastFourierTransformer0.transform2(doubleArray68);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray68);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(complexArray46);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray54);
        org.junit.Assert.assertNotNull(complexArray56);
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(complexArray61);
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray70);
        org.junit.Assert.assertNotNull(complexArray71);
        org.junit.Assert.assertNotNull(complexArray72);
    }

    @Test
    public void test1826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1826");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray20, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray20);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray20, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray27 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray20, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray28 = fastFourierTransformer0.transform(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray20);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray22);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray27);
        org.junit.Assert.assertNotNull(complexArray28);
    }

    @Test
    public void test1827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1827");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer22.transform(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer0.transform(doubleArray30);
        double[] doubleArray38 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray38);
        double[] doubleArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray38, (double) 10.0f);
        double[] doubleArray43 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray41, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray44 = fastFourierTransformer0.inversetransform(doubleArray43);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction45 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer0.inversetransform2(univariateRealFunction45, (double) (byte) 1, (double) 100.0f, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray44);
    }

    @Test
    public void test1828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1828");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer23 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray28 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray28);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer23.transform2(doubleArray28);
        org.apache.commons.math.complex.Complex[] complexArray32 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray30, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray30);
        org.apache.commons.math.complex.Complex[] complexArray34 = fastFourierTransformer22.inversetransform(complexArray30);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer35 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray40 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray42 = fastFourierTransformer35.transform2(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer22.transform(complexArray42);
        org.apache.commons.math.complex.Complex[] complexArray44 = fastFourierTransformer0.inversetransform(complexArray42);
        org.apache.commons.math.complex.Complex[] complexArray46 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray44, (double) 0);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray46);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(complexArray46);
    }

    @Test
    public void test1829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1829");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, (double) 100.0f, (double) 0.0f, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [100.0, 0.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1830");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, (double) (short) 10, (double) (byte) 0, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1831");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer9 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray14 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray14);
        org.apache.commons.math.complex.Complex[] complexArray16 = fastFourierTransformer9.transform2(doubleArray14);
        org.apache.commons.math.complex.Complex[] complexArray18 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray16, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray16);
        org.apache.commons.math.complex.Complex[] complexArray21 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray16, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray22 = fastFourierTransformer1.transform2(complexArray21);
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray31 = fastFourierTransformer1.transform(doubleArray27);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray31);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer0.transform2(complexArray31);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer34 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray39 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer34.transform2(doubleArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer42 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray47 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray47);
        org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer42.transform2(doubleArray47);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer50 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray55 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray55);
        org.apache.commons.math.complex.Complex[] complexArray57 = fastFourierTransformer50.transform2(doubleArray55);
        org.apache.commons.math.complex.Complex[] complexArray59 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray57, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray57);
        org.apache.commons.math.complex.Complex[] complexArray62 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray57, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer42.transform2(complexArray62);
        double[] doubleArray68 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray68);
        double[] doubleArray71 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray68, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray72 = fastFourierTransformer42.transform(doubleArray68);
        org.apache.commons.math.complex.Complex[] complexArray73 = fastFourierTransformer34.transform(complexArray72);
        double[] doubleArray78 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray78);
        double[] doubleArray81 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray78, (double) 10.0f);
        double[] doubleArray83 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray81, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray84 = fastFourierTransformer34.transform2(doubleArray81);
        org.apache.commons.math.complex.Complex[] complexArray85 = fastFourierTransformer0.transform2(doubleArray81);
        java.lang.Class<?> wildcardClass86 = fastFourierTransformer0.getClass();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray16);
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(complexArray22);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray31);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray57);
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray72);
        org.junit.Assert.assertNotNull(complexArray73);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray84);
        org.junit.Assert.assertNotNull(complexArray85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test1832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1832");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        double[] doubleArray17 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray17);
        double[] doubleArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray17, (double) 10.0f);
        double[] doubleArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray20, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer0.transform(doubleArray20);
        double[] doubleArray28 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray28);
        double[] doubleArray31 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray28, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray31);
        double[] doubleArray34 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray31, 10.0d);
        org.apache.commons.math.complex.Complex[] complexArray35 = fastFourierTransformer0.transform2(doubleArray31);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer36 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray41 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray41);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer36.transform2(doubleArray41);
        org.apache.commons.math.complex.Complex[] complexArray45 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray43, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray43);
        org.apache.commons.math.complex.Complex[] complexArray48 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray43, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer0.transform2(complexArray43);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer50 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer51 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray56 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray56);
        org.apache.commons.math.complex.Complex[] complexArray58 = fastFourierTransformer51.transform2(doubleArray56);
        org.apache.commons.math.complex.Complex[] complexArray60 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray58, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray58);
        org.apache.commons.math.complex.Complex[] complexArray62 = fastFourierTransformer50.inversetransform(complexArray58);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer63 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray68 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray68);
        org.apache.commons.math.complex.Complex[] complexArray70 = fastFourierTransformer63.transform2(doubleArray68);
        double[] doubleArray72 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray68, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray73 = fastFourierTransformer50.inversetransform(doubleArray68);
        org.apache.commons.math.complex.Complex[] complexArray74 = fastFourierTransformer0.inversetransform(doubleArray68);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray68);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray68);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray35);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(complexArray48);
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray70);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray73);
        org.junit.Assert.assertNotNull(complexArray74);
    }

    @Test
    public void test1833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1833");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        double[] doubleArray31 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray29, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer0.inversetransform2(doubleArray31);
        double[] doubleArray37 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray37);
        double[] doubleArray40 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray37, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray42 = fastFourierTransformer0.inversetransform2(doubleArray37);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction43 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray47 = fastFourierTransformer0.inversetransform(univariateRealFunction43, 0.0d, (double) '#', (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray42);
    }

    @Test
    public void test1834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1834");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, (double) 1.0f, (double) (-1L), (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [1.0, -1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1835");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        double[] doubleArray17 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray17);
        double[] doubleArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray17, (double) 10.0f);
        double[] doubleArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray20, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer0.transform(doubleArray20);
        double[] doubleArray28 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray28);
        double[] doubleArray31 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray28, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray31);
        double[] doubleArray34 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray31, 10.0d);
        org.apache.commons.math.complex.Complex[] complexArray35 = fastFourierTransformer0.transform2(doubleArray31);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer36 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray41 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray41);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer36.transform2(doubleArray41);
        org.apache.commons.math.complex.Complex[] complexArray45 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray43, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray43);
        org.apache.commons.math.complex.Complex[] complexArray48 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray43, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer0.transform2(complexArray43);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer50 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer51 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray56 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray56);
        org.apache.commons.math.complex.Complex[] complexArray58 = fastFourierTransformer51.transform2(doubleArray56);
        org.apache.commons.math.complex.Complex[] complexArray60 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray58, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray58);
        org.apache.commons.math.complex.Complex[] complexArray62 = fastFourierTransformer50.inversetransform(complexArray58);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer63 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray68 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray68);
        org.apache.commons.math.complex.Complex[] complexArray70 = fastFourierTransformer63.transform2(doubleArray68);
        double[] doubleArray72 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray68, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray73 = fastFourierTransformer50.inversetransform(doubleArray68);
        org.apache.commons.math.complex.Complex[] complexArray74 = fastFourierTransformer0.inversetransform(doubleArray68);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction75 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray79 = fastFourierTransformer0.transform(univariateRealFunction75, (double) 100.0f, (double) 0L, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [100.0, 0.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray35);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(complexArray48);
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray70);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray73);
        org.junit.Assert.assertNotNull(complexArray74);
    }

    @Test
    public void test1836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1836");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.transform.FastFourierTransformer.verifyInterval((double) (short) 100, (double) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [100.0, 1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1837");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform2(doubleArray29);
        double[] doubleArray35 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray35);
        double[] doubleArray38 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray35, (double) 10.0f);
        double[] doubleArray40 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray38, (double) 10L);
        double[] doubleArray42 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray38, (double) (byte) 100);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer0.transform(doubleArray38);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer44 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer45 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray50 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray50);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer45.transform2(doubleArray50);
        org.apache.commons.math.complex.Complex[] complexArray54 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray52, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray52);
        org.apache.commons.math.complex.Complex[] complexArray56 = fastFourierTransformer44.inversetransform(complexArray52);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer57 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray62 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray62);
        org.apache.commons.math.complex.Complex[] complexArray64 = fastFourierTransformer57.transform2(doubleArray62);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer65 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray70 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray70);
        org.apache.commons.math.complex.Complex[] complexArray72 = fastFourierTransformer65.transform2(doubleArray70);
        org.apache.commons.math.complex.Complex[] complexArray74 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray72, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray72);
        org.apache.commons.math.complex.Complex[] complexArray77 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray72, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray78 = fastFourierTransformer57.transform2(complexArray77);
        double[] doubleArray83 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray83);
        double[] doubleArray86 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray83, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray87 = fastFourierTransformer57.transform(doubleArray83);
        org.apache.commons.math.complex.Complex[] complexArray88 = fastFourierTransformer44.transform(doubleArray83);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray83);
        org.apache.commons.math.complex.Complex[] complexArray90 = fastFourierTransformer0.transform2(doubleArray83);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction91 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray95 = fastFourierTransformer0.transform2(univariateRealFunction91, (double) '#', 0.0d, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(complexArray54);
        org.junit.Assert.assertNotNull(complexArray56);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray64);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray72);
        org.junit.Assert.assertNotNull(complexArray74);
        org.junit.Assert.assertNotNull(complexArray77);
        org.junit.Assert.assertNotNull(complexArray78);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray87);
        org.junit.Assert.assertNotNull(complexArray88);
        org.junit.Assert.assertNotNull(complexArray90);
    }

    @Test
    public void test1838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1838");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer23 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray28 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray28);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer23.transform2(doubleArray28);
        org.apache.commons.math.complex.Complex[] complexArray32 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray30, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray30);
        org.apache.commons.math.complex.Complex[] complexArray34 = fastFourierTransformer22.inversetransform(complexArray30);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer35 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray40 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray42 = fastFourierTransformer35.transform2(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray44 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray42, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray42);
        org.apache.commons.math.complex.Complex[] complexArray47 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray42, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray49 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray42, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray50 = fastFourierTransformer22.transform(complexArray42);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer0.transform(complexArray50);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer52 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray57 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray57);
        org.apache.commons.math.complex.Complex[] complexArray59 = fastFourierTransformer52.transform2(doubleArray57);
        double[] doubleArray61 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray57, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray62 = fastFourierTransformer0.transform2(doubleArray57);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer63 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray68 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray68);
        org.apache.commons.math.complex.Complex[] complexArray70 = fastFourierTransformer63.transform2(doubleArray68);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer71 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray76 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray76);
        org.apache.commons.math.complex.Complex[] complexArray78 = fastFourierTransformer71.transform2(doubleArray76);
        org.apache.commons.math.complex.Complex[] complexArray80 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray78, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray78);
        org.apache.commons.math.complex.Complex[] complexArray83 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray78, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray84 = fastFourierTransformer63.transform2(complexArray83);
        double[] doubleArray89 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray89);
        double[] doubleArray92 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray89, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray93 = fastFourierTransformer63.transform(doubleArray89);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray89);
        org.apache.commons.math.complex.Complex[] complexArray95 = fastFourierTransformer0.inversetransform(doubleArray89);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray70);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray78);
        org.junit.Assert.assertNotNull(complexArray80);
        org.junit.Assert.assertNotNull(complexArray83);
        org.junit.Assert.assertNotNull(complexArray84);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray93);
        org.junit.Assert.assertNotNull(complexArray95);
    }

    @Test
    public void test1839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1839");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray11 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer12 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray17 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray17);
        org.apache.commons.math.complex.Complex[] complexArray19 = fastFourierTransformer12.transform2(doubleArray17);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer20 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray25 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray25);
        org.apache.commons.math.complex.Complex[] complexArray27 = fastFourierTransformer20.transform2(doubleArray25);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer28 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray33 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray33);
        org.apache.commons.math.complex.Complex[] complexArray35 = fastFourierTransformer28.transform2(doubleArray33);
        org.apache.commons.math.complex.Complex[] complexArray37 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray35, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray35);
        org.apache.commons.math.complex.Complex[] complexArray40 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray35, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer20.transform2(complexArray40);
        double[] doubleArray46 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray46);
        double[] doubleArray49 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray46, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray50 = fastFourierTransformer20.transform(doubleArray46);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer12.transform(complexArray50);
        org.apache.commons.math.complex.Complex[] complexArray53 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray51, (double) (short) -1);
        org.apache.commons.math.complex.Complex[] complexArray54 = fastFourierTransformer0.inversetransform(complexArray53);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer55 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray60 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray60);
        org.apache.commons.math.complex.Complex[] complexArray62 = fastFourierTransformer55.transform2(doubleArray60);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer63 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray68 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray68);
        org.apache.commons.math.complex.Complex[] complexArray70 = fastFourierTransformer63.transform2(doubleArray68);
        org.apache.commons.math.complex.Complex[] complexArray72 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray70, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray70);
        org.apache.commons.math.complex.Complex[] complexArray75 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray70, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray76 = fastFourierTransformer55.transform2(complexArray75);
        double[] doubleArray81 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray81);
        double[] doubleArray84 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray81, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray85 = fastFourierTransformer55.transform(doubleArray81);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray81);
        double[] doubleArray88 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray81, (double) 100);
        org.apache.commons.math.complex.Complex[] complexArray89 = fastFourierTransformer0.inversetransform2(doubleArray88);
        org.apache.commons.math.complex.Complex[] complexArray91 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray89, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray89);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray11);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray19);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray27);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray35);
        org.junit.Assert.assertNotNull(complexArray37);
        org.junit.Assert.assertNotNull(complexArray40);
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(complexArray54);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray70);
        org.junit.Assert.assertNotNull(complexArray72);
        org.junit.Assert.assertNotNull(complexArray75);
        org.junit.Assert.assertNotNull(complexArray76);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-1000.0, 97000.0, 1000.0, 10000.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-1000.0, 97000.0, 1000.0, 10000.0]");
        org.junit.Assert.assertNotNull(complexArray85);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[-1000.0, 97000.0, 1000.0, 10000.0]");
        org.junit.Assert.assertNotNull(complexArray89);
        org.junit.Assert.assertNotNull(complexArray91);
    }

    @Test
    public void test1840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1840");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.transform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer12 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray17 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray17);
        org.apache.commons.math.complex.Complex[] complexArray19 = fastFourierTransformer12.transform2(doubleArray17);
        org.apache.commons.math.complex.Complex[] complexArray21 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray19, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray19);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer11.inversetransform(complexArray19);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer24 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray29 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray29);
        org.apache.commons.math.complex.Complex[] complexArray31 = fastFourierTransformer24.transform2(doubleArray29);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer11.transform(complexArray31);
        double[] doubleArray37 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray37);
        double[] doubleArray40 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray37, (double) 10.0f);
        double[] doubleArray42 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray40, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer11.inversetransform2(doubleArray42);
        org.apache.commons.math.complex.Complex[] complexArray44 = fastFourierTransformer0.inversetransform2(doubleArray42);
        double[] doubleArray46 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray42, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray46);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray46);
        double[] doubleArray50 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray46, (double) (-1L));
        java.lang.Class<?> wildcardClass51 = doubleArray46.getClass();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray19);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray31);
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1000.0, -97000.0, -1000.0, -10000.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1000.0, -97000.0, -1000.0, -10000.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1000.0, -97000.0, -1000.0, -10000.0]");
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1000.0, -97000.0, -1000.0, -10000.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1000.0, -97000.0, -1000.0, -10000.0]");
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test1841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1841");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        double[] doubleArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray18, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer0.inversetransform(doubleArray18);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer24 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray29 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray29);
        double[] doubleArray32 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray29, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray32);
        org.apache.commons.math.complex.Complex[] complexArray34 = fastFourierTransformer24.inversetransform(doubleArray32);
        org.apache.commons.math.complex.Complex[] complexArray35 = fastFourierTransformer0.inversetransform(doubleArray32);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer36 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray41 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray41);
        double[] doubleArray44 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray41, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray44);
        org.apache.commons.math.complex.Complex[] complexArray46 = fastFourierTransformer36.transform(doubleArray44);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer47 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray52 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray52);
        org.apache.commons.math.complex.Complex[] complexArray54 = fastFourierTransformer47.transform2(doubleArray52);
        org.apache.commons.math.complex.Complex[] complexArray56 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray54, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray54);
        org.apache.commons.math.complex.Complex[] complexArray59 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray54, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray61 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray54, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray62 = fastFourierTransformer36.inversetransform2(complexArray61);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray61);
        org.apache.commons.math.complex.Complex[] complexArray64 = fastFourierTransformer0.inversetransform2(complexArray61);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray61);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray61);
        org.apache.commons.math.complex.Complex[] complexArray68 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray61, (double) '4');
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(complexArray35);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray46);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray54);
        org.junit.Assert.assertNotNull(complexArray56);
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(complexArray61);
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(complexArray64);
        org.junit.Assert.assertNotNull(complexArray68);
    }

    @Test
    public void test1842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1842");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer16 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray21 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer16.transform2(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray23);
        org.apache.commons.math.complex.Complex[] complexArray28 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray29 = fastFourierTransformer8.transform2(complexArray28);
        double[] doubleArray34 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray34);
        double[] doubleArray37 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray34, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray38 = fastFourierTransformer8.transform(doubleArray34);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer0.transform(complexArray38);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer40 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray45 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray45);
        org.apache.commons.math.complex.Complex[] complexArray47 = fastFourierTransformer40.transform2(doubleArray45);
        org.apache.commons.math.complex.Complex[] complexArray49 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray47, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray51 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray49, (double) (byte) 100);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer0.inversetransform(complexArray49);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer53 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray58 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray58);
        org.apache.commons.math.complex.Complex[] complexArray60 = fastFourierTransformer53.transform2(doubleArray58);
        org.apache.commons.math.complex.Complex[] complexArray62 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray60, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray60);
        org.apache.commons.math.complex.Complex[] complexArray65 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray60, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray67 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray60, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray68 = fastFourierTransformer0.inversetransform(complexArray60);
        double[] doubleArray73 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray73);
        double[] doubleArray76 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray73, (double) 10.0f);
        double[] doubleArray78 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray76, (double) 10L);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray76);
        org.apache.commons.math.complex.Complex[] complexArray80 = fastFourierTransformer0.inversetransform(doubleArray76);
        org.apache.commons.math.complex.Complex[] complexArray81 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray82 = fastFourierTransformer0.inversetransform2(complexArray81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray38);
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(complexArray67);
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray80);
    }

    @Test
    public void test1843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1843");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform(doubleArray26);
        double[] doubleArray35 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray35);
        double[] doubleArray38 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray35, (double) 10.0f);
        double[] doubleArray40 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray38, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer0.transform2(doubleArray40);
        double[] doubleArray46 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray46);
        double[] doubleArray49 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray46, (double) 10.0f);
        double[] doubleArray51 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray49, (double) (-1.0f));
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer0.inversetransform(doubleArray49);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction53 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray57 = fastFourierTransformer0.transform2(univariateRealFunction53, (double) (-1.0f), (double) (-1), (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(complexArray52);
    }

    @Test
    public void test1844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1844");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform(doubleArray26);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer31 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer32 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray37 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer32.transform2(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray39, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray39);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer31.inversetransform(complexArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer44 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray49 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer44.transform2(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer31.transform(complexArray51);
        org.apache.commons.math.complex.Complex[] complexArray53 = fastFourierTransformer0.transform2(complexArray52);
        double[] doubleArray58 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray58);
        double[] doubleArray61 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray58, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer0.inversetransform2(doubleArray61);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer64 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer65 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray70 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray70);
        org.apache.commons.math.complex.Complex[] complexArray72 = fastFourierTransformer65.transform2(doubleArray70);
        org.apache.commons.math.complex.Complex[] complexArray74 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray72, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray72);
        org.apache.commons.math.complex.Complex[] complexArray76 = fastFourierTransformer64.inversetransform(complexArray72);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer77 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray82 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray82);
        org.apache.commons.math.complex.Complex[] complexArray84 = fastFourierTransformer77.transform2(doubleArray82);
        double[] doubleArray86 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray82, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray87 = fastFourierTransformer64.inversetransform(doubleArray82);
        org.apache.commons.math.complex.Complex[] complexArray88 = fastFourierTransformer0.transform(doubleArray82);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction89 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray93 = fastFourierTransformer0.inversetransform(univariateRealFunction89, (double) 0, (double) (short) 0, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [0.0, 0.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray72);
        org.junit.Assert.assertNotNull(complexArray74);
        org.junit.Assert.assertNotNull(complexArray76);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray84);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray87);
        org.junit.Assert.assertNotNull(complexArray88);
    }

    @Test
    public void test1845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1845");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        double[] doubleArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray8, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray11 = fastFourierTransformer0.inversetransform(doubleArray10);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray10);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray11);
    }

    @Test
    public void test1846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1846");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer16 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray21 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer16.transform2(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray23);
        org.apache.commons.math.complex.Complex[] complexArray28 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray29 = fastFourierTransformer8.transform2(complexArray28);
        double[] doubleArray34 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray34);
        double[] doubleArray37 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray34, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray38 = fastFourierTransformer8.transform(doubleArray34);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer0.transform(complexArray38);
        double[] doubleArray44 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray44);
        double[] doubleArray47 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray44, (double) 10.0f);
        double[] doubleArray49 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray47, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray50 = fastFourierTransformer0.transform2(doubleArray47);
        double[] doubleArray55 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray55);
        double[] doubleArray58 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray55, (double) (byte) 100);
        org.apache.commons.math.complex.Complex[] complexArray59 = fastFourierTransformer0.inversetransform2(doubleArray55);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer60 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray65 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray65);
        org.apache.commons.math.complex.Complex[] complexArray67 = fastFourierTransformer60.transform2(doubleArray65);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer68 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray73 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray73);
        org.apache.commons.math.complex.Complex[] complexArray75 = fastFourierTransformer68.transform2(doubleArray73);
        org.apache.commons.math.complex.Complex[] complexArray77 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray75, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray75);
        org.apache.commons.math.complex.Complex[] complexArray80 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray75, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray81 = fastFourierTransformer60.transform2(complexArray80);
        org.apache.commons.math.complex.Complex[] complexArray83 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray80, (double) (byte) 1);
        org.apache.commons.math.complex.Complex[] complexArray84 = fastFourierTransformer0.transform(complexArray83);
        java.lang.Class<?> wildcardClass85 = fastFourierTransformer0.getClass();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray38);
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray67);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray75);
        org.junit.Assert.assertNotNull(complexArray77);
        org.junit.Assert.assertNotNull(complexArray80);
        org.junit.Assert.assertNotNull(complexArray81);
        org.junit.Assert.assertNotNull(complexArray83);
        org.junit.Assert.assertNotNull(complexArray84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1847");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.transform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray16 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer11.transform2(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray19 = fastFourierTransformer0.inversetransform2(complexArray18);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer20 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray25 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray25);
        org.apache.commons.math.complex.Complex[] complexArray27 = fastFourierTransformer20.transform2(doubleArray25);
        org.apache.commons.math.complex.Complex[] complexArray28 = fastFourierTransformer0.transform(complexArray27);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer29 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray34 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray34);
        double[] doubleArray37 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray34, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer29.transform(doubleArray37);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer40 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer41 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray46 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray46);
        org.apache.commons.math.complex.Complex[] complexArray48 = fastFourierTransformer41.transform2(doubleArray46);
        org.apache.commons.math.complex.Complex[] complexArray50 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray48, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray48);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer40.inversetransform(complexArray48);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer53 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray58 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray58);
        org.apache.commons.math.complex.Complex[] complexArray60 = fastFourierTransformer53.transform2(doubleArray58);
        org.apache.commons.math.complex.Complex[] complexArray61 = fastFourierTransformer40.transform(complexArray60);
        double[] doubleArray66 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray66);
        double[] doubleArray69 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray66, (double) 10.0f);
        double[] doubleArray71 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray69, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray72 = fastFourierTransformer40.inversetransform2(doubleArray71);
        org.apache.commons.math.complex.Complex[] complexArray73 = fastFourierTransformer29.inversetransform2(doubleArray71);
        double[] doubleArray75 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray71, (-1.0d));
        double[] doubleArray77 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray75, (double) 0.0f);
        org.apache.commons.math.complex.Complex[] complexArray78 = fastFourierTransformer0.inversetransform(doubleArray75);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction79 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray83 = fastFourierTransformer0.inversetransform2(univariateRealFunction79, (double) 1L, (double) (-1.0f), 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [1.0, -1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray19);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray27);
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray48);
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(complexArray61);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[0.0, -0.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[0.0, -0.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[0.0, -0.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(complexArray72);
        org.junit.Assert.assertNotNull(complexArray73);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[0.0, -0.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[0.0, -0.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(complexArray78);
    }

    @Test
    public void test1848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1848");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer16 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray21 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer16.transform2(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray23);
        org.apache.commons.math.complex.Complex[] complexArray28 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray29 = fastFourierTransformer8.transform2(complexArray28);
        double[] doubleArray34 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray34);
        double[] doubleArray37 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray34, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray38 = fastFourierTransformer8.transform(doubleArray34);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer0.transform(complexArray38);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer40 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray45 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray45);
        org.apache.commons.math.complex.Complex[] complexArray47 = fastFourierTransformer40.transform2(doubleArray45);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer48 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray53 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray53);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer48.transform2(doubleArray53);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer56 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray61 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer56.transform2(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray65 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray63, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray63);
        org.apache.commons.math.complex.Complex[] complexArray68 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray63, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray69 = fastFourierTransformer48.transform2(complexArray68);
        double[] doubleArray74 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray74);
        double[] doubleArray77 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray74, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray78 = fastFourierTransformer48.transform(doubleArray74);
        org.apache.commons.math.complex.Complex[] complexArray79 = fastFourierTransformer40.transform(complexArray78);
        double[] doubleArray84 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray84);
        double[] doubleArray87 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray84, (double) 10.0f);
        double[] doubleArray89 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray87, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray90 = fastFourierTransformer40.transform2(doubleArray87);
        double[] doubleArray92 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray87, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray93 = fastFourierTransformer0.transform(doubleArray92);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction94 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray98 = fastFourierTransformer0.transform(univariateRealFunction94, (double) 0L, (double) (short) 10, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray38);
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(complexArray69);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray78);
        org.junit.Assert.assertNotNull(complexArray79);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(complexArray90);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(complexArray93);
    }

    @Test
    public void test1849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1849");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform(doubleArray26);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer31 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer32 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray37 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer32.transform2(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray39, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray39);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer31.inversetransform(complexArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer44 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray49 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer44.transform2(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer31.transform(complexArray51);
        org.apache.commons.math.complex.Complex[] complexArray53 = fastFourierTransformer0.transform2(complexArray52);
        double[] doubleArray58 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray58);
        double[] doubleArray61 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray58, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer0.inversetransform2(doubleArray61);
        double[] doubleArray68 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray68);
        double[] doubleArray71 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray68, 0.0d);
        org.apache.commons.math.complex.Complex[] complexArray72 = fastFourierTransformer0.inversetransform(doubleArray71);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction73 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray77 = fastFourierTransformer0.inversetransform2(univariateRealFunction73, (double) 100L, (double) (byte) 100, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [100.0, 100.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray72);
    }

    @Test
    public void test1850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1850");
        org.apache.commons.math.transform.FastFourierTransformer.verifyInterval((double) 1.0f, (double) ' ');
    }

    @Test
    public void test1851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1851");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        double[] doubleArray17 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray17);
        double[] doubleArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray17, (double) 10.0f);
        double[] doubleArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray20, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer0.transform(doubleArray20);
        double[] doubleArray28 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray28);
        double[] doubleArray31 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray28, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray31);
        double[] doubleArray34 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray31, 10.0d);
        org.apache.commons.math.complex.Complex[] complexArray35 = fastFourierTransformer0.transform2(doubleArray31);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer36 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray41 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray41);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer36.transform2(doubleArray41);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer44 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray49 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer44.transform2(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray53 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray51, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray51);
        org.apache.commons.math.complex.Complex[] complexArray56 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray51, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray57 = fastFourierTransformer36.transform2(complexArray56);
        double[] doubleArray62 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray62);
        double[] doubleArray65 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray62, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray66 = fastFourierTransformer36.transform2(doubleArray65);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray66);
        org.apache.commons.math.complex.Complex[] complexArray68 = fastFourierTransformer0.inversetransform2(complexArray66);
        double[] doubleArray73 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray73);
        double[] doubleArray76 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray73, (double) 10.0f);
        double[] doubleArray78 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray76, (double) 10L);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray78);
        double[] doubleArray81 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray78, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray82 = fastFourierTransformer0.transform2(doubleArray81);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray82);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray35);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(complexArray56);
        org.junit.Assert.assertNotNull(complexArray57);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray66);
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(complexArray82);
    }

    @Test
    public void test1852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1852");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer22.transform(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer0.transform(doubleArray30);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer34 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray39 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer34.transform2(doubleArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer42 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray47 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray47);
        org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer42.transform2(doubleArray47);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer50 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray55 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray55);
        org.apache.commons.math.complex.Complex[] complexArray57 = fastFourierTransformer50.transform2(doubleArray55);
        org.apache.commons.math.complex.Complex[] complexArray59 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray57, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray57);
        org.apache.commons.math.complex.Complex[] complexArray62 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray57, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer42.transform2(complexArray62);
        double[] doubleArray68 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray68);
        double[] doubleArray71 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray68, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray72 = fastFourierTransformer42.transform(doubleArray68);
        org.apache.commons.math.complex.Complex[] complexArray73 = fastFourierTransformer34.transform(complexArray72);
        org.apache.commons.math.complex.Complex[] complexArray74 = fastFourierTransformer0.transform(complexArray73);
        org.apache.commons.math.complex.Complex[] complexArray76 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray74, (double) (byte) 1);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray74);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray57);
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray72);
        org.junit.Assert.assertNotNull(complexArray73);
        org.junit.Assert.assertNotNull(complexArray74);
        org.junit.Assert.assertNotNull(complexArray76);
    }

    @Test
    public void test1853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1853");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform(doubleArray26);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer31 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray36 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray36);
        org.apache.commons.math.complex.Complex[] complexArray38 = fastFourierTransformer31.transform2(doubleArray36);
        org.apache.commons.math.complex.Complex[] complexArray40 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray38, (double) 'a');
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer0.transform2(complexArray40);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer42 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray47 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray47);
        org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer42.transform2(doubleArray47);
        org.apache.commons.math.complex.Complex[] complexArray51 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray49, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray53 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray51, (double) (byte) 100);
        org.apache.commons.math.complex.Complex[] complexArray55 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray53, (double) 0);
        org.apache.commons.math.complex.Complex[] complexArray56 = fastFourierTransformer0.transform2(complexArray55);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction57 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray61 = fastFourierTransformer0.inversetransform(univariateRealFunction57, (double) (short) 100, (double) 10.0f, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [100.0, 10.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray38);
        org.junit.Assert.assertNotNull(complexArray40);
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(complexArray56);
    }

    @Test
    public void test1854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1854");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        double[] doubleArray17 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray17);
        double[] doubleArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray17, (double) 10.0f);
        double[] doubleArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray20, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer0.transform(doubleArray20);
        double[] doubleArray28 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray28);
        double[] doubleArray31 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray28, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray31);
        double[] doubleArray34 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray31, 10.0d);
        org.apache.commons.math.complex.Complex[] complexArray35 = fastFourierTransformer0.transform2(doubleArray31);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer36 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray41 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray41);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer36.transform2(doubleArray41);
        org.apache.commons.math.complex.Complex[] complexArray45 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray43, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray43);
        org.apache.commons.math.complex.Complex[] complexArray48 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray43, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer0.transform2(complexArray43);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer50 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer51 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray56 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray56);
        org.apache.commons.math.complex.Complex[] complexArray58 = fastFourierTransformer51.transform2(doubleArray56);
        org.apache.commons.math.complex.Complex[] complexArray60 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray58, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray58);
        org.apache.commons.math.complex.Complex[] complexArray62 = fastFourierTransformer50.inversetransform(complexArray58);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer63 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray68 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray68);
        org.apache.commons.math.complex.Complex[] complexArray70 = fastFourierTransformer63.transform2(doubleArray68);
        org.apache.commons.math.complex.Complex[] complexArray71 = fastFourierTransformer50.transform(complexArray70);
        double[] doubleArray76 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray76);
        double[] doubleArray79 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray76, (double) 10.0f);
        double[] doubleArray81 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray79, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray82 = fastFourierTransformer50.inversetransform2(doubleArray81);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray81);
        org.apache.commons.math.complex.Complex[] complexArray84 = fastFourierTransformer0.transform(doubleArray81);
        double[] doubleArray86 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray81, (double) (byte) 0);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray35);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(complexArray48);
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray70);
        org.junit.Assert.assertNotNull(complexArray71);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray82);
        org.junit.Assert.assertNotNull(complexArray84);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-0.0, 0.0, 0.0, 0.0]");
    }

    @Test
    public void test1855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1855");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray11 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer12 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray17 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray17);
        org.apache.commons.math.complex.Complex[] complexArray19 = fastFourierTransformer12.transform2(doubleArray17);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer20 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray25 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray25);
        org.apache.commons.math.complex.Complex[] complexArray27 = fastFourierTransformer20.transform2(doubleArray25);
        org.apache.commons.math.complex.Complex[] complexArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray27, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray27);
        org.apache.commons.math.complex.Complex[] complexArray32 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray27, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer12.transform2(complexArray32);
        double[] doubleArray38 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray38);
        double[] doubleArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray38, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray41);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray41);
        double[] doubleArray45 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray41, (double) (byte) 10);
        double[] doubleArray47 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray45, (double) (byte) 0);
        org.apache.commons.math.complex.Complex[] complexArray48 = fastFourierTransformer12.transform2(doubleArray45);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer49 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer50 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray55 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray55);
        org.apache.commons.math.complex.Complex[] complexArray57 = fastFourierTransformer50.transform2(doubleArray55);
        org.apache.commons.math.complex.Complex[] complexArray59 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray57, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray57);
        org.apache.commons.math.complex.Complex[] complexArray61 = fastFourierTransformer49.inversetransform(complexArray57);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer62 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray67 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray67);
        org.apache.commons.math.complex.Complex[] complexArray69 = fastFourierTransformer62.transform2(doubleArray67);
        org.apache.commons.math.complex.Complex[] complexArray70 = fastFourierTransformer49.transform(complexArray69);
        org.apache.commons.math.complex.Complex[] complexArray71 = fastFourierTransformer12.inversetransform(complexArray69);
        double[] doubleArray76 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray76);
        double[] doubleArray79 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray76, (double) 10.0f);
        double[] doubleArray81 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray79, (double) 10L);
        double[] doubleArray83 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray79, (double) (byte) 100);
        org.apache.commons.math.complex.Complex[] complexArray84 = fastFourierTransformer12.inversetransform(doubleArray83);
        org.apache.commons.math.complex.Complex[] complexArray85 = fastFourierTransformer0.transform(doubleArray83);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction86 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray90 = fastFourierTransformer0.transform(univariateRealFunction86, (double) 0.0f, 1.0d, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray11);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray19);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray27);
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray48);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray57);
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(complexArray61);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray69);
        org.junit.Assert.assertNotNull(complexArray70);
        org.junit.Assert.assertNotNull(complexArray71);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(complexArray84);
        org.junit.Assert.assertNotNull(complexArray85);
    }

    @Test
    public void test1856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1856");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        double[] doubleArray17 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray17);
        double[] doubleArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray17, (double) 10.0f);
        double[] doubleArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray20, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer0.transform(doubleArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer24 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer25 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray30 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer25.transform2(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray34 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray32, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray32);
        org.apache.commons.math.complex.Complex[] complexArray36 = fastFourierTransformer24.inversetransform(complexArray32);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer37 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray42 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray42);
        org.apache.commons.math.complex.Complex[] complexArray44 = fastFourierTransformer37.transform2(doubleArray42);
        double[] doubleArray46 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray42, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray47 = fastFourierTransformer24.inversetransform(doubleArray42);
        org.apache.commons.math.complex.Complex[] complexArray49 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray47, (-1.0d));
        org.apache.commons.math.complex.Complex[] complexArray50 = fastFourierTransformer0.inversetransform(complexArray49);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer51 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray56 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray56);
        double[] doubleArray59 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray56, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray59);
        org.apache.commons.math.complex.Complex[] complexArray61 = fastFourierTransformer51.transform(doubleArray59);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer62 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray67 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray67);
        org.apache.commons.math.complex.Complex[] complexArray69 = fastFourierTransformer62.transform2(doubleArray67);
        org.apache.commons.math.complex.Complex[] complexArray70 = fastFourierTransformer51.inversetransform2(complexArray69);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer71 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray76 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray76);
        org.apache.commons.math.complex.Complex[] complexArray78 = fastFourierTransformer71.transform2(doubleArray76);
        org.apache.commons.math.complex.Complex[] complexArray79 = fastFourierTransformer51.transform(complexArray78);
        double[] doubleArray84 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray84);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray84);
        org.apache.commons.math.complex.Complex[] complexArray87 = fastFourierTransformer51.inversetransform2(doubleArray84);
        org.apache.commons.math.complex.Complex[] complexArray88 = fastFourierTransformer0.transform2(doubleArray84);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction89 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray93 = fastFourierTransformer0.transform2(univariateRealFunction89, (double) 100, (double) (byte) 0, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(complexArray36);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray61);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray69);
        org.junit.Assert.assertNotNull(complexArray70);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray78);
        org.junit.Assert.assertNotNull(complexArray79);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray87);
        org.junit.Assert.assertNotNull(complexArray88);
    }

    @Test
    public void test1857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1857");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, (double) 1.0f, (double) (byte) -1, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [1.0, -1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1858");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray11 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer12 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray20, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray20);
        org.apache.commons.math.complex.Complex[] complexArray24 = fastFourierTransformer12.inversetransform(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer25 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray30 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer25.transform2(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer12.transform(complexArray32);
        org.apache.commons.math.complex.Complex[] complexArray34 = fastFourierTransformer0.transform2(complexArray32);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer35 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray40 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray42 = fastFourierTransformer35.transform2(doubleArray40);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer43 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray48 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray48);
        org.apache.commons.math.complex.Complex[] complexArray50 = fastFourierTransformer43.transform2(doubleArray48);
        org.apache.commons.math.complex.Complex[] complexArray52 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray50, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray50);
        org.apache.commons.math.complex.Complex[] complexArray55 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray50, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray56 = fastFourierTransformer35.transform2(complexArray55);
        double[] doubleArray61 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray61);
        double[] doubleArray64 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray61, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray65 = fastFourierTransformer35.transform2(doubleArray64);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray64);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray64);
        org.apache.commons.math.complex.Complex[] complexArray68 = fastFourierTransformer0.inversetransform2(doubleArray64);
        org.apache.commons.math.complex.Complex[] complexArray70 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray68, (double) (byte) 100);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray11);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray22);
        org.junit.Assert.assertNotNull(complexArray24);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(complexArray56);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(complexArray70);
    }

    @Test
    public void test1859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1859");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, (double) 0.0f, 0.0d, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1860");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer16 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray21 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer16.transform2(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray23);
        org.apache.commons.math.complex.Complex[] complexArray28 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray29 = fastFourierTransformer8.transform2(complexArray28);
        double[] doubleArray34 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray34);
        double[] doubleArray37 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray34, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray38 = fastFourierTransformer8.transform(doubleArray34);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer0.transform(complexArray38);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer40 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray45 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray45);
        org.apache.commons.math.complex.Complex[] complexArray47 = fastFourierTransformer40.transform2(doubleArray45);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer48 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray53 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray53);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer48.transform2(doubleArray53);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer56 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray61 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer56.transform2(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray65 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray63, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray63);
        org.apache.commons.math.complex.Complex[] complexArray68 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray63, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray69 = fastFourierTransformer48.transform2(complexArray68);
        double[] doubleArray74 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray74);
        double[] doubleArray77 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray74, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray78 = fastFourierTransformer48.transform(doubleArray74);
        org.apache.commons.math.complex.Complex[] complexArray79 = fastFourierTransformer40.transform(complexArray78);
        org.apache.commons.math.complex.Complex[] complexArray81 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray79, (double) (-1));
        org.apache.commons.math.complex.Complex[] complexArray82 = fastFourierTransformer0.transform(complexArray81);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction83 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray87 = fastFourierTransformer0.transform(univariateRealFunction83, (double) 0.0f, 1.0d, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray38);
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(complexArray69);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray78);
        org.junit.Assert.assertNotNull(complexArray79);
        org.junit.Assert.assertNotNull(complexArray81);
        org.junit.Assert.assertNotNull(complexArray82);
    }

    @Test
    public void test1861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1861");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer23 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray28 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray28);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer23.transform2(doubleArray28);
        org.apache.commons.math.complex.Complex[] complexArray32 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray30, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray30);
        org.apache.commons.math.complex.Complex[] complexArray34 = fastFourierTransformer22.inversetransform(complexArray30);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer35 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray40 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray42 = fastFourierTransformer35.transform2(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray44 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray42, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray42);
        org.apache.commons.math.complex.Complex[] complexArray47 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray42, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray49 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray42, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray50 = fastFourierTransformer22.transform(complexArray42);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer0.transform(complexArray50);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer52 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray57 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray57);
        double[] doubleArray60 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray57, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray60);
        org.apache.commons.math.complex.Complex[] complexArray62 = fastFourierTransformer52.transform(doubleArray60);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer63 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray68 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray68);
        org.apache.commons.math.complex.Complex[] complexArray70 = fastFourierTransformer63.transform2(doubleArray68);
        org.apache.commons.math.complex.Complex[] complexArray72 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray70, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray70);
        org.apache.commons.math.complex.Complex[] complexArray75 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray70, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray77 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray70, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray78 = fastFourierTransformer52.inversetransform2(complexArray77);
        org.apache.commons.math.complex.Complex[] complexArray79 = fastFourierTransformer0.inversetransform2(complexArray77);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction80 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray84 = fastFourierTransformer0.transform(univariateRealFunction80, (double) 'a', 10.0d, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray70);
        org.junit.Assert.assertNotNull(complexArray72);
        org.junit.Assert.assertNotNull(complexArray75);
        org.junit.Assert.assertNotNull(complexArray77);
        org.junit.Assert.assertNotNull(complexArray78);
        org.junit.Assert.assertNotNull(complexArray79);
    }

    @Test
    public void test1862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1862");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer9 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray14 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray14);
        org.apache.commons.math.complex.Complex[] complexArray16 = fastFourierTransformer9.transform2(doubleArray14);
        org.apache.commons.math.complex.Complex[] complexArray18 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray16, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray16);
        org.apache.commons.math.complex.Complex[] complexArray21 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray16, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray22 = fastFourierTransformer1.transform2(complexArray21);
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray31 = fastFourierTransformer1.transform2(doubleArray30);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer32 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer33 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray38 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray38);
        org.apache.commons.math.complex.Complex[] complexArray40 = fastFourierTransformer33.transform2(doubleArray38);
        org.apache.commons.math.complex.Complex[] complexArray42 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray40, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray40);
        org.apache.commons.math.complex.Complex[] complexArray44 = fastFourierTransformer32.inversetransform(complexArray40);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer45 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray50 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray50);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer45.transform2(doubleArray50);
        double[] doubleArray54 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray50, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer32.inversetransform(doubleArray50);
        org.apache.commons.math.complex.Complex[] complexArray56 = fastFourierTransformer1.transform2(complexArray55);
        org.apache.commons.math.complex.Complex[] complexArray58 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray56, 10.0d);
        org.apache.commons.math.complex.Complex[] complexArray60 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray56, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray61 = fastFourierTransformer0.inversetransform(complexArray60);
        org.apache.commons.math.complex.Complex[] complexArray63 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray61, (double) '4');
        java.lang.Class<?> wildcardClass64 = complexArray63.getClass();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray16);
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(complexArray22);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray31);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray40);
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(complexArray56);
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(complexArray61);
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test1863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1863");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, (double) 100L, 0.0d, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1864");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer16 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray21 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer16.transform2(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray23);
        org.apache.commons.math.complex.Complex[] complexArray28 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray29 = fastFourierTransformer8.transform2(complexArray28);
        double[] doubleArray34 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray34);
        double[] doubleArray37 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray34, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray38 = fastFourierTransformer8.transform(doubleArray34);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer0.transform(complexArray38);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer40 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray45 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray45);
        org.apache.commons.math.complex.Complex[] complexArray47 = fastFourierTransformer40.transform2(doubleArray45);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer48 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray53 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray53);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer48.transform2(doubleArray53);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer56 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray61 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer56.transform2(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray65 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray63, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray63);
        org.apache.commons.math.complex.Complex[] complexArray68 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray63, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray69 = fastFourierTransformer48.transform2(complexArray68);
        double[] doubleArray74 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray74);
        double[] doubleArray77 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray74, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray78 = fastFourierTransformer48.transform(doubleArray74);
        org.apache.commons.math.complex.Complex[] complexArray79 = fastFourierTransformer40.transform(complexArray78);
        org.apache.commons.math.complex.Complex[] complexArray80 = fastFourierTransformer0.inversetransform(complexArray78);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray78);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray78);
        org.apache.commons.math.complex.Complex[] complexArray84 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray78, (double) 1);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray78);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray38);
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(complexArray69);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray78);
        org.junit.Assert.assertNotNull(complexArray79);
        org.junit.Assert.assertNotNull(complexArray80);
        org.junit.Assert.assertNotNull(complexArray84);
    }

    @Test
    public void test1865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1865");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer22.transform(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer0.transform(doubleArray30);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer34 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray39 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer34.transform2(doubleArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer42 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray47 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray47);
        org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer42.transform2(doubleArray47);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer50 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray55 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray55);
        org.apache.commons.math.complex.Complex[] complexArray57 = fastFourierTransformer50.transform2(doubleArray55);
        org.apache.commons.math.complex.Complex[] complexArray59 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray57, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray57);
        org.apache.commons.math.complex.Complex[] complexArray62 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray57, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer42.transform2(complexArray62);
        double[] doubleArray68 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray68);
        double[] doubleArray71 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray68, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray72 = fastFourierTransformer42.transform(doubleArray68);
        org.apache.commons.math.complex.Complex[] complexArray73 = fastFourierTransformer34.transform(complexArray72);
        org.apache.commons.math.complex.Complex[] complexArray75 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray72, (double) (-1.0f));
        org.apache.commons.math.complex.Complex[] complexArray76 = fastFourierTransformer0.inversetransform2(complexArray72);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction77 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray81 = fastFourierTransformer0.transform2(univariateRealFunction77, (double) (-1), (double) (byte) 1, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray57);
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray72);
        org.junit.Assert.assertNotNull(complexArray73);
        org.junit.Assert.assertNotNull(complexArray75);
        org.junit.Assert.assertNotNull(complexArray76);
    }

    @Test
    public void test1866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1866");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        double[] doubleArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray18, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer0.inversetransform(doubleArray18);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer24 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray29 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray29);
        double[] doubleArray32 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray29, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray32);
        org.apache.commons.math.complex.Complex[] complexArray34 = fastFourierTransformer24.inversetransform(doubleArray32);
        org.apache.commons.math.complex.Complex[] complexArray35 = fastFourierTransformer0.inversetransform(doubleArray32);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction36 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray40 = fastFourierTransformer0.inversetransform2(univariateRealFunction36, (double) '#', 0.0d, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(complexArray35);
    }

    @Test
    public void test1867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1867");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer2 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray7 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray7);
        double[] doubleArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray7, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray10);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer2.inversetransform(doubleArray10);
        org.apache.commons.math.complex.Complex[] complexArray13 = fastFourierTransformer1.transform2(complexArray12);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer14 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray19 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray19);
        double[] doubleArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray19, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray22);
        org.apache.commons.math.complex.Complex[] complexArray24 = fastFourierTransformer14.transform(doubleArray22);
        org.apache.commons.math.complex.Complex[] complexArray25 = fastFourierTransformer1.transform2(complexArray24);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray24);
        org.apache.commons.math.complex.Complex[] complexArray27 = fastFourierTransformer0.inversetransform(complexArray24);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction28 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer0.transform2(univariateRealFunction28, 10.0d, (double) (byte) 1, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(complexArray13);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray24);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray27);
    }

    @Test
    public void test1868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1868");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, (double) 10.0f, (double) 'a', 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1869");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray11 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer12 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray20, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray20);
        org.apache.commons.math.complex.Complex[] complexArray24 = fastFourierTransformer12.inversetransform(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer25 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray30 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer25.transform2(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer12.transform(complexArray32);
        org.apache.commons.math.complex.Complex[] complexArray34 = fastFourierTransformer0.transform2(complexArray32);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer35 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray40 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray42 = fastFourierTransformer35.transform2(doubleArray40);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer43 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray48 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray48);
        org.apache.commons.math.complex.Complex[] complexArray50 = fastFourierTransformer43.transform2(doubleArray48);
        org.apache.commons.math.complex.Complex[] complexArray52 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray50, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray50);
        org.apache.commons.math.complex.Complex[] complexArray55 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray50, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray56 = fastFourierTransformer35.transform2(complexArray55);
        double[] doubleArray61 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray61);
        double[] doubleArray64 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray61, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray65 = fastFourierTransformer35.transform2(doubleArray64);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray64);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray64);
        org.apache.commons.math.complex.Complex[] complexArray68 = fastFourierTransformer0.inversetransform2(doubleArray64);
        double[] doubleArray73 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray73);
        double[] doubleArray76 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray73, (double) (byte) 100);
        double[] doubleArray78 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray73, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray79 = fastFourierTransformer0.transform(doubleArray78);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction80 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray84 = fastFourierTransformer0.transform2(univariateRealFunction80, (double) (byte) 0, (double) 0.0f, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [0.0, 0.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray11);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray22);
        org.junit.Assert.assertNotNull(complexArray24);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(complexArray56);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(complexArray79);
    }

    @Test
    public void test1870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1870");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, (double) (short) -1, (double) 100, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1871");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer16 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray21 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer16.transform2(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray23);
        org.apache.commons.math.complex.Complex[] complexArray28 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray29 = fastFourierTransformer8.transform2(complexArray28);
        double[] doubleArray34 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray34);
        double[] doubleArray37 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray34, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray38 = fastFourierTransformer8.transform(doubleArray34);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer0.transform(complexArray38);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer40 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray45 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray45);
        org.apache.commons.math.complex.Complex[] complexArray47 = fastFourierTransformer40.transform2(doubleArray45);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer48 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray53 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray53);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer48.transform2(doubleArray53);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer56 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray61 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer56.transform2(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray65 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray63, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray63);
        org.apache.commons.math.complex.Complex[] complexArray68 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray63, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray69 = fastFourierTransformer48.transform2(complexArray68);
        double[] doubleArray74 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray74);
        double[] doubleArray77 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray74, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray78 = fastFourierTransformer48.transform(doubleArray74);
        org.apache.commons.math.complex.Complex[] complexArray79 = fastFourierTransformer40.transform(complexArray78);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer80 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray85 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray85);
        org.apache.commons.math.complex.Complex[] complexArray87 = fastFourierTransformer80.transform2(doubleArray85);
        org.apache.commons.math.complex.Complex[] complexArray89 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray87, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray91 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray89, (double) (byte) 100);
        org.apache.commons.math.complex.Complex[] complexArray92 = fastFourierTransformer40.inversetransform(complexArray89);
        org.apache.commons.math.complex.Complex[] complexArray93 = fastFourierTransformer0.transform2(complexArray89);
        org.apache.commons.math.complex.Complex[] complexArray95 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray89, (double) ' ');
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray38);
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(complexArray69);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray78);
        org.junit.Assert.assertNotNull(complexArray79);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray87);
        org.junit.Assert.assertNotNull(complexArray89);
        org.junit.Assert.assertNotNull(complexArray91);
        org.junit.Assert.assertNotNull(complexArray92);
        org.junit.Assert.assertNotNull(complexArray93);
        org.junit.Assert.assertNotNull(complexArray95);
    }

    @Test
    public void test1872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1872");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray29);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray29);
        double[] doubleArray33 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray29, (double) (byte) 10);
        double[] doubleArray35 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray33, (double) (byte) 0);
        org.apache.commons.math.complex.Complex[] complexArray36 = fastFourierTransformer0.transform2(doubleArray33);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer37 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray42 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray42);
        double[] doubleArray45 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray42, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray45);
        org.apache.commons.math.complex.Complex[] complexArray47 = fastFourierTransformer37.transform(doubleArray45);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer48 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray53 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray53);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer48.transform2(doubleArray53);
        org.apache.commons.math.complex.Complex[] complexArray57 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray55, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray55);
        org.apache.commons.math.complex.Complex[] complexArray60 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray55, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray62 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray55, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer37.inversetransform2(complexArray62);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer64 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer65 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray70 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray70);
        org.apache.commons.math.complex.Complex[] complexArray72 = fastFourierTransformer65.transform2(doubleArray70);
        org.apache.commons.math.complex.Complex[] complexArray74 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray72, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray72);
        org.apache.commons.math.complex.Complex[] complexArray76 = fastFourierTransformer64.inversetransform(complexArray72);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray72);
        org.apache.commons.math.complex.Complex[] complexArray78 = fastFourierTransformer37.inversetransform(complexArray72);
        org.apache.commons.math.complex.Complex[] complexArray80 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray78, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray81 = fastFourierTransformer0.transform(complexArray78);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction82 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray86 = fastFourierTransformer0.inversetransform2(univariateRealFunction82, 10.0d, (double) (short) 10, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray36);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(complexArray57);
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray72);
        org.junit.Assert.assertNotNull(complexArray74);
        org.junit.Assert.assertNotNull(complexArray76);
        org.junit.Assert.assertNotNull(complexArray78);
        org.junit.Assert.assertNotNull(complexArray80);
        org.junit.Assert.assertNotNull(complexArray81);
    }

    @Test
    public void test1873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1873");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform(doubleArray26);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer31 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer32 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray37 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer32.transform2(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray39, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray39);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer31.inversetransform(complexArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer44 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray49 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer44.transform2(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer31.transform(complexArray51);
        org.apache.commons.math.complex.Complex[] complexArray53 = fastFourierTransformer0.transform2(complexArray52);
        double[] doubleArray58 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray58);
        double[] doubleArray61 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray58, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer0.inversetransform2(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray65 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray63, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray67 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray65, (double) (byte) 0);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(complexArray67);
    }

    @Test
    public void test1874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1874");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform(doubleArray26);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer31 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer32 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray37 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer32.transform2(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray39, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray39);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer31.inversetransform(complexArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer44 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray49 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer44.transform2(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer31.transform(complexArray51);
        org.apache.commons.math.complex.Complex[] complexArray53 = fastFourierTransformer0.transform2(complexArray52);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer54 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray59 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray59);
        org.apache.commons.math.complex.Complex[] complexArray61 = fastFourierTransformer54.transform2(doubleArray59);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer62 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray67 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray67);
        org.apache.commons.math.complex.Complex[] complexArray69 = fastFourierTransformer62.transform2(doubleArray67);
        org.apache.commons.math.complex.Complex[] complexArray71 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray69, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray69);
        org.apache.commons.math.complex.Complex[] complexArray74 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray69, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray75 = fastFourierTransformer54.transform2(complexArray74);
        double[] doubleArray80 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray80);
        double[] doubleArray83 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray80, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray84 = fastFourierTransformer54.transform(doubleArray80);
        double[] doubleArray89 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray89);
        double[] doubleArray92 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray89, (double) 10.0f);
        double[] doubleArray94 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray92, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray95 = fastFourierTransformer54.transform2(doubleArray94);
        org.apache.commons.math.complex.Complex[] complexArray96 = fastFourierTransformer0.transform(complexArray95);
        double[] doubleArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray98 = fastFourierTransformer0.transform(doubleArray97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray61);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray69);
        org.junit.Assert.assertNotNull(complexArray71);
        org.junit.Assert.assertNotNull(complexArray74);
        org.junit.Assert.assertNotNull(complexArray75);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray84);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray95);
        org.junit.Assert.assertNotNull(complexArray96);
    }

    @Test
    public void test1875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1875");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform2(doubleArray29);
        double[] doubleArray35 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray35);
        double[] doubleArray38 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray35, (double) 10.0f);
        double[] doubleArray40 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray38, (double) 10L);
        double[] doubleArray42 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray38, (double) (byte) 100);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer0.transform(doubleArray38);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer44 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer45 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray50 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray50);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer45.transform2(doubleArray50);
        org.apache.commons.math.complex.Complex[] complexArray54 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray52, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray52);
        org.apache.commons.math.complex.Complex[] complexArray56 = fastFourierTransformer44.inversetransform(complexArray52);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer57 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray62 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray62);
        org.apache.commons.math.complex.Complex[] complexArray64 = fastFourierTransformer57.transform2(doubleArray62);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer65 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray70 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray70);
        org.apache.commons.math.complex.Complex[] complexArray72 = fastFourierTransformer65.transform2(doubleArray70);
        org.apache.commons.math.complex.Complex[] complexArray74 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray72, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray72);
        org.apache.commons.math.complex.Complex[] complexArray77 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray72, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray78 = fastFourierTransformer57.transform2(complexArray77);
        double[] doubleArray83 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray83);
        double[] doubleArray86 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray83, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray87 = fastFourierTransformer57.transform(doubleArray83);
        org.apache.commons.math.complex.Complex[] complexArray88 = fastFourierTransformer44.transform(doubleArray83);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray83);
        org.apache.commons.math.complex.Complex[] complexArray90 = fastFourierTransformer0.transform2(doubleArray83);
        org.apache.commons.math.complex.Complex[] complexArray92 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray90, (double) 10.0f);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(complexArray54);
        org.junit.Assert.assertNotNull(complexArray56);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray64);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray72);
        org.junit.Assert.assertNotNull(complexArray74);
        org.junit.Assert.assertNotNull(complexArray77);
        org.junit.Assert.assertNotNull(complexArray78);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray87);
        org.junit.Assert.assertNotNull(complexArray88);
        org.junit.Assert.assertNotNull(complexArray90);
        org.junit.Assert.assertNotNull(complexArray92);
    }

    @Test
    public void test1876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1876");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.transform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray16 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer11.transform2(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray18, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray18);
        org.apache.commons.math.complex.Complex[] complexArray23 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray18, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray18, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray26 = fastFourierTransformer0.inversetransform2(complexArray25);
        double[] doubleArray31 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray31);
        double[] doubleArray34 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray31, (double) 10.0f);
        double[] doubleArray36 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray34, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray37 = fastFourierTransformer0.transform(doubleArray34);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer38 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray43 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray43);
        org.apache.commons.math.complex.Complex[] complexArray45 = fastFourierTransformer38.transform2(doubleArray43);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer46 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray51 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray51);
        org.apache.commons.math.complex.Complex[] complexArray53 = fastFourierTransformer46.transform2(doubleArray51);
        org.apache.commons.math.complex.Complex[] complexArray55 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray53, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray53);
        org.apache.commons.math.complex.Complex[] complexArray58 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray53, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray59 = fastFourierTransformer38.transform2(complexArray58);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer60 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray65 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray65);
        double[] doubleArray68 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray65, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray68);
        org.apache.commons.math.complex.Complex[] complexArray70 = fastFourierTransformer60.transform(doubleArray68);
        org.apache.commons.math.complex.Complex[] complexArray71 = fastFourierTransformer38.transform(doubleArray68);
        double[] doubleArray76 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray76);
        double[] doubleArray79 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray76, (double) 10.0f);
        double[] doubleArray81 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray79, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray82 = fastFourierTransformer38.inversetransform(doubleArray81);
        org.apache.commons.math.complex.Complex[] complexArray83 = fastFourierTransformer0.inversetransform2(doubleArray81);
        double[] doubleArray84 = new double[] {};
        double[] doubleArray86 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray84, (double) '4');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray87 = fastFourierTransformer0.transform(doubleArray84);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not power of 2, consider padding for fix.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray26);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray37);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray70);
        org.junit.Assert.assertNotNull(complexArray71);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray82);
        org.junit.Assert.assertNotNull(complexArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[]");
    }

    @Test
    public void test1877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1877");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer23 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray28 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray28);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer23.transform2(doubleArray28);
        org.apache.commons.math.complex.Complex[] complexArray32 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray30, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray30);
        org.apache.commons.math.complex.Complex[] complexArray34 = fastFourierTransformer22.inversetransform(complexArray30);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer35 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray40 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray42 = fastFourierTransformer35.transform2(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer22.transform(complexArray42);
        org.apache.commons.math.complex.Complex[] complexArray44 = fastFourierTransformer0.inversetransform(complexArray42);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer45 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray50 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray50);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer45.transform2(doubleArray50);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer53 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray58 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray58);
        org.apache.commons.math.complex.Complex[] complexArray60 = fastFourierTransformer53.transform2(doubleArray58);
        org.apache.commons.math.complex.Complex[] complexArray62 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray60, (double) 'a');
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer45.transform(complexArray60);
        org.apache.commons.math.complex.Complex[] complexArray64 = fastFourierTransformer0.inversetransform(complexArray60);
        double[] doubleArray69 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray69);
        double[] doubleArray72 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray69, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray72);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray72);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray72);
        double[] doubleArray77 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray72, (double) (-1L));
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray77);
        org.apache.commons.math.complex.Complex[] complexArray79 = fastFourierTransformer0.inversetransform2(doubleArray77);
        double[] doubleArray81 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray77, 0.0d);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(complexArray64);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[0.0, -0.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[0.0, -0.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[0.0, -0.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(complexArray79);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[0.0, -0.0, -0.0, -0.0]");
    }

    @Test
    public void test1878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1878");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.transform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray16 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer11.transform2(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray18, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray18);
        org.apache.commons.math.complex.Complex[] complexArray23 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray18, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray18, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray26 = fastFourierTransformer0.inversetransform2(complexArray25);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer27 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer28 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray33 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray33);
        org.apache.commons.math.complex.Complex[] complexArray35 = fastFourierTransformer28.transform2(doubleArray33);
        org.apache.commons.math.complex.Complex[] complexArray37 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray35, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray35);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer27.inversetransform(complexArray35);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray35);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer0.inversetransform(complexArray35);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer42 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray47 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray47);
        org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer42.transform2(doubleArray47);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer50 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray55 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray55);
        org.apache.commons.math.complex.Complex[] complexArray57 = fastFourierTransformer50.transform2(doubleArray55);
        org.apache.commons.math.complex.Complex[] complexArray59 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray57, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray57);
        org.apache.commons.math.complex.Complex[] complexArray62 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray57, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer42.transform2(complexArray62);
        double[] doubleArray68 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray68);
        double[] doubleArray71 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray68, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray72 = fastFourierTransformer42.transform(doubleArray68);
        double[] doubleArray77 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray77);
        double[] doubleArray80 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray77, (double) 10.0f);
        double[] doubleArray82 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray80, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray83 = fastFourierTransformer42.transform2(doubleArray82);
        org.apache.commons.math.complex.Complex[] complexArray84 = fastFourierTransformer0.transform(complexArray83);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray83);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray26);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray35);
        org.junit.Assert.assertNotNull(complexArray37);
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray57);
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray72);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray83);
        org.junit.Assert.assertNotNull(complexArray84);
    }

    @Test
    public void test1879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1879");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.transform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray16 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer11.transform2(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray19 = fastFourierTransformer0.inversetransform2(complexArray18);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer20 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer21 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        org.apache.commons.math.complex.Complex[] complexArray28 = fastFourierTransformer21.transform2(doubleArray26);
        org.apache.commons.math.complex.Complex[] complexArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray28, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray28);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer20.inversetransform(complexArray28);
        double[] doubleArray37 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray37);
        double[] doubleArray40 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray37, (double) 10.0f);
        double[] doubleArray42 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray40, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer20.transform(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray45 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray43, (-1.0d));
        org.apache.commons.math.complex.Complex[] complexArray46 = fastFourierTransformer0.transform2(complexArray43);
        double[] doubleArray51 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray51);
        double[] doubleArray54 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray51, (double) 10.0f);
        double[] doubleArray56 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray51, (double) (short) 100);
        org.apache.commons.math.complex.Complex[] complexArray57 = fastFourierTransformer0.inversetransform2(doubleArray51);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer58 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray63 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray63);
        org.apache.commons.math.complex.Complex[] complexArray65 = fastFourierTransformer58.transform2(doubleArray63);
        double[] doubleArray67 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray63, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray68 = fastFourierTransformer0.transform2(doubleArray67);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction69 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray73 = fastFourierTransformer0.inversetransform(univariateRealFunction69, (double) ' ', (double) (byte) 10, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray19);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(complexArray46);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1000.0, 97000.0, 1000.0, 10000.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1000.0, 97000.0, 1000.0, 10000.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1000.0, 97000.0, 1000.0, 10000.0]");
        org.junit.Assert.assertNotNull(complexArray57);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray68);
    }

    @Test
    public void test1880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1880");
        double[] doubleArray6 = new double[] { 100.0f, (-1L), 100L, 1L, (byte) 0, (short) 10 };
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not power of 2, consider padding for fix.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[100.0, -1.0, 100.0, 1.0, 0.0, 10.0]");
    }

    @Test
    public void test1881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1881");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.transform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray16 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer11.transform2(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray19 = fastFourierTransformer0.inversetransform2(complexArray18);
        double[] doubleArray24 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray24);
        double[] doubleArray27 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray24, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray31 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) (byte) 10);
        double[] doubleArray33 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray31, (double) (byte) 0);
        org.apache.commons.math.complex.Complex[] complexArray34 = fastFourierTransformer0.transform(doubleArray33);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer35 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray40 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray40);
        double[] doubleArray43 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray40, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray43);
        org.apache.commons.math.complex.Complex[] complexArray45 = fastFourierTransformer35.transform(doubleArray43);
        org.apache.commons.math.complex.Complex[] complexArray46 = fastFourierTransformer0.inversetransform2(complexArray45);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction47 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer0.transform(univariateRealFunction47, (double) (byte) 100, 0.0d, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray19);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(complexArray46);
    }

    @Test
    public void test1882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1882");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        double[] doubleArray9 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, 100.0d);
        double[] doubleArray11 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray9, 0.0d);
        java.lang.Class<?> wildcardClass12 = doubleArray11.getClass();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test1883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1883");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform2(doubleArray29);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray30);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray30);
        org.apache.commons.math.complex.Complex[] complexArray34 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray30, (double) (byte) -1);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(complexArray34);
    }

    @Test
    public void test1884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1884");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, (double) (short) 1, (double) (short) 1, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [1.0, 1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1885");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer16 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray21 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer16.transform2(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray23);
        org.apache.commons.math.complex.Complex[] complexArray28 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray29 = fastFourierTransformer8.transform2(complexArray28);
        double[] doubleArray34 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray34);
        double[] doubleArray37 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray34, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray38 = fastFourierTransformer8.transform(doubleArray34);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer0.transform(complexArray38);
        double[] doubleArray44 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray44);
        double[] doubleArray47 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray44, (double) 10.0f);
        double[] doubleArray49 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray47, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray50 = fastFourierTransformer0.transform2(doubleArray47);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction51 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer0.inversetransform(univariateRealFunction51, (double) (short) 0, 1.0d, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray38);
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray50);
    }

    @Test
    public void test1886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1886");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, (double) 1, (double) (short) -1, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [1.0, -1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1887");
        org.apache.commons.math.transform.FastFourierTransformer.verifyInterval((double) '4', (double) 'a');
    }

    @Test
    public void test1888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1888");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer16 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray21 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer16.transform2(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray23);
        org.apache.commons.math.complex.Complex[] complexArray28 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray29 = fastFourierTransformer8.transform2(complexArray28);
        double[] doubleArray34 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray34);
        double[] doubleArray37 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray34, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray38 = fastFourierTransformer8.transform(doubleArray34);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer0.transform(complexArray38);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer40 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray45 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray45);
        org.apache.commons.math.complex.Complex[] complexArray47 = fastFourierTransformer40.transform2(doubleArray45);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer48 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray53 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray53);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer48.transform2(doubleArray53);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer56 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray61 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer56.transform2(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray65 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray63, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray63);
        org.apache.commons.math.complex.Complex[] complexArray68 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray63, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray69 = fastFourierTransformer48.transform2(complexArray68);
        double[] doubleArray74 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray74);
        double[] doubleArray77 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray74, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray78 = fastFourierTransformer48.transform(doubleArray74);
        org.apache.commons.math.complex.Complex[] complexArray79 = fastFourierTransformer40.transform(complexArray78);
        org.apache.commons.math.complex.Complex[] complexArray80 = fastFourierTransformer0.inversetransform(complexArray78);
        org.apache.commons.math.complex.Complex[] complexArray82 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray78, (double) 1.0f);
        org.apache.commons.math.complex.Complex[] complexArray84 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray78, (double) (short) 0);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray38);
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(complexArray69);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray78);
        org.junit.Assert.assertNotNull(complexArray79);
        org.junit.Assert.assertNotNull(complexArray80);
        org.junit.Assert.assertNotNull(complexArray82);
        org.junit.Assert.assertNotNull(complexArray84);
    }

    @Test
    public void test1889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1889");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        double[] doubleArray31 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray29, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer0.inversetransform2(doubleArray31);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer33 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer34 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray39 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer34.transform2(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray43 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray41, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray41);
        org.apache.commons.math.complex.Complex[] complexArray45 = fastFourierTransformer33.inversetransform(complexArray41);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer46 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray51 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray51);
        org.apache.commons.math.complex.Complex[] complexArray53 = fastFourierTransformer46.transform2(doubleArray51);
        org.apache.commons.math.complex.Complex[] complexArray55 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray53, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray53);
        org.apache.commons.math.complex.Complex[] complexArray58 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray53, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray60 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray53, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray61 = fastFourierTransformer33.transform(complexArray53);
        org.apache.commons.math.complex.Complex[] complexArray62 = fastFourierTransformer0.inversetransform2(complexArray53);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer63 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray68 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray68);
        double[] doubleArray71 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray68, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray71);
        org.apache.commons.math.complex.Complex[] complexArray73 = fastFourierTransformer63.transform(doubleArray71);
        org.apache.commons.math.complex.Complex[] complexArray74 = fastFourierTransformer0.inversetransform2(complexArray73);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction75 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray79 = fastFourierTransformer0.inversetransform(univariateRealFunction75, (double) ' ', (double) (byte) 1, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [32.0, 1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(complexArray61);
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray73);
        org.junit.Assert.assertNotNull(complexArray74);
    }

    @Test
    public void test1890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1890");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.transform.FastFourierTransformer.verifyInterval((double) 1L, (double) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [1.0, 1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1891");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, (double) (-1L), (double) (-1.0f), (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [-1.0, -1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1892");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        double[] doubleArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray18, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer0.inversetransform(doubleArray18);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer24 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer25 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray30 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer25.transform2(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray34 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray32, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray32);
        org.apache.commons.math.complex.Complex[] complexArray36 = fastFourierTransformer24.inversetransform(complexArray32);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer37 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray42 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray42);
        org.apache.commons.math.complex.Complex[] complexArray44 = fastFourierTransformer37.transform2(doubleArray42);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer45 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray50 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray50);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer45.transform2(doubleArray50);
        org.apache.commons.math.complex.Complex[] complexArray54 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray52, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray52);
        org.apache.commons.math.complex.Complex[] complexArray57 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray52, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray58 = fastFourierTransformer37.transform2(complexArray57);
        double[] doubleArray63 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray63);
        double[] doubleArray66 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray63, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray67 = fastFourierTransformer37.transform(doubleArray63);
        org.apache.commons.math.complex.Complex[] complexArray68 = fastFourierTransformer24.transform(doubleArray63);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray63);
        org.apache.commons.math.complex.Complex[] complexArray70 = fastFourierTransformer0.inversetransform2(doubleArray63);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer71 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray76 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray76);
        org.apache.commons.math.complex.Complex[] complexArray78 = fastFourierTransformer71.transform2(doubleArray76);
        org.apache.commons.math.complex.Complex[] complexArray79 = fastFourierTransformer0.inversetransform(doubleArray76);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray79);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(complexArray36);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(complexArray54);
        org.junit.Assert.assertNotNull(complexArray57);
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray67);
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(complexArray70);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray78);
        org.junit.Assert.assertNotNull(complexArray79);
    }

    @Test
    public void test1893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1893");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer23 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray28 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray28);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer23.transform2(doubleArray28);
        org.apache.commons.math.complex.Complex[] complexArray32 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray30, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray30);
        org.apache.commons.math.complex.Complex[] complexArray34 = fastFourierTransformer22.inversetransform(complexArray30);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer35 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray40 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray42 = fastFourierTransformer35.transform2(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer22.transform(complexArray42);
        org.apache.commons.math.complex.Complex[] complexArray44 = fastFourierTransformer0.inversetransform(complexArray42);
        org.apache.commons.math.complex.Complex[] complexArray45 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray46 = fastFourierTransformer0.transform(complexArray45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray44);
    }

    @Test
    public void test1894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1894");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray11 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer12 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray17 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray17);
        org.apache.commons.math.complex.Complex[] complexArray19 = fastFourierTransformer12.transform2(doubleArray17);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer20 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray25 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray25);
        org.apache.commons.math.complex.Complex[] complexArray27 = fastFourierTransformer20.transform2(doubleArray25);
        org.apache.commons.math.complex.Complex[] complexArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray27, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray27);
        org.apache.commons.math.complex.Complex[] complexArray32 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray27, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer12.transform2(complexArray32);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer34 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray39 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray39);
        double[] doubleArray42 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray39, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray42);
        org.apache.commons.math.complex.Complex[] complexArray44 = fastFourierTransformer34.transform(doubleArray42);
        org.apache.commons.math.complex.Complex[] complexArray45 = fastFourierTransformer12.transform(doubleArray42);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer46 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer47 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray52 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray52);
        org.apache.commons.math.complex.Complex[] complexArray54 = fastFourierTransformer47.transform2(doubleArray52);
        org.apache.commons.math.complex.Complex[] complexArray56 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray54, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray54);
        org.apache.commons.math.complex.Complex[] complexArray58 = fastFourierTransformer46.inversetransform(complexArray54);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer59 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray64 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray64);
        org.apache.commons.math.complex.Complex[] complexArray66 = fastFourierTransformer59.transform2(doubleArray64);
        org.apache.commons.math.complex.Complex[] complexArray68 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray66, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray66);
        org.apache.commons.math.complex.Complex[] complexArray71 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray66, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray73 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray66, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray74 = fastFourierTransformer46.transform(complexArray66);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer75 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray80 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray80);
        org.apache.commons.math.complex.Complex[] complexArray82 = fastFourierTransformer75.transform2(doubleArray80);
        org.apache.commons.math.complex.Complex[] complexArray83 = fastFourierTransformer46.transform2(doubleArray80);
        org.apache.commons.math.complex.Complex[] complexArray84 = fastFourierTransformer12.transform2(doubleArray80);
        double[] doubleArray86 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray80, (double) 0.0f);
        org.apache.commons.math.complex.Complex[] complexArray87 = fastFourierTransformer0.inversetransform(doubleArray86);
        org.apache.commons.math.complex.Complex[] complexArray89 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray87, (double) (byte) 1);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray87);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray11);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray19);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray27);
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray54);
        org.junit.Assert.assertNotNull(complexArray56);
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray66);
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(complexArray71);
        org.junit.Assert.assertNotNull(complexArray73);
        org.junit.Assert.assertNotNull(complexArray74);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray82);
        org.junit.Assert.assertNotNull(complexArray83);
        org.junit.Assert.assertNotNull(complexArray84);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray87);
        org.junit.Assert.assertNotNull(complexArray89);
    }

    @Test
    public void test1895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1895");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray11 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer12 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray20, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray20);
        org.apache.commons.math.complex.Complex[] complexArray24 = fastFourierTransformer12.inversetransform(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer25 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray30 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer25.transform2(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer12.transform(complexArray32);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer34 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray39 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer34.transform2(doubleArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer42 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray47 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray47);
        org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer42.transform2(doubleArray47);
        org.apache.commons.math.complex.Complex[] complexArray51 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray49, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray49);
        org.apache.commons.math.complex.Complex[] complexArray54 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray49, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer34.transform2(complexArray54);
        double[] doubleArray60 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray60);
        double[] doubleArray63 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray60, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray64 = fastFourierTransformer34.transform2(doubleArray63);
        org.apache.commons.math.complex.Complex[] complexArray65 = fastFourierTransformer12.inversetransform2(doubleArray63);
        double[] doubleArray67 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray63, (double) (short) -1);
        org.apache.commons.math.complex.Complex[] complexArray68 = fastFourierTransformer0.inversetransform(doubleArray63);
        org.apache.commons.math.complex.Complex[] complexArray70 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray68, (double) (byte) 10);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray70);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray70);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray11);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray22);
        org.junit.Assert.assertNotNull(complexArray24);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray54);
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(complexArray64);
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(complexArray70);
    }

    @Test
    public void test1896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1896");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        double[] doubleArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray18, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer0.inversetransform(doubleArray18);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer24 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray29 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray29);
        double[] doubleArray32 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray29, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray32);
        org.apache.commons.math.complex.Complex[] complexArray34 = fastFourierTransformer24.inversetransform(doubleArray32);
        org.apache.commons.math.complex.Complex[] complexArray35 = fastFourierTransformer0.inversetransform(doubleArray32);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer36 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer37 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray42 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray42);
        org.apache.commons.math.complex.Complex[] complexArray44 = fastFourierTransformer37.transform2(doubleArray42);
        org.apache.commons.math.complex.Complex[] complexArray46 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray44, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray44);
        org.apache.commons.math.complex.Complex[] complexArray48 = fastFourierTransformer36.inversetransform(complexArray44);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer49 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray54 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray54);
        org.apache.commons.math.complex.Complex[] complexArray56 = fastFourierTransformer49.transform2(doubleArray54);
        org.apache.commons.math.complex.Complex[] complexArray57 = fastFourierTransformer36.transform(complexArray56);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer58 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray63 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray63);
        org.apache.commons.math.complex.Complex[] complexArray65 = fastFourierTransformer58.transform2(doubleArray63);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer66 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray71 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray71);
        org.apache.commons.math.complex.Complex[] complexArray73 = fastFourierTransformer66.transform2(doubleArray71);
        org.apache.commons.math.complex.Complex[] complexArray75 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray73, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray73);
        org.apache.commons.math.complex.Complex[] complexArray78 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray73, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray79 = fastFourierTransformer58.transform2(complexArray78);
        double[] doubleArray84 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray84);
        double[] doubleArray87 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray84, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray88 = fastFourierTransformer58.transform2(doubleArray87);
        org.apache.commons.math.complex.Complex[] complexArray89 = fastFourierTransformer36.inversetransform2(doubleArray87);
        org.apache.commons.math.complex.Complex[] complexArray90 = fastFourierTransformer0.transform2(doubleArray87);
        java.lang.Class<?> wildcardClass91 = complexArray90.getClass();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(complexArray35);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(complexArray46);
        org.junit.Assert.assertNotNull(complexArray48);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray56);
        org.junit.Assert.assertNotNull(complexArray57);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray73);
        org.junit.Assert.assertNotNull(complexArray75);
        org.junit.Assert.assertNotNull(complexArray78);
        org.junit.Assert.assertNotNull(complexArray79);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray88);
        org.junit.Assert.assertNotNull(complexArray89);
        org.junit.Assert.assertNotNull(complexArray90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1897");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer21 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        org.apache.commons.math.complex.Complex[] complexArray28 = fastFourierTransformer21.transform2(doubleArray26);
        org.apache.commons.math.complex.Complex[] complexArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray28, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray28);
        org.apache.commons.math.complex.Complex[] complexArray33 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray28, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray34 = fastFourierTransformer13.transform2(complexArray33);
        double[] doubleArray39 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray39);
        double[] doubleArray42 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray39, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer13.transform(doubleArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer44 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer45 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray50 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray50);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer45.transform2(doubleArray50);
        org.apache.commons.math.complex.Complex[] complexArray54 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray52, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray52);
        org.apache.commons.math.complex.Complex[] complexArray56 = fastFourierTransformer44.inversetransform(complexArray52);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer57 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray62 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray62);
        org.apache.commons.math.complex.Complex[] complexArray64 = fastFourierTransformer57.transform2(doubleArray62);
        org.apache.commons.math.complex.Complex[] complexArray66 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray64, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray64);
        org.apache.commons.math.complex.Complex[] complexArray69 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray64, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray71 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray64, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray72 = fastFourierTransformer44.transform(complexArray64);
        org.apache.commons.math.complex.Complex[] complexArray73 = fastFourierTransformer13.inversetransform2(complexArray72);
        org.apache.commons.math.complex.Complex[] complexArray74 = fastFourierTransformer0.inversetransform(complexArray73);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer75 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray80 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray80);
        org.apache.commons.math.complex.Complex[] complexArray82 = fastFourierTransformer75.transform2(doubleArray80);
        org.apache.commons.math.complex.Complex[] complexArray84 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray82, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray82);
        org.apache.commons.math.complex.Complex[] complexArray87 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray82, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray89 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray82, (double) '#');
        org.apache.commons.math.complex.Complex[] complexArray91 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray89, (double) (short) -1);
        org.apache.commons.math.complex.Complex[] complexArray92 = fastFourierTransformer0.inversetransform(complexArray89);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(complexArray54);
        org.junit.Assert.assertNotNull(complexArray56);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray64);
        org.junit.Assert.assertNotNull(complexArray66);
        org.junit.Assert.assertNotNull(complexArray69);
        org.junit.Assert.assertNotNull(complexArray71);
        org.junit.Assert.assertNotNull(complexArray72);
        org.junit.Assert.assertNotNull(complexArray73);
        org.junit.Assert.assertNotNull(complexArray74);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray82);
        org.junit.Assert.assertNotNull(complexArray84);
        org.junit.Assert.assertNotNull(complexArray87);
        org.junit.Assert.assertNotNull(complexArray89);
        org.junit.Assert.assertNotNull(complexArray91);
        org.junit.Assert.assertNotNull(complexArray92);
    }

    @Test
    public void test1898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1898");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform(doubleArray26);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer31 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray36 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray36);
        org.apache.commons.math.complex.Complex[] complexArray38 = fastFourierTransformer31.transform2(doubleArray36);
        double[] doubleArray40 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray36, (double) (short) -1);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer0.inversetransform(doubleArray36);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer42 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray47 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray47);
        double[] doubleArray50 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray47, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray50);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer42.transform(doubleArray50);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer53 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer54 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray59 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray59);
        org.apache.commons.math.complex.Complex[] complexArray61 = fastFourierTransformer54.transform2(doubleArray59);
        org.apache.commons.math.complex.Complex[] complexArray63 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray61, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray61);
        org.apache.commons.math.complex.Complex[] complexArray65 = fastFourierTransformer53.inversetransform(complexArray61);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer66 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray71 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray71);
        org.apache.commons.math.complex.Complex[] complexArray73 = fastFourierTransformer66.transform2(doubleArray71);
        org.apache.commons.math.complex.Complex[] complexArray74 = fastFourierTransformer53.transform(complexArray73);
        double[] doubleArray79 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray79);
        double[] doubleArray82 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray79, (double) 10.0f);
        double[] doubleArray84 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray82, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray85 = fastFourierTransformer53.inversetransform2(doubleArray84);
        org.apache.commons.math.complex.Complex[] complexArray86 = fastFourierTransformer42.inversetransform2(doubleArray84);
        org.apache.commons.math.complex.Complex[] complexArray87 = fastFourierTransformer0.transform(doubleArray84);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, -97.0, -1.0, -10.0]");
        org.junit.Assert.assertNotNull(complexArray38);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, -97.0, -1.0, -10.0]");
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray61);
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray73);
        org.junit.Assert.assertNotNull(complexArray74);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray85);
        org.junit.Assert.assertNotNull(complexArray86);
        org.junit.Assert.assertNotNull(complexArray87);
    }

    @Test
    public void test1899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1899");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform2(doubleArray29);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer31 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer32 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray37 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer32.transform2(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray39, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray39);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer31.inversetransform(complexArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer44 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray49 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer44.transform2(doubleArray49);
        double[] doubleArray53 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray49, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray54 = fastFourierTransformer31.inversetransform(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer0.transform2(complexArray54);
        double[] doubleArray60 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray60);
        double[] doubleArray63 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray60, (double) 10.0f);
        double[] doubleArray65 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray60, 0.0d);
        org.apache.commons.math.complex.Complex[] complexArray66 = fastFourierTransformer0.transform2(doubleArray60);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction67 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray71 = fastFourierTransformer0.transform(univariateRealFunction67, (double) 1L, (double) 0L, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray54);
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray66);
    }

    @Test
    public void test1900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1900");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray9 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray7, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray11 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray9, (double) (byte) 100);
        org.apache.commons.math.complex.Complex[] complexArray13 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray11, (double) 0);
        org.apache.commons.math.complex.Complex[] complexArray15 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray11, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(complexArray9);
        org.junit.Assert.assertNotNull(complexArray11);
        org.junit.Assert.assertNotNull(complexArray13);
        org.junit.Assert.assertNotNull(complexArray15);
    }

    @Test
    public void test1901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1901");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.transform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray16 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer11.transform2(doubleArray16);
        double[] doubleArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray16, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.inversetransform(doubleArray16);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer22.transform(doubleArray30);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer33 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray38 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray38);
        org.apache.commons.math.complex.Complex[] complexArray40 = fastFourierTransformer33.transform2(doubleArray38);
        org.apache.commons.math.complex.Complex[] complexArray42 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray40, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray40);
        org.apache.commons.math.complex.Complex[] complexArray45 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray40, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray47 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray40, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray48 = fastFourierTransformer22.inversetransform2(complexArray47);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray47);
        org.apache.commons.math.complex.Complex[] complexArray50 = fastFourierTransformer0.transform2(complexArray47);
        org.apache.commons.math.complex.Complex[] complexArray52 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray47, 1.0d);
        org.apache.commons.math.complex.Complex[] complexArray54 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray47, (double) (short) 1);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray40);
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(complexArray48);
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(complexArray54);
    }

    @Test
    public void test1902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1902");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.transform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray16 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer11.transform2(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray19 = fastFourierTransformer0.inversetransform2(complexArray18);
        double[] doubleArray24 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray24);
        double[] doubleArray27 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray24, (double) 10.0f);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10L);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray29);
        org.apache.commons.math.complex.Complex[] complexArray31 = fastFourierTransformer0.inversetransform2(doubleArray29);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer32 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer33 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray38 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray38);
        org.apache.commons.math.complex.Complex[] complexArray40 = fastFourierTransformer33.transform2(doubleArray38);
        org.apache.commons.math.complex.Complex[] complexArray42 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray40, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray40);
        org.apache.commons.math.complex.Complex[] complexArray44 = fastFourierTransformer32.inversetransform(complexArray40);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer45 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray50 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray50);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer45.transform2(doubleArray50);
        double[] doubleArray54 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray50, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer32.inversetransform(doubleArray50);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray50);
        org.apache.commons.math.complex.Complex[] complexArray57 = fastFourierTransformer0.transform(doubleArray50);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction58 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray62 = fastFourierTransformer0.transform(univariateRealFunction58, 0.0d, (double) 100.0f, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray19);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray31);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray40);
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(complexArray57);
    }

    @Test
    public void test1903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1903");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, (double) (byte) 1, (double) (byte) -1, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [1.0, -1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1904");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.transform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray16 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer11.transform2(doubleArray16);
        double[] doubleArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray16, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.inversetransform(doubleArray16);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer22.transform(doubleArray30);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer33 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray38 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray38);
        org.apache.commons.math.complex.Complex[] complexArray40 = fastFourierTransformer33.transform2(doubleArray38);
        org.apache.commons.math.complex.Complex[] complexArray42 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray40, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray40);
        org.apache.commons.math.complex.Complex[] complexArray45 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray40, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray47 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray40, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray48 = fastFourierTransformer22.inversetransform2(complexArray47);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray47);
        org.apache.commons.math.complex.Complex[] complexArray50 = fastFourierTransformer0.transform2(complexArray47);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer51 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray56 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray56);
        org.apache.commons.math.complex.Complex[] complexArray58 = fastFourierTransformer51.transform2(doubleArray56);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer59 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray64 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray64);
        org.apache.commons.math.complex.Complex[] complexArray66 = fastFourierTransformer59.transform2(doubleArray64);
        org.apache.commons.math.complex.Complex[] complexArray68 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray66, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray66);
        org.apache.commons.math.complex.Complex[] complexArray71 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray66, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray72 = fastFourierTransformer51.transform2(complexArray71);
        double[] doubleArray77 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray77);
        double[] doubleArray80 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray77, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray81 = fastFourierTransformer51.transform2(doubleArray80);
        org.apache.commons.math.complex.Complex[] complexArray82 = fastFourierTransformer0.transform(doubleArray80);
        double[] doubleArray87 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray87);
        double[] doubleArray90 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray87, 0.0d);
        double[] doubleArray92 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray90, (double) (byte) 100);
        org.apache.commons.math.complex.Complex[] complexArray93 = fastFourierTransformer0.transform(doubleArray90);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction94 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray98 = fastFourierTransformer0.transform(univariateRealFunction94, (double) (short) 10, (double) (short) 10, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray40);
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(complexArray48);
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray66);
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(complexArray71);
        org.junit.Assert.assertNotNull(complexArray72);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray81);
        org.junit.Assert.assertNotNull(complexArray82);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray93);
    }

    @Test
    public void test1905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1905");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray20, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray20);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray20, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray27 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray20, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray28 = fastFourierTransformer0.transform(complexArray20);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction29 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer0.transform(univariateRealFunction29, 1.0d, (double) (-1.0f), (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray22);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray27);
        org.junit.Assert.assertNotNull(complexArray28);
    }

    @Test
    public void test1906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1906");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer0.transform(complexArray15);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer19 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer20 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray25 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray25);
        org.apache.commons.math.complex.Complex[] complexArray27 = fastFourierTransformer20.transform2(doubleArray25);
        org.apache.commons.math.complex.Complex[] complexArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray27, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray27);
        org.apache.commons.math.complex.Complex[] complexArray31 = fastFourierTransformer19.inversetransform(complexArray27);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer32 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray37 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer32.transform2(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray40 = fastFourierTransformer19.transform(complexArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer41 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray46 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray46);
        org.apache.commons.math.complex.Complex[] complexArray48 = fastFourierTransformer41.transform2(doubleArray46);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer49 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray54 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray54);
        org.apache.commons.math.complex.Complex[] complexArray56 = fastFourierTransformer49.transform2(doubleArray54);
        org.apache.commons.math.complex.Complex[] complexArray58 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray56, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray56);
        org.apache.commons.math.complex.Complex[] complexArray61 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray56, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray62 = fastFourierTransformer41.transform2(complexArray61);
        double[] doubleArray67 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray67);
        double[] doubleArray70 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray67, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray71 = fastFourierTransformer41.transform2(doubleArray70);
        org.apache.commons.math.complex.Complex[] complexArray72 = fastFourierTransformer19.inversetransform2(doubleArray70);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray70);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray70);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray70);
        org.apache.commons.math.complex.Complex[] complexArray76 = fastFourierTransformer0.transform(doubleArray70);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction77 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray81 = fastFourierTransformer0.transform(univariateRealFunction77, (double) '#', (double) (-1.0f), (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [35.0, -1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray27);
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(complexArray31);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray40);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray48);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray56);
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(complexArray61);
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray71);
        org.junit.Assert.assertNotNull(complexArray72);
        org.junit.Assert.assertNotNull(complexArray76);
    }

    @Test
    public void test1907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1907");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform(doubleArray26);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer31 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer32 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray37 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer32.transform2(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray39, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray39);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer31.inversetransform(complexArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer44 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray49 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer44.transform2(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer31.transform(complexArray51);
        org.apache.commons.math.complex.Complex[] complexArray53 = fastFourierTransformer0.transform2(complexArray52);
        double[] doubleArray58 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray58);
        double[] doubleArray61 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray58, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer0.inversetransform2(doubleArray61);
        double[] doubleArray68 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray68);
        double[] doubleArray71 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray68, 0.0d);
        org.apache.commons.math.complex.Complex[] complexArray72 = fastFourierTransformer0.inversetransform(doubleArray71);
        double[] doubleArray74 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray71, (double) 100L);
        double[] doubleArray76 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray74, (double) (short) 10);
        double[] doubleArray78 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray74, (double) 10.0f);
        double[] doubleArray80 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray74, (double) 10);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray72);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-0.0, 0.0, 0.0, 0.0]");
    }

    @Test
    public void test1908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1908");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, (double) 1, (double) (-1.0f), (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [1.0, -1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1909");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer9 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray14 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray14);
        org.apache.commons.math.complex.Complex[] complexArray16 = fastFourierTransformer9.transform2(doubleArray14);
        org.apache.commons.math.complex.Complex[] complexArray18 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray16, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray16);
        org.apache.commons.math.complex.Complex[] complexArray21 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray16, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray22 = fastFourierTransformer1.transform2(complexArray21);
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray31 = fastFourierTransformer1.transform(doubleArray27);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray31);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer0.transform2(complexArray31);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer34 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray39 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer34.transform2(doubleArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer42 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray47 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray47);
        org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer42.transform2(doubleArray47);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer50 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray55 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray55);
        org.apache.commons.math.complex.Complex[] complexArray57 = fastFourierTransformer50.transform2(doubleArray55);
        org.apache.commons.math.complex.Complex[] complexArray59 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray57, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray57);
        org.apache.commons.math.complex.Complex[] complexArray62 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray57, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer42.transform2(complexArray62);
        double[] doubleArray68 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray68);
        double[] doubleArray71 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray68, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray72 = fastFourierTransformer42.transform(doubleArray68);
        org.apache.commons.math.complex.Complex[] complexArray73 = fastFourierTransformer34.transform(complexArray72);
        double[] doubleArray78 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray78);
        double[] doubleArray81 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray78, (double) 10.0f);
        double[] doubleArray83 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray81, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray84 = fastFourierTransformer34.transform2(doubleArray81);
        org.apache.commons.math.complex.Complex[] complexArray85 = fastFourierTransformer0.transform2(doubleArray81);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction86 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray90 = fastFourierTransformer0.inversetransform2(univariateRealFunction86, (double) (byte) -1, (double) (short) 0, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray16);
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(complexArray22);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray31);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray57);
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray72);
        org.junit.Assert.assertNotNull(complexArray73);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray84);
        org.junit.Assert.assertNotNull(complexArray85);
    }

    @Test
    public void test1910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1910");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.inversetransform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray10);
        org.apache.commons.math.complex.Complex[] complexArray13 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray10, (double) (byte) 100);
        org.apache.commons.math.complex.Complex[] complexArray15 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray10, (double) 1L);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray18 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 10);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray13);
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray18);
    }

    @Test
    public void test1911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1911");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        double[] doubleArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray18, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer0.inversetransform(doubleArray18);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer24 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray29 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray29);
        double[] doubleArray32 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray29, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray32);
        org.apache.commons.math.complex.Complex[] complexArray34 = fastFourierTransformer24.inversetransform(doubleArray32);
        org.apache.commons.math.complex.Complex[] complexArray35 = fastFourierTransformer0.inversetransform(doubleArray32);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction36 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray40 = fastFourierTransformer0.inversetransform(univariateRealFunction36, (double) 0, (double) 100.0f, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(complexArray35);
    }

    @Test
    public void test1912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1912");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer22.transform(doubleArray30);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer33 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray38 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray38);
        org.apache.commons.math.complex.Complex[] complexArray40 = fastFourierTransformer33.transform2(doubleArray38);
        org.apache.commons.math.complex.Complex[] complexArray42 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray40, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray40);
        org.apache.commons.math.complex.Complex[] complexArray45 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray40, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray47 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray40, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray48 = fastFourierTransformer22.inversetransform2(complexArray47);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer49 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer50 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray55 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray55);
        org.apache.commons.math.complex.Complex[] complexArray57 = fastFourierTransformer50.transform2(doubleArray55);
        org.apache.commons.math.complex.Complex[] complexArray59 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray57, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray57);
        org.apache.commons.math.complex.Complex[] complexArray61 = fastFourierTransformer49.inversetransform(complexArray57);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray57);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer22.inversetransform(complexArray57);
        org.apache.commons.math.complex.Complex[] complexArray64 = fastFourierTransformer0.inversetransform2(complexArray57);
        double[] doubleArray69 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray69);
        double[] doubleArray72 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray69, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray72);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray72);
        double[] doubleArray76 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray72, (double) (byte) 10);
        double[] doubleArray78 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray76, (double) (byte) 0);
        org.apache.commons.math.complex.Complex[] complexArray79 = fastFourierTransformer0.transform2(doubleArray76);
        double[] doubleArray81 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray76, (double) '4');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray40);
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(complexArray48);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray57);
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(complexArray61);
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(complexArray64);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray79);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-0.0, 0.0, 0.0, 0.0]");
    }

    @Test
    public void test1913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1913");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, (double) (short) -1, (double) (byte) -1, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [-1.0, -1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1914");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, (double) 10.0f, (double) 0, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [10.0, 0.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1915");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer9 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray14 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray14);
        org.apache.commons.math.complex.Complex[] complexArray16 = fastFourierTransformer9.transform2(doubleArray14);
        org.apache.commons.math.complex.Complex[] complexArray18 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray16, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray16);
        org.apache.commons.math.complex.Complex[] complexArray21 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray16, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray22 = fastFourierTransformer1.transform2(complexArray21);
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray31 = fastFourierTransformer1.transform2(doubleArray30);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer32 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer33 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray38 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray38);
        org.apache.commons.math.complex.Complex[] complexArray40 = fastFourierTransformer33.transform2(doubleArray38);
        org.apache.commons.math.complex.Complex[] complexArray42 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray40, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray40);
        org.apache.commons.math.complex.Complex[] complexArray44 = fastFourierTransformer32.inversetransform(complexArray40);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer45 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray50 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray50);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer45.transform2(doubleArray50);
        double[] doubleArray54 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray50, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer32.inversetransform(doubleArray50);
        org.apache.commons.math.complex.Complex[] complexArray56 = fastFourierTransformer1.transform2(complexArray55);
        org.apache.commons.math.complex.Complex[] complexArray58 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray56, 10.0d);
        org.apache.commons.math.complex.Complex[] complexArray60 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray56, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray61 = fastFourierTransformer0.inversetransform(complexArray60);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction62 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray66 = fastFourierTransformer0.inversetransform(univariateRealFunction62, (double) 10.0f, (double) 1.0f, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [10.0, 1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray16);
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(complexArray22);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray31);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray40);
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(complexArray56);
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(complexArray61);
    }

    @Test
    public void test1916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1916");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        double[] doubleArray17 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray17);
        double[] doubleArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray17, (double) 10.0f);
        double[] doubleArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray20, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer0.transform(doubleArray20);
        double[] doubleArray28 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray28);
        double[] doubleArray31 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray28, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray31);
        double[] doubleArray34 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray31, 10.0d);
        org.apache.commons.math.complex.Complex[] complexArray35 = fastFourierTransformer0.transform2(doubleArray31);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer36 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray41 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray41);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer36.transform2(doubleArray41);
        org.apache.commons.math.complex.Complex[] complexArray45 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray43, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray43);
        org.apache.commons.math.complex.Complex[] complexArray48 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray43, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer0.transform2(complexArray43);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer50 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer51 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray56 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray56);
        org.apache.commons.math.complex.Complex[] complexArray58 = fastFourierTransformer51.transform2(doubleArray56);
        org.apache.commons.math.complex.Complex[] complexArray60 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray58, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray58);
        org.apache.commons.math.complex.Complex[] complexArray62 = fastFourierTransformer50.inversetransform(complexArray58);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer63 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray68 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray68);
        org.apache.commons.math.complex.Complex[] complexArray70 = fastFourierTransformer63.transform2(doubleArray68);
        org.apache.commons.math.complex.Complex[] complexArray71 = fastFourierTransformer50.transform(complexArray70);
        double[] doubleArray76 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray76);
        double[] doubleArray79 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray76, (double) 10.0f);
        double[] doubleArray81 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray79, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray82 = fastFourierTransformer50.inversetransform2(doubleArray81);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray81);
        org.apache.commons.math.complex.Complex[] complexArray84 = fastFourierTransformer0.transform(doubleArray81);
        double[] doubleArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray86 = fastFourierTransformer0.transform(doubleArray85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray35);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(complexArray48);
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray70);
        org.junit.Assert.assertNotNull(complexArray71);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray82);
        org.junit.Assert.assertNotNull(complexArray84);
    }

    @Test
    public void test1917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1917");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        org.apache.commons.math.complex.Complex[] complexArray23 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray20, (double) (byte) 1);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 1.0f);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(complexArray25);
    }

    @Test
    public void test1918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1918");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, (double) (short) -1, (double) 10.0f, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1919");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        double[] doubleArray17 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray17);
        double[] doubleArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray17, (double) 10.0f);
        double[] doubleArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray20, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer0.transform(doubleArray20);
        double[] doubleArray28 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray28);
        double[] doubleArray31 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray28, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray31);
        double[] doubleArray34 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray31, 10.0d);
        org.apache.commons.math.complex.Complex[] complexArray35 = fastFourierTransformer0.transform2(doubleArray31);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer36 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray41 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray41);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer36.transform2(doubleArray41);
        org.apache.commons.math.complex.Complex[] complexArray45 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray43, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray43);
        org.apache.commons.math.complex.Complex[] complexArray48 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray43, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer0.transform2(complexArray43);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer50 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer51 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray56 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray56);
        org.apache.commons.math.complex.Complex[] complexArray58 = fastFourierTransformer51.transform2(doubleArray56);
        org.apache.commons.math.complex.Complex[] complexArray60 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray58, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray58);
        org.apache.commons.math.complex.Complex[] complexArray62 = fastFourierTransformer50.inversetransform(complexArray58);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer63 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray68 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray68);
        org.apache.commons.math.complex.Complex[] complexArray70 = fastFourierTransformer63.transform2(doubleArray68);
        double[] doubleArray72 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray68, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray73 = fastFourierTransformer50.inversetransform(doubleArray68);
        org.apache.commons.math.complex.Complex[] complexArray74 = fastFourierTransformer0.inversetransform(doubleArray68);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer75 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray80 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray80);
        double[] doubleArray83 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray80, (double) 10.0f);
        double[] doubleArray85 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray83, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray86 = fastFourierTransformer75.inversetransform(doubleArray85);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer87 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray92 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray92);
        org.apache.commons.math.complex.Complex[] complexArray94 = fastFourierTransformer87.transform2(doubleArray92);
        org.apache.commons.math.complex.Complex[] complexArray96 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray94, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray97 = fastFourierTransformer75.inversetransform2(complexArray96);
        org.apache.commons.math.complex.Complex[] complexArray98 = fastFourierTransformer0.inversetransform2(complexArray96);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray35);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(complexArray48);
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray70);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray73);
        org.junit.Assert.assertNotNull(complexArray74);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray86);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray94);
        org.junit.Assert.assertNotNull(complexArray96);
        org.junit.Assert.assertNotNull(complexArray97);
        org.junit.Assert.assertNotNull(complexArray98);
    }

    @Test
    public void test1920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1920");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray29);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray29);
        double[] doubleArray33 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray29, (double) (byte) 10);
        double[] doubleArray35 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray33, (double) (byte) 0);
        org.apache.commons.math.complex.Complex[] complexArray36 = fastFourierTransformer0.transform2(doubleArray33);
        double[] doubleArray38 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray33, 0.0d);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray36);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-0.0, 0.0, 0.0, 0.0]");
    }

    @Test
    public void test1921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1921");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.transform.FastFourierTransformer.verifyInterval((double) (short) 10, 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [10.0, 0.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1922");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        double[] doubleArray9 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray6, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray9);
        org.apache.commons.math.complex.Complex[] complexArray11 = fastFourierTransformer1.transform(doubleArray9);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer12 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray17 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray17);
        org.apache.commons.math.complex.Complex[] complexArray19 = fastFourierTransformer12.transform2(doubleArray17);
        double[] doubleArray21 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray17, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray22 = fastFourierTransformer1.inversetransform(doubleArray17);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer23 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer24 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray29 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray29);
        org.apache.commons.math.complex.Complex[] complexArray31 = fastFourierTransformer24.transform2(doubleArray29);
        org.apache.commons.math.complex.Complex[] complexArray33 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray31, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray34 = fastFourierTransformer23.inversetransform(complexArray31);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer35 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer36 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray41 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray41);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer36.transform2(doubleArray41);
        org.apache.commons.math.complex.Complex[] complexArray45 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray43, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray43);
        org.apache.commons.math.complex.Complex[] complexArray47 = fastFourierTransformer35.inversetransform(complexArray43);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer48 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray53 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray53);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer48.transform2(doubleArray53);
        org.apache.commons.math.complex.Complex[] complexArray56 = fastFourierTransformer35.transform(complexArray55);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer57 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray62 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray62);
        org.apache.commons.math.complex.Complex[] complexArray64 = fastFourierTransformer57.transform2(doubleArray62);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer65 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray70 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray70);
        org.apache.commons.math.complex.Complex[] complexArray72 = fastFourierTransformer65.transform2(doubleArray70);
        org.apache.commons.math.complex.Complex[] complexArray74 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray72, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray72);
        org.apache.commons.math.complex.Complex[] complexArray77 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray72, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray78 = fastFourierTransformer57.transform2(complexArray77);
        double[] doubleArray83 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray83);
        double[] doubleArray86 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray83, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray87 = fastFourierTransformer57.transform2(doubleArray86);
        org.apache.commons.math.complex.Complex[] complexArray88 = fastFourierTransformer35.inversetransform2(doubleArray86);
        double[] doubleArray90 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray86, (double) (short) -1);
        org.apache.commons.math.complex.Complex[] complexArray91 = fastFourierTransformer23.inversetransform(doubleArray86);
        org.apache.commons.math.complex.Complex[] complexArray92 = fastFourierTransformer1.inversetransform(doubleArray86);
        org.apache.commons.math.complex.Complex[] complexArray93 = fastFourierTransformer0.transform2(doubleArray86);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction94 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray98 = fastFourierTransformer0.transform(univariateRealFunction94, (double) (short) 0, 10.0d, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray11);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray19);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray22);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray31);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(complexArray56);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray64);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray72);
        org.junit.Assert.assertNotNull(complexArray74);
        org.junit.Assert.assertNotNull(complexArray77);
        org.junit.Assert.assertNotNull(complexArray78);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(complexArray87);
        org.junit.Assert.assertNotNull(complexArray88);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(complexArray91);
        org.junit.Assert.assertNotNull(complexArray92);
        org.junit.Assert.assertNotNull(complexArray93);
    }

    @Test
    public void test1923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1923");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer22.transform(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer0.transform(doubleArray30);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer34 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray39 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer34.transform2(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray43 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray41, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray41);
        org.apache.commons.math.complex.Complex[] complexArray46 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray41, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray47 = fastFourierTransformer0.inversetransform2(complexArray41);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer48 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray53 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray53);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer48.transform2(doubleArray53);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer56 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray61 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer56.transform2(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray65 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray63, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray63);
        org.apache.commons.math.complex.Complex[] complexArray68 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray63, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray69 = fastFourierTransformer48.transform2(complexArray68);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer70 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray75 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray75);
        double[] doubleArray78 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray75, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray78);
        org.apache.commons.math.complex.Complex[] complexArray80 = fastFourierTransformer70.transform(doubleArray78);
        org.apache.commons.math.complex.Complex[] complexArray81 = fastFourierTransformer48.transform(doubleArray78);
        org.apache.commons.math.complex.Complex[] complexArray82 = fastFourierTransformer0.inversetransform2(doubleArray78);
        double[] doubleArray87 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray87);
        double[] doubleArray90 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray87, (double) 10.0f);
        double[] doubleArray92 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray90, (double) 10L);
        double[] doubleArray94 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray90, (double) (byte) 100);
        org.apache.commons.math.complex.Complex[] complexArray95 = fastFourierTransformer0.transform(doubleArray94);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray95);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray46);
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(complexArray69);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray80);
        org.junit.Assert.assertNotNull(complexArray81);
        org.junit.Assert.assertNotNull(complexArray82);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(complexArray95);
    }

    @Test
    public void test1924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1924");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        double[] doubleArray16 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray13, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer8.transform(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray19 = fastFourierTransformer0.transform2(doubleArray16);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer20 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray25 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray25);
        org.apache.commons.math.complex.Complex[] complexArray27 = fastFourierTransformer20.transform2(doubleArray25);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer28 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray33 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray33);
        org.apache.commons.math.complex.Complex[] complexArray35 = fastFourierTransformer28.transform2(doubleArray33);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer36 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray41 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray41);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer36.transform2(doubleArray41);
        org.apache.commons.math.complex.Complex[] complexArray45 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray43, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray43);
        org.apache.commons.math.complex.Complex[] complexArray48 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray43, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer28.transform2(complexArray48);
        double[] doubleArray54 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray54);
        double[] doubleArray57 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray54, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray58 = fastFourierTransformer28.transform(doubleArray54);
        org.apache.commons.math.complex.Complex[] complexArray59 = fastFourierTransformer20.transform(complexArray58);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer60 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray65 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray65);
        org.apache.commons.math.complex.Complex[] complexArray67 = fastFourierTransformer60.transform2(doubleArray65);
        double[] doubleArray69 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray65, (double) (short) -1);
        double[] doubleArray71 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray65, (double) (-1.0f));
        org.apache.commons.math.complex.Complex[] complexArray72 = fastFourierTransformer20.transform2(doubleArray65);
        org.apache.commons.math.complex.Complex[] complexArray74 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray72, (double) (-1L));
        org.apache.commons.math.complex.Complex[] complexArray75 = fastFourierTransformer0.inversetransform2(complexArray72);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction76 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray80 = fastFourierTransformer0.transform2(univariateRealFunction76, (double) (-1L), (double) (short) 0, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray19);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray27);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray35);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(complexArray48);
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray67);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray72);
        org.junit.Assert.assertNotNull(complexArray74);
        org.junit.Assert.assertNotNull(complexArray75);
    }

    @Test
    public void test1925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1925");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer22.transform(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer0.transform(doubleArray30);
        double[] doubleArray38 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray38);
        double[] doubleArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray38, (double) 10.0f);
        double[] doubleArray43 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray41, (double) (byte) -1);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray43);
        org.apache.commons.math.complex.Complex[] complexArray45 = fastFourierTransformer0.transform(doubleArray43);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray43);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(complexArray45);
    }

    @Test
    public void test1926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1926");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        double[] doubleArray31 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray29, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer0.inversetransform2(doubleArray31);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer33 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray38 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray38);
        org.apache.commons.math.complex.Complex[] complexArray40 = fastFourierTransformer33.transform2(doubleArray38);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer41 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray46 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray46);
        org.apache.commons.math.complex.Complex[] complexArray48 = fastFourierTransformer41.transform2(doubleArray46);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer49 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray54 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray54);
        org.apache.commons.math.complex.Complex[] complexArray56 = fastFourierTransformer49.transform2(doubleArray54);
        org.apache.commons.math.complex.Complex[] complexArray58 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray56, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray56);
        org.apache.commons.math.complex.Complex[] complexArray61 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray56, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray62 = fastFourierTransformer41.transform2(complexArray61);
        double[] doubleArray67 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray67);
        double[] doubleArray70 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray67, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray71 = fastFourierTransformer41.transform(doubleArray67);
        org.apache.commons.math.complex.Complex[] complexArray72 = fastFourierTransformer33.transform(complexArray71);
        double[] doubleArray77 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray77);
        double[] doubleArray80 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray77, (double) 10.0f);
        double[] doubleArray82 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray80, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray83 = fastFourierTransformer33.transform2(doubleArray80);
        double[] doubleArray85 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray80, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray86 = fastFourierTransformer0.inversetransform(doubleArray80);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction87 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray91 = fastFourierTransformer0.transform(univariateRealFunction87, (double) 100.0f, 100.0d, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [100.0, 100.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray40);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray48);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray56);
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(complexArray61);
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray71);
        org.junit.Assert.assertNotNull(complexArray72);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(complexArray83);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(complexArray86);
    }

    @Test
    public void test1927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1927");
        org.apache.commons.math.transform.FastFourierTransformer.verifyInterval((double) 1.0f, (double) (short) 10);
    }

    @Test
    public void test1928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1928");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        double[] doubleArray17 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray17);
        double[] doubleArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray17, (double) 10.0f);
        double[] doubleArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray20, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer0.transform(doubleArray20);
        double[] doubleArray28 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray28);
        double[] doubleArray31 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray28, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray31);
        double[] doubleArray34 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray31, 10.0d);
        org.apache.commons.math.complex.Complex[] complexArray35 = fastFourierTransformer0.transform2(doubleArray31);
        double[] doubleArray40 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray40);
        double[] doubleArray43 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray40, (double) 10.0f);
        double[] doubleArray45 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray43, (double) (byte) -1);
        org.apache.commons.math.complex.Complex[] complexArray46 = fastFourierTransformer0.inversetransform(doubleArray43);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction47 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer0.inversetransform2(univariateRealFunction47, (double) (byte) 1, (double) ' ', (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray35);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(complexArray46);
    }

    @Test
    public void test1929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1929");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        double[] doubleArray9 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray6, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray9);
        org.apache.commons.math.complex.Complex[] complexArray11 = fastFourierTransformer1.inversetransform(doubleArray9);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.transform2(complexArray11);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer21 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        org.apache.commons.math.complex.Complex[] complexArray28 = fastFourierTransformer21.transform2(doubleArray26);
        org.apache.commons.math.complex.Complex[] complexArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray28, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray28);
        org.apache.commons.math.complex.Complex[] complexArray33 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray28, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray34 = fastFourierTransformer13.transform2(complexArray33);
        double[] doubleArray39 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray39);
        double[] doubleArray42 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray39, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer13.transform(doubleArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer44 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer45 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray50 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray50);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer45.transform2(doubleArray50);
        org.apache.commons.math.complex.Complex[] complexArray54 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray52, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray52);
        org.apache.commons.math.complex.Complex[] complexArray56 = fastFourierTransformer44.inversetransform(complexArray52);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer57 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray62 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray62);
        org.apache.commons.math.complex.Complex[] complexArray64 = fastFourierTransformer57.transform2(doubleArray62);
        org.apache.commons.math.complex.Complex[] complexArray65 = fastFourierTransformer44.transform(complexArray64);
        org.apache.commons.math.complex.Complex[] complexArray66 = fastFourierTransformer13.transform2(complexArray65);
        org.apache.commons.math.complex.Complex[] complexArray67 = fastFourierTransformer0.inversetransform(complexArray66);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction68 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray72 = fastFourierTransformer0.transform2(univariateRealFunction68, 10.0d, (double) (byte) 1, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [10.0, 1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray11);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(complexArray54);
        org.junit.Assert.assertNotNull(complexArray56);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray64);
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(complexArray66);
        org.junit.Assert.assertNotNull(complexArray67);
    }

    @Test
    public void test1930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1930");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        double[] doubleArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray8, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray11 = fastFourierTransformer0.inversetransform(doubleArray10);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer12 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray20, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray20);
        org.apache.commons.math.complex.Complex[] complexArray24 = fastFourierTransformer12.inversetransform(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer25 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray30 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer25.transform2(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer12.transform(complexArray32);
        double[] doubleArray38 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray38);
        double[] doubleArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray38, (double) 10.0f);
        double[] doubleArray43 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray41, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray44 = fastFourierTransformer12.inversetransform2(doubleArray43);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer45 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray50 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray50);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer45.transform2(doubleArray50);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer53 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray58 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray58);
        org.apache.commons.math.complex.Complex[] complexArray60 = fastFourierTransformer53.transform2(doubleArray58);
        org.apache.commons.math.complex.Complex[] complexArray62 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray60, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray60);
        org.apache.commons.math.complex.Complex[] complexArray65 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray60, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray66 = fastFourierTransformer45.transform2(complexArray65);
        double[] doubleArray71 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray71);
        double[] doubleArray74 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray71, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray75 = fastFourierTransformer45.transform2(doubleArray74);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray74);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray74);
        org.apache.commons.math.complex.Complex[] complexArray78 = fastFourierTransformer12.inversetransform(doubleArray74);
        org.apache.commons.math.complex.Complex[] complexArray79 = fastFourierTransformer0.transform2(doubleArray74);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray79);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray11);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray22);
        org.junit.Assert.assertNotNull(complexArray24);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(complexArray66);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray75);
        org.junit.Assert.assertNotNull(complexArray78);
        org.junit.Assert.assertNotNull(complexArray79);
    }

    @Test
    public void test1931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1931");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, (double) 100L, 10.0d, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [100.0, 10.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1932");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, (double) '#', (double) (short) -1, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1933");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.transform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray16 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer11.transform2(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray19 = fastFourierTransformer0.inversetransform2(complexArray18);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer20 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer21 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        org.apache.commons.math.complex.Complex[] complexArray28 = fastFourierTransformer21.transform2(doubleArray26);
        org.apache.commons.math.complex.Complex[] complexArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray28, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray28);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer20.inversetransform(complexArray28);
        double[] doubleArray37 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray37);
        double[] doubleArray40 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray37, (double) 10.0f);
        double[] doubleArray42 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray40, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer20.transform(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray45 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray43, (-1.0d));
        org.apache.commons.math.complex.Complex[] complexArray46 = fastFourierTransformer0.transform2(complexArray43);
        double[] doubleArray51 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray51);
        double[] doubleArray54 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray51, (double) 10.0f);
        double[] doubleArray56 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray51, (double) (short) 100);
        org.apache.commons.math.complex.Complex[] complexArray57 = fastFourierTransformer0.inversetransform2(doubleArray51);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer58 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray63 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray63);
        org.apache.commons.math.complex.Complex[] complexArray65 = fastFourierTransformer58.transform2(doubleArray63);
        double[] doubleArray67 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray63, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray68 = fastFourierTransformer0.transform2(doubleArray67);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction69 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray73 = fastFourierTransformer0.inversetransform(univariateRealFunction69, (double) (short) 1, (double) 1L, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [1.0, 1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray19);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(complexArray46);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1000.0, 97000.0, 1000.0, 10000.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1000.0, 97000.0, 1000.0, 10000.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1000.0, 97000.0, 1000.0, 10000.0]");
        org.junit.Assert.assertNotNull(complexArray57);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray68);
    }

    @Test
    public void test1934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1934");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        org.apache.commons.math.complex.Complex[] complexArray29 = fastFourierTransformer22.transform2(doubleArray27);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer30 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray35 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray35);
        org.apache.commons.math.complex.Complex[] complexArray37 = fastFourierTransformer30.transform2(doubleArray35);
        org.apache.commons.math.complex.Complex[] complexArray39 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray37, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray37);
        org.apache.commons.math.complex.Complex[] complexArray42 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray37, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer22.transform2(complexArray42);
        double[] doubleArray48 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray48);
        double[] doubleArray51 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray48, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer22.transform2(doubleArray51);
        org.apache.commons.math.complex.Complex[] complexArray53 = fastFourierTransformer0.inversetransform2(doubleArray51);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction54 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray58 = fastFourierTransformer0.transform2(univariateRealFunction54, (double) 'a', 0.0d, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [97.0, 0.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray37);
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(complexArray53);
    }

    @Test
    public void test1935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1935");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.transform.FastFourierTransformer.verifyInterval(10.0d, (double) 10.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [10.0, 10.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1936");
        org.apache.commons.math.transform.FastFourierTransformer.verifyInterval(0.0d, (double) '4');
    }

    @Test
    public void test1937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1937");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform(doubleArray26);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer31 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer32 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray37 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer32.transform2(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray39, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray39);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer31.inversetransform(complexArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer44 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray49 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer44.transform2(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer31.transform(complexArray51);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer53 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray58 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray58);
        org.apache.commons.math.complex.Complex[] complexArray60 = fastFourierTransformer53.transform2(doubleArray58);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer61 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray66 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray66);
        org.apache.commons.math.complex.Complex[] complexArray68 = fastFourierTransformer61.transform2(doubleArray66);
        org.apache.commons.math.complex.Complex[] complexArray70 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray68, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray68);
        org.apache.commons.math.complex.Complex[] complexArray73 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray68, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray74 = fastFourierTransformer53.transform2(complexArray73);
        double[] doubleArray79 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray79);
        double[] doubleArray82 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray79, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray83 = fastFourierTransformer53.transform2(doubleArray82);
        org.apache.commons.math.complex.Complex[] complexArray84 = fastFourierTransformer31.inversetransform2(doubleArray82);
        org.apache.commons.math.complex.Complex[] complexArray85 = fastFourierTransformer0.transform2(complexArray84);
        java.lang.Class<?> wildcardClass86 = fastFourierTransformer0.getClass();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(complexArray70);
        org.junit.Assert.assertNotNull(complexArray73);
        org.junit.Assert.assertNotNull(complexArray74);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray83);
        org.junit.Assert.assertNotNull(complexArray84);
        org.junit.Assert.assertNotNull(complexArray85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test1938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1938");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        org.apache.commons.math.complex.Complex[] complexArray29 = fastFourierTransformer22.transform2(doubleArray27);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer30 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray35 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray35);
        org.apache.commons.math.complex.Complex[] complexArray37 = fastFourierTransformer30.transform2(doubleArray35);
        org.apache.commons.math.complex.Complex[] complexArray39 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray37, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray37);
        org.apache.commons.math.complex.Complex[] complexArray42 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray37, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer22.transform2(complexArray42);
        double[] doubleArray48 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray48);
        double[] doubleArray51 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray48, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer22.transform2(doubleArray51);
        org.apache.commons.math.complex.Complex[] complexArray53 = fastFourierTransformer0.inversetransform2(doubleArray51);
        double[] doubleArray58 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray58);
        double[] doubleArray61 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray58, (double) (byte) 100);
        double[] doubleArray63 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray58, (double) 0);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray58);
        org.apache.commons.math.complex.Complex[] complexArray65 = fastFourierTransformer0.inversetransform2(doubleArray58);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction66 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray70 = fastFourierTransformer0.transform2(univariateRealFunction66, (double) (short) 1, 1.0d, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray37);
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray65);
    }

    @Test
    public void test1939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1939");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        double[] doubleArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray18, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer0.inversetransform(doubleArray18);
        double[] doubleArray28 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray28);
        double[] doubleArray31 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray28, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray31);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray31);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray31);
        double[] doubleArray36 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray31, (double) (-1L));
        org.apache.commons.math.complex.Complex[] complexArray37 = fastFourierTransformer0.transform2(doubleArray36);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction38 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray42 = fastFourierTransformer0.transform2(univariateRealFunction38, (double) (short) -1, (double) (byte) 1, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(complexArray37);
    }

    @Test
    public void test1940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1940");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer22.transform(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer0.transform(doubleArray30);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer34 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray39 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer34.transform2(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray43 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray41, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray41);
        org.apache.commons.math.complex.Complex[] complexArray46 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray41, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray47 = fastFourierTransformer0.inversetransform2(complexArray41);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer48 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray53 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray53);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer48.transform2(doubleArray53);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer56 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray61 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer56.transform2(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray65 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray63, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray63);
        org.apache.commons.math.complex.Complex[] complexArray68 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray63, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray69 = fastFourierTransformer48.transform2(complexArray68);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer70 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray75 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray75);
        double[] doubleArray78 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray75, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray78);
        org.apache.commons.math.complex.Complex[] complexArray80 = fastFourierTransformer70.transform(doubleArray78);
        org.apache.commons.math.complex.Complex[] complexArray81 = fastFourierTransformer48.transform(doubleArray78);
        org.apache.commons.math.complex.Complex[] complexArray82 = fastFourierTransformer0.inversetransform2(doubleArray78);
        double[] doubleArray87 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray87);
        double[] doubleArray90 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray87, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray90);
        org.apache.commons.math.complex.Complex[] complexArray92 = fastFourierTransformer0.inversetransform2(doubleArray90);
        double[] doubleArray94 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray90, (double) 100);
        java.lang.Class<?> wildcardClass95 = doubleArray90.getClass();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray46);
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(complexArray69);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray80);
        org.junit.Assert.assertNotNull(complexArray81);
        org.junit.Assert.assertNotNull(complexArray82);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[-1000.0, 97000.0, 1000.0, 10000.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[-1000.0, 97000.0, 1000.0, 10000.0]");
        org.junit.Assert.assertNotNull(complexArray92);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[-1000.0, 97000.0, 1000.0, 10000.0]");
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1941");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        org.apache.commons.math.complex.Complex[] complexArray29 = fastFourierTransformer22.transform2(doubleArray27);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer30 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray35 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray35);
        org.apache.commons.math.complex.Complex[] complexArray37 = fastFourierTransformer30.transform2(doubleArray35);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer38 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray43 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray43);
        org.apache.commons.math.complex.Complex[] complexArray45 = fastFourierTransformer38.transform2(doubleArray43);
        org.apache.commons.math.complex.Complex[] complexArray47 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray45, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray45);
        org.apache.commons.math.complex.Complex[] complexArray50 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray45, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer30.transform2(complexArray50);
        double[] doubleArray56 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray56);
        double[] doubleArray59 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray56, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray60 = fastFourierTransformer30.transform(doubleArray56);
        org.apache.commons.math.complex.Complex[] complexArray61 = fastFourierTransformer22.transform(complexArray60);
        org.apache.commons.math.complex.Complex[] complexArray63 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray60, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray64 = fastFourierTransformer0.inversetransform2(complexArray63);
        double[] doubleArray69 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray69);
        double[] doubleArray72 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray69, 0.0d);
        double[] doubleArray74 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray72, (double) (byte) 100);
        org.apache.commons.math.complex.Complex[] complexArray75 = fastFourierTransformer0.inversetransform2(doubleArray72);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer76 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray81 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray81);
        org.apache.commons.math.complex.Complex[] complexArray83 = fastFourierTransformer76.transform2(doubleArray81);
        org.apache.commons.math.complex.Complex[] complexArray85 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray83, (double) 'a');
        org.apache.commons.math.complex.Complex[] complexArray86 = fastFourierTransformer0.transform2(complexArray85);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction87 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray91 = fastFourierTransformer0.inversetransform(univariateRealFunction87, (double) (byte) 1, 100.0d, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray37);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(complexArray61);
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(complexArray64);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray75);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray83);
        org.junit.Assert.assertNotNull(complexArray85);
        org.junit.Assert.assertNotNull(complexArray86);
    }

    @Test
    public void test1942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1942");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer23 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray28 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray28);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer23.transform2(doubleArray28);
        org.apache.commons.math.complex.Complex[] complexArray32 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray30, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray30);
        org.apache.commons.math.complex.Complex[] complexArray34 = fastFourierTransformer22.inversetransform(complexArray30);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer35 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray40 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray42 = fastFourierTransformer35.transform2(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray44 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray42, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray42);
        org.apache.commons.math.complex.Complex[] complexArray47 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray42, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray49 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray42, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray50 = fastFourierTransformer22.transform(complexArray42);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer0.transform(complexArray50);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer52 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray57 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray57);
        org.apache.commons.math.complex.Complex[] complexArray59 = fastFourierTransformer52.transform2(doubleArray57);
        org.apache.commons.math.complex.Complex[] complexArray61 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray59, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray59);
        org.apache.commons.math.complex.Complex[] complexArray64 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray59, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray65 = fastFourierTransformer0.transform(complexArray64);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer66 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer67 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray72 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray72);
        org.apache.commons.math.complex.Complex[] complexArray74 = fastFourierTransformer67.transform2(doubleArray72);
        org.apache.commons.math.complex.Complex[] complexArray76 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray74, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray74);
        org.apache.commons.math.complex.Complex[] complexArray78 = fastFourierTransformer66.inversetransform(complexArray74);
        org.apache.commons.math.complex.Complex[] complexArray79 = fastFourierTransformer0.transform(complexArray78);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction80 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray84 = fastFourierTransformer0.inversetransform(univariateRealFunction80, (double) 1L, 10.0d, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(complexArray61);
        org.junit.Assert.assertNotNull(complexArray64);
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray74);
        org.junit.Assert.assertNotNull(complexArray76);
        org.junit.Assert.assertNotNull(complexArray78);
        org.junit.Assert.assertNotNull(complexArray79);
    }

    @Test
    public void test1943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1943");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer2 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray7 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray7);
        double[] doubleArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray7, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray10);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer2.inversetransform(doubleArray10);
        org.apache.commons.math.complex.Complex[] complexArray13 = fastFourierTransformer1.transform2(complexArray12);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer14 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray19 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray19);
        double[] doubleArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray19, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray22);
        org.apache.commons.math.complex.Complex[] complexArray24 = fastFourierTransformer14.transform(doubleArray22);
        org.apache.commons.math.complex.Complex[] complexArray25 = fastFourierTransformer1.transform2(complexArray24);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray24);
        org.apache.commons.math.complex.Complex[] complexArray27 = fastFourierTransformer0.inversetransform(complexArray24);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction28 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer0.transform2(univariateRealFunction28, (double) (byte) 1, 10.0d, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(complexArray13);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray24);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray27);
    }

    @Test
    public void test1944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1944");
        double[] doubleArray4 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray4);
        double[] doubleArray7 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray4, (double) 10.0f);
        double[] doubleArray9 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray7, (double) 10L);
        java.lang.Class<?> wildcardClass10 = doubleArray7.getClass();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1945");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform(doubleArray26);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer31 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer32 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray37 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer32.transform2(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray39, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray39);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer31.inversetransform(complexArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer44 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray49 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer44.transform2(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray53 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray51, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray51);
        org.apache.commons.math.complex.Complex[] complexArray56 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray51, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray58 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray51, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray59 = fastFourierTransformer31.transform(complexArray51);
        org.apache.commons.math.complex.Complex[] complexArray60 = fastFourierTransformer0.inversetransform2(complexArray59);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer61 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray66 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray66);
        org.apache.commons.math.complex.Complex[] complexArray68 = fastFourierTransformer61.transform2(doubleArray66);
        double[] doubleArray70 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray66, (double) (short) -1);
        org.apache.commons.math.complex.Complex[] complexArray71 = fastFourierTransformer0.inversetransform2(doubleArray66);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer72 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray77 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray77);
        org.apache.commons.math.complex.Complex[] complexArray79 = fastFourierTransformer72.transform2(doubleArray77);
        org.apache.commons.math.complex.Complex[] complexArray81 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray79, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray79);
        org.apache.commons.math.complex.Complex[] complexArray84 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray79, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray86 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray79, (double) '#');
        org.apache.commons.math.complex.Complex[] complexArray87 = fastFourierTransformer0.transform2(complexArray79);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(complexArray56);
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[1.0, -97.0, -1.0, -10.0]");
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.0, -97.0, -1.0, -10.0]");
        org.junit.Assert.assertNotNull(complexArray71);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray79);
        org.junit.Assert.assertNotNull(complexArray81);
        org.junit.Assert.assertNotNull(complexArray84);
        org.junit.Assert.assertNotNull(complexArray86);
        org.junit.Assert.assertNotNull(complexArray87);
    }

    @Test
    public void test1946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1946");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray11 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer12 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray17 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray17);
        org.apache.commons.math.complex.Complex[] complexArray19 = fastFourierTransformer12.transform2(doubleArray17);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer20 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray25 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray25);
        org.apache.commons.math.complex.Complex[] complexArray27 = fastFourierTransformer20.transform2(doubleArray25);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer28 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray33 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray33);
        org.apache.commons.math.complex.Complex[] complexArray35 = fastFourierTransformer28.transform2(doubleArray33);
        org.apache.commons.math.complex.Complex[] complexArray37 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray35, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray35);
        org.apache.commons.math.complex.Complex[] complexArray40 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray35, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer20.transform2(complexArray40);
        double[] doubleArray46 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray46);
        double[] doubleArray49 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray46, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray50 = fastFourierTransformer20.transform(doubleArray46);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer12.transform(complexArray50);
        org.apache.commons.math.complex.Complex[] complexArray53 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray51, (double) (short) -1);
        org.apache.commons.math.complex.Complex[] complexArray54 = fastFourierTransformer0.inversetransform(complexArray53);
        double[] doubleArray59 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray59);
        double[] doubleArray62 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray59, (double) 10.0f);
        double[] doubleArray64 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray62, (double) 10L);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray64);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray64);
        org.apache.commons.math.complex.Complex[] complexArray67 = fastFourierTransformer0.inversetransform2(doubleArray64);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray64);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray11);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray19);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray27);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray35);
        org.junit.Assert.assertNotNull(complexArray37);
        org.junit.Assert.assertNotNull(complexArray40);
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(complexArray54);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray67);
    }

    @Test
    public void test1947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1947");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, (double) 'a', (double) 100L, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1948");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer23 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray28 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray28);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer23.transform2(doubleArray28);
        org.apache.commons.math.complex.Complex[] complexArray32 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray30, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray30);
        org.apache.commons.math.complex.Complex[] complexArray34 = fastFourierTransformer22.inversetransform(complexArray30);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer35 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray40 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray42 = fastFourierTransformer35.transform2(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray44 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray42, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray42);
        org.apache.commons.math.complex.Complex[] complexArray47 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray42, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray49 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray42, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray50 = fastFourierTransformer22.transform(complexArray42);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer0.transform(complexArray50);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer52 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray57 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray57);
        org.apache.commons.math.complex.Complex[] complexArray59 = fastFourierTransformer52.transform2(doubleArray57);
        org.apache.commons.math.complex.Complex[] complexArray61 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray59, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray59);
        org.apache.commons.math.complex.Complex[] complexArray64 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray59, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray65 = fastFourierTransformer0.transform(complexArray64);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer66 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer67 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray72 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray72);
        org.apache.commons.math.complex.Complex[] complexArray74 = fastFourierTransformer67.transform2(doubleArray72);
        org.apache.commons.math.complex.Complex[] complexArray76 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray74, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray74);
        org.apache.commons.math.complex.Complex[] complexArray78 = fastFourierTransformer66.inversetransform(complexArray74);
        org.apache.commons.math.complex.Complex[] complexArray79 = fastFourierTransformer0.transform(complexArray78);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction80 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray84 = fastFourierTransformer0.transform(univariateRealFunction80, (double) 100L, (double) (byte) 1, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(complexArray61);
        org.junit.Assert.assertNotNull(complexArray64);
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray74);
        org.junit.Assert.assertNotNull(complexArray76);
        org.junit.Assert.assertNotNull(complexArray78);
        org.junit.Assert.assertNotNull(complexArray79);
    }

    @Test
    public void test1949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1949");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform(doubleArray26);
        double[] doubleArray32 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 100);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1000.0, 97000.0, 1000.0, 10000.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1000.0, 97000.0, 1000.0, 10000.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1000.0, 97000.0, 1000.0, 10000.0]");
    }

    @Test
    public void test1950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1950");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        org.apache.commons.math.complex.Complex[] complexArray29 = fastFourierTransformer22.transform2(doubleArray27);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer30 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray35 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray35);
        org.apache.commons.math.complex.Complex[] complexArray37 = fastFourierTransformer30.transform2(doubleArray35);
        org.apache.commons.math.complex.Complex[] complexArray39 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray37, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray37);
        org.apache.commons.math.complex.Complex[] complexArray42 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray37, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer22.transform2(complexArray42);
        double[] doubleArray48 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray48);
        double[] doubleArray51 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray48, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer22.transform2(doubleArray51);
        org.apache.commons.math.complex.Complex[] complexArray53 = fastFourierTransformer0.inversetransform2(doubleArray51);
        double[] doubleArray58 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray58);
        double[] doubleArray61 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray58, (double) (byte) 100);
        double[] doubleArray63 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray58, (double) 0);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray58);
        org.apache.commons.math.complex.Complex[] complexArray65 = fastFourierTransformer0.inversetransform2(doubleArray58);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction66 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray70 = fastFourierTransformer0.transform(univariateRealFunction66, (double) ' ', (double) 1, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray37);
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray65);
    }

    @Test
    public void test1951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1951");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform(doubleArray26);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer31 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer32 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray37 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer32.transform2(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray39, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray39);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer31.inversetransform(complexArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer44 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray49 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer44.transform2(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray53 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray51, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray51);
        org.apache.commons.math.complex.Complex[] complexArray56 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray51, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray58 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray51, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray59 = fastFourierTransformer31.transform(complexArray51);
        org.apache.commons.math.complex.Complex[] complexArray60 = fastFourierTransformer0.inversetransform2(complexArray59);
        double[] doubleArray65 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray65);
        org.apache.commons.math.complex.Complex[] complexArray67 = fastFourierTransformer0.transform(doubleArray65);
        double[] doubleArray72 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray72);
        double[] doubleArray75 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray72, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray75);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray75);
        double[] doubleArray79 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray75, (double) (byte) 10);
        double[] doubleArray81 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray79, (double) (byte) 0);
        org.apache.commons.math.complex.Complex[] complexArray82 = fastFourierTransformer0.transform(doubleArray81);
        double[] doubleArray87 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray87);
        double[] doubleArray90 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray87, (double) 10.0f);
        double[] doubleArray92 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray90, (double) (byte) -1);
        org.apache.commons.math.complex.Complex[] complexArray93 = fastFourierTransformer0.transform2(doubleArray92);
        java.lang.Class<?> wildcardClass94 = doubleArray92.getClass();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(complexArray56);
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray67);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray82);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(complexArray93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1952");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform(doubleArray26);
        double[] doubleArray32 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 100);
        double[] doubleArray34 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 100L);
        double[] doubleArray36 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) (byte) -1);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100000.0, -9700000.0, -100000.0, -1000000.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100000.0, -9700000.0, -100000.0, -1000000.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100000.0, -9700000.0, -100000.0, -1000000.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100000.0, -9700000.0, -100000.0, -1000000.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100000.0, -9700000.0, -100000.0, -1000000.0]");
    }

    @Test
    public void test1953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1953");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        double[] doubleArray31 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray29, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer0.inversetransform2(doubleArray31);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer33 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray38 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray38);
        org.apache.commons.math.complex.Complex[] complexArray40 = fastFourierTransformer33.transform2(doubleArray38);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer41 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray46 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray46);
        org.apache.commons.math.complex.Complex[] complexArray48 = fastFourierTransformer41.transform2(doubleArray46);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer49 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray54 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray54);
        org.apache.commons.math.complex.Complex[] complexArray56 = fastFourierTransformer49.transform2(doubleArray54);
        org.apache.commons.math.complex.Complex[] complexArray58 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray56, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray56);
        org.apache.commons.math.complex.Complex[] complexArray61 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray56, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray62 = fastFourierTransformer41.transform2(complexArray61);
        double[] doubleArray67 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray67);
        double[] doubleArray70 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray67, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray71 = fastFourierTransformer41.transform(doubleArray67);
        org.apache.commons.math.complex.Complex[] complexArray72 = fastFourierTransformer33.transform(complexArray71);
        double[] doubleArray77 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray77);
        double[] doubleArray80 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray77, (double) 10.0f);
        double[] doubleArray82 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray80, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray83 = fastFourierTransformer33.transform2(doubleArray80);
        double[] doubleArray85 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray80, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray86 = fastFourierTransformer0.inversetransform(doubleArray80);
        double[] doubleArray91 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray91);
        double[] doubleArray94 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray91, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray91);
        org.apache.commons.math.complex.Complex[] complexArray96 = fastFourierTransformer0.inversetransform2(doubleArray91);
        double[] doubleArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray98 = fastFourierTransformer0.inversetransform(doubleArray97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray40);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray48);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray56);
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(complexArray61);
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray71);
        org.junit.Assert.assertNotNull(complexArray72);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(complexArray83);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(complexArray86);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray96);
    }

    @Test
    public void test1954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1954");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.transform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray16 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer11.transform2(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray19 = fastFourierTransformer0.inversetransform2(complexArray18);
        double[] doubleArray24 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray24);
        double[] doubleArray27 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray24, (double) 10.0f);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10L);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray29);
        org.apache.commons.math.complex.Complex[] complexArray31 = fastFourierTransformer0.inversetransform2(doubleArray29);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction32 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray36 = fastFourierTransformer0.transform(univariateRealFunction32, (double) (byte) 1, 10.0d, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray19);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray31);
    }

    @Test
    public void test1955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1955");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer16 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray21 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer16.transform2(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray23);
        org.apache.commons.math.complex.Complex[] complexArray28 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray29 = fastFourierTransformer8.transform2(complexArray28);
        double[] doubleArray34 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray34);
        double[] doubleArray37 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray34, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray38 = fastFourierTransformer8.transform(doubleArray34);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer39 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray44 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray44);
        double[] doubleArray47 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray44, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray47);
        org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer39.transform(doubleArray47);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer50 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray55 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray55);
        org.apache.commons.math.complex.Complex[] complexArray57 = fastFourierTransformer50.transform2(doubleArray55);
        double[] doubleArray59 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray55, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray60 = fastFourierTransformer39.inversetransform(doubleArray55);
        org.apache.commons.math.complex.Complex[] complexArray61 = fastFourierTransformer8.transform2(doubleArray55);
        double[] doubleArray63 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray55, (double) (short) 100);
        org.apache.commons.math.complex.Complex[] complexArray64 = fastFourierTransformer0.transform2(doubleArray55);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer65 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray70 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray70);
        double[] doubleArray73 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray70, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray73);
        org.apache.commons.math.complex.Complex[] complexArray75 = fastFourierTransformer65.inversetransform(doubleArray73);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray75);
        org.apache.commons.math.complex.Complex[] complexArray77 = fastFourierTransformer0.inversetransform(complexArray75);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction78 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray82 = fastFourierTransformer0.transform(univariateRealFunction78, (double) 0, (double) 0L, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray38);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(complexArray57);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(complexArray61);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(complexArray64);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray75);
        org.junit.Assert.assertNotNull(complexArray77);
    }

    @Test
    public void test1956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1956");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, (double) (byte) 0, (double) '#', (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1957");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer9 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray14 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray14);
        org.apache.commons.math.complex.Complex[] complexArray16 = fastFourierTransformer9.transform2(doubleArray14);
        org.apache.commons.math.complex.Complex[] complexArray18 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray16, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray16);
        org.apache.commons.math.complex.Complex[] complexArray21 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray16, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray22 = fastFourierTransformer1.transform2(complexArray21);
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray31 = fastFourierTransformer1.transform(doubleArray27);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray31);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer0.transform2(complexArray31);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer34 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray39 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer34.transform2(doubleArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer42 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray47 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray47);
        org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer42.transform2(doubleArray47);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer50 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray55 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray55);
        org.apache.commons.math.complex.Complex[] complexArray57 = fastFourierTransformer50.transform2(doubleArray55);
        org.apache.commons.math.complex.Complex[] complexArray59 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray57, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray57);
        org.apache.commons.math.complex.Complex[] complexArray62 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray57, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer42.transform2(complexArray62);
        double[] doubleArray68 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray68);
        double[] doubleArray71 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray68, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray72 = fastFourierTransformer42.transform(doubleArray68);
        org.apache.commons.math.complex.Complex[] complexArray73 = fastFourierTransformer34.transform(complexArray72);
        double[] doubleArray78 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray78);
        double[] doubleArray81 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray78, (double) 10.0f);
        double[] doubleArray83 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray81, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray84 = fastFourierTransformer34.transform2(doubleArray81);
        org.apache.commons.math.complex.Complex[] complexArray85 = fastFourierTransformer0.transform2(doubleArray81);
        double[] doubleArray87 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray81, (double) 0);
        double[] doubleArray89 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray87, (double) (-1L));
        java.lang.Class<?> wildcardClass90 = doubleArray89.getClass();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray16);
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(complexArray22);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray31);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray57);
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray72);
        org.junit.Assert.assertNotNull(complexArray73);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[0.0, -0.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[0.0, -0.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[0.0, -0.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(complexArray84);
        org.junit.Assert.assertNotNull(complexArray85);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[0.0, -0.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[0.0, -0.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1958");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        double[] doubleArray17 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray17);
        double[] doubleArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray17, (double) 10.0f);
        double[] doubleArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray20, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer0.transform(doubleArray20);
        double[] doubleArray28 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray28);
        double[] doubleArray31 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray28, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray31);
        double[] doubleArray34 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray31, 10.0d);
        org.apache.commons.math.complex.Complex[] complexArray35 = fastFourierTransformer0.transform2(doubleArray31);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer36 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray41 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray41);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer36.transform2(doubleArray41);
        org.apache.commons.math.complex.Complex[] complexArray45 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray43, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray43);
        org.apache.commons.math.complex.Complex[] complexArray48 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray43, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer0.transform2(complexArray43);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction50 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray54 = fastFourierTransformer0.transform(univariateRealFunction50, (double) (byte) -1, (double) 1L, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray35);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(complexArray48);
        org.junit.Assert.assertNotNull(complexArray49);
    }

    @Test
    public void test1959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1959");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, (-1.0d), (double) (-1.0f), (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [-1.0, -1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1960");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer0.transform(complexArray15);
        double[] doubleArray23 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray23);
        double[] doubleArray26 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray23, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray31 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) (short) 1);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer0.inversetransform2(doubleArray26);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction33 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray37 = fastFourierTransformer0.transform(univariateRealFunction33, (double) (-1.0f), (double) (byte) 100, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray32);
    }

    @Test
    public void test1961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1961");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        double[] doubleArray9 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray6, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray9);
        org.apache.commons.math.complex.Complex[] complexArray11 = fastFourierTransformer1.inversetransform(doubleArray9);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.transform2(complexArray11);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        double[] doubleArray21 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray18, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer13.transform(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray24 = fastFourierTransformer0.transform2(complexArray23);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer25 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer26 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray31 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray31);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer26.transform2(doubleArray31);
        org.apache.commons.math.complex.Complex[] complexArray35 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray33, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray33);
        org.apache.commons.math.complex.Complex[] complexArray37 = fastFourierTransformer25.inversetransform(complexArray33);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer38 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray43 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray43);
        org.apache.commons.math.complex.Complex[] complexArray45 = fastFourierTransformer38.transform2(doubleArray43);
        org.apache.commons.math.complex.Complex[] complexArray46 = fastFourierTransformer25.transform(complexArray45);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer47 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray52 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray52);
        org.apache.commons.math.complex.Complex[] complexArray54 = fastFourierTransformer47.transform2(doubleArray52);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer55 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray60 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray60);
        org.apache.commons.math.complex.Complex[] complexArray62 = fastFourierTransformer55.transform2(doubleArray60);
        org.apache.commons.math.complex.Complex[] complexArray64 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray62, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray62);
        org.apache.commons.math.complex.Complex[] complexArray67 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray62, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray68 = fastFourierTransformer47.transform2(complexArray67);
        double[] doubleArray73 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray73);
        double[] doubleArray76 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray73, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray77 = fastFourierTransformer47.transform2(doubleArray76);
        org.apache.commons.math.complex.Complex[] complexArray78 = fastFourierTransformer25.inversetransform2(doubleArray76);
        double[] doubleArray83 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray83);
        double[] doubleArray86 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray83, (double) (byte) 100);
        double[] doubleArray88 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray83, (double) 0);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray83);
        org.apache.commons.math.complex.Complex[] complexArray90 = fastFourierTransformer25.inversetransform2(doubleArray83);
        org.apache.commons.math.complex.Complex[] complexArray91 = fastFourierTransformer0.inversetransform(doubleArray83);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction92 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray96 = fastFourierTransformer0.inversetransform2(univariateRealFunction92, (double) 100, (double) 0.0f, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray11);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(complexArray24);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(complexArray35);
        org.junit.Assert.assertNotNull(complexArray37);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(complexArray46);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray54);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(complexArray64);
        org.junit.Assert.assertNotNull(complexArray67);
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray77);
        org.junit.Assert.assertNotNull(complexArray78);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray90);
        org.junit.Assert.assertNotNull(complexArray91);
    }

    @Test
    public void test1962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1962");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer16 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray21 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer16.transform2(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray23);
        org.apache.commons.math.complex.Complex[] complexArray28 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray29 = fastFourierTransformer8.transform2(complexArray28);
        double[] doubleArray34 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray34);
        double[] doubleArray37 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray34, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray38 = fastFourierTransformer8.transform(doubleArray34);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer0.transform(complexArray38);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer40 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray45 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray45);
        org.apache.commons.math.complex.Complex[] complexArray47 = fastFourierTransformer40.transform2(doubleArray45);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer48 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray53 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray53);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer48.transform2(doubleArray53);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer56 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray61 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer56.transform2(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray65 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray63, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray63);
        org.apache.commons.math.complex.Complex[] complexArray68 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray63, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray69 = fastFourierTransformer48.transform2(complexArray68);
        double[] doubleArray74 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray74);
        double[] doubleArray77 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray74, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray78 = fastFourierTransformer48.transform(doubleArray74);
        org.apache.commons.math.complex.Complex[] complexArray79 = fastFourierTransformer40.transform(complexArray78);
        org.apache.commons.math.complex.Complex[] complexArray81 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray79, (double) (-1));
        org.apache.commons.math.complex.Complex[] complexArray82 = fastFourierTransformer0.transform(complexArray81);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction83 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray87 = fastFourierTransformer0.inversetransform2(univariateRealFunction83, (double) 10L, (double) (short) 100, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray38);
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(complexArray69);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray78);
        org.junit.Assert.assertNotNull(complexArray79);
        org.junit.Assert.assertNotNull(complexArray81);
        org.junit.Assert.assertNotNull(complexArray82);
    }

    @Test
    public void test1963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1963");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform(doubleArray26);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer31 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer32 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray37 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer32.transform2(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray39, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray39);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer31.inversetransform(complexArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer44 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray49 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer44.transform2(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray53 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray51, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray51);
        org.apache.commons.math.complex.Complex[] complexArray56 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray51, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray58 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray51, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray59 = fastFourierTransformer31.transform(complexArray51);
        org.apache.commons.math.complex.Complex[] complexArray60 = fastFourierTransformer0.inversetransform2(complexArray59);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray59);
        org.apache.commons.math.complex.Complex[] complexArray63 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray59, (double) 0);
        org.apache.commons.math.complex.Complex[] complexArray65 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray59, 1.0d);
        org.apache.commons.math.complex.Complex[] complexArray67 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray65, (double) ' ');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray65);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray65);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray65);
        java.lang.Class<?> wildcardClass71 = complexArray65.getClass();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(complexArray56);
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(complexArray67);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test1964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1964");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        double[] doubleArray17 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray17);
        double[] doubleArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray17, (double) 10.0f);
        double[] doubleArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray20, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer0.transform(doubleArray20);
        double[] doubleArray28 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray28);
        double[] doubleArray31 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray28, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray31);
        double[] doubleArray34 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray31, 10.0d);
        org.apache.commons.math.complex.Complex[] complexArray35 = fastFourierTransformer0.transform2(doubleArray31);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction36 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray40 = fastFourierTransformer0.transform(univariateRealFunction36, 10.0d, (double) 1L, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [10.0, 1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray35);
    }

    @Test
    public void test1965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1965");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer16 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray21 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer16.transform2(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray23);
        org.apache.commons.math.complex.Complex[] complexArray28 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray29 = fastFourierTransformer8.transform2(complexArray28);
        double[] doubleArray34 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray34);
        double[] doubleArray37 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray34, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray38 = fastFourierTransformer8.transform(doubleArray34);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer0.transform(complexArray38);
        double[] doubleArray44 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray44);
        double[] doubleArray47 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray44, (double) 10.0f);
        double[] doubleArray49 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray47, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray50 = fastFourierTransformer0.transform2(doubleArray47);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer51 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray56 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray56);
        org.apache.commons.math.complex.Complex[] complexArray58 = fastFourierTransformer51.transform2(doubleArray56);
        double[] doubleArray60 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray56, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray61 = fastFourierTransformer0.transform(doubleArray56);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray61);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray61);
        org.apache.commons.math.complex.Complex[] complexArray65 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray61, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray67 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray61, (double) (byte) -1);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray38);
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray61);
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(complexArray67);
    }

    @Test
    public void test1966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1966");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.transform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray16 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer11.transform2(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray19 = fastFourierTransformer0.inversetransform2(complexArray18);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer20 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray25 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray25);
        double[] doubleArray28 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray25, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray28);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer20.inversetransform(doubleArray28);
        org.apache.commons.math.complex.Complex[] complexArray31 = fastFourierTransformer0.transform(doubleArray28);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction32 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray36 = fastFourierTransformer0.inversetransform2(univariateRealFunction32, (double) '#', 100.0d, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray19);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(complexArray31);
    }

    @Test
    public void test1967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1967");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer22.transform(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer0.transform(doubleArray30);
        double[] doubleArray38 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray38);
        double[] doubleArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray38, (double) 10.0f);
        double[] doubleArray43 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray41, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray44 = fastFourierTransformer0.inversetransform(doubleArray43);
        double[] doubleArray49 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray49);
        double[] doubleArray52 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray49, 0.0d);
        double[] doubleArray54 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray52, (double) (byte) 100);
        double[] doubleArray56 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray52, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray57 = fastFourierTransformer0.transform2(doubleArray56);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction58 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray62 = fastFourierTransformer0.transform2(univariateRealFunction58, (double) 100, (double) 1.0f, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [100.0, 1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray57);
    }

    @Test
    public void test1968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1968");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, (double) (short) 1, (double) 10L, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1969");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        double[] doubleArray17 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray17);
        double[] doubleArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray17, (double) 10.0f);
        double[] doubleArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray20, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer0.transform(doubleArray20);
        double[] doubleArray28 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray28);
        double[] doubleArray31 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray28, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray31);
        double[] doubleArray34 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray31, 10.0d);
        org.apache.commons.math.complex.Complex[] complexArray35 = fastFourierTransformer0.transform2(doubleArray31);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction36 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray40 = fastFourierTransformer0.transform2(univariateRealFunction36, (double) 100, (double) 10, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray35);
    }

    @Test
    public void test1970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1970");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer22.transform(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer0.transform(doubleArray30);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer34 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray39 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer34.transform2(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray43 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray41, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray41);
        org.apache.commons.math.complex.Complex[] complexArray46 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray41, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray47 = fastFourierTransformer0.inversetransform2(complexArray41);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer48 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray53 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray53);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer48.transform2(doubleArray53);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer56 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray61 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer56.transform2(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray65 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray63, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray63);
        org.apache.commons.math.complex.Complex[] complexArray68 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray63, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray69 = fastFourierTransformer48.transform2(complexArray68);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer70 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray75 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray75);
        double[] doubleArray78 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray75, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray78);
        org.apache.commons.math.complex.Complex[] complexArray80 = fastFourierTransformer70.transform(doubleArray78);
        org.apache.commons.math.complex.Complex[] complexArray81 = fastFourierTransformer48.transform(doubleArray78);
        org.apache.commons.math.complex.Complex[] complexArray82 = fastFourierTransformer0.inversetransform2(doubleArray78);
        java.lang.Class<?> wildcardClass83 = fastFourierTransformer0.getClass();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray46);
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(complexArray69);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray80);
        org.junit.Assert.assertNotNull(complexArray81);
        org.junit.Assert.assertNotNull(complexArray82);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test1971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1971");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        double[] doubleArray17 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray17);
        double[] doubleArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray17, (double) 10.0f);
        double[] doubleArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray20, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer0.transform(doubleArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer24 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray29 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray29);
        org.apache.commons.math.complex.Complex[] complexArray31 = fastFourierTransformer24.transform2(doubleArray29);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer32 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray37 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer32.transform2(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray39, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray39);
        org.apache.commons.math.complex.Complex[] complexArray44 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray39, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray45 = fastFourierTransformer24.transform2(complexArray44);
        double[] doubleArray50 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray50);
        double[] doubleArray53 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray50, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray54 = fastFourierTransformer24.transform(doubleArray50);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer55 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer56 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray61 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer56.transform2(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray65 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray63, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray63);
        org.apache.commons.math.complex.Complex[] complexArray67 = fastFourierTransformer55.inversetransform(complexArray63);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer68 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray73 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray73);
        org.apache.commons.math.complex.Complex[] complexArray75 = fastFourierTransformer68.transform2(doubleArray73);
        org.apache.commons.math.complex.Complex[] complexArray76 = fastFourierTransformer55.transform(complexArray75);
        org.apache.commons.math.complex.Complex[] complexArray77 = fastFourierTransformer24.transform2(complexArray76);
        double[] doubleArray82 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray82);
        double[] doubleArray85 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray82, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray85);
        org.apache.commons.math.complex.Complex[] complexArray87 = fastFourierTransformer24.inversetransform2(doubleArray85);
        org.apache.commons.math.complex.Complex[] complexArray89 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray87, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray90 = fastFourierTransformer0.inversetransform(complexArray89);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray31);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray54);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(complexArray67);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray75);
        org.junit.Assert.assertNotNull(complexArray76);
        org.junit.Assert.assertNotNull(complexArray77);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray87);
        org.junit.Assert.assertNotNull(complexArray89);
        org.junit.Assert.assertNotNull(complexArray90);
    }

    @Test
    public void test1972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1972");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.transform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray16 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer11.transform2(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray18, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray18);
        org.apache.commons.math.complex.Complex[] complexArray23 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray18, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray18, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray26 = fastFourierTransformer0.inversetransform2(complexArray25);
        double[] doubleArray31 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray31);
        double[] doubleArray34 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray31, (double) 10.0f);
        double[] doubleArray36 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray34, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray37 = fastFourierTransformer0.transform(doubleArray34);
        double[] doubleArray42 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray42);
        double[] doubleArray45 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray42, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray45);
        double[] doubleArray48 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray45, 10.0d);
        org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer0.transform2(doubleArray48);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer50 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer51 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray56 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray56);
        org.apache.commons.math.complex.Complex[] complexArray58 = fastFourierTransformer51.transform2(doubleArray56);
        org.apache.commons.math.complex.Complex[] complexArray60 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray58, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray58);
        org.apache.commons.math.complex.Complex[] complexArray62 = fastFourierTransformer50.inversetransform(complexArray58);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer63 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray68 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray68);
        org.apache.commons.math.complex.Complex[] complexArray70 = fastFourierTransformer63.transform2(doubleArray68);
        double[] doubleArray72 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray68, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray73 = fastFourierTransformer50.inversetransform(doubleArray68);
        org.apache.commons.math.complex.Complex[] complexArray75 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray73, (-1.0d));
        org.apache.commons.math.complex.Complex[] complexArray76 = fastFourierTransformer0.transform2(complexArray73);
        double[] doubleArray81 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray81);
        double[] doubleArray84 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray81, (double) 10.0f);
        double[] doubleArray86 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray84, (double) 10L);
        double[] doubleArray88 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray84, (double) (byte) 100);
        double[] doubleArray90 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray88, (double) (byte) 1);
        org.apache.commons.math.complex.Complex[] complexArray91 = fastFourierTransformer0.inversetransform(doubleArray90);
        double[] doubleArray96 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray96);
        org.apache.commons.math.complex.Complex[] complexArray98 = fastFourierTransformer0.inversetransform(doubleArray96);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray26);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray37);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray70);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray73);
        org.junit.Assert.assertNotNull(complexArray75);
        org.junit.Assert.assertNotNull(complexArray76);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(complexArray91);
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray96), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray98);
    }

    @Test
    public void test1973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1973");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.transform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray16 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer11.transform2(doubleArray16);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer19 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray24 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray24);
        org.apache.commons.math.complex.Complex[] complexArray26 = fastFourierTransformer19.transform2(doubleArray24);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer27 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray32 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray32);
        org.apache.commons.math.complex.Complex[] complexArray34 = fastFourierTransformer27.transform2(doubleArray32);
        org.apache.commons.math.complex.Complex[] complexArray36 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray34, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray34);
        org.apache.commons.math.complex.Complex[] complexArray39 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray34, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray40 = fastFourierTransformer19.transform2(complexArray39);
        double[] doubleArray45 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray45);
        double[] doubleArray48 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray45, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer19.transform(doubleArray45);
        org.apache.commons.math.complex.Complex[] complexArray50 = fastFourierTransformer11.transform(complexArray49);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer51 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray56 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray56);
        org.apache.commons.math.complex.Complex[] complexArray58 = fastFourierTransformer51.transform2(doubleArray56);
        org.apache.commons.math.complex.Complex[] complexArray60 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray58, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray62 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray60, (double) (byte) 100);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer11.inversetransform(complexArray60);
        org.apache.commons.math.complex.Complex[] complexArray65 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray60, (double) 'a');
        org.apache.commons.math.complex.Complex[] complexArray66 = fastFourierTransformer0.transform(complexArray65);
        org.apache.commons.math.complex.Complex[] complexArray68 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray66, 0.0d);
        org.apache.commons.math.complex.Complex[] complexArray70 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray66, (double) (-1));
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray26);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(complexArray36);
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray40);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(complexArray66);
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(complexArray70);
    }

    @Test
    public void test1974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1974");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer16 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray21 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer16.transform2(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray23);
        org.apache.commons.math.complex.Complex[] complexArray28 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray29 = fastFourierTransformer8.transform2(complexArray28);
        double[] doubleArray34 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray34);
        double[] doubleArray37 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray34, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray38 = fastFourierTransformer8.transform(doubleArray34);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer0.transform(complexArray38);
        double[] doubleArray44 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray44);
        double[] doubleArray47 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray44, (double) 10.0f);
        double[] doubleArray49 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray47, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray50 = fastFourierTransformer0.transform2(doubleArray47);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray47);
        double[] doubleArray53 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray47, (double) 100L);
        java.lang.Class<?> wildcardClass54 = doubleArray47.getClass();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray38);
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test1975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1975");
        org.apache.commons.math.transform.FastFourierTransformer.verifyInterval((double) (byte) -1, (double) 'a');
    }

    @Test
    public void test1976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1976");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        double[] doubleArray17 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray17);
        double[] doubleArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray17, (double) 10.0f);
        double[] doubleArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray20, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer0.transform(doubleArray20);
        double[] doubleArray28 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray28);
        double[] doubleArray31 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray28, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray31);
        double[] doubleArray34 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray31, 10.0d);
        org.apache.commons.math.complex.Complex[] complexArray35 = fastFourierTransformer0.transform2(doubleArray31);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer36 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray41 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray41);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer36.transform2(doubleArray41);
        org.apache.commons.math.complex.Complex[] complexArray45 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray43, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray43);
        org.apache.commons.math.complex.Complex[] complexArray48 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray43, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer0.transform2(complexArray43);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer50 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer51 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray56 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray56);
        org.apache.commons.math.complex.Complex[] complexArray58 = fastFourierTransformer51.transform2(doubleArray56);
        org.apache.commons.math.complex.Complex[] complexArray60 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray58, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray58);
        org.apache.commons.math.complex.Complex[] complexArray62 = fastFourierTransformer50.inversetransform(complexArray58);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer63 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray68 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray68);
        org.apache.commons.math.complex.Complex[] complexArray70 = fastFourierTransformer63.transform2(doubleArray68);
        double[] doubleArray72 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray68, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray73 = fastFourierTransformer50.inversetransform(doubleArray68);
        org.apache.commons.math.complex.Complex[] complexArray74 = fastFourierTransformer0.inversetransform(doubleArray68);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer75 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer76 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray81 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray81);
        org.apache.commons.math.complex.Complex[] complexArray83 = fastFourierTransformer76.transform2(doubleArray81);
        org.apache.commons.math.complex.Complex[] complexArray85 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray83, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray83);
        org.apache.commons.math.complex.Complex[] complexArray87 = fastFourierTransformer75.inversetransform(complexArray83);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer88 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray93 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray93);
        org.apache.commons.math.complex.Complex[] complexArray95 = fastFourierTransformer88.transform2(doubleArray93);
        org.apache.commons.math.complex.Complex[] complexArray96 = fastFourierTransformer75.transform(complexArray95);
        org.apache.commons.math.complex.Complex[] complexArray97 = fastFourierTransformer0.inversetransform2(complexArray95);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray95);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray95);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray35);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(complexArray48);
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray70);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray73);
        org.junit.Assert.assertNotNull(complexArray74);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray83);
        org.junit.Assert.assertNotNull(complexArray85);
        org.junit.Assert.assertNotNull(complexArray87);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray95);
        org.junit.Assert.assertNotNull(complexArray96);
        org.junit.Assert.assertNotNull(complexArray97);
    }

    @Test
    public void test1977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1977");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.transform(doubleArray8);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction11 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer0.inversetransform2(univariateRealFunction11, (double) (-1), (double) (short) 10, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
    }

    @Test
    public void test1978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1978");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform(doubleArray26);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer31 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer32 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray37 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer32.transform2(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray39, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray39);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer31.inversetransform(complexArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer44 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray49 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer44.transform2(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer31.transform(complexArray51);
        org.apache.commons.math.complex.Complex[] complexArray53 = fastFourierTransformer0.transform2(complexArray52);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer54 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer55 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray60 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray60);
        org.apache.commons.math.complex.Complex[] complexArray62 = fastFourierTransformer55.transform2(doubleArray60);
        org.apache.commons.math.complex.Complex[] complexArray64 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray62, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray62);
        org.apache.commons.math.complex.Complex[] complexArray66 = fastFourierTransformer54.inversetransform(complexArray62);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer67 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray72 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray72);
        org.apache.commons.math.complex.Complex[] complexArray74 = fastFourierTransformer67.transform2(doubleArray72);
        org.apache.commons.math.complex.Complex[] complexArray75 = fastFourierTransformer54.transform(complexArray74);
        org.apache.commons.math.complex.Complex[] complexArray76 = fastFourierTransformer0.transform2(complexArray75);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer77 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray82 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray82);
        org.apache.commons.math.complex.Complex[] complexArray84 = fastFourierTransformer77.transform2(doubleArray82);
        org.apache.commons.math.complex.Complex[] complexArray86 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray84, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray84);
        org.apache.commons.math.complex.Complex[] complexArray89 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray84, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray91 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray84, (double) 1);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray84);
        org.apache.commons.math.complex.Complex[] complexArray93 = fastFourierTransformer0.inversetransform2(complexArray84);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction94 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray98 = fastFourierTransformer0.inversetransform2(univariateRealFunction94, (double) '#', (-1.0d), (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [35.0, -1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(complexArray64);
        org.junit.Assert.assertNotNull(complexArray66);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray74);
        org.junit.Assert.assertNotNull(complexArray75);
        org.junit.Assert.assertNotNull(complexArray76);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray84);
        org.junit.Assert.assertNotNull(complexArray86);
        org.junit.Assert.assertNotNull(complexArray89);
        org.junit.Assert.assertNotNull(complexArray91);
        org.junit.Assert.assertNotNull(complexArray93);
    }

    @Test
    public void test1979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1979");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer16 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray21 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer16.transform2(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray23);
        org.apache.commons.math.complex.Complex[] complexArray28 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray29 = fastFourierTransformer8.transform2(complexArray28);
        double[] doubleArray34 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray34);
        double[] doubleArray37 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray34, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray38 = fastFourierTransformer8.transform(doubleArray34);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer0.transform(complexArray38);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer40 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray45 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray45);
        org.apache.commons.math.complex.Complex[] complexArray47 = fastFourierTransformer40.transform2(doubleArray45);
        org.apache.commons.math.complex.Complex[] complexArray49 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray47, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray51 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray49, (double) (byte) 100);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer0.inversetransform(complexArray49);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer53 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray58 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray58);
        org.apache.commons.math.complex.Complex[] complexArray60 = fastFourierTransformer53.transform2(doubleArray58);
        org.apache.commons.math.complex.Complex[] complexArray62 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray60, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray60);
        org.apache.commons.math.complex.Complex[] complexArray65 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray60, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray67 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray60, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray68 = fastFourierTransformer0.inversetransform(complexArray60);
        double[] doubleArray73 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray73);
        double[] doubleArray76 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray73, (double) 10.0f);
        double[] doubleArray78 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray76, (double) 10L);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray76);
        org.apache.commons.math.complex.Complex[] complexArray80 = fastFourierTransformer0.inversetransform(doubleArray76);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer81 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray86 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray86);
        double[] doubleArray89 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray86, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray89);
        org.apache.commons.math.complex.Complex[] complexArray91 = fastFourierTransformer81.transform(doubleArray89);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray91);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray91);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray91);
        org.apache.commons.math.complex.Complex[] complexArray95 = fastFourierTransformer0.inversetransform2(complexArray91);
        org.apache.commons.math.complex.Complex[] complexArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray97 = fastFourierTransformer0.transform(complexArray96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray38);
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(complexArray67);
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray80);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray91);
        org.junit.Assert.assertNotNull(complexArray95);
    }

    @Test
    public void test1980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1980");
        org.apache.commons.math.transform.FastFourierTransformer.verifyInterval((double) (short) 0, (double) 10.0f);
    }

    @Test
    public void test1981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1981");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray11 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer12 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer21 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        org.apache.commons.math.complex.Complex[] complexArray28 = fastFourierTransformer21.transform2(doubleArray26);
        org.apache.commons.math.complex.Complex[] complexArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray28, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray28);
        org.apache.commons.math.complex.Complex[] complexArray33 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray28, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray34 = fastFourierTransformer13.transform2(complexArray33);
        double[] doubleArray39 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray39);
        double[] doubleArray42 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray39, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer13.transform2(doubleArray42);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer44 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer45 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray50 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray50);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer45.transform2(doubleArray50);
        org.apache.commons.math.complex.Complex[] complexArray54 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray52, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray52);
        org.apache.commons.math.complex.Complex[] complexArray56 = fastFourierTransformer44.inversetransform(complexArray52);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer57 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray62 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray62);
        org.apache.commons.math.complex.Complex[] complexArray64 = fastFourierTransformer57.transform2(doubleArray62);
        double[] doubleArray66 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray62, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray67 = fastFourierTransformer44.inversetransform(doubleArray62);
        org.apache.commons.math.complex.Complex[] complexArray68 = fastFourierTransformer13.transform2(complexArray67);
        org.apache.commons.math.complex.Complex[] complexArray70 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray68, 10.0d);
        org.apache.commons.math.complex.Complex[] complexArray72 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray68, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray73 = fastFourierTransformer12.inversetransform(complexArray72);
        org.apache.commons.math.complex.Complex[] complexArray75 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray73, (double) '4');
        org.apache.commons.math.complex.Complex[] complexArray76 = fastFourierTransformer0.transform(complexArray75);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction77 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray81 = fastFourierTransformer0.transform(univariateRealFunction77, (double) 1L, (double) (byte) 1, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [1.0, 1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray11);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(complexArray54);
        org.junit.Assert.assertNotNull(complexArray56);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray64);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray67);
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(complexArray70);
        org.junit.Assert.assertNotNull(complexArray72);
        org.junit.Assert.assertNotNull(complexArray73);
        org.junit.Assert.assertNotNull(complexArray75);
        org.junit.Assert.assertNotNull(complexArray76);
    }

    @Test
    public void test1982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1982");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray29);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray29);
        double[] doubleArray33 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray29, (double) (byte) 10);
        double[] doubleArray35 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray33, (double) (byte) 0);
        org.apache.commons.math.complex.Complex[] complexArray36 = fastFourierTransformer0.transform2(doubleArray33);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer37 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray42 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray42);
        org.apache.commons.math.complex.Complex[] complexArray44 = fastFourierTransformer37.transform2(doubleArray42);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer45 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray50 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray50);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer45.transform2(doubleArray50);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer53 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray58 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray58);
        org.apache.commons.math.complex.Complex[] complexArray60 = fastFourierTransformer53.transform2(doubleArray58);
        org.apache.commons.math.complex.Complex[] complexArray62 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray60, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray60);
        org.apache.commons.math.complex.Complex[] complexArray65 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray60, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray66 = fastFourierTransformer45.transform2(complexArray65);
        double[] doubleArray71 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray71);
        double[] doubleArray74 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray71, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray75 = fastFourierTransformer45.transform(doubleArray71);
        org.apache.commons.math.complex.Complex[] complexArray76 = fastFourierTransformer37.transform(complexArray75);
        double[] doubleArray81 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray81);
        double[] doubleArray84 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray81, (double) 10.0f);
        double[] doubleArray86 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray84, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray87 = fastFourierTransformer37.transform2(doubleArray84);
        double[] doubleArray89 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray84, 100.0d);
        double[] doubleArray91 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray84, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray92 = fastFourierTransformer0.transform(doubleArray84);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray92);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray36);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(complexArray66);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray75);
        org.junit.Assert.assertNotNull(complexArray76);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(complexArray87);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(complexArray92);
    }

    @Test
    public void test1983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1983");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer22.transform(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer0.transform(doubleArray30);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer34 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray39 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer34.transform2(doubleArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer42 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray47 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray47);
        org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer42.transform2(doubleArray47);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer50 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray55 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray55);
        org.apache.commons.math.complex.Complex[] complexArray57 = fastFourierTransformer50.transform2(doubleArray55);
        org.apache.commons.math.complex.Complex[] complexArray59 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray57, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray57);
        org.apache.commons.math.complex.Complex[] complexArray62 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray57, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer42.transform2(complexArray62);
        double[] doubleArray68 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray68);
        double[] doubleArray71 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray68, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray72 = fastFourierTransformer42.transform(doubleArray68);
        org.apache.commons.math.complex.Complex[] complexArray73 = fastFourierTransformer34.transform(complexArray72);
        org.apache.commons.math.complex.Complex[] complexArray75 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray72, (double) (-1.0f));
        org.apache.commons.math.complex.Complex[] complexArray76 = fastFourierTransformer0.inversetransform2(complexArray72);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer77 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray82 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray82);
        org.apache.commons.math.complex.Complex[] complexArray84 = fastFourierTransformer77.transform2(doubleArray82);
        org.apache.commons.math.complex.Complex[] complexArray85 = fastFourierTransformer0.transform2(doubleArray82);
        double[] doubleArray86 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray87 = fastFourierTransformer0.inversetransform(doubleArray86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray57);
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray72);
        org.junit.Assert.assertNotNull(complexArray73);
        org.junit.Assert.assertNotNull(complexArray75);
        org.junit.Assert.assertNotNull(complexArray76);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray84);
        org.junit.Assert.assertNotNull(complexArray85);
    }

    @Test
    public void test1984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1984");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        double[] doubleArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray18, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer0.inversetransform(doubleArray18);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer24 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray29 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray29);
        double[] doubleArray32 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray29, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray32);
        org.apache.commons.math.complex.Complex[] complexArray34 = fastFourierTransformer24.inversetransform(doubleArray32);
        org.apache.commons.math.complex.Complex[] complexArray35 = fastFourierTransformer0.inversetransform(doubleArray32);
        double[] doubleArray40 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray40);
        double[] doubleArray43 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray40, 0.0d);
        double[] doubleArray45 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray43, (double) (byte) 100);
        org.apache.commons.math.complex.Complex[] complexArray46 = fastFourierTransformer0.transform(doubleArray45);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer47 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray52 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray52);
        double[] doubleArray55 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray52, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray55);
        org.apache.commons.math.complex.Complex[] complexArray57 = fastFourierTransformer47.transform(doubleArray55);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer58 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray63 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray63);
        org.apache.commons.math.complex.Complex[] complexArray65 = fastFourierTransformer58.transform2(doubleArray63);
        org.apache.commons.math.complex.Complex[] complexArray66 = fastFourierTransformer47.inversetransform2(complexArray65);
        double[] doubleArray71 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray71);
        double[] doubleArray74 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray71, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray74);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray74);
        double[] doubleArray78 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray74, (double) (byte) 10);
        double[] doubleArray80 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray78, (double) (byte) 0);
        org.apache.commons.math.complex.Complex[] complexArray81 = fastFourierTransformer47.transform(doubleArray80);
        org.apache.commons.math.complex.Complex[] complexArray83 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray81, (double) 0);
        org.apache.commons.math.complex.Complex[] complexArray84 = fastFourierTransformer0.transform(complexArray81);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction85 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray89 = fastFourierTransformer0.transform(univariateRealFunction85, (double) 'a', (double) 0.0f, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(complexArray35);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray46);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray57);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(complexArray66);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray81);
        org.junit.Assert.assertNotNull(complexArray83);
        org.junit.Assert.assertNotNull(complexArray84);
    }

    @Test
    public void test1985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1985");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        org.apache.commons.math.complex.Complex[] complexArray29 = fastFourierTransformer22.transform2(doubleArray27);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer30 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray35 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray35);
        org.apache.commons.math.complex.Complex[] complexArray37 = fastFourierTransformer30.transform2(doubleArray35);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer38 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray43 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray43);
        org.apache.commons.math.complex.Complex[] complexArray45 = fastFourierTransformer38.transform2(doubleArray43);
        org.apache.commons.math.complex.Complex[] complexArray47 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray45, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray45);
        org.apache.commons.math.complex.Complex[] complexArray50 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray45, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer30.transform2(complexArray50);
        double[] doubleArray56 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray56);
        double[] doubleArray59 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray56, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray60 = fastFourierTransformer30.transform(doubleArray56);
        org.apache.commons.math.complex.Complex[] complexArray61 = fastFourierTransformer22.transform(complexArray60);
        org.apache.commons.math.complex.Complex[] complexArray63 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray60, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray64 = fastFourierTransformer0.inversetransform2(complexArray63);
        double[] doubleArray69 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray69);
        double[] doubleArray72 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray69, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray72);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray72);
        double[] doubleArray76 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray72, (double) (byte) 10);
        double[] doubleArray78 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray76, (double) (byte) 0);
        org.apache.commons.math.complex.Complex[] complexArray79 = fastFourierTransformer0.inversetransform(doubleArray78);
        double[] doubleArray80 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray81 = fastFourierTransformer0.transform2(doubleArray80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray37);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(complexArray61);
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(complexArray64);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray79);
    }

    @Test
    public void test1986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1986");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray20, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray20);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray20, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray27 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray20, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray28 = fastFourierTransformer0.transform(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer29 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray34 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray34);
        org.apache.commons.math.complex.Complex[] complexArray36 = fastFourierTransformer29.transform2(doubleArray34);
        org.apache.commons.math.complex.Complex[] complexArray37 = fastFourierTransformer0.transform2(doubleArray34);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer38 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray43 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray43);
        double[] doubleArray46 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray43, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray46);
        org.apache.commons.math.complex.Complex[] complexArray48 = fastFourierTransformer38.transform(doubleArray46);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer49 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray54 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray54);
        org.apache.commons.math.complex.Complex[] complexArray56 = fastFourierTransformer49.transform2(doubleArray54);
        org.apache.commons.math.complex.Complex[] complexArray58 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray56, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray56);
        org.apache.commons.math.complex.Complex[] complexArray61 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray56, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray63 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray56, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray64 = fastFourierTransformer38.inversetransform2(complexArray63);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer65 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer66 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray71 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray71);
        org.apache.commons.math.complex.Complex[] complexArray73 = fastFourierTransformer66.transform2(doubleArray71);
        org.apache.commons.math.complex.Complex[] complexArray75 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray73, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray73);
        org.apache.commons.math.complex.Complex[] complexArray77 = fastFourierTransformer65.inversetransform(complexArray73);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray73);
        org.apache.commons.math.complex.Complex[] complexArray79 = fastFourierTransformer38.inversetransform(complexArray73);
        org.apache.commons.math.complex.Complex[] complexArray81 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray79, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray82 = fastFourierTransformer0.transform(complexArray81);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction83 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray87 = fastFourierTransformer0.transform(univariateRealFunction83, (double) (short) 10, (double) (short) 1, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [10.0, 1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray22);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray27);
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray36);
        org.junit.Assert.assertNotNull(complexArray37);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray48);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray56);
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(complexArray61);
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(complexArray64);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray73);
        org.junit.Assert.assertNotNull(complexArray75);
        org.junit.Assert.assertNotNull(complexArray77);
        org.junit.Assert.assertNotNull(complexArray79);
        org.junit.Assert.assertNotNull(complexArray81);
        org.junit.Assert.assertNotNull(complexArray82);
    }

    @Test
    public void test1987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1987");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer23 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray28 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray28);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer23.transform2(doubleArray28);
        org.apache.commons.math.complex.Complex[] complexArray32 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray30, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray30);
        org.apache.commons.math.complex.Complex[] complexArray34 = fastFourierTransformer22.inversetransform(complexArray30);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer35 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray40 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray42 = fastFourierTransformer35.transform2(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray44 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray42, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray42);
        org.apache.commons.math.complex.Complex[] complexArray47 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray42, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray49 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray42, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray50 = fastFourierTransformer22.transform(complexArray42);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer0.transform(complexArray50);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer52 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray57 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray57);
        double[] doubleArray60 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray57, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray60);
        org.apache.commons.math.complex.Complex[] complexArray62 = fastFourierTransformer52.transform(doubleArray60);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer63 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray68 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray68);
        org.apache.commons.math.complex.Complex[] complexArray70 = fastFourierTransformer63.transform2(doubleArray68);
        org.apache.commons.math.complex.Complex[] complexArray72 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray70, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray70);
        org.apache.commons.math.complex.Complex[] complexArray75 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray70, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray77 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray70, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray78 = fastFourierTransformer52.inversetransform2(complexArray77);
        org.apache.commons.math.complex.Complex[] complexArray79 = fastFourierTransformer0.inversetransform2(complexArray77);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer80 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray85 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray85);
        double[] doubleArray88 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray85, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray88);
        org.apache.commons.math.complex.Complex[] complexArray90 = fastFourierTransformer80.inversetransform(doubleArray88);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray90);
        org.apache.commons.math.complex.Complex[] complexArray93 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray90, (double) (byte) 100);
        org.apache.commons.math.complex.Complex[] complexArray95 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray90, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray96 = fastFourierTransformer0.transform2(complexArray95);
        org.apache.commons.math.complex.Complex[] complexArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray98 = fastFourierTransformer0.transform(complexArray97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray70);
        org.junit.Assert.assertNotNull(complexArray72);
        org.junit.Assert.assertNotNull(complexArray75);
        org.junit.Assert.assertNotNull(complexArray77);
        org.junit.Assert.assertNotNull(complexArray78);
        org.junit.Assert.assertNotNull(complexArray79);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray90);
        org.junit.Assert.assertNotNull(complexArray93);
        org.junit.Assert.assertNotNull(complexArray95);
        org.junit.Assert.assertNotNull(complexArray96);
    }

    @Test
    public void test1988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1988");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer22.transform(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer0.transform(doubleArray30);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer34 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray39 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer34.transform2(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray43 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray41, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray41);
        org.apache.commons.math.complex.Complex[] complexArray46 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray41, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray47 = fastFourierTransformer0.inversetransform2(complexArray41);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer48 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer49 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray54 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray54);
        org.apache.commons.math.complex.Complex[] complexArray56 = fastFourierTransformer49.transform2(doubleArray54);
        org.apache.commons.math.complex.Complex[] complexArray58 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray56, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray59 = fastFourierTransformer48.inversetransform(complexArray56);
        org.apache.commons.math.complex.Complex[] complexArray60 = fastFourierTransformer0.inversetransform2(complexArray59);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer61 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray66 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray66);
        org.apache.commons.math.complex.Complex[] complexArray68 = fastFourierTransformer61.transform2(doubleArray66);
        org.apache.commons.math.complex.Complex[] complexArray70 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray68, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray71 = fastFourierTransformer0.inversetransform2(complexArray68);
        double[] doubleArray72 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray73 = fastFourierTransformer0.inversetransform(doubleArray72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray46);
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray56);
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(complexArray70);
        org.junit.Assert.assertNotNull(complexArray71);
    }

    @Test
    public void test1989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1989");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        double[] doubleArray16 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray13, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer8.transform(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray19 = fastFourierTransformer0.transform2(doubleArray16);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer20 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray25 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray25);
        org.apache.commons.math.complex.Complex[] complexArray27 = fastFourierTransformer20.transform2(doubleArray25);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer28 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray33 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray33);
        org.apache.commons.math.complex.Complex[] complexArray35 = fastFourierTransformer28.transform2(doubleArray33);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer36 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray41 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray41);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer36.transform2(doubleArray41);
        org.apache.commons.math.complex.Complex[] complexArray45 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray43, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray43);
        org.apache.commons.math.complex.Complex[] complexArray48 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray43, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer28.transform2(complexArray48);
        double[] doubleArray54 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray54);
        double[] doubleArray57 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray54, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray58 = fastFourierTransformer28.transform(doubleArray54);
        org.apache.commons.math.complex.Complex[] complexArray59 = fastFourierTransformer20.transform(complexArray58);
        double[] doubleArray64 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray64);
        double[] doubleArray67 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray64, (double) 10.0f);
        double[] doubleArray69 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray67, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray70 = fastFourierTransformer20.transform2(doubleArray67);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer71 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray76 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray76);
        org.apache.commons.math.complex.Complex[] complexArray78 = fastFourierTransformer71.transform2(doubleArray76);
        org.apache.commons.math.complex.Complex[] complexArray80 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray78, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray78);
        org.apache.commons.math.complex.Complex[] complexArray83 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray78, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray85 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray78, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray86 = fastFourierTransformer20.transform(complexArray78);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray86);
        org.apache.commons.math.complex.Complex[] complexArray88 = fastFourierTransformer0.transform(complexArray86);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction89 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray93 = fastFourierTransformer0.transform(univariateRealFunction89, (double) (byte) 0, 0.0d, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [0.0, 0.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray19);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray27);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray35);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(complexArray48);
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray70);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray78);
        org.junit.Assert.assertNotNull(complexArray80);
        org.junit.Assert.assertNotNull(complexArray83);
        org.junit.Assert.assertNotNull(complexArray85);
        org.junit.Assert.assertNotNull(complexArray86);
        org.junit.Assert.assertNotNull(complexArray88);
    }

    @Test
    public void test1990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1990");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray20, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray20);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray20, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray27 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray20, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray28 = fastFourierTransformer0.transform(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer29 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray34 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray34);
        org.apache.commons.math.complex.Complex[] complexArray36 = fastFourierTransformer29.transform2(doubleArray34);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer37 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray42 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray42);
        org.apache.commons.math.complex.Complex[] complexArray44 = fastFourierTransformer37.transform2(doubleArray42);
        org.apache.commons.math.complex.Complex[] complexArray46 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray44, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray44);
        org.apache.commons.math.complex.Complex[] complexArray49 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray44, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray50 = fastFourierTransformer29.transform2(complexArray49);
        double[] doubleArray55 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray55);
        double[] doubleArray58 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray55, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray59 = fastFourierTransformer29.transform(doubleArray55);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer60 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer61 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray66 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray66);
        org.apache.commons.math.complex.Complex[] complexArray68 = fastFourierTransformer61.transform2(doubleArray66);
        org.apache.commons.math.complex.Complex[] complexArray70 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray68, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray68);
        org.apache.commons.math.complex.Complex[] complexArray72 = fastFourierTransformer60.inversetransform(complexArray68);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer73 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray78 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray78);
        org.apache.commons.math.complex.Complex[] complexArray80 = fastFourierTransformer73.transform2(doubleArray78);
        org.apache.commons.math.complex.Complex[] complexArray81 = fastFourierTransformer60.transform(complexArray80);
        org.apache.commons.math.complex.Complex[] complexArray82 = fastFourierTransformer29.transform2(complexArray81);
        double[] doubleArray87 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray87);
        double[] doubleArray90 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray87, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray90);
        org.apache.commons.math.complex.Complex[] complexArray92 = fastFourierTransformer29.inversetransform2(doubleArray90);
        org.apache.commons.math.complex.Complex[] complexArray93 = fastFourierTransformer0.transform2(doubleArray90);
        double[] doubleArray95 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray90, (double) 'a');
        double[] doubleArray97 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray95, (double) 0.0f);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray22);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray27);
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray36);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(complexArray46);
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(complexArray70);
        org.junit.Assert.assertNotNull(complexArray72);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray80);
        org.junit.Assert.assertNotNull(complexArray81);
        org.junit.Assert.assertNotNull(complexArray82);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray92);
        org.junit.Assert.assertNotNull(complexArray93);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray95), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray97), "[-0.0, 0.0, 0.0, 0.0]");
    }

    @Test
    public void test1991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1991");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        double[] doubleArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray18, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer0.inversetransform(doubleArray18);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer24 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray29 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray29);
        double[] doubleArray32 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray29, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray32);
        org.apache.commons.math.complex.Complex[] complexArray34 = fastFourierTransformer24.inversetransform(doubleArray32);
        org.apache.commons.math.complex.Complex[] complexArray35 = fastFourierTransformer0.inversetransform(doubleArray32);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction36 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray40 = fastFourierTransformer0.inversetransform(univariateRealFunction36, (double) (byte) 10, (double) (byte) 1, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [10.0, 1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(complexArray35);
    }

    @Test
    public void test1992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1992");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer9 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray14 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray14);
        org.apache.commons.math.complex.Complex[] complexArray16 = fastFourierTransformer9.transform2(doubleArray14);
        org.apache.commons.math.complex.Complex[] complexArray18 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray16, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray16);
        org.apache.commons.math.complex.Complex[] complexArray21 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray16, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray22 = fastFourierTransformer1.transform2(complexArray21);
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray31 = fastFourierTransformer1.transform(doubleArray27);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray31);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer0.transform2(complexArray31);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer34 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray39 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer34.transform2(doubleArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer42 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray47 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray47);
        org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer42.transform2(doubleArray47);
        org.apache.commons.math.complex.Complex[] complexArray51 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray49, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray49);
        org.apache.commons.math.complex.Complex[] complexArray54 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray49, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer34.transform2(complexArray54);
        double[] doubleArray60 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray60);
        double[] doubleArray63 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray60, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray64 = fastFourierTransformer34.transform2(doubleArray63);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer65 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer66 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray71 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray71);
        org.apache.commons.math.complex.Complex[] complexArray73 = fastFourierTransformer66.transform2(doubleArray71);
        org.apache.commons.math.complex.Complex[] complexArray75 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray73, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray73);
        org.apache.commons.math.complex.Complex[] complexArray77 = fastFourierTransformer65.inversetransform(complexArray73);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer78 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray83 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray83);
        org.apache.commons.math.complex.Complex[] complexArray85 = fastFourierTransformer78.transform2(doubleArray83);
        double[] doubleArray87 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray83, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray88 = fastFourierTransformer65.inversetransform(doubleArray83);
        org.apache.commons.math.complex.Complex[] complexArray89 = fastFourierTransformer34.transform2(complexArray88);
        org.apache.commons.math.complex.Complex[] complexArray91 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray89, (double) 100.0f);
        org.apache.commons.math.complex.Complex[] complexArray92 = fastFourierTransformer0.transform(complexArray89);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction93 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray97 = fastFourierTransformer0.transform2(univariateRealFunction93, (double) (byte) 1, (double) (short) 1, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [1.0, 1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray16);
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(complexArray22);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray31);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray54);
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray64);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray73);
        org.junit.Assert.assertNotNull(complexArray75);
        org.junit.Assert.assertNotNull(complexArray77);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray85);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray88);
        org.junit.Assert.assertNotNull(complexArray89);
        org.junit.Assert.assertNotNull(complexArray91);
        org.junit.Assert.assertNotNull(complexArray92);
    }

    @Test
    public void test1993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1993");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.transform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer12 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray17 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray17);
        org.apache.commons.math.complex.Complex[] complexArray19 = fastFourierTransformer12.transform2(doubleArray17);
        org.apache.commons.math.complex.Complex[] complexArray21 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray19, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray19);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer11.inversetransform(complexArray19);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer24 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray29 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray29);
        org.apache.commons.math.complex.Complex[] complexArray31 = fastFourierTransformer24.transform2(doubleArray29);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer11.transform(complexArray31);
        double[] doubleArray37 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray37);
        double[] doubleArray40 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray37, (double) 10.0f);
        double[] doubleArray42 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray40, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer11.inversetransform2(doubleArray42);
        org.apache.commons.math.complex.Complex[] complexArray44 = fastFourierTransformer0.inversetransform2(doubleArray42);
        double[] doubleArray46 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray42, (double) 1.0f);
        double[] doubleArray48 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray46, (double) (byte) 0);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray19);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray31);
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-0.0, 0.0, 0.0, 0.0]");
    }

    @Test
    public void test1994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1994");
        double[] doubleArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray2 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray0, 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1995");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.transform.FastFourierTransformer.verifyInterval((double) (byte) -1, (double) (-1.0f));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [-1.0, -1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1996");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        double[] doubleArray9 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray6, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray9);
        org.apache.commons.math.complex.Complex[] complexArray11 = fastFourierTransformer1.inversetransform(doubleArray9);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.transform2(complexArray11);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer21 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        org.apache.commons.math.complex.Complex[] complexArray28 = fastFourierTransformer21.transform2(doubleArray26);
        org.apache.commons.math.complex.Complex[] complexArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray28, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray28);
        org.apache.commons.math.complex.Complex[] complexArray33 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray28, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray34 = fastFourierTransformer13.transform2(complexArray33);
        double[] doubleArray39 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray39);
        double[] doubleArray42 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray39, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer13.transform(doubleArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer44 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer45 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray50 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray50);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer45.transform2(doubleArray50);
        org.apache.commons.math.complex.Complex[] complexArray54 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray52, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray52);
        org.apache.commons.math.complex.Complex[] complexArray56 = fastFourierTransformer44.inversetransform(complexArray52);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer57 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray62 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray62);
        org.apache.commons.math.complex.Complex[] complexArray64 = fastFourierTransformer57.transform2(doubleArray62);
        org.apache.commons.math.complex.Complex[] complexArray65 = fastFourierTransformer44.transform(complexArray64);
        org.apache.commons.math.complex.Complex[] complexArray66 = fastFourierTransformer13.transform2(complexArray65);
        org.apache.commons.math.complex.Complex[] complexArray67 = fastFourierTransformer0.inversetransform(complexArray66);
        double[] doubleArray72 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray72);
        double[] doubleArray75 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray72, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray75);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray75);
        double[] doubleArray79 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray75, (double) (byte) 10);
        org.apache.commons.math.complex.Complex[] complexArray80 = fastFourierTransformer0.inversetransform(doubleArray75);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction81 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray85 = fastFourierTransformer0.transform2(univariateRealFunction81, (double) (byte) 1, (double) 'a', (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray11);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(complexArray54);
        org.junit.Assert.assertNotNull(complexArray56);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray64);
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(complexArray66);
        org.junit.Assert.assertNotNull(complexArray67);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray80);
    }

    @Test
    public void test1997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1997");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform2(doubleArray29);
        double[] doubleArray35 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray35);
        double[] doubleArray38 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray35, (double) 10.0f);
        double[] doubleArray40 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray38, (double) 10L);
        double[] doubleArray42 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray38, (double) (byte) 100);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer0.transform(doubleArray38);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer44 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer45 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray50 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray50);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer45.transform2(doubleArray50);
        org.apache.commons.math.complex.Complex[] complexArray54 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray52, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray52);
        org.apache.commons.math.complex.Complex[] complexArray56 = fastFourierTransformer44.inversetransform(complexArray52);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer57 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray62 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray62);
        org.apache.commons.math.complex.Complex[] complexArray64 = fastFourierTransformer57.transform2(doubleArray62);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer65 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray70 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray70);
        org.apache.commons.math.complex.Complex[] complexArray72 = fastFourierTransformer65.transform2(doubleArray70);
        org.apache.commons.math.complex.Complex[] complexArray74 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray72, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray72);
        org.apache.commons.math.complex.Complex[] complexArray77 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray72, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray78 = fastFourierTransformer57.transform2(complexArray77);
        double[] doubleArray83 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray83);
        double[] doubleArray86 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray83, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray87 = fastFourierTransformer57.transform(doubleArray83);
        org.apache.commons.math.complex.Complex[] complexArray88 = fastFourierTransformer44.transform(doubleArray83);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray83);
        org.apache.commons.math.complex.Complex[] complexArray90 = fastFourierTransformer0.transform2(doubleArray83);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction91 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray95 = fastFourierTransformer0.transform2(univariateRealFunction91, (double) (short) 0, 0.0d, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [0.0, 0.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(complexArray54);
        org.junit.Assert.assertNotNull(complexArray56);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray64);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray72);
        org.junit.Assert.assertNotNull(complexArray74);
        org.junit.Assert.assertNotNull(complexArray77);
        org.junit.Assert.assertNotNull(complexArray78);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray87);
        org.junit.Assert.assertNotNull(complexArray88);
        org.junit.Assert.assertNotNull(complexArray90);
    }

    @Test
    public void test1998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1998");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer22.transform(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer0.transform(doubleArray30);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray33);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray33);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray33);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray33);
    }

    @Test
    public void test1999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1999");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.transform(doubleArray8);
        double[] doubleArray15 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray15);
        double[] doubleArray18 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray15, (double) 10.0f);
        double[] doubleArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(doubleArray15);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray21);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray21);
    }

    @Test
    public void test2000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test2000");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, 10.0d, (double) 1.0f, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [10.0, 1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }
}

