import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest5 {

    public static boolean debug = false;

    @Test
    public void test2501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2501");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.appendSeparator('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder12.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteAll("true\n10100.0 \n");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.appendSeparator("aaaaaaaaaaaaaaaaa", 55);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
    }

    @Test
    public void test2502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2502");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln("");
        java.lang.String str8 = strBuilder7.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((long) (byte) 10);
        java.lang.String str18 = strBuilder14.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendNewLine();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln("");
        java.lang.String str35 = strBuilder31.rightString((int) '4');
        java.lang.Object[] objArray36 = new java.lang.Object[] { strBuilder23, wildcardClass28, 10.0d, (-1.0d), str35 };
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder14.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder7.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder0.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder39.replace(0, (int) (short) 10, "");
        java.lang.String str44 = strBuilder39.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder39.appendNull();
        java.lang.String str46 = strBuilder39.getNullText();
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "true\n10" + "'", str18, "true\n10");
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\n" + "'", str35, "\n");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNull(str46);
    }

    @Test
    public void test2503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2503");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln("");
        java.lang.String str25 = strBuilder21.rightString((int) '4');
        boolean boolean26 = strBuilder20.equals((java.lang.Object) str25);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder20.deleteAll(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.appendln(false);
        char[] charArray31 = strBuilder30.toCharArray();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\n" + "'", str25, "\n");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "\ntrue\n\n100.04-1.0 false\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "\ntrue\n\n100.04-1.0 false\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[\n, t, r, u, e, \n, \n, 1, 0, 0, ., 0, 4, -, 1, ., 0,  , f, a, l, s, e, \n]");
    }

    @Test
    public void test2504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2504");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.lang.StringBuffer stringBuffer6 = strBuilder0.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.setNullText("ass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        java.lang.StringBuffer stringBuffer13 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.appendln(stringBuffer13, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader19 = strBuilder18.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.replaceFirst(strMatcher25, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader29 = strBuilder28.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder28.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.appendNewLine();
        boolean boolean36 = strBuilder22.equalsIgnoreCase(strBuilder32);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder17.append((java.lang.Object) strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader39 = strBuilder38.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder38.minimizeCapacity();
        char[] charArray43 = strBuilder38.toCharArray();
        char[] charArray44 = strBuilder22.getChars(charArray43);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder9.append(charArray44);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder0.appendln(charArray44);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.append((-1L));
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(stringBuffer6);
        org.junit.Assert.assertEquals(stringBuffer6.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(reader19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(reader29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(reader39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[ ]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
    }

    @Test
    public void test2505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2505");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder36.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.appendln("ass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.appendln((double) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.setNewLineText("\n\nclass java.lang.Object10.0-1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder48.append("ava.lang.Object.0-1.0\n10.0.0-1.0\n-1.0.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.appendln(2);
        java.lang.StringBuffer stringBuffer55 = strBuilder54.toStringBuffer();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(stringBuffer55);
        org.junit.Assert.assertEquals(stringBuffer55.toString(), "true\n10ass j\n-1.0\nava.lang.Object.0-1.0\n10.0.0-1.0\n-1.0.02\n\nclass java.lang.Object10.0-1.0\n");
    }

    @Test
    public void test2506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2506");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder8.reverse();
        int int10 = strBuilder8.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        int int12 = strBuilder8.indexOf(strMatcher11);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.append((java.lang.CharSequence) strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.appendln(true);
        int int20 = strBuilder13.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder13.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader25 = strBuilder24.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.append((java.lang.CharSequence) strBuilder24);
        java.lang.String str27 = strBuilder26.getNewLineText();
        boolean boolean28 = strBuilder13.equals(strBuilder26);
        java.lang.String str29 = strBuilder26.toString();
        java.lang.StringBuffer stringBuffer30 = strBuilder26.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder8.appendFixedWidthPadLeft((java.lang.Object) strBuilder26, (int) ' ', 't');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder33.minimizeCapacity();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 4 + "'", int20 == 4);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(reader25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(stringBuffer30);
        org.junit.Assert.assertEquals(stringBuffer30.toString(), "");
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
    }

    @Test
    public void test2507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2507");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder2.appendln((java.lang.Object) 1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader8 = strBuilder7.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.append((java.lang.CharSequence) strBuilder7);
        java.lang.StringBuffer stringBuffer10 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.appendln(stringBuffer10, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader16 = strBuilder15.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.replaceFirst(strMatcher22, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader26 = strBuilder25.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.appendNewLine();
        boolean boolean33 = strBuilder19.equalsIgnoreCase(strBuilder29);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder14.append((java.lang.Object) strBuilder19);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader36 = strBuilder35.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder35.minimizeCapacity();
        char[] charArray40 = strBuilder35.toCharArray();
        char[] charArray41 = strBuilder19.getChars(charArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder6.append(charArray41);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder2.insert(4, charArray41);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader48 = strBuilder47.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.append((java.lang.CharSequence) strBuilder47);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.appendln(true);
        java.util.stream.IntStream intStream52 = strBuilder51.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder51.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.appendSeparator('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder58.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.appendSeparator("hi!", "\n\nclass java.lang.Object10.0-1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder62.appendln(strBuilder65, 68, (int) '\n');
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = null;
        int int70 = strBuilder62.lastIndexOf(strMatcher69);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder43.append(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(reader8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(reader26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(reader36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[ ]");
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(reader48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(intStream52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(strBuilder71);
    }

    @Test
    public void test2508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2508");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        boolean boolean11 = strBuilder5.contains('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append((java.lang.CharSequence) strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader21 = strBuilder20.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append((java.lang.CharSequence) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder12.appendFixedWidthPadLeft((java.lang.Object) strBuilder25, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder5.appendFixedWidthPadLeft((java.lang.Object) strBuilder12, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader34 = strBuilder33.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append((java.lang.CharSequence) strBuilder33);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.appendln(true);
        java.lang.StringBuffer stringBuffer38 = strBuilder32.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder5.appendln(stringBuffer38);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.append("\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder41.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.append((double) 19);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(reader34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(stringBuffer38);
        org.junit.Assert.assertEquals(stringBuffer38.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
    }

    @Test
    public void test2509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2509");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.appendNull();
        java.util.stream.IntStream intStream7 = strBuilder3.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.deleteAll('a');
        java.util.stream.IntStream intStream10 = strBuilder3.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder3.append(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln(36);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.appendln((float) 11);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader19 = strBuilder18.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.append((java.lang.CharSequence) strBuilder18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.appendln(true);
        java.util.stream.IntStream intStream23 = strBuilder22.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteFirst(' ');
        java.io.Reader reader29 = strBuilder26.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader32 = strBuilder31.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.append((java.lang.CharSequence) strBuilder31);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder30.appendln(true);
        java.util.stream.IntStream intStream36 = strBuilder35.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder35.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder26.append(strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder12.appendln((java.lang.Object) strBuilder26);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder2.appendln((java.lang.Object) strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder2.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder2.appendln('\000');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(intStream7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(reader19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(intStream23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader29);
        org.junit.Assert.assertNotNull(reader32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(intStream36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
    }

    @Test
    public void test2510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2510");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        int int9 = strBuilder7.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append((java.lang.CharSequence) strBuilder13);
        java.lang.StringBuffer stringBuffer16 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.appendln(stringBuffer16, (int) (short) -1, 5);
        java.util.stream.IntStream intStream20 = strBuilder15.codePoints();
        boolean boolean21 = strBuilder11.equalsIgnoreCase(strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder15.appendln((float) 45);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.appendFixedWidthPadRight(0, (int) (short) -1, '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader30 = strBuilder29.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.append((java.lang.CharSequence) strBuilder29);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.append('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.deleteFirst("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader38 = strBuilder37.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.append((java.lang.CharSequence) strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendln(true);
        int int43 = strBuilder36.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder36.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder45.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder31.appendln((java.lang.Object) strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.append("4true\n10############################### true\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder27.append((java.lang.Object) "4true\n10############################### true\n\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strBuilder50.asTokenizer();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 32 + "'", int9 == 32);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(intStream20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(reader30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(reader38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 4 + "'", int43 == 4);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strTokenizer51);
    }

    @Test
    public void test2511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2511");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendSeparator("ass j", "true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder6.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader10 = strBuilder9.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendNewLine();
        boolean boolean27 = strBuilder13.equalsIgnoreCase(strBuilder23);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder8.append((java.lang.Object) strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder6.append((java.lang.CharSequence) strBuilder8);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder8.deleteAll("0.0\n");
        boolean boolean32 = strBuilder31.isEmpty();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(reader10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test2512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2512");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder2.setCharAt((int) (byte) 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        boolean boolean25 = strBuilder2.contains(strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder2.appendSeparator('t');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strBuilder27);
    }

    @Test
    public void test2513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2513");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        java.lang.String str14 = strBuilder13.getNewLineText();
        boolean boolean15 = strBuilder0.equals(strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.replaceAll("444444444", "4");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder13.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader22 = strBuilder21.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.append((java.lang.CharSequence) strBuilder21);
        java.io.Writer writer24 = strBuilder21.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder21.appendSeparator("hi!", "\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.appendSeparator("true\n10############################### true\n\n", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader33 = strBuilder32.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.append((java.lang.CharSequence) strBuilder32);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.appendln(true);
        int int38 = strBuilder31.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder31.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader43 = strBuilder42.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append((java.lang.CharSequence) strBuilder42);
        java.lang.String str45 = strBuilder44.getNewLineText();
        boolean boolean46 = strBuilder31.equals(strBuilder44);
        java.lang.String str47 = strBuilder44.toString();
        boolean boolean48 = strBuilder27.equals((java.lang.Object) str47);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader51 = strBuilder50.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.append((java.lang.CharSequence) strBuilder50);
        java.lang.StringBuffer stringBuffer53 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder52.appendln(stringBuffer53, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer57 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder52.appendln(stringBuffer57);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder52.appendSeparator("hi!", (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.appendln("");
        java.lang.String str65 = strBuilder64.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader68 = strBuilder67.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.append((java.lang.CharSequence) strBuilder67);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder66.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder71.append((long) (byte) 10);
        java.lang.String str75 = strBuilder71.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader77 = strBuilder76.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder76.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder76.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder80.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder80.appendNewLine();
        java.lang.Object obj84 = new java.lang.Object();
        java.lang.Class<?> wildcardClass85 = obj84.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder88.appendln("");
        java.lang.String str92 = strBuilder88.rightString((int) '4');
        java.lang.Object[] objArray93 = new java.lang.Object[] { strBuilder80, wildcardClass85, 10.0d, (-1.0d), str92 };
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder71.appendAll(objArray93);
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder64.appendAll(objArray93);
        org.apache.commons.lang3.text.StrBuilder strBuilder97 = strBuilder61.appendWithSeparators(objArray93, "\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder98 = strBuilder27.appendAll(objArray93);
        org.apache.commons.lang3.text.StrBuilder strBuilder99 = strBuilder19.appendAll(objArray93);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(reader22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(writer24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(reader33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 4 + "'", int38 == 4);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(reader43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(reader51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(reader68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "true\n10" + "'", str75, "true\n10");
        org.junit.Assert.assertNotNull(reader77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "\n" + "'", str92, "\n");
        org.junit.Assert.assertNotNull(objArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray93), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray93), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertNotNull(strBuilder97);
        org.junit.Assert.assertNotNull(strBuilder98);
        org.junit.Assert.assertNotNull(strBuilder99);
    }

    @Test
    public void test2514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2514");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder2.appendln((java.lang.Object) 1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader8 = strBuilder7.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.append((java.lang.CharSequence) strBuilder7);
        java.lang.StringBuffer stringBuffer10 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.appendln(stringBuffer10, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader16 = strBuilder15.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.replaceFirst(strMatcher22, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader26 = strBuilder25.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.appendNewLine();
        boolean boolean33 = strBuilder19.equalsIgnoreCase(strBuilder29);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder14.append((java.lang.Object) strBuilder19);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader36 = strBuilder35.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder35.minimizeCapacity();
        char[] charArray40 = strBuilder35.toCharArray();
        char[] charArray41 = strBuilder19.getChars(charArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder6.append(charArray41);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder2.insert(4, charArray41);
        java.io.Writer writer44 = strBuilder2.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder2.appendln("tr");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder2.append((float) 257);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(reader8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(reader26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(reader36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[ ]");
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(writer44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
    }

    @Test
    public void test2515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2515");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.appendFixedWidthPadRight((int) '4', (int) (short) 100, '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceAll(strMatcher11, "true\n100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.append((float) 16);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
    }

    @Test
    public void test2516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2516");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.deleteFirst(strMatcher8);
        boolean boolean11 = strBuilder9.startsWith("\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strBuilder9.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.append((long) 50);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.appendln('3');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder9.insert(210, false);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 210");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
    }

    @Test
    public void test2517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2517");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.deleteAll('3');
        int int12 = strBuilder0.lastIndexOf("");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test2518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2518");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.appendln(true);
        java.util.stream.IntStream intStream27 = strBuilder26.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder2.append(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder2.setCharAt((int) (short) 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst("false", "e\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.insert(0, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader43 = strBuilder42.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append((java.lang.CharSequence) strBuilder42);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder40.append((java.lang.CharSequence) strBuilder41);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader50 = strBuilder49.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.append((java.lang.CharSequence) strBuilder49);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder48.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.append((long) (byte) 10);
        java.lang.String str57 = strBuilder53.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder53.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder53.replace(0, 10, "true\n10############################### true\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.appendPadding(3, '#');
        boolean boolean67 = strBuilder40.equals((java.lang.Object) strBuilder66);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader70 = strBuilder69.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.append((java.lang.CharSequence) strBuilder69);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder68.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder68.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder68.appendln(strBuilder76);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder40.appendln((java.lang.Object) strBuilder76);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder40.appendln(30);
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder80.replaceFirst(strMatcher81, "\ntrue\n\n");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(intStream27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(reader43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(reader50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "true\n10" + "'", str57, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(reader70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder83);
    }

    @Test
    public void test2519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2519");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        char[] charArray6 = strBuilder5.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader8 = strBuilder7.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder5.append((java.lang.CharSequence) strBuilder13);
        int int16 = strBuilder14.indexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.trim();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[f, a, l, s, e]");
        org.junit.Assert.assertNotNull(reader8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
    }

    @Test
    public void test2520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2520");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln(stringBuffer4, (int) (short) -1, 5);
        java.util.stream.IntStream intStream8 = strBuilder3.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        java.lang.StringBuffer stringBuffer15 = strBuilder9.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendln(stringBuffer15);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader19 = strBuilder18.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.append((java.lang.CharSequence) strBuilder18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.appendln(true);
        java.lang.StringBuffer stringBuffer23 = strBuilder17.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder17.setNullText("ass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder16.appendFixedWidthPadLeft((java.lang.Object) strBuilder25, 68, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder25.replaceFirst("ass j", "444444444");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.insert(50, (-1.0f));
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 50");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(intStream8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(stringBuffer15);
        org.junit.Assert.assertEquals(stringBuffer15.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(reader19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(stringBuffer23);
        org.junit.Assert.assertEquals(stringBuffer23.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
    }

    @Test
    public void test2521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2521");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.deleteAll(strMatcher9);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = strBuilder10.substring(20);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
    }

    @Test
    public void test2522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2522");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.appendSeparator("hi!", 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.appendSeparator('a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        int int18 = strBuilder12.lastIndexOf(strMatcher16, (int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.appendFixedWidthPadRight(1, (int) '4', '4');
        int int29 = strBuilder22.indexOf("\n1.0\n", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder22.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader33 = strBuilder32.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.append((java.lang.CharSequence) strBuilder32);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.appendln(true);
        java.util.stream.IntStream intStream37 = strBuilder36.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.appendln("");
        java.lang.String str43 = strBuilder42.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader46 = strBuilder45.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.append((java.lang.CharSequence) strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder44.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.append((long) (byte) 10);
        java.lang.String str53 = strBuilder49.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader55 = strBuilder54.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder54.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.appendNewLine();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.appendln("");
        java.lang.String str70 = strBuilder66.rightString((int) '4');
        java.lang.Object[] objArray71 = new java.lang.Object[] { strBuilder58, wildcardClass63, 10.0d, (-1.0d), str70 };
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder49.appendAll(objArray71);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder42.appendAll(objArray71);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder39.appendAll(objArray71);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.appendSeparator("ass j", (int) (byte) 10);
        java.lang.StringBuffer stringBuffer78 = strBuilder74.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder22.appendln(stringBuffer78);
        boolean boolean80 = strBuilder12.equals((java.lang.Object) strBuilder79);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder79.appendln(true);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(reader33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(intStream37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(reader46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "true\n10" + "'", str53, "true\n10");
        org.junit.Assert.assertNotNull(reader55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "\n" + "'", str70, "\n");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(stringBuffer78);
        org.junit.Assert.assertEquals(stringBuffer78.toString(), "true\nclass java.lang.Object10.0-1.0\nass j");
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strBuilder82);
    }

    @Test
    public void test2523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2523");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln(stringBuffer4, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.appendln(stringBuffer8);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder3.appendSeparator("hi!", (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strBuilder12.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder12.append((java.lang.Object) strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader29 = strBuilder28.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.append((java.lang.CharSequence) strBuilder28);
        java.lang.StringBuffer stringBuffer31 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln(stringBuffer31, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer35 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder30.appendln(stringBuffer35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder30.appendSeparator("hi!", (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strBuilder39.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader43 = strBuilder42.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append((java.lang.CharSequence) strBuilder42);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.append((long) (byte) 10);
        java.lang.String str50 = strBuilder46.rightString(10);
        boolean boolean52 = strBuilder46.contains('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader55 = strBuilder54.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.append((java.lang.CharSequence) strBuilder54);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder53.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader62 = strBuilder61.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.append((java.lang.CharSequence) strBuilder61);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder60.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder53.appendFixedWidthPadLeft((java.lang.Object) strBuilder66, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder46.appendFixedWidthPadLeft((java.lang.Object) strBuilder53, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader75 = strBuilder74.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder73.append((java.lang.CharSequence) strBuilder74);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder73.appendln(true);
        java.lang.StringBuffer stringBuffer79 = strBuilder73.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder46.appendln(stringBuffer79);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder80.replaceFirst("true\n10############################### true\n\n", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder83.append(45);
        java.lang.String str86 = strBuilder83.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader89 = strBuilder88.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder87.append((java.lang.CharSequence) strBuilder88);
        java.lang.StringBuffer stringBuffer91 = strBuilder88.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder83.appendln(stringBuffer91);
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder39.appendln(stringBuffer91);
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder24.append((java.lang.CharSequence) strBuilder39);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(reader29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(reader43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "true\n10" + "'", str50, "true\n10");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(reader55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(reader62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(reader75);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(stringBuffer79);
        org.junit.Assert.assertEquals(stringBuffer79.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNull(str86);
        org.junit.Assert.assertNotNull(reader89);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(stringBuffer91);
        org.junit.Assert.assertEquals(stringBuffer91.toString(), "");
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strBuilder94);
    }

    @Test
    public void test2524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2524");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.appendPadding(10, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.appendPadding(5, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder6.setNewLineText("true\n100.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append((java.lang.CharSequence) strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.appendSeparator("ass j", "true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.trim();
        char[] charArray20 = strBuilder19.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        java.lang.StringBuffer stringBuffer25 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.appendln(stringBuffer25, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer29 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder24.appendln(stringBuffer29);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder24.append((float) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder19.append(strBuilder32);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder19.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader37 = strBuilder36.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.replaceFirst(strMatcher43, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader47 = strBuilder46.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.appendNewLine();
        boolean boolean54 = strBuilder40.equalsIgnoreCase(strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder35.append((java.lang.Object) strBuilder40);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder35.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.appendSeparator("\n1.0\n", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader63 = strBuilder62.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.append((java.lang.CharSequence) strBuilder62);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder61.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.append((long) (byte) 10);
        java.lang.String str70 = strBuilder66.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder66.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader75 = strBuilder74.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder73.append((java.lang.CharSequence) strBuilder74);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder73.appendln(true);
        int int80 = strBuilder73.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder73.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader85 = strBuilder84.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder83.append((java.lang.CharSequence) strBuilder84);
        java.lang.String str87 = strBuilder86.getNewLineText();
        boolean boolean88 = strBuilder73.equals(strBuilder86);
        java.lang.String str89 = strBuilder86.toString();
        java.lang.StringBuffer stringBuffer90 = strBuilder86.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder66.appendln(stringBuffer90);
        boolean boolean92 = strBuilder57.equalsIgnoreCase(strBuilder91);
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder34.appendFixedWidthPadLeft((java.lang.Object) strBuilder57, 3, 'g');
        org.apache.commons.lang3.text.StrBuilder strBuilder98 = strBuilder6.appendFixedWidthPadLeft((java.lang.Object) strBuilder95, 20, '4');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "true\n10");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "true\n10");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[t, r, u, e, \n, 1, 0]");
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(reader37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(reader47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(reader63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "true\n10" + "'", str70, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(reader75);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 4 + "'", int80 == 4);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(reader85);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "" + "'", str89, "");
        org.junit.Assert.assertNotNull(stringBuffer90);
        org.junit.Assert.assertEquals(stringBuffer90.toString(), "");
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertNotNull(strBuilder98);
    }

    @Test
    public void test2525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2525");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader10 = strBuilder9.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendNewLine();
        boolean boolean27 = strBuilder13.equalsIgnoreCase(strBuilder23);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder8.append((java.lang.Object) strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader30 = strBuilder29.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.minimizeCapacity();
        char[] charArray34 = strBuilder29.toCharArray();
        char[] charArray35 = strBuilder13.getChars(charArray34);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.append(charArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.appendln("");
        java.lang.String str40 = strBuilder39.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader43 = strBuilder42.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append((java.lang.CharSequence) strBuilder42);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.append((long) (byte) 10);
        java.lang.String str50 = strBuilder46.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader52 = strBuilder51.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder51.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.appendNewLine();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.appendln("");
        java.lang.String str67 = strBuilder63.rightString((int) '4');
        java.lang.Object[] objArray68 = new java.lang.Object[] { strBuilder55, wildcardClass60, 10.0d, (-1.0d), str67 };
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder46.appendAll(objArray68);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder39.appendAll(objArray68);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder0.appendAll(objArray68);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder71.deleteAll('e');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(reader10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[ ]");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(reader43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "true\n10" + "'", str50, "true\n10");
        org.junit.Assert.assertNotNull(reader52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "\n" + "'", str67, "\n");
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
    }

    @Test
    public void test2526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2526");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        java.lang.StringBuffer stringBuffer43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append(stringBuffer43, (int) (short) 10, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder46.appendFixedWidthPadRight((java.lang.Object) strBuilder47, 32, '#');
        java.io.Writer writer54 = strBuilder46.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder46.insert(52, 3);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader59 = strBuilder58.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder58.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader67 = strBuilder66.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.append((java.lang.CharSequence) strBuilder66);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder65.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder70.append((long) (byte) 10);
        java.lang.String str74 = strBuilder70.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder70.deleteAll("");
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = null;
        int int78 = strBuilder70.lastIndexOf(strMatcher77);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder62.appendln(strBuilder70);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder57.appendFixedWidthPadRight((java.lang.Object) strBuilder62, 1, '#');
        java.lang.String str84 = strBuilder82.substring(6);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(writer54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(reader59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(reader67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "true\n10" + "'", str74, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "0\nclass java.lang.Object10.0-1.0\ntrue\n10\n#####3##########################t" + "'", str84, "0\nclass java.lang.Object10.0-1.0\ntrue\n10\n#####3##########################t");
    }

    @Test
    public void test2527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2527");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.appendFixedWidthPadRight((int) '4', (int) (short) 100, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append((java.lang.CharSequence) strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln(true);
        int int18 = strBuilder11.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder11.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        java.lang.String str25 = strBuilder24.getNewLineText();
        boolean boolean26 = strBuilder11.equals(strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder10.append(strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder10.appendln(false);
        int int30 = strBuilder29.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((long) 36);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst("\nfalse\n", "\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.append(78);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder37.append("lse41\na\n", 10, (int) '\n');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 4 + "'", int18 == 4);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 210 + "'", int30 == 210);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
    }

    @Test
    public void test2528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2528");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.deleteFirst(strMatcher8);
        boolean boolean11 = strBuilder9.startsWith("\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strBuilder9.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.append((long) 50);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader17 = strBuilder16.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append((java.lang.CharSequence) strBuilder16);
        java.lang.StringBuffer stringBuffer19 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder15.appendln(stringBuffer19, (int) (byte) -1, 10);
        int int25 = strBuilder22.indexOf("\n", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder22.replaceAll(' ', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        java.lang.String str38 = strBuilder34.rightString(10);
        boolean boolean40 = strBuilder34.contains('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader43 = strBuilder42.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append((java.lang.CharSequence) strBuilder42);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder41.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader50 = strBuilder49.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.append((java.lang.CharSequence) strBuilder49);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder48.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder41.appendFixedWidthPadLeft((java.lang.Object) strBuilder54, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder34.appendFixedWidthPadLeft((java.lang.Object) strBuilder41, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader63 = strBuilder62.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.append((java.lang.CharSequence) strBuilder62);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder61.appendln(true);
        java.lang.StringBuffer stringBuffer67 = strBuilder61.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder34.appendln(stringBuffer67);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder22.append(stringBuffer67);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder14.appendln((java.lang.Object) strBuilder69);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder14.appendln(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder14.appendln('3');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "true\n10" + "'", str38, "true\n10");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(reader43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(reader50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(reader63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(stringBuffer67);
        org.junit.Assert.assertEquals(stringBuffer67.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
    }

    @Test
    public void test2529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2529");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.deleteFirst(strMatcher8);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder0.deleteFirst("");
        java.lang.String str12 = strBuilder0.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder0.append((float) 36);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader17 = strBuilder16.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append((java.lang.CharSequence) strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.append((long) (byte) 10);
        java.lang.String str24 = strBuilder20.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder20.minimizeCapacity();
        int int29 = strBuilder27.indexOf("true\n10100.0 \n");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader33 = strBuilder32.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.append((java.lang.CharSequence) strBuilder32);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.append((long) (byte) 10);
        java.lang.String str40 = strBuilder36.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder41.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.appendNewLine();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.appendln("");
        java.lang.String str57 = strBuilder53.rightString((int) '4');
        java.lang.Object[] objArray58 = new java.lang.Object[] { strBuilder45, wildcardClass50, 10.0d, (-1.0d), str57 };
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder36.appendAll(objArray58);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder30.appendAll(objArray58);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder14.appendWithSeparators(objArray58, "");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\n" + "'", str12, "\n");
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "true\n10" + "'", str24, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(reader33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "true\n10" + "'", str40, "true\n10");
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "\n" + "'", str57, "\n");
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
    }

    @Test
    public void test2530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2530");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        java.lang.StringBuffer stringBuffer8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendln(stringBuffer8, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer12 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.appendln(stringBuffer12);
        boolean boolean14 = strBuilder3.equals((java.lang.Object) strBuilder7);
        java.lang.String str15 = strBuilder3.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader18 = strBuilder17.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.append((java.lang.CharSequence) strBuilder17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.append((long) (byte) 10);
        java.lang.String str25 = strBuilder21.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader27 = strBuilder26.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.appendNewLine();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.appendln("");
        java.lang.String str42 = strBuilder38.rightString((int) '4');
        java.lang.Object[] objArray43 = new java.lang.Object[] { strBuilder30, wildcardClass35, 10.0d, (-1.0d), str42 };
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder21.appendAll(objArray43);
        java.lang.String str45 = strBuilder21.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader48 = strBuilder47.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.append((java.lang.CharSequence) strBuilder47);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.appendln(true);
        int int53 = strBuilder46.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder46.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.appendSeparator("\n", 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder55.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.appendln("");
        java.lang.String str65 = strBuilder61.rightString((int) '4');
        java.lang.String str67 = strBuilder61.leftString((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder61.appendln("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.append((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder69.append(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder55.appendln(strBuilder73);
        java.lang.CharSequence charSequence77 = strBuilder74.subSequence(0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder21.appendln(strBuilder74);
        java.lang.Class<?> wildcardClass79 = strBuilder74.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder3.append((java.lang.Object) strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\n" + "'", str15, "\n");
        org.junit.Assert.assertNotNull(reader18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "true\n10" + "'", str25, "true\n10");
        org.junit.Assert.assertNotNull(reader27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "\n" + "'", str42, "\n");
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(reader48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 4 + "'", int53 == 4);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "\n" + "'", str65, "\n");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "\n" + "'", str67, "\n");
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertEquals("'" + charSequence77 + "' != '" + "" + "'", charSequence77, "");
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(strBuilder80);
    }

    @Test
    public void test2531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2531");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.appendNewLine();
        java.io.Writer writer8 = strBuilder4.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.append(0);
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(writer8);
        org.junit.Assert.assertNotNull(strBuilder10);
    }

    @Test
    public void test2532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2532");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendSeparator("ass j", "true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln("");
        java.lang.String str10 = strBuilder9.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append((java.lang.CharSequence) strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln(true);
        java.util.stream.IntStream intStream17 = strBuilder16.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln("");
        java.lang.String str21 = strBuilder20.getNewLineText();
        java.lang.Object[] objArray26 = new java.lang.Object[] { strBuilder16, strBuilder20, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder9.appendAll(objArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader32 = strBuilder31.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.append((java.lang.CharSequence) strBuilder31);
        java.lang.StringBuffer stringBuffer34 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder30.appendln(stringBuffer34, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder30.deleteFirst(strMatcher38);
        boolean boolean41 = strBuilder39.startsWith("\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strBuilder39.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder27.appendAll((java.util.Iterator<java.lang.String>) strTokenizer42);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder6.append((java.lang.Object) strBuilder43);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder6.deleteFirst("4-1.0 true");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.appendln("\n-1");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(intStream17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(reader32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
    }

    @Test
    public void test2533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2533");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder8.reverse();
        int int10 = strBuilder8.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        int int12 = strBuilder8.indexOf(strMatcher11);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.append((java.lang.CharSequence) strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.appendln(true);
        int int20 = strBuilder13.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder13.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader25 = strBuilder24.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.append((java.lang.CharSequence) strBuilder24);
        java.lang.String str27 = strBuilder26.getNewLineText();
        boolean boolean28 = strBuilder13.equals(strBuilder26);
        java.lang.String str29 = strBuilder26.toString();
        java.lang.StringBuffer stringBuffer30 = strBuilder26.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder8.appendFixedWidthPadLeft((java.lang.Object) strBuilder26, (int) ' ', 't');
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.deleteAll(strMatcher34);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 4 + "'", int20 == 4);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(reader25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(stringBuffer30);
        org.junit.Assert.assertEquals(stringBuffer30.toString(), "");
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
    }

    @Test
    public void test2534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2534");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.appendSeparator("true\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader5 = strBuilder4.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder4.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.appendPadding(32, 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder8.deleteAll(strMatcher12);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader16 = strBuilder15.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append((java.lang.CharSequence) strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((long) (byte) 10);
        java.lang.String str23 = strBuilder19.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader25 = strBuilder24.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.appendNewLine();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.appendln("");
        java.lang.String str40 = strBuilder36.rightString((int) '4');
        java.lang.Object[] objArray41 = new java.lang.Object[] { strBuilder28, wildcardClass33, 10.0d, (-1.0d), str40 };
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder19.appendAll(objArray41);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader45 = strBuilder44.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.append((java.lang.CharSequence) strBuilder44);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder43.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.append((long) (byte) 10);
        int int52 = strBuilder50.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder50.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder42.append((java.lang.CharSequence) strBuilder50);
        java.lang.StringBuffer stringBuffer57 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder56.append(stringBuffer57, (int) (short) 10, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader62 = strBuilder61.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder56.append(strBuilder64);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder56.clear();
        char[] charArray67 = strBuilder66.toCharArray();
        char[] charArray68 = strBuilder13.getChars(charArray67);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder1.appendln(charArray68);
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder69.replace(strMatcher70, "true\n", 15, 20, (int) 'g');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(reader5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "true\n10" + "'", str23, "true\n10");
        org.junit.Assert.assertNotNull(reader25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "\n" + "'", str40, "\n");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(reader45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(reader62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[]");
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), " aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), " aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[ , a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a]");
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder75);
    }

    @Test
    public void test2535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2535");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.ensureCapacity(100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.io.Writer writer11 = strBuilder10.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.append(strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.append(100.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.append((float) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader19 = strBuilder18.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.append((java.lang.CharSequence) strBuilder18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.appendln(true);
        java.util.stream.IntStream intStream23 = strBuilder22.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.appendln((float) 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder22.appendln((-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.insert(13, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder16.append(strBuilder32);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder16.append(12);
        char[] charArray36 = strBuilder16.toCharArray();
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(reader19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(intStream23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "true\n10100.032.0true5.0\n-1.0\na12");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "true\n10100.032.0true5.0\n-1.0\na12");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[t, r, u, e, \n, 1, 0, 1, 0, 0, ., 0, 3, 2, ., 0, t, r, u, e, 5, ., 0, \n, -, 1, ., 0, \n, a, 1, 2]");
    }

    @Test
    public void test2536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2536");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.appendNull();
        java.util.stream.IntStream intStream4 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.deleteAll('a');
        java.util.stream.IntStream intStream7 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.append(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendln(36);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.append((float) 214);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder9.ensureCapacity(26);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(intStream4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(intStream7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
    }

    @Test
    public void test2537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2537");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        java.lang.String str14 = strBuilder13.getNewLineText();
        boolean boolean15 = strBuilder0.equals(strBuilder13);
        java.lang.String str16 = strBuilder13.toString();
        java.lang.StringBuffer stringBuffer17 = strBuilder13.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader25 = strBuilder24.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.append((java.lang.CharSequence) strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.append(false);
        char[] charArray29 = strBuilder28.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder21.insert(0, charArray29);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder13.insert((int) (byte) 0, charArray29);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder13.insert((int) ' ', false);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 32");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(stringBuffer17);
        org.junit.Assert.assertEquals(stringBuffer17.toString(), "");
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(reader25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[f, a, l, s, e]");
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
    }

    @Test
    public void test2538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2538");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        int int9 = strBuilder7.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.appendSeparator("", 5);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteCharAt((int) 'g');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 103");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
    }

    @Test
    public void test2539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2539");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        java.util.Iterator<java.lang.String> strItor4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendAll(strItor4);
        char[] charArray6 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.append(charArray6, 13, (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.append((java.lang.CharSequence) strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder13.appendSeparator("ass j", "true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.trim();
        char[] charArray21 = strBuilder20.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder9.insert(0, charArray21);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader25 = strBuilder24.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.append((java.lang.CharSequence) strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.appendln(true);
        int int30 = strBuilder23.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder23.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader35 = strBuilder34.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.append((java.lang.CharSequence) strBuilder34);
        java.lang.String str37 = strBuilder36.getNewLineText();
        boolean boolean38 = strBuilder23.equals(strBuilder36);
        java.lang.String str39 = strBuilder36.toString();
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        int int42 = strBuilder36.indexOf(strMatcher40, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.appendln("");
        java.lang.String str47 = strBuilder43.rightString((int) '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strBuilder43.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder36.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer48, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder9.appendFixedWidthPadRight((java.lang.Object) strBuilder36, 0, '\n');
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = null;
        boolean boolean55 = strBuilder36.contains(strMatcher54);
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "true\n10");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "true\n10");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[t, r, u, e, \n, 1, 0]");
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(reader25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 4 + "'", int30 == 4);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(reader35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "\n" + "'", str47, "\n");
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test2540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2540");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendSeparator("true\n10", (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.appendSeparator("true\n10100.0 \n", "\n1097########");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.appendSeparator("rue\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.appendln(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.appendNull();
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
    }

    @Test
    public void test2541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2541");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((long) (byte) 10);
        java.lang.String str13 = strBuilder9.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendNewLine();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln("");
        java.lang.String str30 = strBuilder26.rightString((int) '4');
        java.lang.Object[] objArray31 = new java.lang.Object[] { strBuilder18, wildcardClass23, 10.0d, (-1.0d), str30 };
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder9.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder2.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln("true\n10");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder33.replace(strMatcher36, "", (int) (byte) 1, (int) ' ', 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader44 = strBuilder43.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.append((java.lang.CharSequence) strBuilder43);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.append((long) (byte) 10);
        java.lang.String str51 = strBuilder47.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder47.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader56 = strBuilder55.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.append((java.lang.CharSequence) strBuilder55);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder54.appendln(true);
        int int61 = strBuilder54.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder54.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader66 = strBuilder65.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.append((java.lang.CharSequence) strBuilder65);
        java.lang.String str68 = strBuilder67.getNewLineText();
        boolean boolean69 = strBuilder54.equals(strBuilder67);
        java.lang.String str70 = strBuilder67.toString();
        java.lang.StringBuffer stringBuffer71 = strBuilder67.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder47.appendln(stringBuffer71);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder33.append(stringBuffer71);
        java.lang.StringBuffer stringBuffer74 = strBuilder73.toStringBuffer();
        int int75 = strBuilder73.capacity();
        int int77 = strBuilder73.indexOf('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder73.replaceAll(strMatcher78, "lang.Object10.0-1.0\ntaue\n10\n###############################");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "true\n10" + "'", str13, "true\n10");
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\n" + "'", str30, "\n");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(reader44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "true\n10" + "'", str51, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(reader56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 4 + "'", int61 == 4);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(reader66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertNotNull(stringBuffer71);
        org.junit.Assert.assertEquals(stringBuffer71.toString(), "");
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(stringBuffer74);
        org.junit.Assert.assertEquals(stringBuffer74.toString(), "\n\nclass java.lang.Object10.0-1.0\ntrue\n10\n");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 66 + "'", int75 == 66);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNotNull(strBuilder80);
    }

    @Test
    public void test2542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2542");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        java.lang.StringBuffer stringBuffer43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append(stringBuffer43, (int) (short) 10, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder46.appendFixedWidthPadRight((java.lang.Object) strBuilder47, 32, '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = null;
        boolean boolean55 = strBuilder46.contains(strMatcher54);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder46.deleteCharAt(15);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strBuilder57);
    }

    @Test
    public void test2543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2543");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.appendln(true);
        java.util.stream.IntStream intStream27 = strBuilder26.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder2.append(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder2.setCharAt((int) (short) 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst("false", "e\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.insert(0, '#');
        int int42 = strBuilder40.lastIndexOf('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.appendSeparator('a', 8);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(intStream27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 13 + "'", int42 == 13);
        org.junit.Assert.assertNotNull(strBuilder45);
    }

    @Test
    public void test2544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2544");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.clear();
        java.lang.String str30 = strBuilder28.getNullText();
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        int int33 = strBuilder28.lastIndexOf(strMatcher31, 6);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader36 = strBuilder35.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.append((java.lang.CharSequence) strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder34.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.append((long) (byte) 10);
        java.lang.String str43 = strBuilder39.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader45 = strBuilder44.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder44.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.appendNewLine();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.appendln("");
        java.lang.String str60 = strBuilder56.rightString((int) '4');
        java.lang.Object[] objArray61 = new java.lang.Object[] { strBuilder48, wildcardClass53, 10.0d, (-1.0d), str60 };
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder39.appendAll(objArray61);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder62.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder62.appendPadding((int) (byte) 1, '#');
        char[] charArray69 = strBuilder62.toCharArray(0, 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder28.appendln(charArray69);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(reader36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "true\n10" + "'", str43, "true\n10");
        org.junit.Assert.assertNotNull(reader45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "\n" + "'", str60, "\n");
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[#]");
        org.junit.Assert.assertNotNull(strBuilder70);
    }

    @Test
    public void test2545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2545");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.appendln("", (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader29 = strBuilder28.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.append((java.lang.CharSequence) strBuilder28);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder27.appendln(true);
        int int34 = strBuilder27.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder27.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader39 = strBuilder38.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.append((java.lang.CharSequence) strBuilder38);
        java.lang.String str41 = strBuilder40.getNewLineText();
        boolean boolean42 = strBuilder27.equals(strBuilder40);
        java.lang.String str43 = strBuilder40.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder26.appendln((java.lang.Object) strBuilder40);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder40.append((float) 106);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(reader29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 4 + "'", int34 == 4);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(reader39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
    }

    @Test
    public void test2546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2546");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        java.lang.StringBuffer stringBuffer43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append(stringBuffer43, (int) (short) 10, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder46.appendFixedWidthPadRight((java.lang.Object) strBuilder47, 32, '#');
        int int56 = strBuilder46.indexOf(' ', 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder46.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.appendln((double) 7);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder57.appendln("e\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceFirst('r', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.appendSeparator('#', 'r');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 13 + "'", int56 == 13);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder67);
    }

    @Test
    public void test2547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2547");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        int int6 = strBuilder5.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.insert((int) (short) 0, "\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        boolean boolean11 = strBuilder9.contains(strMatcher10);
        int int14 = strBuilder9.indexOf("true\n0.01\n", (int) 'e');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 5 + "'", int6 == 5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test2548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2548");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        int int9 = strBuilder7.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.appendFixedWidthPadLeft((int) ' ', (int) (short) 100, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder7.replaceFirst(' ', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst(strMatcher17, "4-1.0 true");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader22 = strBuilder21.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.append((java.lang.CharSequence) strBuilder21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder20.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.append((long) (byte) 10);
        java.lang.String str29 = strBuilder25.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.appendNewLine();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln("");
        java.lang.String str46 = strBuilder42.rightString((int) '4');
        java.lang.Object[] objArray47 = new java.lang.Object[] { strBuilder34, wildcardClass39, 10.0d, (-1.0d), str46 };
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder25.appendAll(objArray47);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder48.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.appendln(true);
        java.lang.String str52 = strBuilder51.toString();
        boolean boolean53 = strBuilder19.equalsIgnoreCase(strBuilder51);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(reader22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "true\n10" + "'", str29, "true\n10");
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "\n" + "'", str46, "\n");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "true\n10\nclass java.lang.Object10.0-1.0true\n" + "'", str52, "true\n10\nclass java.lang.Object10.0-1.0true\n");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test2549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2549");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str4 = strBuilder0.rightString((int) '4');
        java.util.stream.IntStream intStream5 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.appendln("");
        java.lang.String str9 = strBuilder8.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendln(true);
        java.util.stream.IntStream intStream16 = strBuilder15.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.appendln("");
        java.lang.String str20 = strBuilder19.getNewLineText();
        java.lang.Object[] objArray25 = new java.lang.Object[] { strBuilder15, strBuilder19, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder8.appendAll(objArray25);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder26.appendln("", (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.replaceFirst("\n1.0\n", "false");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.appendPadding((-1), 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder0.append((java.lang.CharSequence) strBuilder38);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder39.minimizeCapacity();
        int int42 = strBuilder39.indexOf('\000');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\n" + "'", str4, "\n");
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(intStream16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
    }

    @Test
    public void test2550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2550");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.appendln(true);
        java.util.stream.IntStream intStream27 = strBuilder26.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder2.append(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder2.setCharAt((int) (short) 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder2.append(0);
        int int38 = strBuilder36.lastIndexOf('r');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.append((long) 22);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader44 = strBuilder43.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.append((java.lang.CharSequence) strBuilder43);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder42.appendSeparator("ass j", "true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.append((double) 0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteAll('a');
        char[] charArray53 = strBuilder50.toCharArray();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder36.insert(66, charArray53);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 66");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(intStream27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 19 + "'", int38 == 19);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(reader44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "true\n100.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "true\n100.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[t, r, u, e, \n, 1, 0, 0, ., 0]");
    }

    @Test
    public void test2551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2551");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        int int9 = strBuilder7.lastIndexOf('#');
        int int12 = strBuilder7.lastIndexOf('a', (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder7.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader16 = strBuilder15.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.minimizeCapacity();
        char[] charArray20 = strBuilder15.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.appendln(charArray20);
        java.lang.String str23 = strBuilder14.rightString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder14.insert((int) (short) 0, (float) 13);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder14.appendln("true\n10100.0 \n");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "true\n10100.0 \n" + "'", str23, "true\n10100.0 \n");
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
    }

    @Test
    public void test2552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2552");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        char[] charArray6 = strBuilder5.toCharArray();
        boolean boolean8 = strBuilder5.startsWith("ass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.append(false);
        int int15 = strBuilder14.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader18 = strBuilder17.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.append((java.lang.CharSequence) strBuilder17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.append(false);
        char[] charArray22 = strBuilder21.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder14.appendln(charArray22);
        java.lang.Class<?> wildcardClass24 = strBuilder23.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder5.appendFixedWidthPadLeft((java.lang.Object) wildcardClass24, (int) (short) 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln("");
        java.lang.String str37 = strBuilder33.rightString((int) '4');
        java.lang.String str39 = strBuilder33.leftString((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder33.appendln("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.append((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder41.append(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder41.append(0L);
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.deleteAll(strMatcher48);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = null;
        int int52 = strBuilder49.lastIndexOf(strMatcher50, (int) (byte) 0);
        int int53 = strBuilder49.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder49.deleteAll(strMatcher54);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder32.appendFixedWidthPadLeft((java.lang.Object) strBuilder55, 170, 'g');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder55.append('t');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[f, a, l, s, e]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertNotNull(reader18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[f, a, l, s, e]");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "\n" + "'", str37, "\n");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "\n" + "'", str39, "\n");
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 14 + "'", int53 == 14);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
    }

    @Test
    public void test2553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2553");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendNewLine();
        boolean boolean19 = strBuilder5.equalsIgnoreCase(strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder0.append((java.lang.Object) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder0.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strBuilder22.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendln(true);
        java.lang.String str26 = strBuilder22.getNullText();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNull(str26);
    }

    @Test
    public void test2554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2554");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        java.lang.Object obj6 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(obj6);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((long) (byte) 10);
        java.lang.String str18 = strBuilder14.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendNewLine();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln("");
        java.lang.String str35 = strBuilder31.rightString((int) '4');
        java.lang.Object[] objArray36 = new java.lang.Object[] { strBuilder23, wildcardClass28, 10.0d, (-1.0d), str35 };
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder14.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader40 = strBuilder39.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.append((java.lang.CharSequence) strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.append((long) (byte) 10);
        int int47 = strBuilder45.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder37.append((java.lang.CharSequence) strBuilder45);
        java.lang.StringBuffer stringBuffer52 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder51.append(stringBuffer52, (int) (short) 10, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder55.appendFixedWidthPadRight((java.lang.Object) strBuilder56, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder7.append(strBuilder56);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.setLength(7);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.appendPadding(9, '\n');
        int int71 = strBuilder65.indexOf("true\n\n100 04-1.0 true0", 66);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "true\n10" + "'", str18, "true\n10");
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\n" + "'", str35, "\n");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(reader40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
    }

    @Test
    public void test2555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2555");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendNewLine();
        boolean boolean19 = strBuilder5.equalsIgnoreCase(strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder0.append((java.lang.Object) strBuilder5);
        int int21 = strBuilder0.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader24 = strBuilder23.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder27.replaceFirst(strMatcher30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader34 = strBuilder33.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder33.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.appendNewLine();
        boolean boolean41 = strBuilder27.equalsIgnoreCase(strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder22.append((java.lang.Object) strBuilder27);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.appendSeparator('\n', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder0.appendln(strBuilder42);
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder0.deleteAll(strMatcher49);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 32 + "'", int21 == 32);
        org.junit.Assert.assertNotNull(reader24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(reader34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
    }

    @Test
    public void test2556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2556");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln("");
        java.lang.String str8 = strBuilder7.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((long) (byte) 10);
        java.lang.String str18 = strBuilder14.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendNewLine();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln("");
        java.lang.String str35 = strBuilder31.rightString((int) '4');
        java.lang.Object[] objArray36 = new java.lang.Object[] { strBuilder23, wildcardClass28, 10.0d, (-1.0d), str35 };
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder14.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder7.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder0.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.append((java.lang.CharSequence) strBuilder41);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.appendln(true);
        int int47 = strBuilder40.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder40.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder0.appendFixedWidthPadRight((java.lang.Object) strBuilder40, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder40.deleteFirst("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder40.append((double) 100.0f);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder40.deleteAll(strMatcher57);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder40.setNewLineText("false");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader63 = strBuilder62.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.append((java.lang.CharSequence) strBuilder62);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder61.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.append((long) (byte) 10);
        int int70 = strBuilder68.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder68.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.deleteAll("true\n10############################### true\n\n");
        int int77 = strBuilder73.indexOf("true\n10\nclass java.lang.Object10.0-1.0true\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader79 = strBuilder78.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder78.append(' ');
        java.util.Iterator<java.lang.String> strItor82 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder81.appendAll(strItor82);
        char[] charArray84 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder81.append(charArray84, 13, (-1));
        boolean boolean88 = strBuilder73.equalsIgnoreCase(strBuilder87);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder60.appendln((java.lang.Object) strBuilder73);
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "true\n10" + "'", str18, "true\n10");
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\n" + "'", str35, "\n");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(reader63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNotNull(reader79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(strBuilder89);
    }

    @Test
    public void test2557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2557");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        char[] charArray6 = strBuilder5.toCharArray();
        java.lang.String str8 = strBuilder5.leftString((int) ' ');
        int int10 = strBuilder5.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.replaceFirst(strMatcher19, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendNewLine();
        boolean boolean30 = strBuilder16.equalsIgnoreCase(strBuilder26);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder11.append((java.lang.Object) strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder11.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strBuilder33.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.appendln(true);
        java.util.stream.IntStream intStream37 = strBuilder33.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder5.appendFixedWidthPadLeft((java.lang.Object) strBuilder33, 12, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder5.insert((int) (short) 0, (float) (short) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder5.replaceAll(strMatcher44, "4-1.0 true");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder5.deleteFirst(strMatcher47);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[f, a, l, s, e]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "false" + "'", str8, "false");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(intStream37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
    }

    @Test
    public void test2558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2558");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder9.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder9.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln("");
        java.lang.String str21 = strBuilder20.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader24 = strBuilder23.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.append((java.lang.CharSequence) strBuilder23);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.appendln(true);
        java.util.stream.IntStream intStream28 = strBuilder27.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.appendln("");
        java.lang.String str32 = strBuilder31.getNewLineText();
        java.lang.Object[] objArray37 = new java.lang.Object[] { strBuilder27, strBuilder31, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder20.appendAll(objArray37);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader43 = strBuilder42.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append((java.lang.CharSequence) strBuilder42);
        java.lang.StringBuffer stringBuffer45 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder41.appendln(stringBuffer45, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder41.deleteFirst(strMatcher49);
        boolean boolean52 = strBuilder50.startsWith("\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strBuilder50.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder38.appendAll((java.util.Iterator<java.lang.String>) strTokenizer53);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.deleteAll('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strBuilder56.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder9.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer57, "t");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder8.appendAll((java.util.Iterator<java.lang.String>) strTokenizer57);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(reader24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(intStream28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(reader43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
    }

    @Test
    public void test2559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2559");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.deleteAll("");
        java.lang.String str4 = strBuilder3.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader16 = strBuilder15.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.appendNewLine();
        boolean boolean23 = strBuilder9.equalsIgnoreCase(strBuilder19);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.trim();
        java.lang.String str26 = strBuilder19.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder3.appendFixedWidthPadRight((java.lang.Object) strBuilder27, 36, 'g');
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
    }

    @Test
    public void test2560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2560");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        char[] charArray6 = strBuilder5.toCharArray();
        java.lang.String str8 = strBuilder5.leftString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.trim();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[f, a, l, s, e]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "false" + "'", str8, "false");
        org.junit.Assert.assertNotNull(strBuilder9);
    }

    @Test
    public void test2561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2561");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder28.appendPadding((int) (byte) 1, '#');
        java.lang.StringBuffer stringBuffer33 = strBuilder28.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader36 = strBuilder35.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.append((java.lang.CharSequence) strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder34.appendln(true);
        int int41 = strBuilder34.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder34.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder43.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder43.appendSeparator("");
        char[] charArray51 = new char[] { '\n', '\000', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder43.appendln(charArray51);
        java.io.Reader reader53 = strBuilder43.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder28.append((java.lang.CharSequence) strBuilder43, (int) (short) 1, 11);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder43.deleteAll('\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder58.reverse();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(stringBuffer33);
        org.junit.Assert.assertEquals(stringBuffer33.toString(), "#");
        org.junit.Assert.assertNotNull(reader36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 4 + "'", int41 == 4);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "\n\000 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "\n\000 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[\n, \000,  ]");
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(reader53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
    }

    @Test
    public void test2562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2562");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) 'g');
    }

    @Test
    public void test2563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2563");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        int int9 = strBuilder7.lastIndexOf('#');
        int int12 = strBuilder7.lastIndexOf('a', (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder7.appendSeparator('#', 'a');
        int int17 = strBuilder7.capacity();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 32 + "'", int17 == 32);
    }

    @Test
    public void test2564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2564");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        boolean boolean11 = strBuilder5.contains('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append((java.lang.CharSequence) strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader21 = strBuilder20.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append((java.lang.CharSequence) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder12.appendFixedWidthPadLeft((java.lang.Object) strBuilder25, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder5.appendFixedWidthPadLeft((java.lang.Object) strBuilder12, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader34 = strBuilder33.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append((java.lang.CharSequence) strBuilder33);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.appendln(true);
        java.lang.StringBuffer stringBuffer38 = strBuilder32.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder5.appendln(stringBuffer38);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.append("\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader43 = strBuilder42.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder39.appendln((java.lang.Object) strBuilder42);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder39.replaceFirst('a', '\n');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.insert((int) '4', (double) 'r');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 52");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(reader34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(stringBuffer38);
        org.junit.Assert.assertEquals(stringBuffer38.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(reader43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
    }

    @Test
    public void test2565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2565");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        boolean boolean11 = strBuilder5.contains('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append((java.lang.CharSequence) strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader21 = strBuilder20.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append((java.lang.CharSequence) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder12.appendFixedWidthPadLeft((java.lang.Object) strBuilder25, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder5.appendFixedWidthPadLeft((java.lang.Object) strBuilder12, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader34 = strBuilder33.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append((java.lang.CharSequence) strBuilder33);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.appendln(true);
        java.lang.StringBuffer stringBuffer38 = strBuilder32.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder5.appendln(stringBuffer38);
        java.lang.String str41 = strBuilder39.leftString((int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln("");
        java.lang.String str46 = strBuilder42.rightString((int) '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strBuilder42.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder39.appendAll((java.util.Iterator<java.lang.String>) strTokenizer47);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.insert((int) '#', 100.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader54 = strBuilder53.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.append((java.lang.CharSequence) strBuilder53);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder52.appendln(true);
        java.util.stream.IntStream intStream58 = strBuilder57.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder57.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.appendSeparator('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader67 = strBuilder66.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.append((java.lang.CharSequence) strBuilder66);
        java.lang.StringBuffer stringBuffer69 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder65.appendln(stringBuffer69, (int) (byte) -1, 10);
        int int75 = strBuilder72.indexOf("\n", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder72.replaceAll(' ', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = strBuilder78.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder61.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer79, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder51.append(strBuilder61);
        java.lang.String str84 = strBuilder82.rightString(41);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(reader34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(stringBuffer38);
        org.junit.Assert.assertEquals(stringBuffer38.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "true\n10############################### true\n\n" + "'", str41, "true\n10############################### true\n\n");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "\n" + "'", str46, "\n");
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(reader54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(intStream58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(reader67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "#####################100.0### true\n\ntrue4" + "'", str84, "#####################100.0### true\n\ntrue4");
    }

    @Test
    public void test2566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2566");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln("");
        java.lang.String str8 = strBuilder7.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((long) (byte) 10);
        java.lang.String str18 = strBuilder14.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendNewLine();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln("");
        java.lang.String str35 = strBuilder31.rightString((int) '4');
        java.lang.Object[] objArray36 = new java.lang.Object[] { strBuilder23, wildcardClass28, 10.0d, (-1.0d), str35 };
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder14.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder7.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder0.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader42 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.append((java.lang.CharSequence) strBuilder41);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.appendln(true);
        int int47 = strBuilder40.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder40.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder0.appendFixedWidthPadRight((java.lang.Object) strBuilder40, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder40.deleteFirst("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder40.deleteFirst('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = null;
        int int58 = strBuilder40.indexOf(strMatcher57);
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = null;
        boolean boolean60 = strBuilder40.contains(strMatcher59);
        int int62 = strBuilder40.indexOf("\n1097########");
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder40.replaceAll(strMatcher63, "ng.Object10.0-1.0\ntrue\n10\n ");
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "true\n10" + "'", str18, "true\n10");
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\n" + "'", str35, "\n");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(strBuilder65);
    }

    @Test
    public void test2567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2567");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.replaceFirst(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader33 = strBuilder32.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.appendNewLine();
        boolean boolean40 = strBuilder26.equalsIgnoreCase(strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder21.append((java.lang.Object) strBuilder26);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder21.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strBuilder43.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder17.appendAll((java.util.Iterator<java.lang.String>) strTokenizer44);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder9.appendln(strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.appendln((float) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader51 = strBuilder50.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.append((java.lang.CharSequence) strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder49.appendln(true);
        int int56 = strBuilder49.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder49.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder58.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader62 = strBuilder61.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder61.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder65.replaceFirst(strMatcher68, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader72 = strBuilder71.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder71.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder75.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder75.appendNewLine();
        boolean boolean79 = strBuilder65.equalsIgnoreCase(strBuilder75);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder60.append((java.lang.Object) strBuilder65);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder60.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = strBuilder82.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder59.appendAll((java.util.Iterator<java.lang.String>) strTokenizer83);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder46.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer83, "true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder46.appendSeparator("35\n");
        char[] charArray89 = strBuilder46.toCharArray();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(reader33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(reader51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 4 + "'", int56 == 4);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(reader62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(reader72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strTokenizer83);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(charArray89);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray89), "truetrue\n104\n100.0\n35\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray89), "truetrue\n104\n100.0\n35\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray89), "[t, r, u, e, t, r, u, e, \n, 1, 0, 4, \n, 1, 0, 0, ., 0, \n, 3, 5, \n]");
    }

    @Test
    public void test2568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2568");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.io.Writer writer2 = strBuilder1.asWriter();
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        int int4 = strBuilder1.lastIndexOf(strMatcher3);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.append((float) 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.appendln((int) '4');
        char[] charArray9 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.appendln(charArray9);
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.deleteAll(strMatcher11);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.append((java.lang.CharSequence) strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.appendln(true);
        java.util.stream.IntStream intStream19 = strBuilder13.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder13.appendFixedWidthPadRight((int) '4', (int) (short) 100, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader26 = strBuilder25.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.append((java.lang.CharSequence) strBuilder25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.appendln(true);
        int int31 = strBuilder24.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder24.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader36 = strBuilder35.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.append((java.lang.CharSequence) strBuilder35);
        java.lang.String str38 = strBuilder37.getNewLineText();
        boolean boolean39 = strBuilder24.equals(strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder23.append(strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder23.appendln(false);
        int int43 = strBuilder42.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.append((long) 36);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder12.append(strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder45.replaceAll('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.appendNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strBuilder45.asTokenizer();
        org.junit.Assert.assertNotNull(writer2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(intStream19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(reader26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 4 + "'", int31 == 4);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(reader36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 210 + "'", int43 == 210);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strTokenizer51);
    }

    @Test
    public void test2569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2569");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        char[] charArray6 = strBuilder5.toCharArray();
        boolean boolean8 = strBuilder5.startsWith("ass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.append(false);
        int int15 = strBuilder14.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader18 = strBuilder17.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.append((java.lang.CharSequence) strBuilder17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.append(false);
        char[] charArray22 = strBuilder21.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder14.appendln(charArray22);
        java.lang.Class<?> wildcardClass24 = strBuilder23.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder5.appendFixedWidthPadLeft((java.lang.Object) wildcardClass24, (int) (short) 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst(" \n\nrue\n", "true\n10\n.0-1.0\nclass java.lang.Object.0-1.0\n10.0.0-1.0\n-1.0.0-1.0\n\n");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[f, a, l, s, e]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertNotNull(reader18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[f, a, l, s, e]");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
    }

    @Test
    public void test2570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2570");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln(stringBuffer4, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.setNullText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.append((long) (byte) 10);
        java.lang.String str19 = strBuilder15.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder15.deleteAll("");
        java.lang.String str22 = strBuilder15.getNewLineText();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strBuilder15.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder9.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer23, "\n1.0\ntrue\n10############################### true\n\n");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "true\n10" + "'", str19, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strBuilder25);
    }

    @Test
    public void test2571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2571");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        int int9 = strBuilder7.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.append((long) 50);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.appendln('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder7.insert((int) (short) 1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator("\n10", "\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.append((long) 13);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.setNewLineText("\ntrue\n\n");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
    }

    @Test
    public void test2572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2572");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendln(0.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.append((long) 39);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append((java.lang.CharSequence) strBuilder12);
        java.lang.StringBuffer stringBuffer15 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.appendln(stringBuffer15, (int) (byte) -1, 10);
        int int21 = strBuilder18.indexOf("\n", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.replaceAll(' ', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strBuilder24.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder10.appendAll((java.util.Iterator<java.lang.String>) strTokenizer25);
        boolean boolean28 = strBuilder10.startsWith("\ntrue\n10\n     ");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test2573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2573");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.appendSeparator("");
        char[] charArray17 = new char[] { '\n', '\000', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder9.appendln(charArray17);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder18.deleteFirst("\ntrue\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceAll('a', 'a');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "\n\000 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "\n\000 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[\n, \000,  ]");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
    }

    @Test
    public void test2574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2574");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.appendNull();
        int int6 = strBuilder3.lastIndexOf(' ', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.replaceAll(strMatcher7, "true\n10\nclass java.lang.Object10.0-1.0true\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((java.lang.CharSequence) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendln(true);
        java.util.stream.IntStream intStream16 = strBuilder15.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.deleteAll("\n");
        java.lang.StringBuffer stringBuffer19 = strBuilder15.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder3.append(stringBuffer19);
        int int21 = strBuilder3.capacity();
        java.lang.String str22 = strBuilder3.getNewLineText();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(intStream16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(stringBuffer19);
        org.junit.Assert.assertEquals(stringBuffer19.toString(), "true");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 32 + "'", int21 == 32);
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test2575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2575");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader9 = strBuilder8.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.append((java.lang.CharSequence) strBuilder8);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder0.appendFixedWidthPadLeft((java.lang.Object) strBuilder13, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.append((double) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader21 = strBuilder20.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append((java.lang.CharSequence) strBuilder20);
        java.io.Writer writer23 = strBuilder20.asWriter();
        boolean boolean24 = strBuilder13.equals((java.lang.Object) writer23);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder13.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder13.appendln((long) 7);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(writer23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
    }

    @Test
    public void test2576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2576");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.appendln(true);
        java.lang.String str32 = strBuilder31.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.appendSeparator('4', 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder31.replaceAll(strMatcher36, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.setNewLineText("true\n100.0\n");
        java.lang.String str42 = strBuilder38.substring(19);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "true\n10\nclass java.lang.Object10.0-1.0true\n" + "'", str32, "true\n10\nclass java.lang.Object10.0-1.0true\n");
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "lang.Object10.0-1.0true\n" + "'", str42, "lang.Object10.0-1.0true\n");
    }

    @Test
    public void test2577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2577");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((long) (byte) 10);
        java.lang.String str13 = strBuilder9.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendNewLine();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln("");
        java.lang.String str30 = strBuilder26.rightString((int) '4');
        java.lang.Object[] objArray31 = new java.lang.Object[] { strBuilder18, wildcardClass23, 10.0d, (-1.0d), str30 };
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder9.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder2.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.appendln("");
        java.lang.String str37 = strBuilder36.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader40 = strBuilder39.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.append((java.lang.CharSequence) strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.appendln(true);
        java.util.stream.IntStream intStream44 = strBuilder43.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.appendln("");
        java.lang.String str48 = strBuilder47.getNewLineText();
        java.lang.Object[] objArray53 = new java.lang.Object[] { strBuilder43, strBuilder47, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder36.appendAll(objArray53);
        java.lang.StringBuffer stringBuffer55 = strBuilder36.toStringBuffer();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder33.appendln(stringBuffer55, 19, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "true\n10" + "'", str13, "true\n10");
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\n" + "'", str30, "\n");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(reader40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(intStream44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(stringBuffer55);
        org.junit.Assert.assertEquals(stringBuffer55.toString(), "\ntrue\n\n100.04-1.0 ");
    }

    @Test
    public void test2578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2578");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendNewLine();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.insert((int) 't', (float) 32);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 116");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
    }

    @Test
    public void test2579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2579");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        boolean boolean4 = strBuilder2.startsWith("\n");
        int int6 = strBuilder2.indexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendln(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader10 = strBuilder9.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.append((java.lang.Object) strBuilder9);
        java.lang.String str12 = strBuilder9.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.append("e\n10");
        java.lang.String str15 = strBuilder9.getNullText();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test2580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2580");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendNewLine();
        boolean boolean19 = strBuilder5.equalsIgnoreCase(strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder0.append((java.lang.Object) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.appendln((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst('#', 'a');
        java.util.stream.IntStream intStream28 = strBuilder27.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.append(0.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder27.appendFixedWidthPadRight(52, 78, '\n');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(intStream28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder34);
    }

    @Test
    public void test2581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2581");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.append('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.deleteFirst("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader10 = strBuilder9.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.append((java.lang.CharSequence) strBuilder9);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder8.appendln(true);
        int int15 = strBuilder8.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder8.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder17.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder3.appendln((java.lang.Object) strBuilder17);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(reader10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 4 + "'", int15 == 4);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
    }

    @Test
    public void test2582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2582");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((java.lang.Object) 1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder13.append(strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader21 = strBuilder20.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.ensureCapacity(100);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.io.Writer writer31 = strBuilder30.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder26.append(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.appendln((double) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder13.append((java.lang.Object) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder13.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.appendln("");
        java.lang.String str40 = strBuilder39.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader43 = strBuilder42.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append((java.lang.CharSequence) strBuilder42);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.appendln(true);
        java.util.stream.IntStream intStream47 = strBuilder46.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.appendln("");
        java.lang.String str51 = strBuilder50.getNewLineText();
        java.lang.Object[] objArray56 = new java.lang.Object[] { strBuilder46, strBuilder50, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder39.appendAll(objArray56);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader62 = strBuilder61.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.append((java.lang.CharSequence) strBuilder61);
        java.lang.StringBuffer stringBuffer64 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder60.appendln(stringBuffer64, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder60.deleteFirst(strMatcher68);
        boolean boolean71 = strBuilder69.startsWith("\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strBuilder69.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder57.appendAll((java.util.Iterator<java.lang.String>) strTokenizer72);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder36.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer72, "ue");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder0.appendAll((java.util.Iterator<java.lang.String>) strTokenizer72);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(writer31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(reader43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(intStream47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(reader62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder76);
    }

    @Test
    public void test2583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2583");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.io.Writer writer4 = strBuilder1.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.appendSeparator("hi!", "\n1.0\n");
        java.lang.String str8 = strBuilder1.getNewLineText();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder1.deleteFirst(strMatcher9);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder1.appendSeparator(".0-1.0\n", "ava.lang.Object.0-1.0\n10.0.0-1.0\n-1.0.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder1.append((double) ' ');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(writer4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
    }

    @Test
    public void test2584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2584");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        boolean boolean11 = strBuilder5.contains('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append((java.lang.CharSequence) strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader21 = strBuilder20.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append((java.lang.CharSequence) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder12.appendFixedWidthPadLeft((java.lang.Object) strBuilder25, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder5.appendFixedWidthPadLeft((java.lang.Object) strBuilder12, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader34 = strBuilder33.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append((java.lang.CharSequence) strBuilder33);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.appendln(true);
        java.lang.StringBuffer stringBuffer38 = strBuilder32.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder5.appendln(stringBuffer38);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.append("\n1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder41.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader45 = strBuilder44.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.append((java.lang.CharSequence) strBuilder44);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder43.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.append((long) (byte) 10);
        java.lang.String str52 = strBuilder48.rightString(10);
        boolean boolean54 = strBuilder48.contains('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader57 = strBuilder56.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.append((java.lang.CharSequence) strBuilder56);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder55.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader64 = strBuilder63.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.append((java.lang.CharSequence) strBuilder63);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder62.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder55.appendFixedWidthPadLeft((java.lang.Object) strBuilder68, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder48.appendFixedWidthPadLeft((java.lang.Object) strBuilder55, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader77 = strBuilder76.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder75.append((java.lang.CharSequence) strBuilder76);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder75.appendln(true);
        java.lang.StringBuffer stringBuffer81 = strBuilder75.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder48.appendln(stringBuffer81);
        java.lang.String str84 = strBuilder82.leftString((int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder85.appendln("");
        java.lang.String str89 = strBuilder85.rightString((int) '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = strBuilder85.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder82.appendAll((java.util.Iterator<java.lang.String>) strTokenizer90);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder41.appendAll((java.util.Iterator<java.lang.String>) strTokenizer90);
        org.apache.commons.lang3.text.StrMatcher strMatcher93 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder98 = strBuilder92.replace(strMatcher93, "trueahi!-1\n22.03\n", 17, 0, 12);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(reader34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(stringBuffer38);
        org.junit.Assert.assertEquals(stringBuffer38.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(reader45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "true\n10" + "'", str52, "true\n10");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(reader57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(reader64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(reader77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(stringBuffer81);
        org.junit.Assert.assertEquals(stringBuffer81.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "true\n10############################### true\n\n" + "'", str84, "true\n10############################### true\n\n");
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "\n" + "'", str89, "\n");
        org.junit.Assert.assertNotNull(strTokenizer90);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder92);
    }

    @Test
    public void test2585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2585");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.setLength((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.insert(0, "ass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader16 = strBuilder15.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append((java.lang.CharSequence) strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.appendln(true);
        java.util.stream.IntStream intStream20 = strBuilder19.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendSeparator('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder13.append((java.lang.Object) strBuilder27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteFirst("#########");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(intStream20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
    }

    @Test
    public void test2586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2586");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        int int7 = strBuilder0.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.setNullText("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.append("ass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.insert(10, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        java.lang.StringBuffer stringBuffer25 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.appendln(stringBuffer25, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer29 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder24.appendln(stringBuffer29);
        boolean boolean31 = strBuilder20.equals((java.lang.Object) strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder9.append((java.lang.CharSequence) strBuilder24);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
    }

    @Test
    public void test2587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2587");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((long) (byte) 10);
        java.lang.String str13 = strBuilder9.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendNewLine();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln("");
        java.lang.String str30 = strBuilder26.rightString((int) '4');
        java.lang.Object[] objArray31 = new java.lang.Object[] { strBuilder18, wildcardClass23, 10.0d, (-1.0d), str30 };
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder9.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder2.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln("true\n10");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder33.replace(strMatcher36, "", (int) (byte) 1, (int) ' ', 1);
        java.lang.String str42 = strBuilder33.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder33.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder33.appendFixedWidthPadRight(36, 13, '\n');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "true\n10" + "'", str13, "true\n10");
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\n" + "'", str30, "\n");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder48);
    }

    @Test
    public void test2588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2588");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        int int9 = strBuilder7.lastIndexOf('#');
        int int12 = strBuilder7.lastIndexOf('a', (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder7.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader16 = strBuilder15.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.minimizeCapacity();
        char[] charArray20 = strBuilder15.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.appendln(charArray20);
        java.lang.String str23 = strBuilder14.rightString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder14.insert((int) (short) 0, (float) 13);
        int int28 = strBuilder14.indexOf('\n');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "true\n10100.0 \n" + "'", str23, "true\n10100.0 \n");
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 8 + "'", int28 == 8);
    }

    @Test
    public void test2589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2589");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        boolean boolean4 = strBuilder2.startsWith("\n");
        int int6 = strBuilder2.indexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendln(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader10 = strBuilder9.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.append((java.lang.Object) strBuilder9);
        java.lang.String str12 = strBuilder9.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader16 = strBuilder15.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append((java.lang.CharSequence) strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.appendln(true);
        java.util.stream.IntStream intStream20 = strBuilder19.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader26 = strBuilder25.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.append((java.lang.CharSequence) strBuilder25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.append((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader37 = strBuilder36.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.replaceFirst(strMatcher43, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader47 = strBuilder46.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.appendNewLine();
        boolean boolean54 = strBuilder40.equalsIgnoreCase(strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder35.append((java.lang.Object) strBuilder40);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder35.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strBuilder57.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder31.appendAll((java.util.Iterator<java.lang.String>) strTokenizer58);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder23.appendln(strBuilder59);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader63 = strBuilder62.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.append((java.lang.CharSequence) strBuilder62);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder61.appendln(true);
        int int68 = strBuilder61.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder61.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader73 = strBuilder72.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.append((java.lang.CharSequence) strBuilder72);
        java.lang.String str75 = strBuilder74.getNewLineText();
        boolean boolean76 = strBuilder61.equals(strBuilder74);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder61.appendFixedWidthPadRight((int) (byte) 1, (int) '#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder23.append((java.lang.CharSequence) strBuilder80);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder9.append((java.lang.CharSequence) strBuilder81, (int) (short) 1, 14);
        boolean boolean86 = strBuilder81.contains('r');
        java.lang.String str87 = strBuilder81.getNewLineText();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(intStream20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(reader26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(reader37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(reader47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(reader63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 4 + "'", int68 == 4);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(reader73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNull(str87);
    }

    @Test
    public void test2590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2590");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.io.Writer writer10 = strBuilder9.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.append((java.lang.Object) writer10);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln((double) 22);
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(writer10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
    }

    @Test
    public void test2591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2591");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        int int6 = strBuilder5.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.insert((int) (short) 0, "\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        boolean boolean11 = strBuilder9.contains(strMatcher10);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.append(false);
        int int14 = strBuilder9.size();
        int int16 = strBuilder9.indexOf("ass j");
        java.lang.StringBuffer stringBuffer17 = strBuilder9.toStringBuffer();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 5 + "'", int6 == 5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 11 + "'", int14 == 11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(stringBuffer17);
        org.junit.Assert.assertEquals(stringBuffer17.toString(), "\nfalsefalse");
    }

    @Test
    public void test2592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2592");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader12 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendNewLine();
        boolean boolean19 = strBuilder5.equalsIgnoreCase(strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder0.append((java.lang.Object) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder0.append('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strBuilder22.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder22.appendFixedWidthPadRight(100, (int) '#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteCharAt(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.appendln("");
        java.lang.String str35 = strBuilder34.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader38 = strBuilder37.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.append((java.lang.CharSequence) strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendln(true);
        java.util.stream.IntStream intStream42 = strBuilder41.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.appendln("");
        java.lang.String str46 = strBuilder45.getNewLineText();
        java.lang.Object[] objArray51 = new java.lang.Object[] { strBuilder41, strBuilder45, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder34.appendAll(objArray51);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.appendln("");
        java.lang.String str57 = strBuilder53.rightString((int) '4');
        boolean boolean58 = strBuilder52.equals((java.lang.Object) str57);
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder52.deleteAll(strMatcher59);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder31.append((java.lang.CharSequence) strBuilder62);
        java.lang.StringBuffer stringBuffer64 = strBuilder31.toStringBuffer();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(reader38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(intStream42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "\n" + "'", str57, "\n");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(stringBuffer64);
        org.junit.Assert.assertEquals(stringBuffer64.toString(), "4true\n1004444444444444444444444444444444\ntrue\n\n100.04-1.0 false\n");
    }

    @Test
    public void test2593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2593");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.appendSeparator("true\n10############################### true\n\n", "true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.insert(14, "\ntrue\n\n100.04-1.0 true");
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteFirst(strMatcher51);
        java.lang.String str54 = strBuilder52.substring(3);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "e\n10\nclass \ntrue\n\n100.04-1.0 truejava.lang.Object10.0-1.0\ntrue\n1010\ntrue\n10############################### true\n\n" + "'", str54, "e\n10\nclass \ntrue\n\n100.04-1.0 truejava.lang.Object10.0-1.0\ntrue\n1010\ntrue\n10############################### true\n\n");
    }

    @Test
    public void test2594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2594");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((long) (byte) 10);
        java.lang.String str13 = strBuilder9.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendNewLine();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln("");
        java.lang.String str30 = strBuilder26.rightString((int) '4');
        java.lang.Object[] objArray31 = new java.lang.Object[] { strBuilder18, wildcardClass23, 10.0d, (-1.0d), str30 };
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder9.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder2.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceAll(' ', 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        int int40 = strBuilder35.lastIndexOf(strMatcher39);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.appendPadding(10, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder35.appendln(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "true\n10" + "'", str13, "true\n10");
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\n" + "'", str30, "\n");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
    }

    @Test
    public void test2595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2595");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendFixedWidthPadRight(1, (int) '4', '4');
        int int10 = strBuilder3.indexOf("\n1.0\n", 1);
        java.lang.String str13 = strBuilder3.substring(3, 12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder3.setNewLineText("\n\n100 04-1.0 truea");
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "444444444" + "'", str13, "444444444");
        org.junit.Assert.assertNotNull(strBuilder15);
    }

    @Test
    public void test2596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2596");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("false");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.append((int) (byte) 10);
        int int5 = strBuilder1.indexOf('\n');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
    }

    @Test
    public void test2597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2597");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.ensureCapacity(100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.io.Writer writer11 = strBuilder10.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.append(strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.append(100.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((-1.0d));
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
    }

    @Test
    public void test2598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2598");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.setLength((int) (short) 100);
        char char12 = strBuilder8.charAt(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder8.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader17 = strBuilder16.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append((java.lang.CharSequence) strBuilder16);
        java.lang.StringBuffer stringBuffer19 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder15.appendln(stringBuffer19, (int) (byte) -1, 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder15.deleteFirst(strMatcher23);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder15.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder8.appendln((java.lang.Object) strBuilder26);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.setLength(1);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + char12 + "' != '" + '\000' + "'", char12 == '\000');
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
    }

    @Test
    public void test2599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2599");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.io.Writer writer2 = strBuilder1.asWriter();
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        int int4 = strBuilder1.lastIndexOf(strMatcher3);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.append((float) 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.appendln((int) '4');
        java.util.stream.IntStream intStream9 = strBuilder8.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.appendln("");
        java.lang.String str18 = strBuilder17.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader21 = strBuilder20.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append((java.lang.CharSequence) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.append((long) (byte) 10);
        java.lang.String str28 = strBuilder24.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader30 = strBuilder29.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.appendNewLine();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.appendln("");
        java.lang.String str45 = strBuilder41.rightString((int) '4');
        java.lang.Object[] objArray46 = new java.lang.Object[] { strBuilder33, wildcardClass38, 10.0d, (-1.0d), str45 };
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder24.appendAll(objArray46);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder17.appendAll(objArray46);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder10.appendAll(objArray46);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder8.appendWithSeparators(objArray46, "true\n10\nclass java.lang.Object10.0-1.0\ntrue\n10\n###############################\n");
        org.junit.Assert.assertNotNull(writer2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(intStream9);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "true\n10" + "'", str28, "true\n10");
        org.junit.Assert.assertNotNull(reader30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "\n" + "'", str45, "\n");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
    }

    @Test
    public void test2600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2600");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = strBuilder1.toStringBuffer();
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        boolean boolean6 = strBuilder1.contains(strMatcher5);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader9 = strBuilder8.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.append((java.lang.CharSequence) strBuilder8);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.appendln(true);
        java.util.stream.IntStream intStream13 = strBuilder12.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.setLength((int) (short) 100);
        int int19 = strBuilder15.lastIndexOf('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder15.append("\ntrue\n\n");
        java.lang.CharSequence charSequence22 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder15.append(charSequence22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strBuilder15.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer24);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(stringBuffer4);
        org.junit.Assert.assertEquals(stringBuffer4.toString(), "");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(intStream13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strBuilder25);
    }

    @Test
    public void test2601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2601");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        int int14 = strBuilder5.lastIndexOf(strMatcher13);
        java.lang.String str16 = strBuilder5.leftString(30);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "true\n10" + "'", str16, "true\n10");
    }

    @Test
    public void test2602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2602");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.appendNull();
        java.util.stream.IntStream intStream4 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.deleteAll('a');
        java.util.stream.IntStream intStream7 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.appendSeparator("false", 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.replaceFirst('a', '\n');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder0.append(0.0f);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(intStream4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(intStream7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
    }

    @Test
    public void test2603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2603");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln((double) 39);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.insert(19, ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 19");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
    }

    @Test
    public void test2604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2604");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendln(0.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((long) (byte) 10);
        java.lang.String str18 = strBuilder14.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader20 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendNewLine();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln("");
        java.lang.String str35 = strBuilder31.rightString((int) '4');
        java.lang.Object[] objArray36 = new java.lang.Object[] { strBuilder23, wildcardClass28, 10.0d, (-1.0d), str35 };
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder14.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader40 = strBuilder39.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.append((java.lang.CharSequence) strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.append((long) (byte) 10);
        int int47 = strBuilder45.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder37.append((java.lang.CharSequence) strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder45.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.appendln("ass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.appendln((double) (short) -1);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder8.append(strBuilder55, 56, 41);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "true\n10" + "'", str18, "true\n10");
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\n" + "'", str35, "\n");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(reader40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
    }

    @Test
    public void test2605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2605");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((long) (byte) 10);
        java.lang.String str13 = strBuilder9.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendNewLine();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln("");
        java.lang.String str30 = strBuilder26.rightString((int) '4');
        java.lang.Object[] objArray31 = new java.lang.Object[] { strBuilder18, wildcardClass23, 10.0d, (-1.0d), str30 };
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder9.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder2.appendAll(objArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln("true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder33.append((float) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader40 = strBuilder39.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.append((java.lang.CharSequence) strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.append((long) (byte) 10);
        java.lang.String str47 = strBuilder43.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader49 = strBuilder48.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder48.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.appendNewLine();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.appendln("");
        java.lang.String str64 = strBuilder60.rightString((int) '4');
        java.lang.Object[] objArray65 = new java.lang.Object[] { strBuilder52, wildcardClass57, 10.0d, (-1.0d), str64 };
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder43.appendAll(objArray65);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder66.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.append((float) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader72 = strBuilder71.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.append((java.lang.CharSequence) strBuilder71);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder70.appendln(true);
        java.lang.StringBuffer stringBuffer76 = strBuilder70.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder69.append(stringBuffer76);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder33.appendln(stringBuffer76);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder33.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder79.replaceFirst(" \nclass java.lang.Object10.0-1.0\n97.0", "aaaaaaaaaaaaaaaaa");
        int int85 = strBuilder82.indexOf('\n', (int) (byte) 1);
        java.lang.Object obj86 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder82.appendFixedWidthPadRight(obj86, 66, '\000');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "true\n10" + "'", str13, "true\n10");
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\n" + "'", str30, "\n");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(reader40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "true\n10" + "'", str47, "true\n10");
        org.junit.Assert.assertNotNull(reader49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "\n" + "'", str64, "\n");
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(reader72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(stringBuffer76);
        org.junit.Assert.assertEquals(stringBuffer76.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 1 + "'", int85 == 1);
        org.junit.Assert.assertNotNull(strBuilder89);
    }

    @Test
    public void test2606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2606");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.io.Writer writer4 = strBuilder1.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.appendSeparator("hi!", "\n1.0\n");
        java.lang.String str9 = strBuilder7.rightString(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.ensureCapacity(4);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.appendSeparator('4');
        java.lang.StringBuffer stringBuffer14 = strBuilder7.toStringBuffer();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(writer4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(stringBuffer14);
        org.junit.Assert.assertEquals(stringBuffer14.toString(), "\n1.0\n4");
    }

    @Test
    public void test2607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2607");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.io.Writer writer2 = strBuilder1.asWriter();
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        int int4 = strBuilder1.lastIndexOf(strMatcher3);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.append((float) 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.appendln((int) '4');
        char[] charArray9 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.appendln(charArray9);
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.deleteAll(strMatcher11);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.append((java.lang.CharSequence) strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.appendln(true);
        java.util.stream.IntStream intStream19 = strBuilder13.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder13.appendFixedWidthPadRight((int) '4', (int) (short) 100, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader26 = strBuilder25.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.append((java.lang.CharSequence) strBuilder25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.appendln(true);
        int int31 = strBuilder24.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder24.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader36 = strBuilder35.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.append((java.lang.CharSequence) strBuilder35);
        java.lang.String str38 = strBuilder37.getNewLineText();
        boolean boolean39 = strBuilder24.equals(strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder23.append(strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder23.appendln(false);
        int int43 = strBuilder42.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.append((long) 36);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder12.append(strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder45.replaceAll('a', '4');
        boolean boolean51 = strBuilder49.startsWith("\n\nclass java.lang.Object10.0-1.0\n");
        org.junit.Assert.assertNotNull(writer2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(intStream19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(reader26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 4 + "'", int31 == 4);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(reader36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 210 + "'", int43 == 210);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test2608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2608");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln(stringBuffer4, (int) (short) -1, 5);
        java.util.stream.IntStream intStream8 = strBuilder3.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(true);
        java.lang.StringBuffer stringBuffer15 = strBuilder9.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendln(stringBuffer15);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder3.appendln(1.0f);
        int int21 = strBuilder3.lastIndexOf(' ', (int) 'e');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(intStream8);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(stringBuffer15);
        org.junit.Assert.assertEquals(stringBuffer15.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
    }

    @Test
    public void test2609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2609");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendSeparator("ass j", "true\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder6.trim();
        char[] charArray8 = strBuilder7.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append((java.lang.CharSequence) strBuilder10);
        java.lang.StringBuffer stringBuffer13 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.appendln(stringBuffer13, (int) (short) -1, 5);
        java.lang.StringBuffer stringBuffer17 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.appendln(stringBuffer17);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder12.append((float) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder7.append(strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder7.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader25 = strBuilder24.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.replaceFirst(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader35 = strBuilder34.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.appendNewLine();
        boolean boolean42 = strBuilder28.equalsIgnoreCase(strBuilder38);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder23.append((java.lang.Object) strBuilder28);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder23.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.appendSeparator("\n1.0\n", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader51 = strBuilder50.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.append((java.lang.CharSequence) strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder49.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.append((long) (byte) 10);
        java.lang.String str58 = strBuilder54.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder54.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader63 = strBuilder62.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.append((java.lang.CharSequence) strBuilder62);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder61.appendln(true);
        int int68 = strBuilder61.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder61.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader73 = strBuilder72.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.append((java.lang.CharSequence) strBuilder72);
        java.lang.String str75 = strBuilder74.getNewLineText();
        boolean boolean76 = strBuilder61.equals(strBuilder74);
        java.lang.String str77 = strBuilder74.toString();
        java.lang.StringBuffer stringBuffer78 = strBuilder74.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder54.appendln(stringBuffer78);
        boolean boolean80 = strBuilder45.equalsIgnoreCase(strBuilder79);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder22.appendFixedWidthPadLeft((java.lang.Object) strBuilder45, 3, 'g');
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder22.replaceFirst('\000', 'a');
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "true\n10");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "true\n10");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[t, r, u, e, \n, 1, 0]");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(reader25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(reader35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(reader51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "true\n10" + "'", str58, "true\n10");
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(reader63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 4 + "'", int68 == 4);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(reader73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertNotNull(stringBuffer78);
        org.junit.Assert.assertEquals(stringBuffer78.toString(), "");
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder86);
    }

    @Test
    public void test2610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2610");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(22);
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.appendln('a');
        int int4 = strBuilder1.length();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
    }

    @Test
    public void test2611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2611");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.appendln("", (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder20.replaceFirst("\n1.0\n", "false");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder20.insert(5, (float) 'r');
        java.lang.String str33 = strBuilder32.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.replaceAll("\n ", "4-1.0 true");
        int int37 = strBuilder36.length();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "\ntrue114.0\n\n100.04-1.0 true\n\n" + "'", str33, "\ntrue114.0\n\n100.04-1.0 true\n\n");
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 29 + "'", int37 == 29);
    }

    @Test
    public void test2612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2612");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln("");
        java.lang.String str3 = strBuilder2.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader6 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append((java.lang.CharSequence) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(true);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("");
        java.lang.String str14 = strBuilder13.getNewLineText();
        java.lang.Object[] objArray19 = new java.lang.Object[] { strBuilder9, strBuilder13, 100.0d, '4', (-1.0d), ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((java.lang.CharSequence) strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.appendln(true);
        java.util.stream.IntStream intStream27 = strBuilder26.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder2.append(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder2.setCharAt((int) (short) 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder2.append(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder2.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.setNewLineText("e\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.insert((int) (short) 1, false);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true\n, \n, 100.0, 4, -1.0,  ]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(intStream27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
    }

    @Test
    public void test2613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2613");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        int int4 = strBuilder3.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader8 = strBuilder7.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.append((java.lang.CharSequence) strBuilder7);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder6.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append((long) (byte) 10);
        java.lang.String str15 = strBuilder11.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader17 = strBuilder16.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.appendNewLine();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.appendln("");
        java.lang.String str32 = strBuilder28.rightString((int) '4');
        java.lang.Object[] objArray33 = new java.lang.Object[] { strBuilder20, wildcardClass25, 10.0d, (-1.0d), str32 };
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder11.appendAll(objArray33);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader37 = strBuilder36.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.append((java.lang.CharSequence) strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder35.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.append((long) (byte) 10);
        int int44 = strBuilder42.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder34.append((java.lang.CharSequence) strBuilder42);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder42.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.appendln("ass j");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.replaceFirst("true\n10", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder3.insert((int) (byte) 1, (java.lang.Object) strBuilder55);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder1.appendln((java.lang.Object) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder1.append(38);
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder1.deleteFirst(strMatcher60);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.appendSeparator("");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 39 + "'", int4 == 39);
        org.junit.Assert.assertNotNull(reader8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "true\n10" + "'", str15, "true\n10");
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "\n" + "'", str32, "\n");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(reader37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
    }

    @Test
    public void test2614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2614");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader1 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.ensureCapacity(100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.io.Writer writer11 = strBuilder10.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.append(strBuilder10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.append(100.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.append((float) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader19 = strBuilder18.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.append((java.lang.CharSequence) strBuilder18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.appendln(true);
        java.util.stream.IntStream intStream23 = strBuilder22.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.deleteAll("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.appendln((float) 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder22.appendln((-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.insert(13, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder16.append(strBuilder32);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader36 = strBuilder35.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.append((java.lang.CharSequence) strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder34.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.append((long) (byte) 10);
        java.lang.String str43 = strBuilder39.rightString(10);
        boolean boolean45 = strBuilder39.contains('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader48 = strBuilder47.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.append((java.lang.CharSequence) strBuilder47);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder46.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader55 = strBuilder54.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.append((java.lang.CharSequence) strBuilder54);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder53.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder46.appendFixedWidthPadLeft((java.lang.Object) strBuilder59, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder39.appendFixedWidthPadLeft((java.lang.Object) strBuilder46, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader68 = strBuilder67.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.append((java.lang.CharSequence) strBuilder67);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder66.appendln(true);
        java.lang.StringBuffer stringBuffer72 = strBuilder66.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder39.appendln(stringBuffer72);
        java.lang.String str75 = strBuilder73.leftString((int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.appendln("");
        java.lang.String str80 = strBuilder76.rightString((int) '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = strBuilder76.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder73.appendAll((java.util.Iterator<java.lang.String>) strTokenizer81);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder32.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer81, "\n10");
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = null;
        int int87 = strBuilder32.lastIndexOf(strMatcher85, 170);
        org.junit.Assert.assertNotNull(reader1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(reader19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(intStream23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(reader36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "true\n10" + "'", str43, "true\n10");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(reader48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(reader55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(reader68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(stringBuffer72);
        org.junit.Assert.assertEquals(stringBuffer72.toString(), "true\n");
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "true\n10############################### true\n\n" + "'", str75, "true\n10############################### true\n\n");
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "\n" + "'", str80, "\n");
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
    }

    @Test
    public void test2615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2615");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        int int9 = strBuilder7.lastIndexOf('#');
        int int11 = strBuilder7.indexOf('#');
        int int13 = strBuilder7.lastIndexOf("\n\nclass java.lang.Object10.0-1.0\n");
        int int16 = strBuilder7.indexOf("## true\n\n###\n", 26);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
    }

    @Test
    public void test2616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2616");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("true\n10");
        java.io.Writer writer2 = strBuilder1.asWriter();
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        int int4 = strBuilder1.lastIndexOf(strMatcher3);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.append((float) 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.appendln((int) '4');
        char[] charArray9 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.appendln(charArray9);
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.deleteAll(strMatcher11);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.append((java.lang.CharSequence) strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.appendln(true);
        java.util.stream.IntStream intStream19 = strBuilder13.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder13.appendFixedWidthPadRight((int) '4', (int) (short) 100, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader26 = strBuilder25.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.append((java.lang.CharSequence) strBuilder25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.appendln(true);
        int int31 = strBuilder24.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder24.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader36 = strBuilder35.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.append((java.lang.CharSequence) strBuilder35);
        java.lang.String str38 = strBuilder37.getNewLineText();
        boolean boolean39 = strBuilder24.equals(strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder23.append(strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder23.appendln(false);
        int int43 = strBuilder42.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.append((long) 36);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder12.append(strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader49 = strBuilder48.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.append((java.lang.CharSequence) strBuilder48);
        java.lang.StringBuffer stringBuffer51 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder50.appendln(stringBuffer51, (int) (short) -1, 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.append((-1L));
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader60 = strBuilder59.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder59.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.deleteCharAt(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder63.replaceFirst(strMatcher66, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader70 = strBuilder69.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder69.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder73.appendNewLine();
        boolean boolean77 = strBuilder63.equalsIgnoreCase(strBuilder73);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder58.append((java.lang.Object) strBuilder63);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader80 = strBuilder79.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder79.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder79.minimizeCapacity();
        char[] charArray84 = strBuilder79.toCharArray();
        char[] charArray85 = strBuilder63.getChars(charArray84);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder54.insert((int) (short) 1, charArray85);
        char[] charArray87 = strBuilder45.getChars(charArray85);
        org.junit.Assert.assertNotNull(writer2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(intStream19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(reader26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 4 + "'", int31 == 4);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(reader36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 210 + "'", int43 == 210);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(reader49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(reader60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(reader70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(reader80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray84), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray84), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray84), "[ ]");
        org.junit.Assert.assertNotNull(charArray85);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray85), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray85), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray85), "[ ]");
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(charArray87);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray87), "true\n52##################################################################################################false\n36");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray87), "true\n52##################################################################################################false\n36");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray87), "[t, r, u, e, \n, 5, 2, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, f, a, l, s, e, \n, 3, 6]");
    }

    @Test
    public void test2617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2617");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        int int8 = strBuilder0.lastIndexOf(strMatcher6, (int) 'a');
        java.util.stream.IntStream intStream9 = strBuilder0.codePoints();
        boolean boolean10 = strBuilder0.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.replaceFirst('a', 'r');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder0.appendPadding(40, '#');
        int int18 = strBuilder16.lastIndexOf("true\n10\n.0-1.0\nclass java.lang.Object.0-1.0\n10.0.0-1.0\n-1.0.0-1.0\n\n");
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(intStream9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
    }

    @Test
    public void test2618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2618");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader2 = strBuilder1.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append((java.lang.CharSequence) strBuilder1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((long) (byte) 10);
        java.lang.String str9 = strBuilder5.rightString(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader11 = strBuilder10.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("");
        java.lang.String str26 = strBuilder22.rightString((int) '4');
        java.lang.Object[] objArray27 = new java.lang.Object[] { strBuilder14, wildcardClass19, 10.0d, (-1.0d), str26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.io.Reader reader31 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (byte) 10);
        int int38 = strBuilder36.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.append((java.lang.CharSequence) strBuilder36);
        java.lang.StringBuffer stringBuffer43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append(stringBuffer43, (int) (short) 10, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder46.appendFixedWidthPadRight((java.lang.Object) strBuilder47, 32, '#');
        int int56 = strBuilder46.indexOf(' ', 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder46.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.appendln((double) 7);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder57.appendln("e\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceFirst('r', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.append("true");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder64.append((float) 68);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.replaceFirst('\000', '\n');
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder71.appendln(true);
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "true\n10" + "'", str9, "true\n10");
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n" + "'", str26, "\n");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[\n, class java.lang.Object, 10.0, -1.0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 13 + "'", int56 == 13);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
    }
}

